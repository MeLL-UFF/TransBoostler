Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Starting experiments for fasttext using euclidean 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.83902883529663
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4407935631986815;  // std dev = 0.493, 484.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4058669131050113;  // std dev = 7.773, 254.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=155 */
%   | else return 0.37029132611673315;  // std dev = 7.350, 221.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31005398527431804;  // std dev = 0.493, 482.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936063;  // std dev = 0.000, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5863623831181172;  // std dev = 4.197, 259.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=240 */
%   | else return -0.1477898084864155;  // std dev = 5.797, 217.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | | else return -0.10159632948783644;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18101314650023403;  // std dev = 7.342, 270.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=155 */
%   | else return 0.17800611325983232;  // std dev = 6.097, 215.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14695421588004953;  // std dev = 8.708, 400.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=237 */
%   | | else return 0.07687715290041815;  // std dev = 3.949, 85.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.16e-08, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | else return -0.08518475138839678;  // std dev = 7.15e-08, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11473773452658656;  // std dev = 0.427, 477.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.43e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return -0.07877675473109148;  // std dev = 8.30e-08, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.04578519139176691;  // std dev = 9.089, 435.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=237 */
%   | else return 0.050707629945429156;  // std dev = 3.814, 82.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.09e-09, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.042459249026934404;  // std dev = 9.773, 509.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04195176442599324;  // std dev = 9.648, 499.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202572;  // std dev = 8.79e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
Inference time using transfer learning 6.52443528175354
Parameter learned model CLL:-0.265163 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 202, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.773, 99, 155], 'true,false': [7.35, 94, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 300, 0], 'false,false,false,false': [0.0, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 200, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 381, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.197, 19, 240], 'true,false': [5.797, 175, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 204, 0], 'false,false,false,false': [0.0, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.342, 115, 155], 'true,false': [6.097, 88, 127], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.708, 163, 237], 'true,true,false': [3.949, 40, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.16e-08, 197, 0], 'false,false,false': [7.15e-08, 169, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 195, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.43e-08, 178, 0], 'false,false,false': [8.3e-08, 173, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.089, 198, 237], 'true,false': [3.814, 37, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.09e-09, 325, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.773, 227, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.648, 217, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.79e-09, 356, 0]}]
{'': [0.2431698654463523, 1.1859949224482385e-16], 'false': [nan, 1.1859949224482385e-16]}
{'': [0.2412232686980709, -1.2077213638981874e-16], 'true': [0.23784797569595045, 0.2444257898077425], 'false': [nan, -1.2077213638981874e-16], 'false,false': [nan, -1.2077213638981874e-16], 'false,false,false': [-1.0658141036401502e-16, -3.561092720495785e-17]}
{'': [0.24276087309249894, -2.3311769545935045e-17], 'false': [nan, -2.3311769545935045e-17], 'false,false': [nan, -2.3311769545935045e-17]}
{'': [0.2412996597265955, 2.6798486801296883e-17], 'true': [0.06799651730274306, 0.15487712090132533], 'false': [nan, 2.6798486801296883e-17], 'false,false': [nan, 2.6798486801296883e-17], 'false,false,false': [-8.489940776545314e-17, -5.551115123125783e-17]}
{'': [0.1877971718987656, 1.1920978789485457e-16], 'true': [0.19966894571007096, 0.17288339886457738], 'false': [nan, 1.1920978789485457e-16]}
{'': [0.18921743331537902, 4.004083039631712e-17], 'true': [0.18921743331537902, nan], 'true,true': [0.18957365572135954, 0.18349095257652603], 'false': [nan, 4.004083039631712e-17], 'false,false': [3.381389922716213e-17, 3.021908824423503e-17]}
{'': [0.182442858423596, 3.163028560185631e-17], 'true': [0.182442858423596, nan], 'false': [nan, 3.163028560185631e-17], 'false,false': [3.991813122247754e-17, 3.978833961084376e-17]}
{'': [0.18793384195660728, 8.881784197001253e-18], 'true': [0.18990912016861633, 0.1774348446479164], 'false': [nan, 8.881784197001253e-18], 'false,false': [nan, 8.881784197001253e-18]}
{'': [0.18763976081588093, -9.190179481619351e-17], 'true': [0.18763976081588093, nan], 'false': [nan, -9.190179481619351e-17], 'false,false': [nan, -9.190179481619351e-17]}
{'': [0.18653894572184557, 7.734137924355023e-17], 'true': [0.18653894572184557, nan], 'false': [nan, 7.734137924355023e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.142073392868042
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( location(D, E) )
%   | | | then return 0.3991325416568882;  // std dev = 3.892, 61.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=33 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.3253022197710463;  // std dev = 5.840, 137.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=64 */
%   | | | else return 0.4278210662470515;  // std dev = 7.734, 244.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=139 */
%   else return -0.14185106490048752;  // std dev = 2.40e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.7466176141679213;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.03733391710337164;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.5685229061081278;  // std dev = 0.934, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7665574438952611;  // std dev = 0.243, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1976784949854573;  // std dev = 1.05e-08, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6718543645919066;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.33412437497220615;  // std dev = 10.047, 407.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=216 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G), phenotype(F, H) )
%   | | | then return 0.3575075577415663;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6021872190121156;  // std dev = 0.344, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( phenotype(A, I), enzyme(E, J) )
%   | | | then return 0.33141070914577997;  // std dev = 2.352, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.20271948581313745;  // std dev = 5.385, 124.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=58 */
%   | else if ( phenotype(A, K), interaction(A, L) )
%   | | then if ( interaction(L, A), location(A, M) )
%   | | | then return 0.1668054685868976;  // std dev = 2.815, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.3537334328069955;  // std dev = 3.837, 64.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=40 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return 0.5623300883439012;  // std dev = 1.808, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.3813697711193756;  // std dev = 6.053, 166.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=108 */
%   else return -0.11231637819360626;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B), interaction(F, D) )
%   | | then if ( interaction(D, F), complex(A, G) )
%   | | | then return 0.41461214693025017;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5098910508556885;  // std dev = 0.133, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5709623641552721;  // std dev = 0.885, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.09297149925203066;  // std dev = 5.123, 114.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=48 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.41138621747014603;  // std dev = 0.120, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.5379413763351126;  // std dev = 0.109, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16904172350243699;  // std dev = 5.968, 147.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=72 */
%   | | | else return 0.2680410569421709;  // std dev = 6.443, 177.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=107 */
%   else return -0.10159632948783628;  // std dev = 6.04e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( phenotype(D, G), interaction(H, D) )
%   | | | then return -0.24308943644125172;  // std dev = 0.745, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.36444702103142806;  // std dev = 0.148, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A), complex(A, I) )
%   | | | then return 0.31977966222888005;  // std dev = 0.170, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4040832495496994;  // std dev = 0.285, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.46350998943049265;  // std dev = 2.092, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.15138699798619432;  // std dev = 5.427, 129.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=65 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.2379655246016799;  // std dev = 3.175, 42.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | else return 0.09888597309778757;  // std dev = 7.551, 234.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=114 */
%   else return -0.09269127618926044;  // std dev = 1.09e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D), interaction(F, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3017042907945883;  // std dev = 0.210, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.06209797827318035;  // std dev = 1.484, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( phenotype(E, G), interaction(E, E) )
%   | | | then return 0.6245720553703775;  // std dev = 0.135, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.29062528933724313;  // std dev = 2.912, 42.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=30 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20964937776490902;  // std dev = 0.910, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.34415929510850896;  // std dev = 0.347, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.012434245991307165;  // std dev = 3.588, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return 0.16093500388102608;  // std dev = 8.211, 290.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=170 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F), interaction(A, G) )
%   | | | then return 0.35812105932918953;  // std dev = 1.398, 55.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | | else return -0.07894166454643199;  // std dev = 2.276, 25.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=12 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.3718170455710321;  // std dev = 0.745, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.08303906091428707;  // std dev = 8.378, 300.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=164 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( enzyme(I, J), phenotype(I, H) )
%   | | | then return 0.009581896513341868;  // std dev = 1.309, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.3419040885545793;  // std dev = 1.804, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( complex(A, K), enzyme(A, L) )
%   | | | then return 0.4674542308634854;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11993038150961147;  // std dev = 3.033, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   else return -0.07877675473109144;  // std dev = 6.04e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(E, F), enzyme(E, G) )
%   | | | then return 0.21850348697970343;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16969908444833862;  // std dev = 0.168, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( complex(D, H), complex(A, H) )
%   | | | then return 0.2108953628480439;  // std dev = 0.166, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3215584047925187;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return 0.06594253669824676;  // std dev = 1.998, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return -0.08638700523444834;  // std dev = 3.748, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09241564892929897;  // std dev = 8.567, 327.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=187 */
%   | | | else return -0.04744930489813298;  // std dev = 2.305, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   else return -0.07324622576333768;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( recursion_proteinclass(D, B), complex(D, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.14376480688784604;  // std dev = 0.150, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.2024075885929934;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( recursion_proteinclass(D, B), phenotype(D, H) )
%   | | | then return -0.5611344287145854;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.02815418046112063;  // std dev = 4.595, 110.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=47 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(I, J), complex(A, K) )
%   | | | then return -0.15447919949298572;  // std dev = 0.574, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18650389462073225;  // std dev = 2.534, 44.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=32 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2495990818234901;  // std dev = 0.156, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.08551236100171083;  // std dev = 7.904, 271.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=160 */
%   else return -0.06842697784420333;  // std dev = 0.000, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.13155964535356432;  // std dev = 0.171, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.2463175554454913;  // std dev = 0.231, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.19031356454642046;  // std dev = 1.087, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2791933284827758;  // std dev = 1.855, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | | else return 0.022103985919976702;  // std dev = 6.512, 193.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=98 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.13145543198316653;  // std dev = 2.741, 42.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=28 */
%   | | | else return -0.031734906631872055;  // std dev = 6.315, 168.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=85 */
%   else if ( enzyme(A, K) )
%   | then return -0.06419184008202623;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
Inference time using transfer learning 4.077703952789307
Refined model CLL: -0.285686


******************************************
Best model found
******************************************
Results 

CLL : -0.275839 

AUC ROC : 0.966463 

AUC PR : 0.120412 

Precision : 0.100861 

Recall : 0.942529 

F1 : 0.182222 

Total Learning Time : 17.142073392868042 

Total Inference Time : 11.98534607887268 

Total revision time: 67.6032783985138
Best scored revision CLL: -0.265163


Results 

CLL : -0.275839 

AUC ROC : 0.966463 

AUC PR : 0.120412 

Precision : 0.100861 

Recall : 0.942529 

F1 : 0.182222 

Total Learning Time : 67.61312103271484 

Total Inference Time : 11.98534607887268 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.242950916290283
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4068031794059262;  // std dev = 0.498, 483.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.4419067046666938;  // std dev = 8.950, 348.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=223 */
%   | else return 0.35373368591291304;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839202;  // std dev = 0.000, 264.000 (wgt'ed) examples reached here.  /* #neg=264 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3039801869780466;  // std dev = 0.494, 457.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360653;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5973322755691195;  // std dev = 3.629, 237.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=223 */
%   | else return -0.158199123976564;  // std dev = 5.967, 235.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | | | else return -0.10159632948783624;  // std dev = 3.16e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1585360254197845;  // std dev = 8.180, 385.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=223 */
%   | else return 0.2696494380588401;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892605;  // std dev = 1.05e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15764015029801443;  // std dev = 8.755, 430.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=259 */
%   | | else return -0.030615596105617465;  // std dev = 2.019, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.03e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | | else return -0.08518475138839683;  // std dev = 3.73e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10759997069335363;  // std dev = 0.424, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.71e-08, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | | else return -0.07877675473109177;  // std dev = 1.05e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.058078963107223436;  // std dev = 9.195, 461.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=259 */
%   | else return 0.010441767443153168;  // std dev = 1.930, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 4.93e-09, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04125083952772606;  // std dev = 9.379, 481.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442031;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.060043148703149044;  // std dev = 9.030, 453.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202587;  // std dev = 7.51e-09, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
Inference time using transfer learning 4.339649438858032
Parameter learned model CLL:-0.267506 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 218, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.95, 125, 223], 'true,false': [4.335, 34, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 264, 0], 'false,false,false,false': [0.0, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 192, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.629, 14, 223], 'true,false': [5.967, 193, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 280, 0], 'false,false,false,false': [3.16e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.18, 162, 223], 'true,false': [4.299, 33, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [8.755, 171, 259], 'true,true,false': [2.019, 13, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.03e-07, 293, 0], 'false,false,false': [3.73e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.424, 190, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.71e-08, 288, 0], 'false,false,false': [1.05e-08, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.195, 202, 259], 'true,false': [1.93, 10, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.93e-09, 324, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.379, 216, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 320, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.03, 188, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.51e-09, 318, 0]}]
{'': [0.2476327645109744, 1.3861744122487504e-16], 'false': [nan, 1.3861744122487504e-16]}
{'': [0.23437500000000644, -1.130910410177178e-16], 'true': [0.2301740652662235, 0.24722991689750826], 'false': [nan, -1.130910410177178e-16], 'false,false': [nan, -1.130910410177178e-16], 'false,false,false': [-9.756505367918042e-17, -4.0197730201945323e-17]}
{'': [0.24368000877656454, -3.3662738939071804e-17], 'false': [nan, -3.3662738939071804e-17], 'false,false': [nan, -3.3662738939071804e-17]}
{'': [0.2460369821095172, -3.988825238174215e-18], 'true': [0.05558226067759896, 0.15148936622670636], 'false': [nan, -3.988825238174215e-18], 'false,false': [nan, -3.988825238174215e-18], 'false,false,false': [-5.709718412357947e-17, 1.850371707708594e-17]}
{'': [0.18731027287810387, 1.0944974860327322e-16], 'true': [0.1737863212379151, 0.24640000000000067], 'false': [nan, 1.0944974860327322e-16]}
{'': [0.18124010652990977, 4.003057666254086e-17], 'true': [0.18124010652990977, nan], 'true,true': [0.1782699168520945, 0.21451966041980505], 'false': [nan, 4.003057666254086e-17], 'false,false': [3.637590797406656e-17, 2.238352872228138e-17]}
{'': [0.18013455237211443, 1.1720829585485524e-17], 'true': [0.18013455237211443, nan], 'false': [nan, 1.1720829585485524e-17], 'false,false': [7.709882115452476e-18, 2.09476042382105e-18]}
{'': [0.18514184894742144, 2.3986299914741035e-17], 'true': [0.1834085912404174, 0.23288815337817056], 'false': [nan, 2.3986299914741035e-17], 'false,false': [nan, 2.3986299914741035e-17]}
{'': [0.1828746591260269, -6.522560269672795e-17], 'true': [0.1828746591260269, nan], 'false': [nan, -6.522560269672795e-17], 'false,false': [nan, -6.522560269672795e-17]}
{'': [0.17999202946733556, 5.655853144316835e-17], 'true': [0.17999202946733556, nan], 'false': [nan, 5.655853144316835e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 39.7762975692749
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.4385060779566518;  // std dev = 7.386, 224.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=130 */
%   | | | else return 0.36352527918553407;  // std dev = 6.819, 186.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=94 */
%   else return -0.14185106490048746;  // std dev = 2.55e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7260488704329786;  // std dev = 0.113, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.796002391912903;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.18775630330486667;  // std dev = 4.261, 80.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.4027286053897208;  // std dev = 8.678, 314.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=189 */
%   else if ( interaction(H, A) )
%   | then return -0.12544463852839205;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, F), location(F, E) )
%   | | | then return 0.5432296669472646;  // std dev = 0.865, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | | else return 0.7328758661988729;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6383083381257701;  // std dev = 0.169, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22218910415773996;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13303113977901984;  // std dev = 0.071, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.22374099072317663;  // std dev = 3.195, 41.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=21 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.3757874422032414;  // std dev = 3.646, 59.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=38 */
%   | | | else return 0.2902163220002615;  // std dev = 8.431, 295.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=166 */
%   else return -0.11231637819360663;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D), interaction(F, G) )
%   | | | then return 0.5434475154685338;  // std dev = 0.635, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.1258949700783242;  // std dev = 1.078, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.2275424086911543;  // std dev = 0.459, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.19299889386399138;  // std dev = 4.843, 97.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=51 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6211386274247856;  // std dev = 1.132, 64.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=63 */
%   | | | else return -0.33161306040363925;  // std dev = 0.168, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4452160421360246;  // std dev = 0.129, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.22858400606776724;  // std dev = 6.804, 195.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=108 */
%   else return -0.10159632948783621;  // std dev = 7.33e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5067967390456553;  // std dev = 2.904, 224.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=216 */
%   | | | else return -0.09741480231813486;  // std dev = 5.115, 156.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=39 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.24074306111873714;  // std dev = 0.218, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.36396929957445134;  // std dev = 0.372, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.07778400209863175;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3128068795355421;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.2853979842869667;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.04070150177011448;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else return -0.09269127618926044;  // std dev = 1.05e-08, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.22031205598886114;  // std dev = 0.571, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.028811900555287734;  // std dev = 4.303, 140.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=58 */
%   | | else if ( interaction(A, H), location(H, E) )
%   | | | then return 0.3316191188458555;  // std dev = 1.319, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.14383544666858333;  // std dev = 5.220, 197.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=119 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.2549371509621631;  // std dev = 2.892, 42.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | | | else return 0.0206410245290888;  // std dev = 0.757, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( enzyme(A, L), interaction(A, M) )
%   | | | then return 0.4872917103195969;  // std dev = 0.903, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.26204485386215204;  // std dev = 2.080, 21.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=13 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(A, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.2845715420306693;  // std dev = 1.070, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.01719039306082284;  // std dev = 4.488, 147.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=57 */
%   | | else if ( phenotype(D, G), enzyme(A, H) )
%   | | | then return 0.056117254521074994;  // std dev = 2.329, 57.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=31 */
%   | | | else return 0.13809635865045444;  // std dev = 4.564, 137.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=87 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, J) )
%   | | | then return 0.20685573920248101;  // std dev = 2.162, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return 0.3982122957802753;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.27033455750967766;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.5447717156698497;  // std dev = 0.171, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else return -0.07877675473109143;  // std dev = 4.75e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.133866909628179;  // std dev = 0.032, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.18102956030291875;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.31667363541938526;  // std dev = 0.227, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06452494339205847;  // std dev = 0.829, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return -0.010778843507167558;  // std dev = 1.538, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.1666884361084483;  // std dev = 2.824, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.29383060666922706;  // std dev = 0.210, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.04272820883519575;  // std dev = 7.325, 324.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=175 */
%   else return -0.07324622576333718;  // std dev = 2.46e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.12501692709019416;  // std dev = 0.077, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.00535145932002189;  // std dev = 1.487, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.13884712907475874;  // std dev = 1.959, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.3031560631156454;  // std dev = 1.326, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | else if ( location(A, G), complex(A, H) )
%   | | then if ( location(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.07169933277702378;  // std dev = 4.120, 116.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=75 */
%   | | | else return -0.3243574843371794;  // std dev = 0.290, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.18462951561087518;  // std dev = 1.842, 25.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | else return 0.05307664848121867;  // std dev = 5.564, 198.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=112 */
%   else return -0.0684269778442031;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), location(A, G) )
%   | | | then return 0.10079381345308906;  // std dev = 0.015, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.12097879052466665;  // std dev = 0.115, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.19656869300691038;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25554014216955756;  // std dev = 0.142, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( complex(A, L), phenotype(J, K) )
%   | | | then return -0.08831092057391154;  // std dev = 2.166, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.04333964519302744;  // std dev = 4.326, 135.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=76 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.10229820261639952;  // std dev = 3.447, 92.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=59 */
%   | | | else return 0.03887673223332165;  // std dev = 4.983, 136.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=77 */
%   else return -0.06419184008202578;  // std dev = 8.48e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
Inference time using transfer learning 10.958074569702148
Refined model CLL: -0.233308


******************************************
Best model found
******************************************
Results 

CLL : -0.232016 

AUC ROC : 0.981319 

AUC PR : 0.249039 

Precision : 0.098678 

Recall : 0.932692 

F1 : 0.178473 

Total Learning Time : 39.7762975692749 

Total Inference Time : 35.688342809677124 

Total revision time: 106.13876032829285
Best scored revision CLL: -0.233308


Results 

CLL : -0.232016 

AUC ROC : 0.981319 

AUC PR : 0.249039 

Precision : 0.098678 

Recall : 0.932692 

F1 : 0.178473 

Total Learning Time : 106.1486029624939 

Total Inference Time : 35.688342809677124 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.838494777679443
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41549299948582585;  // std dev = 0.497, 497.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.39e-08, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.40548309972268726;  // std dev = 9.967, 416.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=252 */
%   | else return 0.49415831339789545;  // std dev = 2.764, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3286402965098762;  // std dev = 0.489, 459.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360647;  // std dev = 0.000, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5603227082660064;  // std dev = 4.938, 279.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=252 */
%   | else return -0.22662996579974723;  // std dev = 4.605, 207.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783644;  // std dev = 2.11e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.16057818921018194;  // std dev = 8.823, 441.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=252 */
%   | else return 0.3124744321729017;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926061;  // std dev = 9.77e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1357280969080903;  // std dev = 9.177, 463.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=271 */
%   | | else return 0.13970858245975962;  // std dev = 1.653, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
%   | | else return -0.08518475138839689;  // std dev = 7.45e-09, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11718121036959481;  // std dev = 0.419, 466.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09064046431192228;  // std dev = 8.876, 452.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=271 */
%   | else return 0.03402753653866968;  // std dev = 1.739, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.95e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03370053219879662;  // std dev = 9.487, 498.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420317;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03675055181350535;  // std dev = 9.321, 488.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.98e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
Inference time using transfer learning 2.885512113571167
Parameter learned model CLL:-0.268752 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 220, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.39e-08, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.967, 164, 252], 'true,false': [2.764, 11, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 335, 0], 'false,false,false,false': [0.0, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 182, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.938, 27, 252], 'true,false': [4.605, 182, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.11e-08, 336, 0], 'false,false,false,false': [0.0, 33, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.823, 189, 252], 'true,false': [3.062, 15, 25], 'false,true': [0.0, 0, 0], 'false,false': [9.77e-09, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.177, 192, 271], 'true,true,false': [1.653, 6, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 331, 0], 'false,false,false': [7.45e-09, 32, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.419, 189, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 329, 0], 'false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.876, 181, 271], 'true,false': [1.739, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.95e-09, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.487, 221, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 340, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.321, 211, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.98e-09, 365, 0]}]
{'': [0.24671165827966077, 1.9369848514736775e-16], 'false': [nan, 1.9369848514736775e-16]}
{'': [0.23726897172839742, -1.2349004765884094e-16], 'true': [0.2388128698224777, 0.2121913580246923], 'false': [nan, -1.2349004765884094e-16], 'false,false': [nan, -1.2349004765884094e-16], 'false,false,false': [-1.166562700501657e-16, -2.2773805633336544e-17]}
{'': [0.2394878983395766, -3.2802043909379627e-17], 'false': [nan, -3.2802043909379627e-17], 'false,false': [nan, -3.2802043909379627e-17]}
{'': [0.24524240034621608, 6.859914623700155e-17], 'true': [0.08740894901144891, 0.10245352034225734], 'false': [nan, 6.859914623700155e-17], 'false,false': [nan, 6.859914623700155e-17], 'false,false,false': [1.32169407693471e-18, 0.0]}
{'': [0.1830982118189356, 9.368457303686252e-17], 'true': [0.1765285475651852, 0.23437499999999947], 'false': [nan, 9.368457303686252e-17]}
{'': [0.18304693003725803, 3.914836009697522e-17], 'true': [0.18304693003725803, nan], 'true,true': [0.18188665545267407, 0.22779874710340745], 'false': [nan, 3.914836009697522e-17], 'false,false': [3.890811808354023e-17, 1.734723475976807e-18]}
{'': [0.17560034563685334, 2.3768154893383632e-17], 'true': [0.17560034563685334, nan], 'false': [nan, 2.3768154893383632e-17], 'false,false': [5.3992609100311564e-18, 0.0]}
{'': [0.17600662804030967, 1.5997449922552688e-17], 'true': [0.17428746220796437, 0.2326652808147147], 'false': [nan, 1.5997449922552688e-17], 'false,false': [nan, 1.5997449922552688e-17]}
{'': [0.18072021960410695, -7.967482882604065e-17], 'true': [0.18072021960410695, nan], 'false': [nan, -7.967482882604065e-17], 'false,false': [nan, -7.967482882604065e-17]}
{'': [0.178018786845884, 8.030106260302502e-17], 'true': [0.178018786845884, nan], 'false': [nan, 8.030106260302502e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 41.12323498725891
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | | else return 0.37814893509951125;  // std dev = 3.533, 50.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=26 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.4008998644675384;  // std dev = 8.171, 269.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=146 */
%   | | | else return 0.4831489350995114;  // std dev = 4.330, 80.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=50 */
%   else return -0.14185106490048754;  // std dev = 2.33e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.46827079355121776;  // std dev = 1.148, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, G), interaction(G, D) )
%   | | | then return 0.6932454599626827;  // std dev = 0.915, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.7810365505404303;  // std dev = 0.123, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.10079932533407666;  // std dev = 2.979, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.41880395306418605;  // std dev = 3.028, 39.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=24 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7235208191248602;  // std dev = 0.043, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3505955638980487;  // std dev = 9.031, 330.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=182 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839205;  // std dev = 0.000, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.6005329782282534;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5607979989858888;  // std dev = 0.077, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(H, D), interaction(H, H) )
%   | | | then return 0.2346037562685637;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5543667694589695;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.17750269241084463;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.17750269241084465;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.42244158138504484;  // std dev = 3.513, 57.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.2911242794366658;  // std dev = 9.284, 352.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=196 */
%   else return -0.11231637819360668;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.42213279193815334;  // std dev = 0.076, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.672214828871338;  // std dev = 0.315, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.25295936954720266;  // std dev = 0.228, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.3353362078435988;  // std dev = 0.208, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( recursion_proteinclass(I, B), enzyme(I, J) )
%   | | | then return 0.4899675091689243;  // std dev = 0.257, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1563266999032572;  // std dev = 3.682, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4839828680827211;  // std dev = 0.320, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2735042966270269;  // std dev = 7.706, 254.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=154 */
%   else return -0.10159632948783624;  // std dev = 6.84e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.31765085202391574;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.06070195651405641;  // std dev = 1.195, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.30345750624345746;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4533754470183005;  // std dev = 0.144, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B), interaction(H, I) )
%   | | | then return 0.4774276403864839;  // std dev = 2.081, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.011509501433117002;  // std dev = 5.125, 147.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=50 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.2317362995479278;  // std dev = 4.178, 81.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=51 */
%   | | | else return 0.1708439479547379;  // std dev = 6.136, 169.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=96 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.350336443309004;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20486961908480836;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), interaction(G, A) )
%   | | | then return 0.21597213395255135;  // std dev = 0.723, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.3278971147994584;  // std dev = 0.208, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1554458793754045;  // std dev = 8.787, 382.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=221 */
%   | | | else return -0.38308871394561406;  // std dev = 0.555, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.44128572350745077;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.07283010842307304;  // std dev = 1.865, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3979587373817887;  // std dev = 3.970, 255.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=239 */
%   | | | else return -0.2693912796168985;  // std dev = 4.035, 155.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=24 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.19735839176539322;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.3192984766268215;  // std dev = 0.220, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then return 0.11420641811837313;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.5343123315707087;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48568175927460755;  // std dev = 0.221, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(L, A) )
%   | then return -0.07877675473109143;  // std dev = 2.63e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | else return -0.0787767547310918;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(D, D), location(A, G) )
%   | | | then return 0.09175870387744287;  // std dev = 1.902, 55.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=36 */
%   | | | else return -0.029799699673278238;  // std dev = 2.455, 53.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=25 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.07601978972875212;  // std dev = 5.036, 173.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=103 */
%   | | | else return 0.1401814274267905;  // std dev = 4.356, 130.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=86 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3698696852613866;  // std dev = 1.479, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return -0.2534469908227423;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3656766128827815;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09348401919364618;  // std dev = 1.738, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else return -0.07324622576333718;  // std dev = 2.28e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return 0.071904309445686;  // std dev = 2.105, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | | else return 0.31507379485332143;  // std dev = 0.849, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( enzyme(D, J) )
%   | | | then return -0.032378758156067694;  // std dev = 3.689, 101.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=48 */
%   | | | else return 0.038442701493030654;  // std dev = 5.278, 208.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=119 */
%   | else if ( complex(A, K), location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.08314434993207523;  // std dev = 2.143, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.2279086375053391;  // std dev = 0.194, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, N), location(N, P) )
%   | | | then return 0.24182855091425212;  // std dev = 1.946, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | else return 0.14108567699786628;  // std dev = 2.407, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.13238383837858045;  // std dev = 0.081, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.1931495939361861;  // std dev = 0.104, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(A, G), location(A, E) )
%   | | | then return -0.031551900989951684;  // std dev = 3.954, 125.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=59 */
%   | | | else return 0.048709628123487794;  // std dev = 6.383, 261.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=149 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3761168259602574;  // std dev = 0.303, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.2715809335877577;  // std dev = 0.344, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.49173529746941946;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1260901010004168;  // std dev = 1.513, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.06419184008202568;  // std dev = 9.17e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
Inference time using transfer learning 4.887529373168945
Refined model CLL: -0.226053


******************************************
Best model found
******************************************
Results 

CLL : -0.206667 

AUC ROC : 0.990606 

AUC PR : 0.446209 

Precision : 0.220297 

Recall : 0.967391 

F1 : 0.358871 

Total Learning Time : 41.12323498725891 

Total Inference Time : 42.35241746902466 

Total revision time: 119.40584826469421
Best scored revision CLL: -0.226053


Results 

CLL : -0.206667 

AUC ROC : 0.990606 

AUC PR : 0.446209 

Precision : 0.220297 

Recall : 0.967391 

F1 : 0.358871 

Total Learning Time : 119.41569089889526 

Total Inference Time : 42.35241746902466 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.43848729133606
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43218544625569455;  // std dev = 0.494, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004874;  // std dev = 1.42e-08, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.38738827814519516;  // std dev = 7.760, 249.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=147 */
%   | else return 0.35212887317838915;  // std dev = 7.779, 245.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3128809459645668;  // std dev = 0.493, 486.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360653;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5552308164492957;  // std dev = 5.256, 282.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=251 */
%   | else return -0.19340274288722384;  // std dev = 5.219, 225.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | | else return -0.10159632948783645;  // std dev = 0.000, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.15312956137998243;  // std dev = 7.403, 276.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=147 */
%   | else return 0.1481204439691376;  // std dev = 6.785, 248.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926046;  // std dev = 1.09e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17454673082759492;  // std dev = 8.565, 403.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=243 */
%   | | else return 0.05468187538147984;  // std dev = 3.966, 82.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else return -0.08518475138839678;  // std dev = 7.45e-08, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11711873481051267;  // std dev = 0.426, 488.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 9.06e-08, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else return -0.07877675473109148;  // std dev = 8.30e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08127837629171757;  // std dev = 8.830, 421.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=243 */
%   | else return -0.01200859483196889;  // std dev = 4.026, 89.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333717;  // std dev = 2.63e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07725066596782505;  // std dev = 9.357, 482.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420311;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07701152575135192;  // std dev = 9.119, 465.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202557;  // std dev = 9.99e-09, 412.000 (wgt'ed) examples reached here.  /* #neg=412 */
Inference time using transfer learning 2.964163064956665
Parameter learned model CLL:-0.270965 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 210, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.42e-08, 379, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.76, 102, 147], 'true,false': [7.779, 109, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 297, 0], 'false,false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 203, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.256, 31, 251], 'true,false': [5.219, 193, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 204, 0], 'false,false,false,false': [0.0, 147, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.403, 129, 147], 'true,false': [6.785, 112, 136], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.565, 160, 243], 'true,true,false': [3.966, 42, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.6e-08, 178, 0], 'false,false,false': [7.45e-08, 182, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.426, 205, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.06e-08, 190, 0], 'false,false,false': [8.3e-08, 174, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.83, 178, 243], 'true,false': [4.026, 49, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.63e-09, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.357, 199, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 325, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.119, 182, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.99e-09, 412, 0]}]
{'': [0.2445185950158228, 1.9685220911559503e-16], 'false': [nan, 1.9685220911559503e-16]}
{'': [0.24468930813485656, -1.1562085936924707e-16], 'true': [0.24183480911598004, 0.24696376509787435], 'false': [nan, -1.1562085936924707e-16], 'false,false': [nan, -1.1562085936924707e-16], 'false,false,false': [-1.0765799026668185e-16, -2.4370749321040022e-17]}
{'': [0.24318070959786728, -3.356488213983031e-17], 'false': [nan, -3.356488213983031e-17], 'false,false': [nan, -3.356488213983031e-17]}
{'': [0.24653727918357332, 3.289549702593056e-17], 'true': [0.0979491343567055, 0.12103694113681504], 'false': [nan, 3.289549702593056e-17], 'false,false': [nan, 3.289549702593056e-17], 'false,false,false': [-8.489940776545314e-17, -5.739928562687884e-17]}
{'': [0.19245039091713678, 1.1579403466004497e-16], 'true': [0.19858365959632743, 0.1856114404136124], 'false': [nan, 1.1579403466004497e-16]}
{'': [0.18571663115830325, 3.947459643111668e-17], 'true': [0.18571663115830325, nan], 'true,true': [0.18204921651933118, 0.19180220726011799], 'false': [nan, 3.947459643111668e-17], 'false,false': [3.2433481618263e-17, 3.050063254464716e-17]}
{'': [0.18117518883325914, 3.416070845000482e-17], 'true': [0.18117518883325914, nan], 'false': [nan, 3.416070845000482e-17], 'false,false': [4.324026516961136e-17, 3.9559670992390636e-17]}
{'': [0.1859164181397287, 7.700968956937501e-18], 'true': [0.18520222431304584, 0.18211100110848602], 'false': [nan, 7.700968956937501e-18], 'false,false': [nan, 7.700968956937501e-18]}
{'': [0.18164399381178178, -6.900463106900972e-17], 'true': [0.18164399381178178, nan], 'false': [nan, -6.900463106900972e-17], 'false,false': [nan, -6.900463106900972e-17]}
{'': [0.17883345832515343, 9.970449492992911e-17], 'true': [0.17883345832515343, nan], 'false': [nan, 9.970449492992911e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 27.699154138565063
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), enzyme(A, H) )
%   | | | then return 0.48718119316402814;  // std dev = 5.379, 124.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=78 */
%   | | | else return 0.3754990928282157;  // std dev = 8.897, 317.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=164 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), location(D, E) )
%   | | | then return 0.7473080942519289;  // std dev = 1.013, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return 0.4249889252857444;  // std dev = 1.909, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.19425471499286323;  // std dev = 0.110, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.28881427067516874;  // std dev = 6.065, 150.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=74 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7896848064118871;  // std dev = 0.111, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.37071500504396265;  // std dev = 5.996, 147.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=84 */
%   | | | else return 0.4869500577291858;  // std dev = 3.804, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5474815378679957;  // std dev = 0.014, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.19524141363012365;  // std dev = 1.040, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(D, F), interaction(F, G) )
%   | | | then return 0.5952685160224851;  // std dev = 0.096, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.65877485746728;  // std dev = 0.121, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5833823069683703;  // std dev = 1.641, 40.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=36 */
%   | | | else return 0.08035226863555307;  // std dev = 5.205, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   | | else if ( interaction(K, A), enzyme(A, L) )
%   | | | then return 0.2573341582666889;  // std dev = 4.730, 91.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=50 */
%   | | | else return 0.3601251004437097;  // std dev = 6.500, 182.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=114 */
%   else return -0.11231637819360653;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( phenotype(D, G), interaction(F, A) )
%   | | | then return 0.46499317807913065;  // std dev = 0.449, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.08633118282218842;  // std dev = 1.301, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4288259445377582;  // std dev = 0.111, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5872703326757992;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, K), recursion_proteinclass(I, B) )
%   | | | then return 0.48516093009556066;  // std dev = 0.159, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.08876382504290581;  // std dev = 4.775, 122.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=46 */
%   | | else if ( location(A, L) )
%   | | | then return 0.21570214912738636;  // std dev = 8.630, 317.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=174 */
%   | | | else return 0.08673007172420627;  // std dev = 2.386, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else return -0.10159632948783615;  // std dev = 8.33e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.30829393628835955;  // std dev = 0.020, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.06875329268829804;  // std dev = 0.547, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.39052515170215246;  // std dev = 0.103, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4577454012486633;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.13053051813931688;  // std dev = 0.063, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.16004315470509178;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return 0.2648093317244684;  // std dev = 3.775, 67.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=42 */
%   | | | else return 0.1754909923921074;  // std dev = 9.038, 362.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=200 */
%   else return -0.09269127618926051;  // std dev = 1.05e-08, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, D) )
%   | | | then return 0.2809083025225574;  // std dev = 0.769, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5182696411250273;  // std dev = 1.744, 88.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=85 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return -0.35490675452560216;  // std dev = 0.604, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return -0.41131750441810455;  // std dev = 0.342, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( complex(A, L), interaction(J, M) )
%   | | | then return -0.012615055606918236;  // std dev = 2.100, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.22164606318382438;  // std dev = 2.147, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.28447314229245085;  // std dev = 2.906, 59.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=43 */
%   | | | else return 0.17755921740487288;  // std dev = 6.230, 176.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=109 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.19954542570976253;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.21581303917659572;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(A, F), location(A, G) )
%   | | | then return -0.09792946498280129;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.17513482493835603;  // std dev = 0.389, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( phenotype(A, I), phenotype(H, J) )
%   | | | then return 0.03422346897794136;  // std dev = 2.316, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | | else return 0.11720848482977272;  // std dev = 1.709, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2590107908406471;  // std dev = 0.194, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.11294555476754856;  // std dev = 8.639, 362.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=208 */
%   else return -0.07877675473109143;  // std dev = 4.37e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(F, G) )
%   | | | then return 0.29486829562880573;  // std dev = 0.646, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.14240576760540066;  // std dev = 1.852, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2323383020686334;  // std dev = 0.560, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.048042379332253485;  // std dev = 5.552, 156.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=80 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), enzyme(I, K) )
%   | | | then return 0.049294191887704925;  // std dev = 3.699, 67.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=38 */
%   | | | else return 0.22758077554993478;  // std dev = 4.209, 111.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=84 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.42122064913640983;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.028553184221771586;  // std dev = 2.361, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   else return -0.07324622576333713;  // std dev = 3.61e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.15143221438323348;  // std dev = 0.073, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.26233122409644344;  // std dev = 1.035, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.46599989950760623;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2753257697644574;  // std dev = 0.268, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.09514878591558953;  // std dev = 7.971, 374.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=230 */
%   | | | else return -0.40074696558536266;  // std dev = 0.926, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.06487894117899291;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.22246471407571292;  // std dev = 1.729, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.0684269778442033;  // std dev = 0.000, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.22067732463186232;  // std dev = 0.895, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | | else return 0.02046145820201154;  // std dev = 3.165, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.16201873765737237;  // std dev = 1.114, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4651800721252839;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.002169205121615958;  // std dev = 0.661, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.21530844270008337;  // std dev = 0.265, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.02233207222328664;  // std dev = 7.194, 272.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=139 */
%   | | | else return 0.07172140778923476;  // std dev = 3.316, 60.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=36 */
%   else return -0.06419184008202564;  // std dev = 9.54e-09, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
Inference time using transfer learning 3.2777814865112305
Refined model CLL: -0.25089


******************************************
Best model found
******************************************
Results 

CLL : -0.238827 

AUC ROC : 0.961901 

AUC PR : 0.283441 

Precision : 0.073892 

Recall : 0.872093 

F1 : 0.13624 

Total Learning Time : 27.699154138565063 

Total Inference Time : 24.576172590255737 

Total revision time: 105.65292739868164
Best scored revision CLL: -0.25089


Results 

CLL : -0.238827 

AUC ROC : 0.961901 

AUC PR : 0.283441 

Precision : 0.073892 

Recall : 0.872093 

F1 : 0.13624 

Total Learning Time : 105.66277003288269 

Total Inference Time : 24.576172590255737 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 8.418660640716553
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4301570486897716;  // std dev = 0.495, 493.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.39288827756463307;  // std dev = 9.853, 403.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=240 */
%   | else return 0.44350862495917165;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839208;  // std dev = 0.000, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3029965986492198;  // std dev = 0.494, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5854657941705997;  // std dev = 4.297, 260.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=240 */
%   | else return -0.15143859143626387;  // std dev = 5.779, 221.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783656;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | | | else return -0.10159632948783624;  // std dev = 3.65e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.18067426988780458;  // std dev = 8.382, 401.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=240 */
%   | else return 0.2845532006461964;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.07e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12597719743073305;  // std dev = 9.420, 481.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=275 */
%   | | else return 0.10109013514408961;  // std dev = 1.881, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
%   | | else return -0.08518475138839685;  // std dev = 2.47e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10595708628283866;  // std dev = 0.426, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 4.94e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | | else return -0.07877675473109177;  // std dev = 1.83e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08173745271867902;  // std dev = 9.256, 469.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=275 */
%   | else return 0.021842265140678083;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 2.08e-09, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05913413789402623;  // std dev = 9.448, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420317;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03717032007802945;  // std dev = 9.558, 495.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202562;  // std dev = 9.59e-09, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
Inference time using transfer learning 4.912743806838989
Parameter learned model CLL:-0.270671 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 211, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.853, 163, 240], 'true,false': [3.855, 23, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 294, 0], 'false,false,false,false': [0.0, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 206, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.297, 20, 240], 'true,false': [5.779, 179, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 323, 0], 'false,false,false,false': [3.65e-08, 54, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.382, 161, 240], 'true,false': [4.099, 28, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.42, 206, 275], 'true,true,false': [1.881, 8, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 297, 0], 'false,false,false': [2.47e-08, 45, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.426, 206, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.94e-08, 279, 0], 'false,false,false': [1.83e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.256, 194, 275], 'true,false': [1.936, 9, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.448, 206, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.558, 213, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.59e-09, 389, 0]}]
{'': [0.24481483157717462, 1.4292526294025004e-16], 'false': [nan, 1.4292526294025004e-16]}
{'': [0.23948060486522135, -1.1789979022568035e-16], 'true': [0.24087335061480672, 0.22863905325443817], 'false': [nan, -1.1789979022568035e-16], 'false,false': [nan, -1.1789979022568035e-16], 'false,false,false': [-1.0573552615477681e-16, -2.960594732333751e-17]}
{'': [0.24378759086573248, -2.944237855359531e-17], 'false': [nan, -2.944237855359531e-17], 'false,false': [nan, -2.944237855359531e-17]}
{'': [0.24266666251502025, 8.245688246552887e-17], 'true': [0.07100591715976586, 0.15109179218724797], 'false': [nan, 8.245688246552887e-17], 'false,false': [nan, 8.245688246552887e-17], 'false,false,false': [-2.887267308622698e-17, 2.4671622769447922e-17]}
{'': [0.18619775089360105, 1.1538269500636068e-16], 'true': [0.1752021040529008, 0.2400000000000001], 'false': [nan, 1.1538269500636068e-16]}
{'': [0.1860482055202167, 4.025370030804661e-17], 'true': [0.1860482055202167, nan], 'true,true': [0.18447545022110284, 0.23588059039853818], 'false': [nan, 4.025370030804661e-17], 'false,false': [3.7381246620375643e-17, 1.3569392523196357e-17]}
{'': [0.18110333898415204, 2.5187149215376687e-17], 'true': [0.18110333898415204, nan], 'false': [nan, 2.5187149215376687e-17], 'false,false': [8.75444678915894e-18, 5.9476233462061954e-18]}
{'': [0.18446821151293785, 4.2818518856066645e-18], 'true': [0.18265476291876667, 0.23415583825606012], 'false': [nan, 4.2818518856066645e-18], 'false,false': [nan, 4.2818518856066645e-18]}
{'': [0.18293606020158093, -7.925485898504067e-17], 'true': [0.18293606020158093, nan], 'false': [nan, -7.925485898504067e-17], 'false,false': [nan, -7.925485898504067e-17]}
{'': [0.184557429433447, 9.247101798934466e-17], 'true': [0.184557429433447, nan], 'false': [nan, 9.247101798934466e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 38.79699945449829
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.1005731775237548;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.34703782398840033;  // std dev = 3.353, 45.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=22 */
%   | | else if ( location(A, G), interaction(A, H) )
%   | | | then return 0.36107291170769734;  // std dev = 6.538, 171.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=86 */
%   | | | else return 0.4350720120225866;  // std dev = 7.125, 208.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=120 */
%   else return -0.14185106490048768;  // std dev = 1.74e-07, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5194734122109544;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.8087215393774683;  // std dev = 0.004, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( complex(A, F), interaction(A, G) )
%   | | then if ( complex(G, F), location(A, H) )
%   | | | then return 0.13033349017683996;  // std dev = 3.364, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.35891693313996514;  // std dev = 3.527, 51.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=28 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.5160526136699157;  // std dev = 3.351, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | | | else return 0.3627606912319036;  // std dev = 8.060, 268.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=152 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.204646810418964;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.6040520610480191;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.653171141100201;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return -0.030344294589854482;  // std dev = 1.702, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.23787469171742381;  // std dev = 5.852, 141.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=69 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.5817251623142541;  // std dev = 0.983, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.27069875628820006;  // std dev = 8.332, 279.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=150 */
%   else return -0.11231637819360649;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.5160656174384879;  // std dev = 4.491, 178.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=154 */
%   | | | else return -0.31243414468176894;  // std dev = 0.381, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.3032621855259892;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.33108206541084007;  // std dev = 0.032, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.4606233802110148;  // std dev = 0.190, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.2145941455347185;  // std dev = 0.878, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.11821010579579024;  // std dev = 3.187, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | | | else return 0.21078123662933113;  // std dev = 6.261, 158.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=84 */
%   else return -0.10159632948783633;  // std dev = 4.93e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.3055124252115971;  // std dev = 0.025, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.3897111688578334;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(D, F), interaction(A, G) )
%   | | | then return 0.572919339060994;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44692034753734894;  // std dev = 0.160, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.23331158992668846;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.31315651822598567;  // std dev = 0.094, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.1295389772297979;  // std dev = 5.793, 168.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=84 */
%   | | | else return 0.2353848679941372;  // std dev = 7.049, 247.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=152 */
%   else return -0.09269127618926071;  // std dev = 8.93e-09, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(D, E), complex(A, F) )
%   | | | then return 0.02487836213450903;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2544904625912834;  // std dev = 0.121, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( complex(A, G), enzyme(D, H) )
%   | | | then return 0.39765646775585173;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3335628089713738;  // std dev = 0.166, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5363134807955384;  // std dev = 0.533, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.3349270191895021;  // std dev = 0.444, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.029477128306646335;  // std dev = 3.460, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.11931870124559765;  // std dev = 8.090, 312.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=172 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, G), complex(A, H) )
%   | | | then return 0.358694681951375;  // std dev = 0.767, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | | else return 0.4729554390688435;  // std dev = 0.690, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return -0.22135330367679967;  // std dev = 0.296, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.35985118078175204;  // std dev = 0.560, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.1912896395829444;  // std dev = 0.953, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.30447716734646835;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.21969601946191297;  // std dev = 0.793, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.06113083936591017;  // std dev = 7.687, 294.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=140 */
%   else return -0.07877675473109143;  // std dev = 2.46e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.1948660077858469;  // std dev = 0.185, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.3526163626526592;  // std dev = 1.017, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.1786187581891177;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25464090911106296;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A) )
%   | | then if ( complex(A, I), phenotype(H, J) )
%   | | | then return 0.10517333359443373;  // std dev = 3.520, 93.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=52 */
%   | | | else return 0.036387953005353614;  // std dev = 7.233, 296.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=148 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.061430324680022345;  // std dev = 2.315, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | | else return 0.2507605788674093;  // std dev = 2.129, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   else return -0.07324622576333722;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.14985862825595309;  // std dev = 0.080, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.21393603861553848;  // std dev = 0.130, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.04586375204558579;  // std dev = 0.672, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.09928714050023993;  // std dev = 7.830, 379.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=225 */
%   | | | else return -0.333412078703856;  // std dev = 0.776, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.05399910803606065;  // std dev = 1.468, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.5106793602491155;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.06842697784420326;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.031917708639149986;  // std dev = 0.997, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.30574970092501086;  // std dev = 1.828, 39.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=35 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.10327374509117991;  // std dev = 2.503, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
%   | | | else return 0.014881304463501945;  // std dev = 5.865, 216.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=112 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( interaction(I, I), complex(A, J) )
%   | | | then return 0.22442586978517484;  // std dev = 0.681, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.03748943601733803;  // std dev = 2.057, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16927236743505472;  // std dev = 2.638, 54.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=39 */
%   | | | else return 0.07466178691232118;  // std dev = 3.058, 62.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   else return -0.06419184008202554;  // std dev = 1.02e-08, 418.000 (wgt'ed) examples reached here.  /* #neg=418 */
Inference time using transfer learning 5.669036388397217
Refined model CLL: -0.22129


******************************************
Best model found
******************************************
Results 

CLL : -0.205564 

AUC ROC : 0.979866 

AUC PR : 0.310902 

Precision : 0.102464 

Recall : 0.908046 

F1 : 0.184149 

Total Learning Time : 38.79699945449829 

Total Inference Time : 38.36571264266968 

Total revision time: 104.8100860118866
Best scored revision CLL: -0.22129


Results 

CLL : -0.205564 

AUC ROC : 0.979866 

AUC PR : 0.310902 

Precision : 0.102464 

Recall : 0.908046 

F1 : 0.184149 

Total Learning Time : 104.81996703147888 

Total Inference Time : 38.36571264266968 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.895586013793945
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.48611102040756493;  // std dev = 0.483, 422.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3557307628047402;  // std dev = 7.973, 259.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=147 */
%   | else return 0.4125018195757961;  // std dev = 6.658, 189.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.28736919297857133;  // std dev = 0.495, 465.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360661;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.616088306222684;  // std dev = 2.944, 232.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=223 */
%   | else return -0.16655827240818846;  // std dev = 5.913, 239.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783648;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
%   | | | else return -0.10159632948783652;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20744550745376797;  // std dev = 6.908, 248.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=147 */
%   | else return 0.1768802258002194;  // std dev = 5.611, 194.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.07e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1434176035734422;  // std dev = 8.517, 401.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=237 */
%   | | else return 0.04551024872743716;  // std dev = 3.078, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.74e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return -0.08518475138839678;  // std dev = 6.32e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1043260367621012;  // std dev = 0.424, 452.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.69e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else return -0.07877675473109148;  // std dev = 8.56e-08, 165.000 (wgt'ed) examples reached here.  /* #neg=165 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08157830881847095;  // std dev = 8.530, 403.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=237 */
%   | else return 0.006371609448714656;  // std dev = 3.101, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 4.27e-09, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.02730814753386198;  // std dev = 9.408, 488.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420318;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06924675120689384;  // std dev = 8.849, 439.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202579;  // std dev = 8.28e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
Inference time using transfer learning 5.906010150909424
Parameter learned model CLL:-0.26946 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.483, 157, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.973, 112, 147], 'true,false': [6.658, 71, 118], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 282, 0], 'false,false,false,false': [0.0, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 200, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [2.944, 9, 223], 'true,false': [5.913, 197, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 160, 0], 'false,false,false,false': [0.0, 179, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.908, 101, 147], 'true,false': [5.611, 76, 118], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.517, 164, 237], 'true,true,false': [3.078, 28, 28], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 188, 0], 'false,false,false': [6.32e-08, 150, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 187, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.69e-08, 164, 0], 'false,false,false': [8.56e-08, 165, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.53, 166, 237], 'true,false': [3.101, 28, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.27e-09, 318, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.408, 223, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.849, 174, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.28e-09, 340, 0]}]
{'': [0.23362570472361693, 1.805240690447409e-16], 'false': [nan, 1.805240690447409e-16]}
{'': [0.2416244818239807, -1.1643802453385789e-16], 'true': [0.24543462381299913, 0.2345399064975755], 'false': [nan, -1.1643802453385789e-16], 'false,false': [nan, -1.1643802453385789e-16], 'false,false,false': [-1.0393577251809976e-16, -3.137586808723268e-17]}
{'': [0.24531577948524055, -3.756645883928022e-17], 'false': [nan, -3.756645883928022e-17], 'false,false': [nan, -3.756645883928022e-17]}
{'': [0.24572721719750582, 9.169983684219582e-18], 'true': [0.03735440962256355, 0.14628097323291792], 'false': [nan, 9.169983684219582e-18], 'false,false': [nan, 9.169983684219582e-18], 'false,false,false': [-6.800116025829084e-17, -8.311166776523518e-17]}
{'': [0.17942280093775223, 1.1538269500636068e-16], 'true': [0.19243547197984565, 0.16226385924028586], 'false': [nan, 1.1538269500636068e-16]}
{'': [0.18049414329735813, 4.0730075459621126e-17], 'true': [0.18049414329735813, nan], 'true,true': [0.18089621037105996, 0.16920383944026413], 'false': [nan, 4.0730075459621126e-17], 'false,false': [3.188938474987152e-17, 2.6645352591003756e-17]}
{'': [0.1801128492689336, 2.0247228412616836e-17], 'true': [0.1801128492689336, nan], 'false': [nan, 2.0247228412616836e-17], 'false,false': [4.603363760640893e-17, 4.4408920985006264e-17]}
{'': [0.18007063103581034, 1.7456336865175417e-17], 'true': [0.1805449749648911, 0.17169106365775902], 'false': [nan, 1.7456336865175417e-17], 'false,false': [nan, 1.7456336865175417e-17]}
{'': [0.1813849805966215, -8.115665384686817e-17], 'true': [0.1813849805966215, nan], 'false': [nan, -8.115665384686817e-17], 'false,false': [nan, -8.115665384686817e-17]}
{'': [0.17838230905259486, 6.791952621236252e-17], 'true': [0.17838230905259486, nan], 'false': [nan, 6.791952621236252e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 35.53459334373474
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, A) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.4091693432627776;  // std dev = 3.482, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.5248156017661779;  // std dev = 3.464, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   | | | else return 0.4227245808559684;  // std dev = 8.162, 271.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=153 */
%   else return -0.14185106490048774;  // std dev = 1.49e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.7251239146986216;  // std dev = 0.084, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7953130229301398;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( enzyme(A, F), complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7645123662724109;  // std dev = 1.067, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.20323090627405974;  // std dev = 0.087, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.196633668172298;  // std dev = 3.387, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.31206433860166644;  // std dev = 8.900, 320.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=166 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839194;  // std dev = 0.000, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
%   | else return -0.12544463852839116;  // std dev = 6.66e-08, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5539706994735438;  // std dev = 6.66e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.6242832741076016;  // std dev = 0.116, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return 0.3096625315122973;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G), location(A, H) )
%   | | | then return 0.08347442156429982;  // std dev = 2.782, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.2495987234923432;  // std dev = 6.222, 164.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=83 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.33177955387419683;  // std dev = 4.275, 86.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=52 */
%   | | | else return 0.28105475645538036;  // std dev = 5.800, 141.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=76 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.5631177342917297;  // std dev = 0.938, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return 0.26606214998635325;  // std dev = 1.333, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(E, H), complex(H, I) )
%   | | | then return 0.04195460908271565;  // std dev = 4.457, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   | | | else return 0.23989928801194027;  // std dev = 4.373, 89.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=51 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6405141691453404;  // std dev = 0.415, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return -0.2664762707225394;  // std dev = 0.308, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.40630326402343353;  // std dev = 2.513, 34.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=25 */
%   | | | else return 0.28199892994678905;  // std dev = 4.722, 96.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=58 */
%   else return -0.10159632948783644;  // std dev = 1.32e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( enzyme(E, F), complex(D, G) )
%   | | | then return 0.16571624657771608;  // std dev = 0.704, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.3184006674803229;  // std dev = 0.276, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.4296093343886754;  // std dev = 0.175, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5264642072233202;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.24503656530029974;  // std dev = 0.132, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.17089815086220372;  // std dev = 2.688, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.13330357830214581;  // std dev = 5.238, 147.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=76 */
%   | | | else return 0.23917491328606377;  // std dev = 6.725, 206.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=128 */
%   else return -0.09269127618926043;  // std dev = 1.10e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, D), location(A, F) )
%   | | | then return 0.24010206045462829;  // std dev = 0.114, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3525456533353862;  // std dev = 0.203, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.05149561891435198;  // std dev = 1.018, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return 0.11199253838166981;  // std dev = 6.305, 201.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=104 */
%   | | | else return -0.011161696999300343;  // std dev = 4.796, 118.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=46 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.11452664428153576;  // std dev = 3.565, 61.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=34 */
%   | | | else return 0.2466527376468429;  // std dev = 3.336, 62.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=41 */
%   else if ( interaction(A, M) )
%   | then return -0.08518475138839678;  // std dev = 6.04e-09, 209.000 (wgt'ed) examples reached here.  /* #neg=209 */
%   | else return -0.08518475138839678;  // std dev = 4.56e-09, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.20863389041990357;  // std dev = 0.171, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.12043215410780357;  // std dev = 0.821, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, H) )
%   | | | then return 0.31864060334433486;  // std dev = 0.056, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3770538230510336;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.22608240480892489;  // std dev = 0.198, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.07955710353753073;  // std dev = 2.825, 40.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=20 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12616695726248578;  // std dev = 5.517, 154.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=88 */
%   | | | else return 0.05466429860757902;  // std dev = 6.983, 225.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=116 */
%   else return -0.07877675473109141;  // std dev = 6.04e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, G) )
%   | | | then return 0.3421648636113879;  // std dev = 0.853, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.1588081263587311;  // std dev = 1.127, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( complex(D, H), enzyme(A, I) )
%   | | | then return 0.13798841228874612;  // std dev = 2.233, 31.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=20 */
%   | | | else return -0.012723996678742347;  // std dev = 5.273, 144.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=65 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.10319560940367496;  // std dev = 3.045, 51.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=30 */
%   | | | else return 0.2660608436660998;  // std dev = 2.323, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.10697943315505878;  // std dev = 4.441, 111.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=65 */
%   | | | else return 0.02147252901270578;  // std dev = 3.624, 55.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=29 */
%   else return -0.0732462257633371;  // std dev = 4.17e-09, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.36118923112663864;  // std dev = 3.608, 229.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=216 */
%   | | | else return -0.21386236381412005;  // std dev = 4.967, 172.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.28855379284555427;  // std dev = 0.238, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.43145297760887213;  // std dev = 0.607, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.013783624480162718;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.17519220093952478;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4850526840366095;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.0684269778442031;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.18043339576710415;  // std dev = 1.211, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return 0.038078159902377076;  // std dev = 3.992, 132.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=68 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.07069270739906641;  // std dev = 2.632, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return -0.012179338368314524;  // std dev = 5.006, 151.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=80 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), complex(K, L) )
%   | | | then return 0.3790075097667746;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.05916786735909872;  // std dev = 2.241, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( location(A, M) )
%   | | | then return 0.3468022251756264;  // std dev = 2.114, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return 0.1257303960790232;  // std dev = 0.876, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else return -0.06419184008202576;  // std dev = 8.59e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 7.312369108200073
Refined model CLL: -0.22165


******************************************
Best model found
******************************************
Results 

CLL : -0.23443 

AUC ROC : 0.977143 

AUC PR : 0.201865 

Precision : 0.086882 

Recall : 0.980769 

F1 : 0.159624 

Total Learning Time : 35.53459334373474 

Total Inference Time : 31.26888418197632 

Total revision time: 107.09967565536499
Best scored revision CLL: -0.22165


Results 

CLL : -0.23443 

AUC ROC : 0.977143 

AUC PR : 0.201865 

Precision : 0.086882 

Recall : 0.980769 

F1 : 0.159624 

Total Learning Time : 107.10955667495728 

Total Inference Time : 31.26888418197632 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.86868929862976
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43764684304929874;  // std dev = 0.494, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3524332719402051;  // std dev = 10.574, 453.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=252 */
%   | else return 0.4211418812117317;  // std dev = 3.062, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3445972392576847;  // std dev = 0.487, 452.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360632;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5477789751462188;  // std dev = 5.329, 284.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=252 */
%   | else return -0.2254404195350128;  // std dev = 4.634, 212.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783665;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1643190926694729;  // std dev = 8.869, 443.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=252 */
%   | else return 0.21550560331935883;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.09e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1514127646888473;  // std dev = 9.050, 457.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=271 */
%   | | else return 0.08724084518958171;  // std dev = 1.815, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | | else return -0.08518475138839694;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07061921894083287;  // std dev = 0.428, 517.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 2.58e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06223792448875577;  // std dev = 9.451, 493.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=271 */
%   | else return 0.3673546661849498;  // std dev = 1.190, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.46e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05664757543456408;  // std dev = 9.512, 492.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07665806004383847;  // std dev = 9.054, 461.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202573;  // std dev = 8.74e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
Inference time using transfer learning 3.246342182159424
Parameter learned model CLL:-0.26702 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 201, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.574, 201, 252], 'true,false': [3.062, 15, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 299, 0], 'false,false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.487, 175, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 378, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.329, 32, 252], 'true,false': [4.634, 187, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 309, 0], 'false,false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.869, 191, 252], 'true,false': [3.461, 23, 25], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.05, 186, 271], 'true,true,false': [1.815, 8, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 330, 0], 'false,false,false': [0.0, 23, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 240, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.58e-08, 317, 0], 'false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.451, 222, 271], 'true,false': [1.19, 2, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.46e-09, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.512, 215, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.054, 184, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.74e-09, 354, 0]}]
{'': [0.24368008263160962, 1.4676452519261327e-16], 'false': [nan, 1.4676452519261327e-16]}
{'': [0.2461725824833712, -1.1274091395574345e-16], 'true': [0.2468312793298579, 0.23437499999999994], 'false': [nan, -1.1274091395574345e-16], 'false,false': [nan, -1.1274091395574345e-16], 'false,false,false': [-1.0693786993044986e-16, -4.625929269271485e-18]}
{'': [0.23729198488847236, -2.5846461948945442e-17], 'false': [nan, -2.5846461948945442e-17], 'false,false': [nan, -2.5846461948945442e-17]}
{'': [0.2468580069935395, -3.988825238174215e-18], 'true': [0.09998016266613619, 0.10129111461243578], 'false': [nan, -3.988825238174215e-18], 'false,false': [nan, -3.988825238174215e-18], 'false,false,false': [-4.8864184902595885e-17, -2.220446049250313e-18]}
{'': [0.1848185192769293, 1.19021027423792e-16], 'true': [0.1775468577997771, 0.24956597222222252], 'false': [nan, 1.19021027423792e-16]}
{'': [0.18101132544965076, 3.8999335709212296e-17], 'true': [0.18101132544965076, nan], 'true,true': [0.1792287606159783, 0.23520370385574738], 'false': [nan, 3.8999335709212296e-17], 'false,false': [3.902602147167217e-17, -6.033820786006285e-18]}
{'': [0.18292444079251124, 2.530422848148505e-17], 'true': [0.18292444079251124, nan], 'false': [nan, 2.530422848148505e-17], 'false,false': [2.1013685008678042e-18, 0.0]}
{'': [0.18256923379589693, 6.083413833562501e-18], 'true': [0.18117129907591584, 0.1771073013354669], 'false': [nan, 6.083413833562501e-18], 'false,false': [nan, 6.083413833562501e-18]}
{'': [0.18390944372045415, -9.287738322348955e-17], 'true': [0.18390944372045415, nan], 'false': [nan, -9.287738322348955e-17], 'false,false': [nan, -9.287738322348955e-17]}
{'': [0.17781832972977843, 7.652384689506728e-17], 'true': [0.17781832972977843, nan], 'false': [nan, 7.652384689506728e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 37.256197690963745
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.43345013991878545;  // std dev = 9.007, 332.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=191 */
%   | | | else return 0.3155957436101499;  // std dev = 4.830, 94.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then return 0.5694710224608749;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109546;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | else if ( interaction(A, G), complex(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6158410112713416;  // std dev = 1.801, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.16315725794060532;  // std dev = 4.063, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.20867864846896578;  // std dev = 2.957, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.38097054215033255;  // std dev = 8.566, 301.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=175 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), enzyme(D, F) )
%   | | then return 0.15881355790796697;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(D, G), phenotype(A, H) )
%   | | | then return 0.5000482183399266;  // std dev = 0.802, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.5640972146957709;  // std dev = 0.197, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( complex(A, K), complex(I, K) )
%   | | | then return 0.09404976731876244;  // std dev = 2.654, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0.25306217565140027;  // std dev = 5.887, 142.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=73 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.3717851704106518;  // std dev = 4.578, 90.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=57 */
%   | | | else return 0.2938092792605774;  // std dev = 6.388, 165.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=92 */
%   else return -0.11231637819360656;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3861491771820665;  // std dev = 0.986, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.6463281925831946;  // std dev = 1.499, 83.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=81 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.27532019580161016;  // std dev = 0.548, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.3400402065290079;  // std dev = 0.067, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(H, I) )
%   | | | then return 0.41659438351674705;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.669141067846785;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.21055664164022136;  // std dev = 7.477, 227.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=123 */
%   | | | else return 0.343520313414658;  // std dev = 3.208, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   else return -0.10159632948783652;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F), phenotype(A, G) )
%   | | | then return 0.3392023724718042;  // std dev = 0.006, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3206749770891745;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.37478145149252556;  // std dev = 0.699, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5290573802059656;  // std dev = 0.136, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.12990105784689338;  // std dev = 0.055, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.21933367813047824;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.12835472749919255;  // std dev = 7.369, 265.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=135 */
%   | | | else return 0.24025369068671806;  // std dev = 5.700, 157.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=99 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( enzyme(D, F), phenotype(D, G) )
%   | | | then return 0.19090876357660994;  // std dev = 0.659, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.31310949908178776;  // std dev = 0.444, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.12529772426202251;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.31982285824114715;  // std dev = 2.276, 39.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=30 */
%   | | | else return 0.06915169038706102;  // std dev = 6.707, 228.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=105 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.27678726266337295;  // std dev = 2.355, 38.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=28 */
%   | | | else return 0.14777700603478944;  // std dev = 5.154, 121.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=71 */
%   else if ( interaction(M, A) )
%   | then return -0.08518475138839678;  // std dev = 6.11e-09, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | else return -0.08518475138839691;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20547431664503674;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.09035155908270029;  // std dev = 1.154, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.20904894019442075;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.339454275788862;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( enzyme(G, H), enzyme(A, H) )
%   | | | then return -0.16248564378000535;  // std dev = 0.804, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.05198971882554614;  // std dev = 3.476, 78.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=37 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.13116094915115356;  // std dev = 4.226, 94.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=53 */
%   | | | else return 0.06737944305644548;  // std dev = 7.634, 273.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=143 */
%   else return -0.07877675473109141;  // std dev = 4.47e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), location(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.1159958189550097;  // std dev = 0.876, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.3967624520094977;  // std dev = 1.312, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3183598134036358;  // std dev = 0.834, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.0860364475634078;  // std dev = 4.287, 92.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=52 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.2669446811864284;  // std dev = 2.129, 60.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=55 */
%   | | | else return 3.421475116786154E-4;  // std dev = 6.480, 210.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=95 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.31617227260641273;  // std dev = 0.948, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.134995099053643;  // std dev = 3.104, 49.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=32 */
%   else return -0.0732462257633372;  // std dev = 1.86e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.33175777589586203;  // std dev = 4.418, 263.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=239 */
%   | | | else return -0.2909612058266105;  // std dev = 3.824, 156.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=24 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.34663288234259365;  // std dev = 0.328, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.48693684156208916;  // std dev = 0.438, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), phenotype(H, K) )
%   | | | then return -0.05141706447532926;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.27169719403771225;  // std dev = 1.253, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0.4678182577902648;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06842697784420318;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.10612695900228325;  // std dev = 0.029, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.13356332286676612;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, E), enzyme(D, F) )
%   | | | then return -0.1709741970693708;  // std dev = 0.945, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.010699574691902395;  // std dev = 2.843, 79.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=37 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( enzyme(A, I), interaction(G, G) )
%   | | | then return -0.04025098060542839;  // std dev = 2.170, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.0898483852635582;  // std dev = 6.264, 284.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=175 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.12397636619242774;  // std dev = 1.736, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | | else return -0.07714690589506917;  // std dev = 2.699, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   else return -0.06419184008202572;  // std dev = 8.84e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
Inference time using transfer learning 4.508242845535278
Refined model CLL: -0.224583


******************************************
Best model found
******************************************
Results 

CLL : -0.209659 

AUC ROC : 0.987173 

AUC PR : 0.484051 

Precision : 0.330544 

Recall : 0.858696 

F1 : 0.477341 

Total Learning Time : 37.256197690963745 

Total Inference Time : 32.22330713272095 

Total revision time: 106.27619338035583
Best scored revision CLL: -0.224583


Results 

CLL : -0.209659 

AUC ROC : 0.987173 

AUC PR : 0.484051 

Precision : 0.330544 

Recall : 0.858696 

F1 : 0.477341 

Total Learning Time : 106.28607439994812 

Total Inference Time : 32.22330713272095 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 15.683215618133545
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4465065234570963;  // std dev = 0.492, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.40465868823981166;  // std dev = 7.572, 241.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=147 */
%   | else return 0.37589676321232646;  // std dev = 7.547, 234.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283922;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3296839320989372;  // std dev = 0.489, 467.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360633;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5374066362060455;  // std dev = 5.399, 284.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=251 */
%   | else return -0.2058162121839874;  // std dev = 5.226, 226.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | | else return -0.10159632948783653;  // std dev = 0.000, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17423577276644284;  // std dev = 7.190, 258.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=147 */
%   | else return 0.175966035943814;  // std dev = 6.401, 232.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926049;  // std dev = 1.06e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15594710175841842;  // std dev = 8.630, 406.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=243 */
%   | | else return 0.04176435646076437;  // std dev = 3.880, 84.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.30e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else return -0.08518475138839678;  // std dev = 6.66e-08, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08953225269652788;  // std dev = 0.433, 501.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.82e-08, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else return -0.07877675473109148;  // std dev = 8.16e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10429976698012355;  // std dev = 8.578, 397.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=243 */
%   | else return -0.06822315755643998;  // std dev = 4.179, 106.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 2.08e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0743526116805189;  // std dev = 9.282, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03307231036578329;  // std dev = 9.601, 504.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
Inference time using transfer learning 2.9409871101379395
Parameter learned model CLL:-0.267296 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 198, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.572, 94, 147], 'true,false': [7.547, 98, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 344, 0], 'false,false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 184, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.399, 33, 251], 'true,false': [5.226, 194, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 197, 0], 'false,false,false,false': [0.0, 194, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.19, 111, 147], 'true,false': [6.401, 96, 136], 'false,true': [0.0, 0, 0], 'false,false': [1.06e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.63, 163, 243], 'true,true,false': [3.88, 44, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 168, 0], 'false,false,false': [6.66e-08, 156, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.433, 218, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.82e-08, 185, 0], 'false,false,false': [8.16e-08, 178, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.578, 154, 243], 'true,false': [4.179, 66, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.282, 198, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.601, 221, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 362, 0]}]
{'': [0.24219293657963395, 1.848371305862423e-16], 'false': [nan, 1.848371305862423e-16]}
{'': [0.2408243767313024, -1.2453295302673713e-16], 'true': [0.23790912690897215, 0.24340711520198768], 'false': [nan, -1.2453295302673713e-16], 'false,false': [nan, -1.2453295302673713e-16], 'false,false,false': [-1.1876804449478418e-16, -1.6326809185664067e-17]}
{'': [0.23871980343919444, -2.6053233644537006e-17], 'false': [nan, -2.6053233644537006e-17], 'false,false': [nan, -2.6053233644537006e-17]}
{'': [0.24699762057409916, 1.0676313484886416e-16], 'true': [0.1026199655395614, 0.1208279923106156], 'false': [nan, 1.0676313484886416e-16], 'false,false': [nan, 1.0676313484886416e-16], 'false,false,false': [-9.017039793909901e-17, -9.156478553609538e-17]}
{'': [0.18913021450973605, 1.1260381674260848e-16], 'true': [0.20037216066255448, 0.17662681874821295], 'false': [nan, 1.1260381674260848e-16]}
{'': [0.18454735063673916, 3.8378079863585656e-17], 'true': [0.18454735063673916, nan], 'true,true': [0.1834226727740496, 0.17918062848580937], 'false': [nan, 3.8378079863585656e-17], 'false,false': [3.172065784643304e-17, 2.846725704167068e-17]}
{'': [0.1877776073700092, 3.6701587590914267e-17], 'true': [0.1877776073700092, nan], 'false': [nan, 3.6701587590914267e-17], 'false,false': [4.200843876960052e-17, 3.742324802107269e-17]}
{'': [0.1859631552967844, 4.518349518823312e-18], 'true': [0.18534559010539758, 0.16478431983686012], 'false': [nan, 4.518349518823312e-18], 'false,false': [nan, 4.518349518823312e-18]}
{'': [0.1791070799839666, -9.287738322348955e-17], 'true': [0.1791070799839666, nan], 'false': [nan, -9.287738322348955e-17], 'false,false': [nan, -9.287738322348955e-17]}
{'': [0.18291127766231843, 7.973977524932064e-17], 'true': [0.18291127766231843, nan], 'false': [nan, 7.973977524932064e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 48.347941160202026
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.3337586911970735;  // std dev = 6.396, 164.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=78 */
%   | | | else return 0.4107805140468777;  // std dev = 8.109, 266.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=147 */
%   else return -0.1418510649004876;  // std dev = 2.02e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(A, D) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.052806745544287846;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7301844487851764;  // std dev = 0.139, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7857102348936462;  // std dev = 1.017, 95.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=94 */
%   | | | else return -0.19328935163448746;  // std dev = 0.047, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.28818865119784975;  // std dev = 8.065, 261.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=127 */
%   | | | else return 0.4311009539040529;  // std dev = 2.737, 32.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=20 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return 0.5632759626868986;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1139466991383112;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.5794510876136361;  // std dev = 0.213, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4943438700389297;  // std dev = 0.910, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.352680434462248;  // std dev = 8.689, 373.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=230 */
%   | | | else return -0.21952280305679767;  // std dev = 0.341, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.3446224610890155;  // std dev = 1.537, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.7393699002092127;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.11231637819360632;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.4112689762332844;  // std dev = 0.007, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.4702730237743915;  // std dev = 0.182, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return 0.43038129443797457;  // std dev = 0.003, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.231233977802449;  // std dev = 1.244, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.24848408012584855;  // std dev = 0.283, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.19341376010119837;  // std dev = 4.940, 128.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | | else if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.1440339449888832;  // std dev = 2.472, 47.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | else return 0.2488323089221823;  // std dev = 7.576, 271.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=154 */
%   else return -0.10159632948783609;  // std dev = 9.03e-09, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.32383305518113176;  // std dev = 0.141, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.11502263673579508;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.34250833560666216;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4300765623681818;  // std dev = 0.232, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.18343698710515052;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3051944088639279;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.09756881037380803;  // std dev = 5.750, 179.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=78 */
%   | | | else return 0.19415168470419827;  // std dev = 7.455, 282.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=164 */
%   else return -0.09269127618926049;  // std dev = 1.06e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.4271213651047539;  // std dev = 4.174, 260.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=239 */
%   | | | else return -0.19711455268884975;  // std dev = 4.371, 154.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=30 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.1607973349090126;  // std dev = 0.192, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.2900897049421864;  // std dev = 0.114, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2761419630067367;  // std dev = 0.066, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.07139984637705914;  // std dev = 2.044, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.04095572008742481;  // std dev = 1.386, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   else if ( interaction(A, J) )
%   | then return -0.08518475138839678;  // std dev = 5.59e-09, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else return -0.08518475138839678;  // std dev = 5.59e-09, 173.000 (wgt'ed) examples reached here.  /* #neg=173 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(D, E) )
%   | | then if ( interaction(A, F), interaction(F, E) )
%   | | | then return 0.3264274208379342;  // std dev = 1.462, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.026763583008851573;  // std dev = 0.789, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, G), enzyme(E, G) )
%   | | | then return -0.1221322677069723;  // std dev = 1.477, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.06835415471727652;  // std dev = 6.533, 316.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=161 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( enzyme(A, J), complex(H, K) )
%   | | | then return 0.02049639584967051;  // std dev = 1.811, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.31318877879475293;  // std dev = 0.674, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L), interaction(M, A) )
%   | | | then return 0.052917502197819925;  // std dev = 1.219, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.24134286487240234;  // std dev = 3.004, 56.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=37 */
%   else return -0.07877675473109143;  // std dev = 6.32e-09, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.14358691545662375;  // std dev = 0.087, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.05693105955938993;  // std dev = 2.040, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.21000102122139125;  // std dev = 1.348, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return -6.531676094817343E-5;  // std dev = 2.375, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.18345932489032474;  // std dev = 2.099, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | | else return 0.0764776646766001;  // std dev = 6.554, 310.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=169 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3367295047193885;  // std dev = 1.159, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.167823099640656;  // std dev = 1.623, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   else return -0.0732462257633377;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.12594300152918148;  // std dev = 0.082, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.17112636730655997;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, F), interaction(G, A) )
%   | | | then return 0.195182681720588;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2847830238190284;  // std dev = 0.200, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.11256731663983266;  // std dev = 7.221, 363.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=230 */
%   | | | else return -0.2281204861537198;  // std dev = 0.452, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04094180253348201;  // std dev = 1.706, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.1522904330776435;  // std dev = 1.644, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else return -0.06842697784420322;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.06243534010636044;  // std dev = 0.993, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.3119981197704457;  // std dev = 0.523, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.27424525857911125;  // std dev = 0.954, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | | else return 0.060010819123687;  // std dev = 6.134, 298.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=171 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.20388441478643018;  // std dev = 2.923, 64.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=49 */
%   | | | else return -0.23700151669373337;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.18046567025846438;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.312996060489898;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else return -0.06419184008202564;  // std dev = 9.50e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
Inference time using transfer learning 4.450735807418823
Refined model CLL: -0.204536


******************************************
Best model found
******************************************
Results 

CLL : -0.199619 

AUC ROC : 0.989159 

AUC PR : 0.398057 

Precision : 0.156648 

Recall : 1.0 

F1 : 0.270866 

Total Learning Time : 48.347941160202026 

Total Inference Time : 42.6669659614563 

Total revision time: 145.8127682209015
Best scored revision CLL: -0.204536


Results 

CLL : -0.199619 

AUC ROC : 0.989159 

AUC PR : 0.398057 

Precision : 0.156648 

Recall : 1.0 

F1 : 0.270866 

Total Learning Time : 145.82264924049377 

Total Inference Time : 42.6669659614563 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.363012552261353
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4132670453357284;  // std dev = 0.497, 508.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3219556876192238;  // std dev = 8.609, 297.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=155 */
%   | else return 0.3747307992178653;  // std dev = 7.350, 221.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3291901258630281;  // std dev = 0.492, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360628;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.592781519956319;  // std dev = 4.306, 260.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=240 */
%   | else return -0.14254470251124876;  // std dev = 5.877, 227.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783648;  // std dev = 0.000, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.251813485513849;  // std dev = 6.840, 246.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=155 */
%   | else return 0.13930836359134813;  // std dev = 6.486, 230.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892605;  // std dev = 1.05e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1605228611673916;  // std dev = 8.529, 398.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=237 */
%   | | else return 0.11584942300958885;  // std dev = 3.787, 80.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.43e-08, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | else return -0.08518475138839678;  // std dev = 6.32e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10816839346030399;  // std dev = 0.428, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.82e-08, 186.000 (wgt'ed) examples reached here.  /* #neg=186 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09492449711069532;  // std dev = 8.554, 397.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=237 */
%   | else return 0.07567826465727526;  // std dev = 3.688, 78.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 1.32e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09982901490103677;  // std dev = 8.916, 448.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.015023346150177093;  // std dev = 9.765, 502.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202573;  // std dev = 8.79e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
Inference time using transfer learning 6.604656219482422
Parameter learned model CLL:-0.275245 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 226, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.609, 142, 155], 'true,false': [7.35, 94, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 322, 0], 'false,false,false,false': [0.0, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 196, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 388, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.306, 20, 240], 'true,false': [5.877, 185, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 162, 0], 'false,false,false,false': [0.0, 166, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.84, 91, 155], 'true,false': [6.486, 103, 127], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.529, 161, 237], 'true,true,false': [3.787, 35, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.43e-08, 195, 0], 'false,false,false': [6.32e-08, 150, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 203, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.82e-08, 186, 0], 'false,false,false': [8.43e-08, 168, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.554, 160, 237], 'true,false': [3.688, 33, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.32e-09, 357, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.916, 166, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.765, 220, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.79e-09, 354, 0]}]
{'': [0.2469619939239907, 1.4251573496620922e-16], 'false': [nan, 1.4251573496620922e-16]}
{'': [0.2480285028547591, -1.2382112017267162e-16], 'true': [0.24952102393180056, 0.24442578980774524], 'false': [nan, -1.2382112017267162e-16], 'false,false': [nan, -1.2382112017267162e-16], 'false,false,false': [-1.130910410177178e-16, -3.2653618371328135e-17]}
{'': [0.24167463693366123, -2.2891196384023845e-17], 'false': [nan, -2.2891196384023845e-17], 'false,false': [nan, -2.2891196384023845e-17]}
{'': [0.24355279047711076, -1.624716621402668e-17], 'true': [0.07132266191434296, 0.15214889023461065], 'false': [nan, -1.624716621402668e-17], 'false,false': [nan, -1.624716621402668e-17], 'false,false,false': [-6.853228547068867e-17, -7.35689956076911e-17]}
{'': [0.18982831514132506, 1.1070779169066716e-16], 'true': [0.1902018877853444, 0.18288732415262765], 'false': [nan, 1.1070779169066716e-16]}
{'': [0.18244850130690626, 3.99036681314549e-17], 'true': [0.18244850130690626, nan], 'true,true': [0.182757204718653, 0.17925099681551276], 'false': [nan, 3.99036681314549e-17], 'false,false': [3.643808901333847e-17, 2.6645352591003756e-17]}
{'': [0.18356999042458055, 3.261672162740573e-17], 'true': [0.18356999042458055, nan], 'false': [nan, 3.261672162740573e-17], 'false,false': [4.178258694825858e-17, 4.229421046191072e-17]}
{'': [0.18271193367990904, 1.865921049790179e-18], 'true': [0.18429064705196668, 0.174367096397447], 'false': [nan, 1.865921049790179e-18], 'false,false': [nan, 1.865921049790179e-18]}
{'': [0.1774551018233041, -9.215778867362024e-17], 'true': [0.1774551018233041, nan], 'false': [nan, -9.215778867362024e-17], 'false,false': [nan, -9.215778867362024e-17]}
{'': [0.18993809287847785, 7.715109154174817e-17], 'true': [0.18993809287847785, nan], 'false': [nan, 7.715109154174817e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 33.006174087524414
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.8581489350995118;  // std dev = 1.79e-07, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return 0.21231560176617903;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.39902943824416637;  // std dev = 6.284, 159.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=86 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.7867203636709409;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4864211864084099;  // std dev = 6.679, 191.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=120 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.7398142398531716;  // std dev = 0.187, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.7208922198547295;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.4770844842691458;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.41198707042106353;  // std dev = 1.071, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18368603922739146;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.3367114151804907;  // std dev = 9.964, 400.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=216 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.46070481103051236;  // std dev = 0.955, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.5645756580006719;  // std dev = 0.143, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return 0.6820453588176921;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6061171171738934;  // std dev = 0.150, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.11255134397786888;  // std dev = 2.710, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.2244361299280551;  // std dev = 3.216, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5709632690692562;  // std dev = 0.132, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.29053068724961956;  // std dev = 9.043, 333.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=184 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(D, F), complex(F, E) )
%   | | | then return 0.4197297031122919;  // std dev = 0.054, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.45516892360544975;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.41804554737439986;  // std dev = 0.034, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.20213052870321205;  // std dev = 0.823, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, H), phenotype(H, J) )
%   | | | then return 0.317400551233397;  // std dev = 2.552, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.1378156959451712;  // std dev = 5.451, 124.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=55 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18662283614860378;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.24838206522388137;  // std dev = 8.092, 278.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=164 */
%   else return -0.10159632948783633;  // std dev = 5.27e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(A, A) )
%   | | | then return 0.34300988215864814;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.31977288111535973;  // std dev = 0.101, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(G, D), interaction(A, H) )
%   | | | then return 0.4966349617177122;  // std dev = 0.071, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.3900398263488502;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.546148994464608;  // std dev = 1.918, 55.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=51 */
%   | | | else return -0.3647498079447342;  // std dev = 0.326, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.06341599707071886;  // std dev = 4.446, 94.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=40 */
%   | | | else return 0.14036139945145734;  // std dev = 8.200, 275.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=145 */
%   else return -0.09269127618926044;  // std dev = 1.05e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.4375244941436237;  // std dev = 1.557, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return 0.05969074240795887;  // std dev = 1.598, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return -0.023451853654371795;  // std dev = 4.600, 118.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=44 */
%   | | | else return 0.09862068851590437;  // std dev = 7.367, 241.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=128 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.34546035995662566;  // std dev = 2.022, 28.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=22 */
%   | | | else return -0.33257415294511194;  // std dev = 0.227, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.6094038978062672;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.295741065253928;  // std dev = 1.904, 22.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   else return -0.08518475138839678;  // std dev = 6.38e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.17249662105149083;  // std dev = 0.987, 32.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=30 */
%   | | | else return 0.4190874256003352;  // std dev = 1.307, 40.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=38 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.28933452314981595;  // std dev = 0.613, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.0923237382680436;  // std dev = 7.438, 257.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=138 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), interaction(A, I) )
%   | | | then return -0.0029458554143779823;  // std dev = 2.513, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | | else return 0.14869986279927022;  // std dev = 2.358, 28.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.39645663200860415;  // std dev = 1.150, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.1376323728566219;  // std dev = 3.129, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   else return -0.07877675473109143;  // std dev = 5.82e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(F, B) )
%   | | | then return 0.303712784195856;  // std dev = 0.767, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return -0.01925395909882835;  // std dev = 4.714, 113.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=48 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.33906320121742806;  // std dev = 0.981, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.13791444711949988;  // std dev = 3.387, 64.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.15397159672897795;  // std dev = 0.004, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.22980478796667242;  // std dev = 0.183, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.07398954386453754;  // std dev = 3.044, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.02366412996729148;  // std dev = 6.818, 214.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=105 */
%   else return -0.07324622576333714;  // std dev = 3.36e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.1294868053752594;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.3791731309882111;  // std dev = 0.998, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(D, F), phenotype(A, G) )
%   | | | then return -0.04568107612818836;  // std dev = 0.876, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2100551556538764;  // std dev = 0.372, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.1680828662429068;  // std dev = 0.011, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.1581238958495694;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.0057458695103393695;  // std dev = 3.989, 100.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=49 */
%   | | | else return 0.07499833947901687;  // std dev = 8.423, 329.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=187 */
%   else return -0.06842697784420317;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.3432891674796405;  // std dev = 2.032, 149.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=148 */
%   | | | else return 0.010045501941831184;  // std dev = 7.005, 248.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=121 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.23684767767135936;  // std dev = 0.194, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.46044651206592735;  // std dev = 0.568, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.47411052593440833;  // std dev = 0.400, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14524216680572635;  // std dev = 0.783, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07780361003907532;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( complex(A, L) )
%   | then return -0.06419184008202626;  // std dev = 0.000, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | else return -0.06419184008202626;  // std dev = 1.32e-09, 243.000 (wgt'ed) examples reached here.  /* #neg=243 */
Inference time using transfer learning 7.140556812286377
Refined model CLL: -0.238172


******************************************
Best model found
******************************************
Results 

CLL : -0.226483 

AUC ROC : 0.96227 

AUC PR : 0.213121 

Precision : 0.074236 

Recall : 0.781609 

F1 : 0.135593 

Total Learning Time : 33.006174087524414 

Total Inference Time : 35.70302867889404 

Total revision time: 105.43566727638245
Best scored revision CLL: -0.238172


Results 

CLL : -0.226483 

AUC ROC : 0.96227 

AUC PR : 0.213121 

Precision : 0.074236 

Recall : 0.781609 

F1 : 0.135593 

Total Learning Time : 105.4459593296051 

Total Inference Time : 35.70302867889404 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 12.418689727783203
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4431378975719142;  // std dev = 0.493, 453.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048788;  // std dev = 4.17e-09, 294.000 (wgt'ed) examples reached here.  /* #neg=294 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.4234543620247723;  // std dev = 7.393, 234.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=147 */
%   | else return 0.38231391043655916;  // std dev = 6.980, 201.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839194;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | | | else return -0.12544463852839122;  // std dev = 5.27e-08, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2734627717500917;  // std dev = 0.497, 480.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360665;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5818547998166759;  // std dev = 4.282, 243.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=223 */
%   | else return -0.1482131960402505;  // std dev = 5.812, 222.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878365;  // std dev = 0.000, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | | else return -0.10159632948783642;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17286955776960958;  // std dev = 7.291, 264.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=147 */
%   | else return 0.1751243921833904;  // std dev = 5.947, 204.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.01e-08, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15426859258534356;  // std dev = 8.649, 403.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=237 */
%   | | else return 0.07142134875435777;  // std dev = 3.103, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.60e-08, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else return -0.08518475138839678;  // std dev = 6.32e-08, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09929117670952592;  // std dev = 0.431, 468.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.16e-08, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else return -0.0787767547310915;  // std dev = 8.16e-08, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09400102200275645;  // std dev = 8.626, 402.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=237 */
%   | else return -0.048618288628577366;  // std dev = 3.430, 67.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=28 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 2.95e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.052200943629375565;  // std dev = 9.348, 473.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0610768292497816;  // std dev = 9.075, 454.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.79e-09, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
Inference time using transfer learning 5.937930345535278
Parameter learned model CLL:-0.267491 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 188, 265], 'false,true': [0.0, 0, 0], 'false,false': [4.17e-09, 294, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.393, 87, 147], 'true,false': [6.98, 83, 118], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 279, 0], 'false,false,false,false': [5.27e-08, 52, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 215, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 325, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.282, 20, 223], 'true,false': [5.812, 180, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 190, 0], 'false,false,false,false': [0.0, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.291, 117, 147], 'true,false': [5.947, 86, 118], 'false,true': [0.0, 0, 0], 'false,false': [1.01e-08, 310, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.649, 166, 237], 'true,true,false': [3.103, 28, 28], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.6e-08, 192, 0], 'false,false,false': [6.32e-08, 148, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.431, 203, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.16e-08, 185, 0], 'false,false,false': [8.16e-08, 150, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.626, 165, 237], 'true,false': [3.43, 39, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.95e-09, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.348, 208, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.075, 189, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.79e-09, 326, 0]}]
{'': [0.24277687625786712, 1.5105075164968118e-17], 'false': [nan, 1.5105075164968118e-17]}
{'': [0.23807636411678842, -9.391614709820055e-17], 'true': [0.23356344510190552, 0.24241974208559147], 'false': [nan, -9.391614709820055e-17], 'false,false': [nan, -9.391614709820055e-17], 'false,false,false': [-7.640244470538712e-17, 5.337610695313253e-17]}
{'': [0.2473750883602456, -4.099285014000578e-17], 'false': [nan, -4.099285014000578e-17], 'false,false': [nan, -4.099285014000578e-17]}
{'': [0.2450471957636002, -6.6880905097900996e-18], 'true': [0.0754532011290763, 0.1521487586982671], 'false': [nan, -6.6880905097900996e-18], 'false,false': [nan, -6.6880905097900996e-18], 'false,false,false': [-9.115515360080233e-17, -5.942038723345908e-17]}
{'': [0.18916110462748503, 1.017107545140466e-16], 'true': [0.20135954925199676, 0.1733720141178441], 'false': [nan, 1.017107545140466e-16]}
{'': [0.18469009532611652, 3.918434204559376e-17], 'true': [0.18469009532611652, nan], 'true,true': [0.18562869202751509, 0.17190928253264165], 'false': [nan, 3.918434204559376e-17], 'false,false': [3.0068540250264654e-17, 2.700542492331462e-17]}
{'': [0.18561216841941844, 7.95383659432948e-18], 'true': [0.18561216841941844, nan], 'false': [nan, 7.95383659432948e-18], 'false,false': [3.600723323108616e-17, 4.4408920985006264e-17]}
{'': [0.18623582592443821, 8.907233435388076e-18], 'true': [0.18509744475182324, 0.17563159773302237], 'false': [nan, 8.907233435388076e-18], 'false,false': [nan, 8.907233435388076e-18]}
{'': [0.18474801650789588, -9.806970050855549e-17], 'true': [0.18474801650789588, nan], 'false': [nan, -9.806970050855549e-17], 'false,false': [nan, -9.806970050855549e-17]}
{'': [0.18140488653527329, 6.130065780138901e-17], 'true': [0.18140488653527329, nan], 'false': [nan, 6.130065780138901e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 39.36301398277283
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then return 0.8581489350995117;  // std dev = 1.98e-07, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7581489350995122;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return 0.20950028645086372;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.3438632208137989;  // std dev = 5.121, 105.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=51 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.4218554988060728;  // std dev = 7.981, 259.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=146 */
%   else return -0.14185106490048763;  // std dev = 2.00e-07, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.7288140432238016;  // std dev = 0.145, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7342736123238718;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, G), location(G, H) )
%   | | | then return 0.0120604053029904;  // std dev = 1.986, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.3279494868348732;  // std dev = 2.694, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.4588154708230474;  // std dev = 3.939, 70.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=46 */
%   | | | else return 0.38698364727097095;  // std dev = 8.048, 269.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=158 */
%   else if ( interaction(K, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.3861670838218856;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(D, G), interaction(H, A) )
%   | | | then return 0.5540823877653066;  // std dev = 0.024, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.6061204317399453;  // std dev = 0.153, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7036256315849141;  // std dev = 0.982, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.15662573294555326;  // std dev = 5.862, 147.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=60 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.1954078469708095;  // std dev = 3.389, 47.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=22 */
%   | | | else return 0.3233755587864043;  // std dev = 7.066, 211.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=126 */
%   else return -0.11231637819360676;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.42232528219469057;  // std dev = 0.078, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.4767571647909275;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.19053441534559087;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4623808062625831;  // std dev = 0.149, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(A, K), enzyme(K, I) )
%   | | | then return 0.03894547874299969;  // std dev = 1.164, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3237006771338903;  // std dev = 4.995, 112.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=73 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2744764673313644;  // std dev = 4.742, 97.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   | | | else return 0.20883869032546568;  // std dev = 6.414, 170.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=91 */
%   else return -0.10159632948783663;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.46392304419556796;  // std dev = 0.676, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 3.1346266421267935E-4;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.33111310048830567;  // std dev = 0.402, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.16737614058507266;  // std dev = 5.853, 148.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=85 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.34071065674154455;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09126845799182458;  // std dev = 3.429, 57.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=27 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.18477468365320798;  // std dev = 3.617, 57.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | else return 0.24993071954572338;  // std dev = 5.431, 129.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=83 */
%   else return -0.09269127618926043;  // std dev = 1.06e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(F, G), interaction(H, D) )
%   | | | then return 0.29301633597188087;  // std dev = 0.360, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.08866338622928255;  // std dev = 1.014, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( complex(D, I), interaction(J, D) )
%   | | | then return 0.42232438692604146;  // std dev = 0.138, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4749459094840678;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( complex(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.5386042617524417;  // std dev = 0.702, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return -0.3586176288680711;  // std dev = 0.594, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, N), interaction(N, A) )
%   | | | then return 0.0184240536000048;  // std dev = 2.446, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.10958338989730584;  // std dev = 8.348, 290.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=159 */
%   else return -0.08518475138839678;  // std dev = 5.96e-09, 296.000 (wgt'ed) examples reached here.  /* #neg=296 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( complex(D, F), interaction(D, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.27603075069157673;  // std dev = 0.840, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return 0.050202602580727826;  // std dev = 4.428, 106.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=49 */
%   | | else if ( interaction(D, H), complex(H, I) )
%   | | | then return 0.4377307821795146;  // std dev = 0.859, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.18969125806942716;  // std dev = 3.713, 80.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=55 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.40391026327696644;  // std dev = 1.857, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | | else return -0.42544520924242746;  // std dev = 0.254, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.010821015678617162;  // std dev = 3.852, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | else return 0.066412065066494;  // std dev = 3.886, 62.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=34 */
%   else return -0.07877675473109143;  // std dev = 1.61e-09, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3671838761900777;  // std dev = 3.435, 226.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=216 */
%   | | | else return -0.1767005845454707;  // std dev = 4.906, 157.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | | else if ( interaction(G, A), complex(A, H) )
%   | | | then return -0.3275513492914115;  // std dev = 0.273, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.4358129169644309;  // std dev = 0.578, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.05025073451588158;  // std dev = 0.665, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.5461323487373705;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.520284094459948;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.07324622576333704;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else return -0.07324622576333704;  // std dev = 4.75e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), phenotype(D, G) )
%   | | | then return 0.08616820474254308;  // std dev = 1.423, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.2509628401238896;  // std dev = 0.989, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else if ( phenotype(D, H), location(D, I) )
%   | | | then return 0.056698764657163545;  // std dev = 4.989, 191.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=109 */
%   | | | else return -0.01960234897621745;  // std dev = 4.261, 126.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=60 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.24469068811002745;  // std dev = 3.127, 56.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=39 */
%   | | | else return -0.33374394542362584;  // std dev = 0.234, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.09701957727271637;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.28196551665632413;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else return -0.06842697784420315;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.15703426351292804;  // std dev = 0.597, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.05458133546448985;  // std dev = 2.983, 76.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=34 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.15029288401048496;  // std dev = 1.469, 49.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=45 */
%   | | | else return 0.02362538597865081;  // std dev = 6.046, 248.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=135 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.1841315071837331;  // std dev = 3.230, 55.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=39 */
%   | | | else return -0.26410167231359083;  // std dev = 0.313, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.4354229289399896;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.06419184008202612;  // std dev = 1.32e-09, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else return -0.06419184008202586;  // std dev = 7.62e-09, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
Inference time using transfer learning 7.730199575424194
Refined model CLL: -0.22453


******************************************
Best model found
******************************************
Results 

CLL : -0.227696 

AUC ROC : 0.982778 

AUC PR : 0.223358 

Precision : 0.085499 

Recall : 0.980769 

F1 : 0.157286 

Total Learning Time : 39.36301398277283 

Total Inference Time : 32.76972579956055 

Total revision time: 112.93226552009583
Best scored revision CLL: -0.22453


Results 

CLL : -0.227696 

AUC ROC : 0.982778 

AUC PR : 0.223358 

Precision : 0.085499 

Recall : 0.980769 

F1 : 0.157286 

Total Learning Time : 112.94255757331848 

Total Inference Time : 32.76972579956055 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.815703392028809
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4143738346979015;  // std dev = 0.497, 498.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.30e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.37002881384385544;  // std dev = 10.408, 442.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=252 */
%   | else return 0.440918708263165;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2751425966277528;  // std dev = 0.498, 511.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360649;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.546060807835349;  // std dev = 5.746, 290.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=252 */
%   | else return -0.2005879359255309;  // std dev = 4.610, 199.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783665;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.20081499771660075;  // std dev = 8.704, 424.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=252 */
%   | else return 0.362672227584894;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926068;  // std dev = 9.13e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1377234188308796;  // std dev = 9.355, 474.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=271 */
%   | | else return 0.11013719962783426;  // std dev = 1.717, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | | else return -0.08518475138839686;  // std dev = 2.11e-08, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12904331680869205;  // std dev = 0.425, 464.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 5.16e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.11161997471120327;  // std dev = 8.789, 441.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=271 */
%   | else return 0.13759818970671284;  // std dev = 1.559, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.61e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05592345202631508;  // std dev = 9.349, 476.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.018634963702728154;  // std dev = 9.678, 498.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.59e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
Inference time using transfer learning 2.8777174949645996
Parameter learned model CLL:-0.270135 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.497, 221, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.3e-08, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.408, 190, 252], 'true,false': [2.996, 14, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 335, 0], 'false,false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 234, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.746, 38, 252], 'true,false': [4.61, 174, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 313, 0], 'false,false,false,false': [0.0, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.704, 172, 252], 'true,false': [2.924, 13, 25], 'false,true': [0.0, 0, 0], 'false,false': [9.13e-09, 373, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.355, 203, 271], 'true,true,false': [1.717, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 347, 0], 'false,false,false': [2.11e-08, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.425, 187, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 336, 0], 'false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.789, 170, 271], 'true,false': [1.559, 5, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 350, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.349, 199, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 368, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.678, 221, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.59e-09, 348, 0]}]
{'': [0.24683876066515348, 1.6882730291820563e-16], 'false': [nan, 1.6882730291820563e-16]}
{'': [0.2442416829111217, -1.2089095157029481e-16], 'true': [0.24508097704797177, 0.23011176857330687], 'false': [nan, -1.2089095157029481e-16], 'false,false': [nan, -1.2089095157029481e-16], 'false,false,false': [-1.166562700501657e-16, -6.661338147750939e-18]}
{'': [0.24800109160049597, -3.036507417778206e-17], 'false': [nan, -3.036507417778206e-17], 'false,false': [nan, -3.036507417778206e-17]}
{'': [0.2455245519343757, 1.9364355080671336e-17], 'true': [0.11386444708680594, 0.10677659773058139], 'false': [nan, 1.9364355080671336e-17], 'false,false': [nan, 1.9364355080671336e-17], 'false,false,false': [-4.823972247572565e-17, -1.7906822977825105e-18]}
{'': [0.18446347318468423, 8.334113857775973e-17], 'true': [0.17866948167191357, 0.22506925207756245], 'false': [nan, 8.334113857775973e-17]}
{'': [0.18578994853313172, 3.8915033852840536e-17], 'true': [0.18578994853313172, nan], 'true,true': [0.18464743977084036, 0.22670689037690156], 'false': [nan, 3.8915033852840536e-17], 'false,false': [3.839387981412645e-17, 1.0831444142684454e-17]}
{'': [0.1804912786059159, 2.813788381970094e-17], 'true': [0.1804912786059159, nan], 'false': [nan, 2.813788381970094e-17], 'false,false': [7.93016446160826e-18, 0.0]}
{'': [0.17629579412884724, 1.3322676295501878e-17], 'true': [0.17516607469632606, 0.22092882931227742], 'false': [nan, 1.3322676295501878e-17], 'false,false': [nan, 1.3322676295501878e-17]}
{'': [0.18361547121957358, -1.0317833544070748e-16], 'true': [0.18361547121957358, nan], 'false': [nan, -1.0317833544070748e-16], 'false,false': [nan, -1.0317833544070748e-16]}
{'': [0.18806900564093684, 7.337680909878908e-17], 'true': [0.18806900564093684, nan], 'false': [nan, 7.337680909878908e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 20.335371255874634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), interaction(A, F) )
%   | | then if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.8055173561521439;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6763307532813305;  // std dev = 2.860, 55.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=45 */
%   | | | else return 0.20143251718906338;  // std dev = 5.496, 134.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=46 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.43076304298332685;  // std dev = 7.680, 241.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=138 */
%   else return -0.14185106490048768;  // std dev = 1.71e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then return 0.4283277077303054;  // std dev = 1.170, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.7341874116704666;  // std dev = 0.115, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return 0.5828813688908896;  // std dev = 1.324, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1730037607805027;  // std dev = 0.075, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.28642763401786764;  // std dev = 4.574, 89.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=43 */
%   | | | else return 0.3757121878235292;  // std dev = 8.882, 330.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=191 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.5790658963701214;  // std dev = 0.057, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.7169982945181111;  // std dev = 0.289, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | else if ( complex(G, E), interaction(A, G) )
%   | | | then return -0.2098787045860827;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.27328722962435636;  // std dev = 0.137, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.4650864661963708;  // std dev = 1.141, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.644329190238728;  // std dev = 0.275, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.19344107786594564;  // std dev = 4.652, 92.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=41 */
%   | | | else return 0.2772728777664008;  // std dev = 7.886, 258.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=140 */
%   else return -0.11231637819360658;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.4170124766312202;  // std dev = 0.878, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.052739563341996386;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.4647103574366052;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5643053094404519;  // std dev = 0.146, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, J), location(A, K) )
%   | | | then return 0.04163430200995685;  // std dev = 2.412, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return 0.21857922249758202;  // std dev = 6.997, 224.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=121 */
%   | | else if ( interaction(L, A), location(A, M) )
%   | | | then return 0.24744588305907245;  // std dev = 5.270, 120.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=68 */
%   | | | else return 0.36278058046801953;  // std dev = 2.775, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   else return -0.10159632948783656;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return 0.16389961254829594;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3443423419754602;  // std dev = 0.182, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.42864214396227224;  // std dev = 0.228, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.4709569695893559;  // std dev = 0.209, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2635171173920545;  // std dev = 0.733, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.08889907366228157;  // std dev = 3.936, 92.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=40 */
%   | | | else return 0.18807799973071931;  // std dev = 8.540, 319.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=177 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926087;  // std dev = 0.000, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else return -0.09269127618926049;  // std dev = 1.05e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.2698555471687883;  // std dev = 0.135, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.020291289863552896;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(F, A), location(D, G) )
%   | | | then return 0.35315871794751136;  // std dev = 0.215, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.27310455578068876;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5371480613084764;  // std dev = 1.263, 83.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   | | | else return -0.3686290937870583;  // std dev = 0.630, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1760873473905871;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.11976927930049958;  // std dev = 7.794, 281.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=152 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.4120537960346492;  // std dev = 0.855, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | | else return 0.13866759028027922;  // std dev = 1.393, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return -0.20528272293704042;  // std dev = 0.207, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.31468752306012315;  // std dev = 0.608, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3131489251886515;  // std dev = 1.464, 37.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=34 */
%   | | | else return 0.0466401107550925;  // std dev = 5.005, 132.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=63 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2676196627640983;  // std dev = 0.256, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.039522985425096;  // std dev = 5.781, 146.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=72 */
%   else return -0.07877675473109141;  // std dev = 5.43e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( location(A, E), interaction(A, A) )
%   | | | then return 0.1713037281779784;  // std dev = 0.114, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.23771795800675413;  // std dev = 0.179, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.22480487388462933;  // std dev = 0.834, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.03781504939116054;  // std dev = 3.741, 87.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=45 */
%   | else if ( interaction(A, F), interaction(F, A) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return 0.11011509313184109;  // std dev = 1.340, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | else return -0.034006781851723754;  // std dev = 1.960, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.24180142110833333;  // std dev = 0.205, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.10278086007994666;  // std dev = 7.110, 298.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=171 */
%   else return -0.07324622576333713;  // std dev = 3.48e-09, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.281774858729453;  // std dev = 1.343, 53.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=51 */
%   | | | else return -0.028049954592963878;  // std dev = 1.099, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( interaction(A, H), interaction(H, D) )
%   | | | then return -0.1844953622919174;  // std dev = 1.358, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.06331987815551576;  // std dev = 6.279, 249.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=137 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( interaction(K, I), phenotype(K, L) )
%   | | | then return -0.016412820439752087;  // std dev = 2.310, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.2921875534114837;  // std dev = 0.941, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | else if ( interaction(M, A), enzyme(A, N) )
%   | | | then return 0.05643421614193649;  // std dev = 1.172, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return -0.020936216510347536;  // std dev = 4.091, 94.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=45 */
%   else return -0.06842697784420321;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( location(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.12645726981041688;  // std dev = 0.107, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.0023046140812332566;  // std dev = 2.821, 82.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=38 */
%   | | else return -0.159283241287189;  // std dev = 0.859, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(G, F), location(A, H) )
%   | | | then return 0.22620802729266246;  // std dev = 1.750, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.10314746030707535;  // std dev = 3.189, 62.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=37 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.21032734425531424;  // std dev = 0.193, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.051035283403747654;  // std dev = 6.641, 252.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=143 */
%   else if ( interaction(A, J) )
%   | then return -0.06419184008202625;  // std dev = 0.000, 161.000 (wgt'ed) examples reached here.  /* #neg=161 */
%   | else return -0.06419184008202625;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
Inference time using transfer learning 2.8542041778564453
Refined model CLL: -0.225599


******************************************
Best model found
******************************************
Results 

CLL : -0.222088 

AUC ROC : 0.967455 

AUC PR : 0.451755 

Precision : 0.056712 

Recall : 0.858696 

F1 : 0.106397 

Total Learning Time : 20.335371255874634 

Total Inference Time : 17.735692024230957 

Total revision time: 74.86172246932983
Best scored revision CLL: -0.225599


Results 

CLL : -0.222088 

AUC ROC : 0.967455 

AUC PR : 0.451755 

Precision : 0.056712 

Recall : 0.858696 

F1 : 0.106397 

Total Learning Time : 74.87201452255249 

Total Inference Time : 17.735692024230957 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.17771053314209
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4333521871320283;  // std dev = 0.494, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.33e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.36882245317040246;  // std dev = 7.932, 257.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=147 */
%   | else return 0.4178425835827831;  // std dev = 7.179, 219.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3010948765106658;  // std dev = 0.494, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360633;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5578977302842295;  // std dev = 5.102, 280.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=251 */
%   | else return -0.19323518036937892;  // std dev = 5.263, 222.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 195.000 (wgt'ed) examples reached here.  /* #neg=195 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20360738657848587;  // std dev = 7.034, 251.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=147 */
%   | else return 0.20449444907635245;  // std dev = 6.068, 218.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1408890645822405;  // std dev = 8.810, 418.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=243 */
%   | | else return 0.057059229304337544;  // std dev = 3.722, 80.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else return -0.08518475138839678;  // std dev = 8.02e-08, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11163047696842719;  // std dev = 0.424, 485.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.94e-08, 181.000 (wgt'ed) examples reached here.  /* #neg=181 */
%   | | else return -0.0787767547310915;  // std dev = 8.30e-08, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10175626982801626;  // std dev = 8.577, 398.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=243 */
%   | else return -0.019186929083134557;  // std dev = 3.935, 85.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333717;  // std dev = 2.79e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08438954811781077;  // std dev = 9.098, 465.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03209574626853612;  // std dev = 9.543, 494.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202565;  // std dev = 9.41e-09, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
Inference time using transfer learning 2.9548041820526123
Parameter learned model CLL:-0.272748 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 209, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.33e-08, 368, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.932, 110, 147], 'true,false': [7.179, 83, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 321, 0], 'false,false,false,false': [0.0, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 209, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.102, 29, 251], 'true,false': [5.263, 190, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 195, 0], 'false,false,false,false': [0.0, 168, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.034, 104, 147], 'true,false': [6.068, 82, 136], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.81, 175, 243], 'true,true,false': [3.722, 40, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 191, 0], 'false,false,false': [8.02e-08, 196, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.424, 202, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.94e-08, 181, 0], 'false,false,false': [8.3e-08, 174, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.577, 155, 243], 'true,false': [3.935, 45, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.79e-09, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.098, 182, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.543, 211, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.41e-09, 381, 0]}]
{'': [0.24434447088373615, 1.7860109526578606e-16], 'false': [nan, 1.7860109526578606e-16]}
{'': [0.2410626015111864, -1.2089095157029481e-16], 'true': [0.24481824100289576, 0.23535789495632226], 'false': [nan, -1.2089095157029481e-16], 'false,false': [nan, -1.2089095157029481e-16], 'false,false,false': [-1.134433495567138e-16, -2.2773805633336544e-17]}
{'': [0.2444266860602806, -2.598394312952494e-17], 'false': [nan, -2.598394312952494e-17], 'false,false': [nan, -2.598394312952494e-17]}
{'': [0.2462069859947841, 5.627576763940188e-17], 'true': [0.09296457909636666, 0.12479210805406953], 'false': [nan, 5.627576763940188e-17], 'false,false': [nan, 5.627576763940188e-17], 'false,false,false': [-9.109522253334617e-17, -7.533656238527848e-17]}
{'': [0.18399396384492253, 1.2064851365868752e-16], 'true': [0.19709507282928243, 0.16890923834050312], 'false': [nan, 1.2064851365868752e-16]}
{'': [0.1846249323150041, 3.901558949587113e-17], 'true': [0.1846249323150041, nan], 'true,true': [0.1856871123465055, 0.17317650659785006], 'false': [nan, 3.901558949587113e-17], 'false,false': [3.255104155969045e-17, 3.285353848380565e-17]}
{'': [0.1797756872336389, 3.002293249690564e-17], 'true': [0.1797756872336389, nan], 'false': [nan, 3.002293249690564e-17], 'false,false': [4.4163567830392966e-17, 3.9559670992390636e-17]}
{'': [0.18648530334250546, 8.318673959727397e-18], 'true': [0.1848284854853494, 0.18219000696854198], 'false': [nan, 8.318673959727397e-18], 'false,false': [nan, 8.318673959727397e-18]}
{'': [0.17801923989954388, -9.287738322348955e-17], 'true': [0.17801923989954388, nan], 'false': [nan, -9.287738322348955e-17], 'false,false': [nan, -9.287738322348955e-17]}
{'': [0.18436221285242285, 8.741913579725643e-17], 'true': [0.18436221285242285, nan], 'false': [nan, 8.741913579725643e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.311596870422363
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.47243464938522706;  // std dev = 4.073, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | | else return 0.3991325416568859;  // std dev = 9.533, 366.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=198 */
%   else return -0.14185106490048738;  // std dev = 2.87e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.7194734122109543;  // std dev = 5.96e-08, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.48110089381300514;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else return 0.7821287846519859;  // std dev = 0.144, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.7267858271949943;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return 0.252592236137934;  // std dev = 4.675, 89.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=40 */
%   | | | else return 0.39010500518630287;  // std dev = 8.699, 314.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=185 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return 0.5435250233372416;  // std dev = 0.845, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.7362549913166344;  // std dev = 0.295, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1558733362210288;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2607050891078754;  // std dev = 0.224, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(H, A) )
%   | | | then return 0.35536643674628465;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.6195369058897954;  // std dev = 0.274, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16705272960246553;  // std dev = 6.082, 153.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=67 */
%   | | | else return 0.27481098938790044;  // std dev = 6.174, 159.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=88 */
%   else return -0.11231637819360644;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.4293531502038891;  // std dev = 0.144, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.28849335292484285;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( enzyme(A, F), interaction(G, D) )
%   | | | then return 0.4032683093133076;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4931465190047221;  // std dev = 0.042, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5651546411405326;  // std dev = 1.010, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | | else return -0.20751723717942716;  // std dev = 0.110, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.11404291895945685;  // std dev = 4.212, 79.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=34 */
%   | | | else return 0.210138779960939;  // std dev = 7.490, 228.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=121 */
%   else return -0.10159632948783615;  // std dev = 8.33e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then if ( interaction(F, D), complex(F, E) )
%   | | | then return 0.3480513702599961;  // std dev = 0.145, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.38289159845924264;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(D, G), phenotype(D, H) )
%   | | | then return 0.09063452594381524;  // std dev = 1.360, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return 0.33085451754655865;  // std dev = 0.092, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.14657033584400928;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2312482708967013;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.20488489806417207;  // std dev = 6.182, 205.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=118 */
%   | | | else return 0.12511221483148227;  // std dev = 6.858, 249.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=123 */
%   else return -0.09269127618926079;  // std dev = 8.33e-09, 387.000 (wgt'ed) examples reached here.  /* #neg=387 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), complex(F, G) )
%   | | then if ( recursion_proteinclass(F, B), complex(A, G) )
%   | | | then return 0.3708751096510827;  // std dev = 0.319, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.02369403961632681;  // std dev = 3.470, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
%   | | else if ( enzyme(A, H), phenotype(D, I) )
%   | | | then return 0.3414805928356765;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0916470345000124;  // std dev = 2.427, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2737743138020722;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.38004739133689475;  // std dev = 0.258, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.12152753572185583;  // std dev = 5.815, 185.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=99 */
%   | | | else return 0.1969610417826442;  // std dev = 5.608, 170.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=107 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(A, D) )
%   | | then if ( interaction(D, D), phenotype(D, F) )
%   | | | then return 0.2555038109470867;  // std dev = 0.141, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.18160685228142648;  // std dev = 1.039, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2147454430772421;  // std dev = 0.117, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.26171266264253173;  // std dev = 0.110, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.17371669896963277;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.21542772378064087;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( location(A, J) )
%   | | | then return 0.0863725881390201;  // std dev = 9.066, 427.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=230 */
%   | | | else return 0.30233475055475156;  // std dev = 1.746, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.07877675473109141;  // std dev = 5.51e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.19164344805109576;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.31974774665820954;  // std dev = 0.274, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.24659339524460833;  // std dev = 0.251, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.007110735806928622;  // std dev = 0.854, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, H), location(A, I) )
%   | | | then return -0.11012582980611664;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.16910266453278117;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.20191847911930755;  // std dev = 3.104, 57.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=37 */
%   | | | else return 0.07074360465476937;  // std dev = 8.325, 371.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=205 */
%   else return -0.07324622576333717;  // std dev = 2.79e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.17104110700653957;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2660406886878268;  // std dev = 0.279, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( enzyme(D, F), complex(D, G) )
%   | | | then return 0.15892370184980986;  // std dev = 2.095, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.03012553033213768;  // std dev = 4.872, 129.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=65 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.26844378863471374;  // std dev = 0.471, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.15611572708298296;  // std dev = 2.191, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.08511651540669316;  // std dev = 4.952, 132.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=80 */
%   | | | else return 0.02943821606042288;  // std dev = 5.039, 129.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=69 */
%   else return -0.06842697784420315;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.1708517405373061;  // std dev = 0.164, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.09437028555028165;  // std dev = 0.764, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( phenotype(D, G), phenotype(A, H) )
%   | | | then return 0.21837615060013463;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17791290104620386;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.21838790110864928;  // std dev = 1.337, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return -0.05336554618848497;  // std dev = 4.461, 111.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=46 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.042147022446139916;  // std dev = 2.984, 60.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=27 */
%   | | | else return 0.07142425783621635;  // std dev = 7.168, 277.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=159 */
%   else return -0.06419184008202575;  // std dev = 8.64e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
Inference time using transfer learning 2.7409660816192627
Refined model CLL: -0.244793


******************************************
Best model found
******************************************
Results 

CLL : -0.23891 

AUC ROC : 0.94773 

AUC PR : 0.300309 

Precision : 0.065804 

Recall : 0.709302 

F1 : 0.120434 

Total Learning Time : 18.311596870422363 

Total Inference Time : 10.751734018325806 

Total revision time: 81.60600447654724
Best scored revision CLL: -0.244793


Results 

CLL : -0.23891 

AUC ROC : 0.94773 

AUC PR : 0.300309 

Precision : 0.065804 

Recall : 0.709302 

F1 : 0.120434 

Total Learning Time : 81.6162965297699 

Total Inference Time : 10.751734018325806 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 8.23452115058899
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43839584867975484;  // std dev = 0.494, 486.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.29e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.382817356658366;  // std dev = 9.958, 409.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=240 */
%   | else return 0.3486518695910645;  // std dev = 4.335, 76.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.34487776500769757;  // std dev = 0.486, 457.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5729155235241895;  // std dev = 4.394, 261.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=240 */
%   | else return -0.13938136601593687;  // std dev = 5.818, 205.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
%   | | | else return -0.10159632948783621;  // std dev = 4.21e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17157949648870713;  // std dev = 8.399, 403.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=240 */
%   | else return 0.25156710352932987;  // std dev = 4.299, 75.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.10e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.13705762906517635;  // std dev = 9.263, 468.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=275 */
%   | | else return 0.050367481360186886;  // std dev = 2.019, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
%   | | else return -0.08518475138839685;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09061908082759951;  // std dev = 0.436, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 2.11e-08, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | | else return -0.07877675473109173;  // std dev = 2.69e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08925969724699513;  // std dev = 9.138, 462.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=275 */
%   | else return 0.1449255389505716;  // std dev = 1.781, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333714;  // std dev = 3.36e-09, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03660553463218563;  // std dev = 9.787, 503.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05185557018387977;  // std dev = 9.466, 480.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.98e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
Inference time using transfer learning 4.985259056091309
Parameter learned model CLL:-0.274331 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 204, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.958, 169, 240], 'true,false': [4.335, 34, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 332, 0], 'false,false,false,false': [0.0, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.486, 175, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.394, 21, 240], 'true,false': [5.818, 163, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 298, 0], 'false,false,false,false': [4.21e-08, 59, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.399, 163, 240], 'true,false': [4.299, 33, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.1e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.263, 193, 275], 'true,true,false': [2.019, 10, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 292, 0], 'false,false,false': [3.33e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.436, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 323, 0], 'false,false,false': [2.69e-08, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.138, 187, 275], 'true,false': [1.781, 6, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.36e-09, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.787, 221, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.466, 198, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.98e-09, 362, 0]}]
{'': [0.24356043286084733, 1.652998725553011e-16], 'false': [nan, 1.652998725553011e-16]}
{'': [0.24336698905303317, -1.2387751643185956e-16], 'true': [0.2424662693312439, 0.2472299168975058], 'false': [nan, -1.2387751643185956e-16], 'false,false': [nan, -1.2387751643185956e-16], 'false,false,false': [-1.1503515676838971e-16, -3.0068540250264654e-17]}
{'': [0.2363744361485926, -2.669388693087808e-17], 'false': [nan, -2.669388693087808e-17], 'false,false': [nan, -2.669388693087808e-17]}
{'': [0.23907837701255336, 4.6026052561491086e-17], 'true': [0.07398599550799694, 0.16510017341349464], 'false': [nan, 4.6026052561491086e-17], 'false,false': [nan, 4.6026052561491086e-17], 'false,false,false': [-5.066789642584607e-17, 3.010774304068221e-17]}
{'': [0.18707598253778654, 1.2228543459639405e-16], 'true': [0.17503165963367506, 0.24639999999999992], 'false': [nan, 1.2228543459639405e-16]}
{'': [0.18556341911270288, 4.083578941150001e-17], 'true': [0.18556341911270288, nan], 'true,true': [0.18333411749870435, 0.2396830182233975], 'false': [nan, 4.083578941150001e-17], 'false,false': [3.802133645976563e-17, 1.9825411154020653e-17]}
{'': [0.19025337412018214, 4.729261715286381e-17], 'true': [0.19025337412018214, nan], 'false': [nan, 4.729261715286381e-17], 'false,false': [1.3748891945822373e-18, 1.1639434935586319e-17]}
{'': [0.1825524840430538, 1.1267935175300095e-17], 'true': [0.18073794496531037, 0.2440245314762198], 'false': [nan, 1.1267935175300095e-17], 'false,false': [nan, 1.1267935175300095e-17]}
{'': [0.19042383659115247, -9.384758163958505e-17], 'true': [0.19042383659115247, nan], 'false': [nan, -9.384758163958505e-17], 'false,false': [nan, -9.384758163958505e-17]}
{'': [0.1866702065715607, 8.035315813585388e-17], 'true': [0.1866702065715607, nan], 'false': [nan, 8.035315813585388e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 36.120810985565186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.36519118862064026;  // std dev = 5.958, 142.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=72 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.42519874352862785;  // std dev = 8.005, 261.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=148 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.722598262851575;  // std dev = 0.123, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13817807188841344;  // std dev = 0.070, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.23370580489624895;  // std dev = 4.698, 91.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=39 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.49733266031125073;  // std dev = 2.760, 36.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=25 */
%   | | | else return 0.362863644581414;  // std dev = 8.593, 304.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=172 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839205;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.5874146457651744;  // std dev = 0.121, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.09456421291996528;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.48673153359391125;  // std dev = 1.137, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.6578810401262538;  // std dev = 0.245, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), complex(H, J) )
%   | | | then return 0.3547490235402793;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.5682650944248392;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.19651654119164835;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.2725225122512606;  // std dev = 10.020, 405.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=216 */
%   else return -0.1123163781936062;  // std dev = 0.000, 403.000 (wgt'ed) examples reached here.  /* #neg=403 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.43579094281227926;  // std dev = 0.157, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5351187520901955;  // std dev = 0.215, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.18324084706429722;  // std dev = 1.246, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.4881937095757498;  // std dev = 0.234, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.0930841556305225;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.15904510757131796;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.2084612298324963;  // std dev = 7.472, 230.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=123 */
%   | | | else return 0.2896452873814849;  // std dev = 6.445, 181.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=113 */
%   else return -0.10159632948783623;  // std dev = 6.97e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E) )
%   | | then if ( interaction(D, A), location(A, F) )
%   | | | then return 0.3388566272206977;  // std dev = 0.100, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.3949015031937352;  // std dev = 0.127, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.3420787277985966;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.012923735672177564;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), phenotype(A, J) )
%   | | | then return 0.14940174621117125;  // std dev = 0.682, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40842958809861196;  // std dev = 0.268, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.14768724706614522;  // std dev = 9.240, 352.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=180 */
%   | | | else return 0.28910604936273654;  // std dev = 3.481, 54.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=36 */
%   else return -0.09269127618926074;  // std dev = 8.74e-09, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), interaction(F, G) )
%   | | | then return 0.40672222571717437;  // std dev = 1.750, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return 0.061513158175038586;  // std dev = 1.250, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, H), interaction(D, D) )
%   | | | then return -0.11614269616997168;  // std dev = 3.249, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | | | else return 0.05119438688881072;  // std dev = 5.539, 140.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=68 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.579337607980734;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.41519386576104206;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( location(A, L), enzyme(A, M) )
%   | | | then return 0.08169670443083726;  // std dev = 3.280, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | | else return 0.17491254495797007;  // std dev = 5.728, 144.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=88 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.19427067268175519;  // std dev = 0.065, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.03998916075106094;  // std dev = 0.727, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.24152723497972967;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27547065087069206;  // std dev = 0.173, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.06081652963150471;  // std dev = 3.488, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.06994741254914898;  // std dev = 5.938, 147.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=74 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.11659922082194228;  // std dev = 6.891, 219.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=128 */
%   | | | else return 0.33071363161938394;  // std dev = 1.269, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else return -0.07877675473109143;  // std dev = 6.84e-09, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.41995810299171604;  // std dev = 2.252, 137.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=134 */
%   | | | else return 0.06050469320119587;  // std dev = 3.070, 43.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=22 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.30251529974190977;  // std dev = 0.810, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.4384201395561172;  // std dev = 0.518, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( complex(H, J), enzyme(H, K) )
%   | | | then return 0.017617814046211076;  // std dev = 1.490, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return 0.2382647049540824;  // std dev = 2.281, 36.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=28 */
%   | | else if ( interaction(A, L), enzyme(A, M) )
%   | | | then return 0.22821301972873112;  // std dev = 1.228, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.01752937488276173;  // std dev = 5.964, 157.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=81 */
%   else return -0.07324622576333767;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.137338298639745;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.3583230199441412;  // std dev = 0.849, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( interaction(D, E), interaction(A, F) )
%   | | | then return -0.12560608336583606;  // std dev = 3.569, 90.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=26 */
%   | | | else return 0.0637323515901803;  // std dev = 6.219, 218.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=127 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then return 0.45493769710657855;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.3690717604340815;  // std dev = 0.918, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.0974698627215298;  // std dev = 4.307, 97.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=58 */
%   else return -0.06842697784420329;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), interaction(A, F) )
%   | | | then return 0.31464265394605856;  // std dev = 2.920, 154.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=148 */
%   | | | else return -0.01252409380578239;  // std dev = 6.511, 248.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=121 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.3260483897335159;  // std dev = 0.481, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return -0.46249125735595326;  // std dev = 0.498, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( complex(A, K), complex(J, K) )
%   | | | then return -0.22949886908638106;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.13674015047851557;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.09632589892304674;  // std dev = 0.918, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.26450040619507753;  // std dev = 1.666, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
Inference time using transfer learning 5.112742185592651
Refined model CLL: -0.22959


******************************************
Best model found
******************************************
Results 

CLL : -0.223757 

AUC ROC : 0.97433 

AUC PR : 0.319446 

Precision : 0.087591 

Recall : 0.827586 

F1 : 0.158416 

Total Learning Time : 36.120810985565186 

Total Inference Time : 41.45389199256897 

Total revision time: 104.51040935516357
Best scored revision CLL: -0.22959


Results 

CLL : -0.223757 

AUC ROC : 0.97433 

AUC PR : 0.319446 

Precision : 0.087591 

Recall : 0.827586 

F1 : 0.158416 

Total Learning Time : 104.52024102210999 

Total Inference Time : 41.45389199256897 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.683544397354126
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4280414082177876;  // std dev = 0.495, 465.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.24e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3880578550169405;  // std dev = 7.760, 249.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=147 */
%   | else return 0.43210501138434565;  // std dev = 6.568, 186.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839208;  // std dev = 0.000, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2988005120260398;  // std dev = 0.494, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936065;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6047233685202434;  // std dev = 3.495, 236.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=223 */
%   | else return -0.158847138738096;  // std dev = 5.894, 234.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | | | else return -0.10159632948783644;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21038054168657883;  // std dev = 6.944, 248.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=147 */
%   | else return 0.15301641808984234;  // std dev = 5.936, 206.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=118 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16299915770736195;  // std dev = 8.463, 388.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=237 */
%   | | else return 0.05223004283685399;  // std dev = 3.111, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.74e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | | else return -0.08518475138839678;  // std dev = 6.32e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1136092241113463;  // std dev = 0.421, 449.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.43e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else return -0.0787767547310915;  // std dev = 8.02e-08, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.0736862446478876;  // std dev = 8.693, 407.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=237 */
%   | else return -0.025441090047925878;  // std dev = 3.268, 62.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=28 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333721;  // std dev = 1.32e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06596084274305408;  // std dev = 9.049, 451.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420315;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03890280128026109;  // std dev = 9.206, 460.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820259;  // std dev = 7.27e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
Inference time using transfer learning 5.939573526382446
Parameter learned model CLL:-0.269583 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 200, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.24e-08, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.76, 102, 147], 'true,false': [6.568, 68, 118], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 290, 0], 'false,false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 196, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.495, 13, 223], 'true,false': [5.894, 192, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 207, 0], 'false,false,false,false': [0.0, 142, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.944, 101, 147], 'true,false': [5.936, 88, 118], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.463, 151, 237], 'true,true,false': [3.111, 29, 28], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 183, 0], 'false,false,false': [6.32e-08, 147, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.421, 184, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.43e-08, 187, 0], 'false,false,false': [8.02e-08, 147, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.693, 170, 237], 'true,false': [3.268, 34, 28], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.32e-09, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.049, 186, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.206, 195, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.27e-09, 314, 0]}]
{'': [0.24511504220141372, 1.534812566620613e-16], 'false': [nan, 1.534812566620613e-16]}
{'': [0.23807636411678273, -1.1755302613678128e-16], 'true': [0.24183480911598043, 0.2319343276679366], 'false': [nan, -1.1755302613678128e-16], 'false,false': [nan, -1.1755302613678128e-16], 'false,false,false': [-1.0719394720518753e-16, -3.3306690738754695e-17]}
{'': [0.24441249643756924, -3.317907889684376e-17], 'false': [nan, -3.317907889684376e-17], 'false,false': [nan, -3.317907889684376e-17]}
{'': [0.24565824346428008, 3.053908606418769e-17], 'true': [0.051767796996748904, 0.14844540299043146], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-8.366898156595383e-17, -5.316560962993707e-17]}
{'': [0.1846188393752544, 1.1859949224482385e-16], 'true': [0.19441592504409852, 0.17102675795594768], 'false': [nan, 1.1859949224482385e-16]}
{'': [0.18405282612108642, 4.0371746350005693e-17], 'true': [0.18405282612108642, nan], 'true,true': [0.18457473797938267, 0.16980200303078294], 'false': [nan, 4.0371746350005693e-17], 'false,false': [3.276067941516855e-17, 2.718913529694261e-17]}
{'': [0.1776062663331872, 2.2603343016320552e-17], 'true': [0.1776062663331872, nan], 'false': [nan, 2.2603343016320552e-17], 'false,false': [3.7996937741181826e-17, 4.3804717978407536e-17]}
{'': [0.1850175191814436, 2.5019110414088036e-18], 'true': [0.18566063006140443, 0.17226856864625487], 'false': [nan, 2.5019110414088036e-18], 'false,false': [nan, 2.5019110414088036e-18]}
{'': [0.1815547907399699, -7.665825646221319e-17], 'true': [0.1815547907399699, nan], 'false': [nan, -7.665825646221319e-17], 'false,false': [nan, -7.665825646221319e-17]}
{'': [0.18424307265497716, 5.303613174960939e-17], 'true': [0.18424307265497716, nan], 'false': [nan, 5.303613174960939e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 16.89896535873413
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, G), location(G, H) )
%   | | | then return 0.37300042024802404;  // std dev = 7.103, 202.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=104 */
%   | | | else return 0.46420954116011537;  // std dev = 6.876, 198.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=120 */
%   else return -0.14185106490048774;  // std dev = 1.52e-07, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.7274776617208639;  // std dev = 0.096, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.1397667183384613;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.780065759619344;  // std dev = 0.118, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, H), interaction(A, G) )
%   | | | then return 0.06545898038481894;  // std dev = 1.673, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.3400323005370767;  // std dev = 7.376, 221.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=120 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.54380304015748;  // std dev = 2.423, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return 0.3670741664405693;  // std dev = 5.713, 136.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=78 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839197;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
%   | else return -0.1254446385283912;  // std dev = 6.05e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.5854153361906234;  // std dev = 0.137, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2779701579676011;  // std dev = 4.185, 74.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=40 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.580915783047794;  // std dev = 0.154, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.14849220095999618;  // std dev = 4.191, 75.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=31 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, H), location(H, I) )
%   | | | then return 0.5615360222660792;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6490290690315342;  // std dev = 0.142, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.25494418323661033;  // std dev = 5.702, 132.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=69 */
%   | | | else return 0.33644035219756185;  // std dev = 5.643, 134.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=81 */
%   else return -0.11231637819360663;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.2277467982322979;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5359096477677624;  // std dev = 0.145, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43137947833665313;  // std dev = 0.185, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.4910853522232796;  // std dev = 0.121, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.16614799922895368;  // std dev = 0.016, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.2098749120560818;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.19239722281550586;  // std dev = 9.212, 344.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=179 */
%   | | | else return 0.36202007072006265;  // std dev = 3.686, 66.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=46 */
%   else return -0.10159632948783644;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.3851053112972426;  // std dev = 0.288, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2080617200324303;  // std dev = 0.895, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.32624438529716543;  // std dev = 0.142, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.473732428176835;  // std dev = 0.158, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6229011356401519;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.04673967800861421;  // std dev = 4.052, 78.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=30 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2535148089871265;  // std dev = 5.040, 112.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=72 */
%   | | | else return 0.1645684995785778;  // std dev = 7.151, 215.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=117 */
%   else return -0.09269127618926043;  // std dev = 1.04e-08, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.27647403299502044;  // std dev = 0.194, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return -0.0578211919804964;  // std dev = 0.785, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.29061105308611596;  // std dev = 0.104, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.44858308868446656;  // std dev = 0.188, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.16490287654086996;  // std dev = 0.022, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.20683926209413445;  // std dev = 0.043, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.08800756225355688;  // std dev = 4.595, 85.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | | | else return 0.16744628777508466;  // std dev = 8.408, 303.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=182 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.23408774599881021;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.10776868528981516;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, H), enzyme(D, I) )
%   | | | then return 0.06870628997471723;  // std dev = 0.692, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2464866878676374;  // std dev = 0.323, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( complex(J, L), complex(A, L) )
%   | | | then return -0.0654945529817238;  // std dev = 2.533, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | | else return 0.10560815296342561;  // std dev = 5.647, 135.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=73 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.25067054315292164;  // std dev = 2.475, 29.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=20 */
%   | | | else return 0.11212648913593312;  // std dev = 6.884, 201.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=120 */
%   else return -0.07877675473109143;  // std dev = 4.37e-09, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.18583002392539513;  // std dev = 0.157, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.0362684073508295;  // std dev = 3.395, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | else if ( complex(D, F), complex(A, G) )
%   | | | then return -0.13953038903898698;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.015082858919916295;  // std dev = 2.192, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.19895175809492144;  // std dev = 7.339, 275.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=197 */
%   | | | else return -0.49558717809584696;  // std dev = 0.297, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1886250507009183;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.49786320318601973;  // std dev = 0.140, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else return -0.07324622576333713;  // std dev = 3.73e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1763476001471408;  // std dev = 0.195, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.41205117640694905;  // std dev = 1.272, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.1543135410164881;  // std dev = 2.701, 41.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=27 */
%   | | | else return 0.026124468883848128;  // std dev = 5.863, 173.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=89 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(I, J), location(A, J) )
%   | | | then return 0.09662370364877752;  // std dev = 1.069, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return -0.30168220416264335;  // std dev = 1.631, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.10036440961427112;  // std dev = 3.675, 68.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=44 */
%   | | | else return -0.008429440245935125;  // std dev = 4.831, 105.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=57 */
%   else return -0.06842697784420312;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.15305391362507592;  // std dev = 0.160, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.36862525696756443;  // std dev = 0.843, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( phenotype(E, G), interaction(A, H) )
%   | | | then return -0.16278553803164314;  // std dev = 3.498, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return -0.01070181029145375;  // std dev = 5.038, 117.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=62 */
%   | else if ( phenotype(A, I), complex(A, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.5162825114729209;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10980374982325436;  // std dev = 1.129, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.05716202358864549;  // std dev = 5.428, 158.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=94 */
%   | | | else return -0.004320248986488375;  // std dev = 4.498, 89.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=49 */
%   else return -0.06419184008202584;  // std dev = 7.79e-09, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
Inference time using transfer learning 5.933417558670044
Refined model CLL: -0.286613


******************************************
Best model found
******************************************
Results 

CLL : -0.27469 

AUC ROC : 0.963095 

AUC PR : 0.093187 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 16.89896535873413 

Total Inference Time : 14.457287549972534 

Total revision time: 71.43703556060791
Best scored revision CLL: -0.269583


Results 

CLL : -0.27469 

AUC ROC : 0.963095 

AUC PR : 0.093187 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 71.44686722755432 

Total Inference Time : 14.457287549972534 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 13.464250087738037
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44130682983635006;  // std dev = 0.493, 475.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.39e-08, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3540377875713016;  // std dev = 8.084, 265.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=148 */
%   | else return 0.3714400786764226;  // std dev = 7.397, 224.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.316103671656081;  // std dev = 0.492, 473.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360647;  // std dev = 0.000, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5636193454598704;  // std dev = 5.022, 280.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=252 */
%   | else return -0.21851622881689042;  // std dev = 4.706, 213.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18016746375483148;  // std dev = 7.142, 261.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=148 */
%   | else return 0.19746471247700387;  // std dev = 6.059, 210.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=129 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.05e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16751538841588132;  // std dev = 8.428, 392.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=240 */
%   | | else return 0.005997742272282904;  // std dev = 3.868, 84.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=37 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.88e-08, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | | else return -0.08518475138839678;  // std dev = 6.99e-08, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10399389240926259;  // std dev = 0.423, 481.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.82e-08, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else return -0.0787767547310915;  // std dev = 8.49e-08, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11341021450941993;  // std dev = 8.215, 386.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=240 */
%   | else return 0.062487903963888924;  // std dev = 3.485, 69.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=37 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333724;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04729319060166413;  // std dev = 9.308, 489.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04446443001287034;  // std dev = 9.221, 480.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.17e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
Inference time using transfer learning 3.1792080402374268
Parameter learned model CLL:-0.269932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 198, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.39e-08, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.084, 117, 148], 'true,false': [7.397, 95, 129], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 318, 0], 'false,false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 196, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [5.022, 28, 252], 'true,false': [4.706, 188, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 179, 0], 'false,false,false,false': [0.0, 167, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.142, 113, 148], 'true,false': [6.059, 81, 129], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 322, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.428, 152, 240], 'true,true,false': [3.868, 47, 37], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.88e-08, 192, 0], 'false,false,false': [6.99e-08, 164, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.423, 204, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.82e-08, 171, 0], 'false,false,false': [8.49e-08, 158, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.215, 146, 240], 'true,false': [3.485, 32, 37], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.308, 212, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.221, 203, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.17e-09, 372, 0]}]
{'': [0.24308476454293934, 1.9369848514736775e-16], 'false': [nan, 1.9369848514736775e-16]}
{'': [0.24558278026606675, -1.2122769516798366e-16], 'true': [0.24657885368458263, 0.2442402742346911], 'false': [nan, -1.2122769516798366e-16], 'false,false': [nan, -1.2122769516798366e-16], 'false,false,false': [-1.1451356983555074e-16, -2.4370749321040022e-17]}
{'': [0.24255028068342407, -3.270912027224257e-17], 'false': [nan, -3.270912027224257e-17], 'false,false': [nan, -3.270912027224257e-17]}
{'': [0.24617994902931603, 2.4386401696968757e-17], 'true': [0.09007035081463717, 0.10395814446930098], 'false': [nan, 2.4386401696968757e-17], 'false,false': [nan, 2.4386401696968757e-17], 'false,false,false': [-8.311166776523518e-17, -7.578767952531009e-17]}
{'': [0.18632038467010079, 1.1033272294411493e-16], 'true': [0.1954408084419588, 0.17481920498737472], 'false': [nan, 1.1033272294411493e-16]}
{'': [0.18444966470839694, 3.991813122247754e-17], 'true': [0.18444966470839694, nan], 'true,true': [0.18120119516727004, 0.17812499510302227], 'false': [nan, 3.991813122247754e-17], 'false,false': [3.23815048849004e-17, 2.978647139238225e-17]}
{'': [0.1787893085813545, 1.7547597957601258e-17], 'true': [0.1787893085813545, nan], 'false': [nan, 1.7547597957601258e-17], 'false,false': [4.544772615424617e-17, 4.567373202571847e-17]}
{'': [0.1753286974253831, -2.300980361917423e-18], 'true': [0.17482121981488535, 0.17596778500089055], 'false': [nan, -2.300980361917423e-18], 'false,false': [nan, -2.300980361917423e-18]}
{'': [0.17719385671218482, -8.486187487077346e-17], 'true': [0.17719385671218482, nan], 'false': [nan, -8.486187487077346e-17], 'false,false': [nan, -8.486187487077346e-17]}
{'': [0.17713741287497756, 8.475896209503883e-17], 'true': [0.17713741287497756, nan], 'false': [nan, 8.475896209503883e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 40.08862495422363
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.4581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.7993254056877476;  // std dev = 0.970, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.25030579784460966;  // std dev = 4.931, 102.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=40 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.3268989350995111;  // std dev = 3.992, 64.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=30 */
%   | | | else return 0.47014893509950917;  // std dev = 7.705, 250.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=153 */
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, F) )
%   | | then return 0.7434881363912437;  // std dev = 0.163, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.739617750305637;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4809168052211309;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7723734549972112;  // std dev = 1.419, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | | else return -0.2005490402806439;  // std dev = 0.119, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2177769946707666;  // std dev = 5.061, 108.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=44 */
%   | | | else return 0.34239524453346226;  // std dev = 6.942, 196.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=108 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5980265988612433;  // std dev = 0.142, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.19574191822049397;  // std dev = 1.325, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.5599334537204677;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.6381360463240295;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.17314073097753363;  // std dev = 1.271, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.6244016926252615;  // std dev = 0.174, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21244353466590338;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.259765383585426;  // std dev = 9.669, 417.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=217 */
%   else return -0.11231637819360642;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A), location(A, F) )
%   | | | then return 0.41898640539079335;  // std dev = 0.108, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.5021802128972823;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18550914932920853;  // std dev = 0.080, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.19109086520183202;  // std dev = 4.111, 78.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=38 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.14359201743095693;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5087094923242835;  // std dev = 0.308, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.31876521547281017;  // std dev = 4.093, 90.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=59 */
%   | | | else return 0.20996938128880704;  // std dev = 7.506, 258.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=137 */
%   else return -0.10159632948783638;  // std dev = 3.95e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.31349971212874717;  // std dev = 0.974, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.14467304177847265;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, H), location(H, I) )
%   | | | then return 0.3401831187522929;  // std dev = 0.116, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.44530298192523715;  // std dev = 0.096, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, A), enzyme(A, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.3949578404665903;  // std dev = 1.007, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.19109726227357215;  // std dev = 4.146, 109.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=63 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.08211940580541519;  // std dev = 5.749, 148.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=62 */
%   | | | else return 0.15423164827720978;  // std dev = 6.601, 181.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=96 */
%   else return -0.09269127618926044;  // std dev = 1.05e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.2633166174824069;  // std dev = 0.147, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.3586231207018328;  // std dev = 0.278, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.11581110361229248;  // std dev = 0.616, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then if ( complex(F, G), location(F, H) )
%   | | | then return -0.033970666739344124;  // std dev = 2.712, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.14964047018573176;  // std dev = 4.540, 97.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=54 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.12582002429007527;  // std dev = 5.177, 136.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=73 */
%   | | | else return 0.22533542109587795;  // std dev = 5.446, 146.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=93 */
%   else if ( interaction(A, K) )
%   | then return -0.08518475138839679;  // std dev = 5.35e-09, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | else return -0.08518475138839678;  // std dev = 5.59e-09, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.057418009994954854;  // std dev = 2.720, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.19796535441032934;  // std dev = 4.515, 90.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=56 */
%   | | else if ( interaction(E, A), complex(E, I) )
%   | | | then return 0.01156103202983558;  // std dev = 3.573, 94.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=44 */
%   | | | else return 0.08719779343510073;  // std dev = 5.864, 169.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=96 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2726858443226102;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.061706759464925126;  // std dev = 2.710, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.0752140075573903;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4215845580644018;  // std dev = 1.540, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   else return -0.07877675473109143;  // std dev = 4.93e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.20759057029814237;  // std dev = 0.095, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.046642536873989594;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.24262316058440397;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.34269536598917616;  // std dev = 0.236, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.33573777455647386;  // std dev = 2.752, 59.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=49 */
%   | | | else return 0.042057311427842484;  // std dev = 8.044, 320.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=165 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.25883377335262225;  // std dev = 1.522, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.1406643738943846;  // std dev = 1.864, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   else return -0.07324622576333713;  // std dev = 3.61e-09, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.2995414108194648;  // std dev = 4.317, 182.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=158 */
%   | | | else return -0.4372421315047145;  // std dev = 0.892, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16409042315886876;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.4480285963101531;  // std dev = 0.485, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.1567849619245948;  // std dev = 4.806, 149.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=105 */
%   | | | else return -0.42493871989349363;  // std dev = 0.420, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.07430792383783229;  // std dev = 1.502, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return -0.08644536282507798;  // std dev = 1.952, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   else return -0.0684269778442032;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.12990461820436455;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1554973658973055;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.265127711487058;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.18345345601109392;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.29787994615200686;  // std dev = 1.924, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.04476515283322095;  // std dev = 4.304, 120.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=49 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.023253546889217498;  // std dev = 2.575, 59.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=31 */
%   | | | else return 0.11431188459908159;  // std dev = 5.406, 173.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=112 */
%   else return -0.0641918400820258;  // std dev = 8.23e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
Inference time using transfer learning 4.476877450942993
Refined model CLL: -0.238305


******************************************
Best model found
******************************************
Results 

CLL : -0.226929 

AUC ROC : 0.977601 

AUC PR : 0.39903 

Precision : 0.076854 

Recall : 0.934783 

F1 : 0.142031 

Total Learning Time : 40.08862495422363 

Total Inference Time : 41.35191106796265 

Total revision time: 129.89842820167542
Best scored revision CLL: -0.238305


Results 

CLL : -0.226929 

AUC ROC : 0.977601 

AUC PR : 0.39903 

Precision : 0.076854 

Recall : 0.934783 

F1 : 0.142031 

Total Learning Time : 129.90825986862183 

Total Inference Time : 41.35191106796265 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.120765924453735
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4287134512285402;  // std dev = 0.495, 496.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.21e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.34923628700168696;  // std dev = 10.608, 455.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=251 */
%   | else return 0.3901805279459306;  // std dev = 3.611, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2766543927362042;  // std dev = 0.498, 522.000 (wgt'ed) examples reached here.  /* #neg=239 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360632;  // std dev = 0.000, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5875949454178733;  // std dev = 4.768, 276.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=251 */
%   | else return -0.18726567131825822;  // std dev = 5.215, 234.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783644;  // std dev = 2.11e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1636916608826269;  // std dev = 8.996, 450.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=251 */
%   | else return 0.3246290510932412;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.11e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15765562833144534;  // std dev = 9.305, 478.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=280 */
%   | | else return 0.2561738258713614;  // std dev = 1.046, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.10e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
%   | | else return -0.08518475138839686;  // std dev = 2.24e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10362975937889679;  // std dev = 0.430, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 5.16e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08227217838045721;  // std dev = 9.478, 487.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=280 */
%   | else return -0.08766828728294386;  // std dev = 1.357, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333768;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08478132162090309;  // std dev = 9.253, 472.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420315;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03388429475836376;  // std dev = 9.556, 508.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202583;  // std dev = 7.85e-09, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
Inference time using transfer learning 2.6413629055023193
Parameter learned model CLL:-0.265159 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 213, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.21e-08, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.608, 204, 251], 'true,false': [3.611, 22, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 310, 0], 'false,false,false,false': [0.0, 43, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 239, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 379, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.768, 25, 251], 'true,false': [5.215, 202, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.11e-08, 336, 0], 'false,false,false,false': [3.49e-08, 53, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.996, 199, 251], 'true,false': [3.508, 20, 32], 'false,true': [0.0, 0, 0], 'false,false': [1.11e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.305, 198, 280], 'true,true,false': [1.046, 2, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.1e-07, 316, 0], 'false,false,false': [2.24e-08, 42, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.43, 215, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 336, 0], 'false,false,false': [0.0, 32, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.478, 207, 280], 'true,false': [1.357, 6, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.253, 189, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.556, 225, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.85e-09, 328, 0]}]
{'': [0.24502064906347848, 1.4251573496620922e-16], 'false': [nan, 1.4251573496620922e-16]}
{'': [0.24686488009542137, -1.2077213638981874e-16], 'true': [0.24733244777201535, 0.24142661179698216], 'false': [nan, -1.2077213638981874e-16], 'false,false': [nan, -1.2077213638981874e-16], 'false,false,false': [-1.1173857538162865e-16, -2.840105411831796e-17]}
{'': [0.24817940517639672, -2.34347867994756e-17], 'false': [nan, -2.34347867994756e-17], 'false,false': [nan, -2.34347867994756e-17]}
{'': [0.24698073647275148, 1.0274557554371629e-16], 'true': [0.08237502625498938, 0.11620385114546303], 'false': [nan, 1.0274557554371629e-16], 'false,false': [nan, 1.0274557554371629e-16], 'false,false,false': [1.32169407693471e-18, 2.3042364662031552e-17]}
{'': [0.18815136559179246, 1.2357264969740873e-16], 'true': [0.1798599179134404, 0.23668639053254392], 'false': [nan, 1.2357264969740873e-16]}
{'': [0.1816412640516086, 3.9695124902798894e-17], 'true': [0.1816412640516086, nan], 'true,true': [0.1811521926516331, 0.21879112912770857], 'false': [nan, 3.9695124902798894e-17], 'false,false': [3.794433122136611e-17, 1.1895246692412391e-17]}
{'': [0.18460617003675092, 3.2582632244433945e-17], 'true': [0.18460617003675092, nan], 'false': [nan, 3.2582632244433945e-17], 'false,false': [7.93016446160826e-18, 0.0]}
{'': [0.18534515138019944, -6.799739934018574e-17], 'true': [0.1844656567129954, 0.20457985110617025], 'false': [nan, -6.799739934018574e-17], 'false,false': [nan, -6.799739934018574e-17]}
{'': [0.18137886834620098, -8.474483442405041e-17], 'true': [0.18137886834620098, nan], 'false': [nan, -8.474483442405041e-17], 'false,false': [nan, -8.474483442405041e-17]}
{'': [0.17976629740510455, 6.228080382043562e-17], 'true': [0.17976629740510455, nan], 'false': [nan, 6.228080382043562e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 49.355924129486084
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F), complex(A, F) )
%   | | | then return 0.8416200094796759;  // std dev = 1.402, 121.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=119 */
%   | | | else return 0.37898226843284333;  // std dev = 8.478, 288.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=150 */
%   | | else return -0.14185106490048766;  // std dev = 5.58e-08, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5724346493852265;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.7511687725033593;  // std dev = 0.202, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(D, F), interaction(F, D) )
%   | | | then return -0.19450208496815777;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.7448508230270129;  // std dev = 0.142, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(A, H), interaction(G, G) )
%   | | | then return 0.11440903443809292;  // std dev = 3.163, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.3218937958918465;  // std dev = 5.071, 114.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=61 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.7521355776893054;  // std dev = 0.137, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3873659913901195;  // std dev = 7.513, 256.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=151 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
%   | else return -0.12544463852839152;  // std dev = 0.000, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.576284566578663;  // std dev = 1.015, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return 0.6474999072511591;  // std dev = 0.170, 67.000 (wgt'ed) examples reached here.  /* #pos=67 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.20090757695115216;  // std dev = 0.127, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return -0.2343185138766259;  // std dev = 0.371, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5188784209128847;  // std dev = 1.803, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | | else return 0.23268086571509106;  // std dev = 4.688, 92.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=45 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.3543539450173762;  // std dev = 4.981, 114.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=70 */
%   | | | else return 0.49925058116445276;  // std dev = 2.691, 42.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=32 */
%   else return -0.1123163781936064;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.4555512040632971;  // std dev = 1.371, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | | else return 0.621122792110535;  // std dev = 1.042, 50.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=49 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.19602025418252242;  // std dev = 0.223, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.3011576979621387;  // std dev = 0.491, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.4256338769407985;  // std dev = 0.170, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.557277539153471;  // std dev = 0.165, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.22791293090754092;  // std dev = 0.282, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.221271938536201;  // std dev = 7.196, 268.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=151 */
%   else return -0.10159632948783635;  // std dev = 4.56e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | then if ( complex(F, D), complex(E, D) )
%   | | | then return 0.30956693216074965;  // std dev = 0.012, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.3567278848096713;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.3870988311911952;  // std dev = 1.161, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.038324636491772146;  // std dev = 3.548, 142.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=57 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B), interaction(H, A) )
%   | | | then return 0.4478049096295399;  // std dev = 1.151, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.07558409576630219;  // std dev = 4.166, 98.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=45 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.3484238890314464;  // std dev = 2.080, 31.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=23 */
%   | | | else return 0.2301430409099658;  // std dev = 5.058, 135.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=83 */
%   else return -0.09269127618926044;  // std dev = 1.04e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.26270975161867316;  // std dev = 0.160, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.40545269491594627;  // std dev = 0.448, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | else if ( interaction(A, F), interaction(D, E) )
%   | | | then return -0.03570479349728592;  // std dev = 3.476, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | | else return 0.11873467024055637;  // std dev = 6.281, 243.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=137 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then if ( interaction(G, I), complex(I, J) )
%   | | | then return 0.39382873863186546;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16325815349137646;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.026959392206541272;  // std dev = 1.200, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1701279460578276;  // std dev = 3.221, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B), location(D, F) )
%   | | then if ( interaction(A, G), enzyme(G, E) )
%   | | | then return 0.22219425067023144;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.28178344724040055;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(A, E), location(A, H) )
%   | | | then return -0.12002322628897326;  // std dev = 0.892, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.04659643833750839;  // std dev = 4.187, 118.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=61 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.21002824843459578;  // std dev = 0.884, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.02839451231214395;  // std dev = 3.189, 110.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=50 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.18951672638057224;  // std dev = 5.049, 144.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=95 */
%   | | | else return 0.09490436838231625;  // std dev = 3.023, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   else return -0.07877675473109143;  // std dev = 4.84e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.19178032697998562;  // std dev = 0.170, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.28097919359311635;  // std dev = 0.202, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.06005949910008438;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3522110131125345;  // std dev = 0.523, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.23518191676505792;  // std dev = 0.290, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.012093177418969562;  // std dev = 2.415, 68.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=31 */
%   | | | else return 0.059302247682542025;  // std dev = 7.269, 297.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=162 */
%   else if ( location(A, J) )
%   | then return -0.07324622576333722;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
%   | else return -0.07324622576333706;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.16272512827316044;  // std dev = 0.107, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.027203328487152637;  // std dev = 0.989, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.23498412839822955;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4230270613774234;  // std dev = 0.154, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2384198373900531;  // std dev = 1.035, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return 0.045585032907590604;  // std dev = 5.700, 238.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=122 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return -0.12125622413212819;  // std dev = 2.458, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.02715034301428628;  // std dev = 4.653, 138.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=74 */
%   else return -0.06842697784420329;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( complex(A, F), interaction(G, D) )
%   | | | then return 0.151208097879257;  // std dev = 0.181, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.2031454082538271;  // std dev = 0.170, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.26942457585370155;  // std dev = 0.464, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18761690191879338;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.058162485293085694;  // std dev = 4.417, 160.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=91 */
%   | | | else return -0.024447081161313628;  // std dev = 4.349, 128.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=59 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.1416971683758807;  // std dev = 2.107, 49.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=33 */
%   | | | else return 0.030120965020690744;  // std dev = 4.294, 105.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=58 */
%   else return -0.06419184008202576;  // std dev = 8.54e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
Inference time using transfer learning 4.069486141204834
Refined model CLL: -0.210314


******************************************
Best model found
******************************************
Results 

CLL : -0.210003 

AUC ROC : 0.98195 

AUC PR : 0.385532 

Precision : 0.102662 

Recall : 0.94186 

F1 : 0.185143 

Total Learning Time : 49.355924129486084 

Total Inference Time : 38.369693994522095 

Total revision time: 126.47068190574646
Best scored revision CLL: -0.210314


Results 

CLL : -0.210003 

AUC ROC : 0.98195 

AUC PR : 0.385532 

Precision : 0.102662 

Recall : 0.94186 

F1 : 0.185143 

Total Learning Time : 126.48051357269287 

Total Inference Time : 38.369693994522095 

Starting experiments for fasttext using softcosine 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.07162880897522
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.41990192314731667;  // std dev = 0.496, 502.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.28e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.36641117791921424;  // std dev = 11.045, 497.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3236992201243323;  // std dev = 0.492, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23913491754326957;  // std dev = 10.971, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783608;  // std dev = 1.79e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.18871081889999713;  // std dev = 10.911, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926058;  // std dev = 9.86e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14540966917163584;  // std dev = 10.880, 486.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=282 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.19e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10466017906957768;  // std dev = 0.494, 490.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 1.03e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.05272558921812595;  // std dev = 11.269, 513.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333767;  // std dev = 0.000, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0700849393318733;  // std dev = 10.880, 486.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05021250056689966;  // std dev = 10.911, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.59e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
Inference time using transfer learning 3.494889259338379
Parameter learned model CLL:-0.324736 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 220, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.28e-08, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [11.045, 215, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 327, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 196, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.971, 210, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.79e-07, 378, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.911, 206, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.86e-09, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.88, 204, 282], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.19e-07, 355, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.494, 208, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.03e-07, 378, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.269, 231, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.88, 204, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.911, 206, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.59e-09, 349, 0]}]
{'': [0.2461865684671701, 1.612614449176205e-16], 'false': [nan, 1.612614449176205e-16]}
{'': [0.2454566432802067, -1.1407796216331884e-16], 'true': [0.2454566432802067, nan], 'false': [nan, -1.1407796216331884e-16], 'false,false': [nan, -1.1407796216331884e-16], 'false,false,false': [nan, -1.1407796216331884e-16]}
{'': [0.2419075296300896, -3.002293249690564e-17], 'false': [nan, -3.002293249690564e-17], 'false,false': [nan, -3.002293249690564e-17]}
{'': [0.2446460440214204, 8.458842092382145e-17], 'true': [nan, 0.2446460440214204], 'false': [nan, 8.458842092382145e-17], 'false,false': [nan, 8.458842092382145e-17], 'false,false,false': [8.458842092382145e-17, nan]}
{'': [0.24393644181671575, 9.936802761838418e-17], 'true': [0.24393644181671575, nan], 'false': [nan, 9.936802761838418e-17]}
{'': [0.24356043286084722, 4.003057666254086e-17], 'true': [0.24356043286084722, nan], 'true,true': [0.24356043286084722, nan], 'false': [nan, 4.003057666254086e-17], 'false,false': [4.003057666254086e-17, nan]}
{'': [0.24429820907955432, 2.819614030794048e-17], 'true': [0.24429820907955432, nan], 'false': [nan, 2.819614030794048e-17], 'false,false': [2.819614030794048e-17, nan]}
{'': [0.24752915426968822, -6.437979669423984e-17], 'true': [0.24752915426968822, nan], 'false': [nan, -6.437979669423984e-17], 'false,false': [nan, -6.437979669423984e-17]}
{'': [0.24356043286084772, -8.981579525057446e-17], 'true': [0.24356043286084772, nan], 'false': [nan, -8.981579525057446e-17], 'false,false': [nan, -8.981579525057446e-17]}
{'': [0.24393644181671886, 7.380279132178691e-17], 'true': [0.24393644181671886, nan], 'false': [nan, 7.380279132178691e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 70.76980495452881
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(D, F), phenotype(F, G) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.3291166770349974;  // std dev = 6.214, 155.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=73 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.43286157877767056;  // std dev = 7.987, 261.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=150 */
%   else return -0.1418510649004875;  // std dev = 2.48e-07, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.7293038703845164;  // std dev = 0.092, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(D, F), complex(F, G) )
%   | | | then return 0.2612117700636803;  // std dev = 1.785, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.7227502316021417;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6536711587146995;  // std dev = 2.058, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.2384544431234206;  // std dev = 7.388, 227.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=98 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.46644086607859253;  // std dev = 4.399, 88.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=59 */
%   | | | else return 0.35256240332985406;  // std dev = 4.684, 90.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=50 */
%   else return -0.12544463852839224;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(A, E) )
%   | | then if ( interaction(F, D), interaction(F, F) )
%   | | | then return 0.5054755961998119;  // std dev = 1.185, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | | else return 0.6454013883438128;  // std dev = 0.372, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return 0.3167617321417922;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.20222955352097424;  // std dev = 0.267, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2470489581702912;  // std dev = 3.534, 57.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.26234701716863457;  // std dev = 6.384, 166.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=87 */
%   | | | else return 0.3128482604569593;  // std dev = 6.964, 205.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=119 */
%   else return -0.11231637819360643;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.15496452569136374;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.44839155309965933;  // std dev = 0.189, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.5565946786423456;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4758917386095009;  // std dev = 0.262, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(J, K), interaction(L, A) )
%   | | | then return -0.012843238960454974;  // std dev = 2.973, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.3186036825862019;  // std dev = 2.801, 38.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=24 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.27618687131435016;  // std dev = 6.700, 192.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=113 */
%   | | | else return 0.2036168035953917;  // std dev = 6.111, 155.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=85 */
%   else return -0.1015963294878362;  // std dev = 1.40e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.3613686127315077;  // std dev = 0.263, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.047588393888531345;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.5636939408010295;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.390982020311372;  // std dev = 0.286, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13767285827321607;  // std dev = 0.078, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.30094792233087353;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=33 */
%   | | | else return 0.12943989052521904;  // std dev = 9.716, 395.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=203 */
%   else return -0.09269127618926046;  // std dev = 2.03e-07, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.3641249275517742;  // std dev = 2.045, 41.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=38 */
%   | | | else return -0.0964611696100201;  // std dev = 1.064, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(E, A), location(A, G) )
%   | | | then return -0.3099812768161571;  // std dev = 0.614, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.02637718037030631;  // std dev = 5.044, 108.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=49 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2612148888862178;  // std dev = 6.998, 254.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=180 */
%   | | | else return -0.3951289404666292;  // std dev = 0.379, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return -0.0776466121263269;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.06623075942316084;  // std dev = 2.142, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.4129659277565658;  // std dev = 3.873, 244.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=230 */
%   | | | else return -0.21438768123419027;  // std dev = 5.247, 170.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=39 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.30678925219859915;  // std dev = 0.409, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.4288703973865265;  // std dev = 0.144, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, H) )
%   | | then return 0.2525952757400332;  // std dev = 0.526, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.062071625959422026;  // std dev = 1.801, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.11998135474185526;  // std dev = 1.794, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   else return -0.07877675473109143;  // std dev = 5.96e-08, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, F) )
%   | | then if ( interaction(F, E), interaction(D, E) )
%   | | | then return 0.27231668168028916;  // std dev = 0.804, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | | else return 0.020548128619321437;  // std dev = 1.193, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | else if ( interaction(A, E), phenotype(D, G) )
%   | | | then return -0.16904167445035415;  // std dev = 1.519, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | | else return 0.04465885827998397;  // std dev = 6.509, 268.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=142 */
%   | else if ( location(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5069673050952714;  // std dev = 0.433, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.39373861129629667;  // std dev = 0.294, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.3364028366269736;  // std dev = 1.706, 19.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | else return 0.1797441867317221;  // std dev = 3.103, 54.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=35 */
%   else return -0.07324622576333721;  // std dev = 2.98e-08, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.29945248736376456;  // std dev = 3.480, 243.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=230 */
%   | | | else return -0.20177946390957413;  // std dev = 4.906, 192.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=39 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.0784071256961695;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2769241842532304;  // std dev = 0.432, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then return -0.14237946899567092;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.5091010103530651;  // std dev = 0.358, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1188236407873186;  // std dev = 1.312, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.06842697784420325;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.15237322929650085;  // std dev = 1.384, 57.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=55 */
%   | | | else return -0.05688145433494681;  // std dev = 1.321, 15.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | else if ( interaction(D, D), complex(A, H) )
%   | | | then return -0.1427431596300601;  // std dev = 1.387, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.026378165587669106;  // std dev = 6.094, 312.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=167 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.019909680425822078;  // std dev = 1.964, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.24403393023564482;  // std dev = 1.565, 16.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.33172337040062433;  // std dev = 1.460, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.11585335560217251;  // std dev = 2.156, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   else return -0.06419184008202566;  // std dev = 1.79e-07, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
Inference time using transfer learning 6.65904426574707
Refined model CLL: -0.199692


******************************************
Best model found
******************************************
Results 

CLL : -0.198054 

AUC ROC : 0.984485 

AUC PR : 0.27968 

Precision : 0.160232 

Recall : 0.954023 

F1 : 0.27438 

Total Learning Time : 70.76980495452881 

Total Inference Time : 60.34555101394653 

Total revision time: 165.37979555130005
Best scored revision CLL: -0.199692


Results 

CLL : -0.198054 

AUC ROC : 0.984485 

AUC PR : 0.27968 

Precision : 0.160232 

Recall : 0.954023 

F1 : 0.27438 

Total Learning Time : 165.41113567352295 

Total Inference Time : 60.34555101394653 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.504941940307617
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42681846299650367;  // std dev = 0.495, 466.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 7.45e-09, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3841768782707542;  // std dev = 10.471, 452.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.125444638528392;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2620904741609227;  // std dev = 0.499, 497.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360674;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2565453291136192;  // std dev = 10.519, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.21366518674038762;  // std dev = 10.319, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.06e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10909329832298092;  // std dev = 10.977, 486.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 299.000 (wgt'ed) examples reached here.  /* #neg=299 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1104288065338927;  // std dev = 0.495, 462.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.06253022837297251;  // std dev = 10.881, 479.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.37e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07480352405875292;  // std dev = 10.536, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04243468061074733;  // std dev = 10.706, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202591;  // std dev = 7.09e-09, 308.000 (wgt'ed) examples reached here.  /* #neg=308 */
Inference time using transfer learning 4.506113529205322
Parameter learned model CLL:-0.322747 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 201, 265], 'false,true': [0.0, 0, 0], 'false,false': [7.45e-09, 310, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.471, 187, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 301, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.499, 232, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 314, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.519, 190, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 324, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.319, 178, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.06e-08, 324, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.977, 221, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 299, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.495, 197, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 329, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.881, 214, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.37e-09, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.536, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.706, 202, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.09e-09, 308, 0]}]
{'': [0.24528449593840687, 5.730183352904034e-17], 'false': [nan, 5.730183352904034e-17]}
{'': [0.242555211841167, -8.557200721363333e-17], 'true': [0.242555211841167, nan], 'false': [nan, -8.557200721363333e-17], 'false,false': [nan, -8.557200721363333e-17], 'false,false,false': [nan, -8.557200721363333e-17]}
{'': [0.24889781344000445, -4.6671795939656264e-17], 'false': [nan, -4.6671795939656264e-17], 'false,false': [nan, -4.6671795939656264e-17]}
{'': [0.24320734210844047, -2.4671622769447922e-17], 'true': [nan, 0.24320734210844047], 'false': [nan, -2.4671622769447922e-17], 'false,false': [nan, -2.4671622769447922e-17], 'false,false,false': [-2.4671622769447922e-17, nan]}
{'': [0.24035791265178602, 1.1239294817192943e-16], 'true': [0.24035791265178602, nan], 'false': [nan, 1.1239294817192943e-16]}
{'': [0.247950854375179, 3.713120483696176e-17], 'true': [0.247950854375179, nan], 'true,true': [0.247950854375179, nan], 'false': [nan, 3.713120483696176e-17], 'false,false': [3.713120483696176e-17, nan]}
{'': [0.2445840595191269, 5.3992609100311564e-18], 'true': [0.2445840595191269, nan], 'false': [nan, 5.3992609100311564e-18], 'false,false': [5.3992609100311564e-18, nan]}
{'': [0.24716593808430065, 1.939546247839129e-17], 'true': [0.24716593808430065, nan], 'false': [nan, 1.939546247839129e-17], 'false,false': [nan, 1.939546247839129e-17]}
{'': [0.24341624345952564, -8.285246452426542e-17], 'true': [0.24341624345952564, nan], 'false': [nan, -8.285246452426542e-17], 'false,false': [nan, -8.285246452426542e-17]}
{'': [0.2454502519613547, 4.9743758895542726e-17], 'true': [0.2454502519613547, nan], 'false': [nan, 4.9743758895542726e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 15.99083399772644
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(A, E) )
%   | then if ( phenotype(A, F), location(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.4025933795439575;  // std dev = 4.725, 90.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=49 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7381489350995118;  // std dev = 1.625, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.2985159075765756;  // std dev = 5.183, 109.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=48 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.4860559118436956;  // std dev = 6.339, 172.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=108 */
%   | | | else return 0.28672036367094084;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7389126607580205;  // std dev = 0.199, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.15312723770018774;  // std dev = 2.981, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.33660171354282287;  // std dev = 7.062, 203.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=110 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.323930745180687;  // std dev = 4.081, 67.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
%   | | | else return 0.4361631568258302;  // std dev = 4.812, 103.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=66 */
%   else return -0.12544463852839216;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), location(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.6141423987618058;  // std dev = 0.225, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.02299301559721691;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.5623527949612347;  // std dev = 0.056, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.6618120856993547;  // std dev = 0.208, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2402544518020221;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.26310980590783123;  // std dev = 2.994, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | else if ( interaction(A, H), enzyme(A, I) )
%   | | | then return 0.4090292804788738;  // std dev = 3.609, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.2692314344388008;  // std dev = 8.595, 303.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=166 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.4307967435334889;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09044218966370016;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.43467562636004076;  // std dev = 0.102, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5566649843351252;  // std dev = 0.208, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2005565569214054;  // std dev = 0.102, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.2122992301512211;  // std dev = 2.968, 38.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.20935973719288378;  // std dev = 5.954, 148.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=81 */
%   | | | else return 0.3009729822895009;  // std dev = 6.725, 194.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=123 */
%   else return -0.10159632948783619;  // std dev = 1.46e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.3357437364829836;  // std dev = 0.149, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.3925387037709973;  // std dev = 0.116, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.45281873823002794;  // std dev = 0.139, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.10762391556138762;  // std dev = 1.843, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.12764775233736622;  // std dev = 3.749, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.07584169800413339;  // std dev = 2.522, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | else return 0.18667299790343675;  // std dev = 8.523, 304.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=177 */
%   else return -0.09269127618926046;  // std dev = 1.76e-07, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.2656335039515386;  // std dev = 0.131, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.0605311940242223;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), complex(A, H) )
%   | | | then return 0.29579079513724527;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34840366450560484;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(I, K), interaction(I, L) )
%   | | | then return 0.1711552504763147;  // std dev = 2.739, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return -0.04931329287589201;  // std dev = 3.162, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.07685505246226959;  // std dev = 4.357, 78.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=39 */
%   | | | else return 0.15123025261987;  // std dev = 7.764, 255.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=150 */
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.26363128527916546;  // std dev = 0.332, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.32227865574107256;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2190560146469721;  // std dev = 0.084, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.38425478614097724;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18413673891186294;  // std dev = 0.095, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, G), interaction(H, A) )
%   | | | then return 0.12171952542528143;  // std dev = 5.441, 123.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=71 */
%   | | | else return 0.05362499042826661;  // std dev = 8.376, 293.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=154 */
%   else return -0.07877675473109144;  // std dev = 2.58e-08, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), complex(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.20299641078775507;  // std dev = 0.194, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.07197777332286148;  // std dev = 2.862, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | else if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5118020005472297;  // std dev = 0.697, 70.000 (wgt'ed) examples reached here.  /* #pos=70 */
%   | | | else return -0.4562592514295615;  // std dev = 0.258, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(A, G), interaction(H, A) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3699724776872011;  // std dev = 0.894, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.030457316518544594;  // std dev = 3.806, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.13500163165757698;  // std dev = 2.366, 24.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=15 */
%   | | | else return -0.007314715038052274;  // std dev = 6.497, 174.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=86 */
%   else return -0.07324622576333767;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( interaction(G, A), interaction(D, G) )
%   | | | then return 0.054566489512139556;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4416042184432817;  // std dev = 0.404, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( enzyme(A, E), interaction(D, A) )
%   | | | then return -0.03628585961476321;  // std dev = 0.572, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.12092823998709037;  // std dev = 3.233, 64.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=42 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4193956558059156;  // std dev = 1.417, 71.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | | | else return -0.45030528440792494;  // std dev = 0.579, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.17781516591026483;  // std dev = 0.197, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.04814212583685884;  // std dev = 6.873, 225.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=120 */
%   else return -0.06842697784420318;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.26136726641672775;  // std dev = 0.828, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.0441490997882108;  // std dev = 0.665, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), phenotype(D, I) )
%   | | | then return -0.015632888727207105;  // std dev = 3.398, 76.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=34 */
%   | | | else return 0.10379564364881787;  // std dev = 3.783, 96.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=61 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( phenotype(J, L), complex(A, K) )
%   | | | then return -0.18461346907384424;  // std dev = 1.908, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.0032645145339434737;  // std dev = 3.529, 73.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=38 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.029669521123460572;  // std dev = 5.307, 145.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=82 */
%   | | | else return 0.19814214287750057;  // std dev = 1.786, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   else return -0.06419184008202591;  // std dev = 1.26e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
Inference time using transfer learning 5.039291620254517
Refined model CLL: -0.247241


******************************************
Best model found
******************************************
Results 

CLL : -0.253366 

AUC ROC : 0.952572 

AUC PR : 0.180916 

Precision : 0.043332 

Recall : 0.865385 

F1 : 0.082531 

Total Learning Time : 15.99083399772644 

Total Inference Time : 9.611536026000977 

Total revision time: 55.98152780532837
Best scored revision CLL: -0.247241


Results 

CLL : -0.253366 

AUC ROC : 0.952572 

AUC PR : 0.180916 

Precision : 0.043332 

Recall : 0.865385 

F1 : 0.082531 

Total Learning Time : 56.01286792755127 

Total Inference Time : 9.611536026000977 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.912715911865234
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4188776800387792;  // std dev = 0.496, 494.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.4106502179667751;  // std dev = 10.374, 453.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839224;  // std dev = 0.000, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29051971017882894;  // std dev = 0.496, 490.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360643;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.265901984711512;  // std dev = 10.498, 460.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783624;  // std dev = 1.30e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.18768237031256715;  // std dev = 10.714, 473.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.11935971160224347;  // std dev = 11.002, 492.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=277 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.19e-07, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09786060342642412;  // std dev = 0.495, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 2.98e-08, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.07460096407994572;  // std dev = 10.884, 484.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.61e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05595657838081553;  // std dev = 10.884, 484.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.061565115634071285;  // std dev = 10.632, 468.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820258;  // std dev = 8.23e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
Inference time using transfer learning 3.8088178634643555
Parameter learned model CLL:-0.329785 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 217, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.374, 176, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 213, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.498, 183, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.3e-07, 358, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.714, 196, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [11.002, 215, 277], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.19e-07, 364, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.495, 208, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.98e-08, 325, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.884, 207, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.884, 207, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.632, 191, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.23e-09, 337, 0]}]
{'': [0.2463120195381039, 1.189524669241239e-16], 'false': [nan, 1.189524669241239e-16]}
{'': [0.23757242616064872, -1.252262001665973e-16], 'true': [0.23757242616064872, nan], 'false': [nan, -1.252262001665973e-16], 'false,false': [nan, -1.252262001665973e-16], 'false,false,false': [nan, -1.252262001665973e-16]}
{'': [0.24573511037067636, -3.752866562113205e-17], 'false': [nan, -3.752866562113205e-17], 'false,false': [nan, -3.752866562113205e-17]}
{'': [0.23956049149338882, 4.7137960822073685e-17], 'true': [nan, 0.23956049149338882], 'false': [nan, 4.7137960822073685e-17], 'false,false': [nan, 4.7137960822073685e-17], 'false,false,false': [4.7137960822073685e-17, nan]}
{'': [0.24266858565496705, 1.1700554031977699e-16], 'true': [0.24266858565496705, nan], 'false': [nan, 1.1700554031977699e-16]}
{'': [0.2460299755436583, 3.9040809657148365e-17], 'true': [0.2460299755436583, nan], 'true,true': [0.2460299755436583, nan], 'false': [nan, 3.9040809657148365e-17], 'false,false': [3.9040809657148365e-17, nan]}
{'': [0.24493995111063835, 2.7328566760003853e-18], 'true': [0.24493995111063835, nan], 'false': [nan, 2.7328566760003853e-18], 'false,false': [2.7328566760003853e-18, nan]}
{'': [0.24477067823236076, 1.3024962858730887e-17], 'true': [0.24477067823236076, nan], 'false': [nan, 1.3024962858730887e-17], 'false,false': [nan, 1.3024962858730887e-17]}
{'': [0.24477067823236334, -8.44665355910782e-17], 'true': [0.24477067823236334, nan], 'false': [nan, -8.44665355910782e-17], 'false,false': [nan, -8.44665355910782e-17]}
{'': [0.24155800277595332, 6.654749287070672e-17], 'true': [0.24155800277595332, nan], 'false': [nan, 6.654749287070672e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 48.3392333984375
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, D) )
%   | | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 0.1996123497336587;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.40904713869232434;  // std dev = 9.090, 334.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=184 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.4581489350995123;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | else return 0.6763307532813301;  // std dev = 2.216, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   else return -0.1418510649004876;  // std dev = 2.06e-07, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.28052658778904543;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6746524200785587;  // std dev = 0.993, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.06640843804684737;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.7969854160296818;  // std dev = 0.096, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.22397203409385227;  // std dev = 4.780, 93.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=40 */
%   | | | else return 0.379878111090731;  // std dev = 8.584, 305.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=177 */
%   else return -0.12544463852839216;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5590605856620035;  // std dev = 0.076, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.22015252522880885;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.36054579289925415;  // std dev = 3.806, 62.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=39 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.3619896032102893;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5820547674819314;  // std dev = 0.178, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return 0.2424654364882208;  // std dev = 5.475, 123.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=62 */
%   | | | else return 0.19597736392336934;  // std dev = 8.416, 285.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=134 */
%   else return -0.1123163781936064;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(D, F), complex(E, F) )
%   | | | then return 0.2749900304354434;  // std dev = 1.025, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else return 0.4595041829666977;  // std dev = 0.260, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(G, A), location(D, H) )
%   | | | then return 0.56945051398296;  // std dev = 0.307, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3706931186587045;  // std dev = 0.911, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.013891158956001168;  // std dev = 2.830, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.22591936303838986;  // std dev = 3.820, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.1462870450581178;  // std dev = 4.582, 90.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=42 */
%   | | | else return 0.2482537896562904;  // std dev = 7.893, 258.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=148 */
%   else return -0.10159632948783613;  // std dev = 1.62e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( complex(A, E), phenotype(D, G) )
%   | | | then return 0.38208889198458906;  // std dev = 0.199, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16709413080244;  // std dev = 0.956, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, H), interaction(H, I) )
%   | | | then return 0.3086964286907631;  // std dev = 0.930, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.44888134039313154;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6054075441189015;  // std dev = 1.462, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | | else return -0.3521075700163318;  // std dev = 0.218, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.15895908678551665;  // std dev = 7.987, 270.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=141 */
%   | | | else return 0.012239776315677131;  // std dev = 2.557, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   else return -0.09269127618926074;  // std dev = 1.69e-07, 381.000 (wgt'ed) examples reached here.  /* #neg=381 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(D, F), interaction(F, A) )
%   | | | then return 0.27077799478186537;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.36827811390457915;  // std dev = 0.244, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.02272730642438255;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2816640116978828;  // std dev = 0.181, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.22525932636531407;  // std dev = 8.139, 347.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=221 */
%   | | | else return -0.3300946112142517;  // std dev = 0.555, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.048557763186770464;  // std dev = 1.604, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.08031354175643651;  // std dev = 1.936, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.22782270152915396;  // std dev = 0.137, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16792708841230447;  // std dev = 0.795, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22340644610379562;  // std dev = 0.201, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.30333621984207376;  // std dev = 0.089, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return -0.011340130940671496;  // std dev = 4.121, 86.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=34 */
%   | | | else return 0.15331835409238195;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11651673452741777;  // std dev = 7.830, 327.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=185 */
%   | | | else return 0.033165051426572924;  // std dev = 2.346, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   else return -0.07877675473109141;  // std dev = 6.99e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.40060991679202396;  // std dev = 1.861, 103.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | | | else return -0.39461338718837097;  // std dev = 0.797, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return -0.26142222961035766;  // std dev = 0.237, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.3322778345324417;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.10879794582149181;  // std dev = 5.820, 188.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=114 */
%   | | | else return -0.03910937797803543;  // std dev = 2.165, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.08832235253942003;  // std dev = 1.863, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | | else return 0.24225145948453755;  // std dev = 2.796, 53.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=39 */
%   else return -0.07324622576333714;  // std dev = 6.83e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.36353786783888237;  // std dev = 1.100, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.03244308271463603;  // std dev = 1.603, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.04415772208514563;  // std dev = 2.430, 44.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=21 */
%   | | | else return 0.09728824577016798;  // std dev = 5.766, 202.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=121 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return 0.2401335866876227;  // std dev = 0.852, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.04294092481149703;  // std dev = 2.187, 39.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=19 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.10142065964962765;  // std dev = 2.877, 51.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=34 */
%   | | | else return 0.012209923448272203;  // std dev = 2.585, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   else return -0.06842697784420328;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.2337539011985099;  // std dev = 4.131, 187.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=158 */
%   | | | else return -0.41053491249185164;  // std dev = 1.073, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.23219433000479034;  // std dev = 0.140, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.350439654310621;  // std dev = 0.249, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.1763649478229778;  // std dev = 0.580, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.030707962044741327;  // std dev = 1.837, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.002318825195971446;  // std dev = 2.010, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | | else return 0.09944644806680139;  // std dev = 4.607, 131.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=85 */
%   else return -0.06419184008202573;  // std dev = 1.65e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
Inference time using transfer learning 5.692310333251953
Refined model CLL: -0.219901


******************************************
Best model found
******************************************
Results 

CLL : -0.209257 

AUC ROC : 0.990019 

AUC PR : 0.577255 

Precision : 0.121495 

Recall : 0.98913 

F1 : 0.216409 

Total Learning Time : 48.3392333984375 

Total Inference Time : 49.71184849739075 

Total revision time: 130.6950056552887
Best scored revision CLL: -0.219901


Results 

CLL : -0.209257 

AUC ROC : 0.990019 

AUC PR : 0.577255 

Precision : 0.121495 

Recall : 0.98913 

F1 : 0.216409 

Total Learning Time : 130.7263457775116 

Total Inference Time : 49.71184849739075 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.182474136352539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42642202746898583;  // std dev = 0.495, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.29e-08, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3962662818911771;  // std dev = 10.662, 473.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30887899820215176;  // std dev = 0.493, 486.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21280904411339086;  // std dev = 11.264, 513.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 9.19e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.1860119829582699;  // std dev = 10.979, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926076;  // std dev = 8.43e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1410340780523673;  // std dev = 10.979, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.19e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1061366962858647;  // std dev = 0.494, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 5.96e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.07502648632341413;  // std dev = 11.039, 497.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 4.17e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.026932965634098166;  // std dev = 11.409, 524.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420321;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03612296984955925;  // std dev = 11.210, 509.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202562;  // std dev = 9.63e-09, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
Inference time using transfer learning 3.192686080932617
Parameter learned model CLL:-0.31641 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 215, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.662, 190, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 203, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.264, 230, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.19e-08, 346, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.979, 210, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.43e-09, 384, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.979, 210, 283], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.19e-07, 355, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.494, 210, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.96e-08, 339, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.039, 214, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.17e-09, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.409, 241, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.21, 226, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.63e-09, 390, 0]}]
{'': [0.24533878485831165, 1.652998725553011e-16], 'false': [nan, 1.652998725553011e-16]}
{'': [0.2403354057811002, -1.215663200148216e-16], 'true': [0.2403354057811002, nan], 'false': [nan, -1.215663200148216e-16], 'false,false': [nan, -1.215663200148216e-16], 'false,false,false': [nan, -1.215663200148216e-16]}
{'': [0.24322596487663434, -2.669388693087808e-17], 'false': [nan, -2.669388693087808e-17], 'false,false': [nan, -2.669388693087808e-17]}
{'': [0.24733156260805234, 2.4386401696968757e-17], 'true': [nan, 0.24733156260805234], 'false': [nan, 2.4386401696968757e-17], 'false,false': [nan, 2.4386401696968757e-17], 'false,false,false': [2.4386401696968757e-17, nan]}
{'': [0.244518595015822, 7.170190367370803e-17], 'true': [0.244518595015822, nan], 'false': [nan, 7.170190367370803e-17]}
{'': [0.24451859501581613, 4.003057666254086e-17], 'true': [0.24451859501581613, nan], 'true,true': [0.24451859501581613, nan], 'false': [nan, 4.003057666254086e-17], 'false,false': [4.003057666254086e-17, nan]}
{'': [0.24451859501581838, 1.0479981353393808e-17], 'true': [0.24451859501581838, nan], 'false': [nan, 1.0479981353393808e-17], 'false,false': [1.0479981353393808e-17, nan]}
{'': [0.2451813496674241, 1.817909046169847e-17], 'true': [0.2451813496674241, nan], 'false': [nan, 1.817909046169847e-17], 'false,false': [nan, 1.817909046169847e-17]}
{'': [0.24839388730260384, -8.52549485958573e-17], 'true': [0.24839388730260384, nan], 'false': [nan, -8.52549485958573e-17], 'false,false': [nan, -8.52549485958573e-17]}
{'': [0.2468648800954141, 9.223391281501301e-17], 'true': [0.2468648800954141, nan], 'false': [nan, 9.223391281501301e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 38.33560037612915
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995118;  // std dev = 1.46e-07, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( complex(D, F), enzyme(A, G) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7445125714631483;  // std dev = 2.105, 44.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=39 */
%   | | | else return 0.21420954116011787;  // std dev = 5.501, 132.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=47 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.40702111555064124;  // std dev = 5.739, 133.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=73 */
%   | | | else return 0.47936105631163184;  // std dev = 5.573, 132.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=82 */
%   else return -0.14185106490048754;  // std dev = 2.29e-07, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.7253971156246968;  // std dev = 0.028, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.3771055560626726;  // std dev = 0.999, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7906633073192215;  // std dev = 0.183, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, F), enzyme(A, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.228321226647179;  // std dev = 2.215, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.5310987984233864;  // std dev = 2.903, 44.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=32 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.2754579030297779;  // std dev = 5.656, 137.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=65 */
%   | | | else return 0.3769116448043348;  // std dev = 7.470, 232.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=136 */
%   else return -0.1254446385283922;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.5699941883193921;  // std dev = 0.143, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2183940314727222;  // std dev = 1.303, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5583716473755294;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6577600417064693;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.21829500329309856;  // std dev = 0.062, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.21615881700577266;  // std dev = 6.403, 179.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=86 */
%   | | | else return 0.29457974235084056;  // std dev = 8.197, 274.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=155 */
%   else return -0.11231637819360633;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.43932784927707164;  // std dev = 0.259, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.18675800798879352;  // std dev = 0.560, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.40196612755934225;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6083300301085136;  // std dev = 0.124, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18156396512382522;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, G), interaction(H, A) )
%   | | | then return 0.257576685959663;  // std dev = 6.472, 183.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=106 */
%   | | | else return 0.1801705862007401;  // std dev = 8.015, 265.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=136 */
%   else return -0.10159632948783615;  // std dev = 1.60e-07, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.09302586907872862;  // std dev = 0.948, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.44561190130628925;  // std dev = 0.575, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.1973087483343664;  // std dev = 1.516, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.12428115681925353;  // std dev = 4.750, 103.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=51 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.22488010755438637;  // std dev = 0.770, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.451158718542049;  // std dev = 0.261, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16133221285093016;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.20634237397705302;  // std dev = 8.630, 318.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=186 */
%   else return -0.09269127618926061;  // std dev = 1.85e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then if ( location(D, E), location(A, E) )
%   | | | then return 0.26643058835853256;  // std dev = 0.103, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.08093722380712064;  // std dev = 0.434, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24557465680138085;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4174404654492399;  // std dev = 0.150, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return -0.0760712762234779;  // std dev = 3.244, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | | | else return 0.10917067941020121;  // std dev = 2.831, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.09949939662404202;  // std dev = 9.098, 352.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=185 */
%   | | | else return 0.2318681689200658;  // std dev = 2.786, 33.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=21 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2145237338689962;  // std dev = 0.129, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.39880287418043286;  // std dev = 0.244, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.18761231560566527;  // std dev = 0.970, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(G, I) )
%   | | | then return -0.02327237387290944;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.32884453096180855;  // std dev = 0.094, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09450094405550813;  // std dev = 9.336, 377.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=197 */
%   | | | else return 0.1844730107900187;  // std dev = 3.178, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   else return -0.07877675473109143;  // std dev = 9.66e-08, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(D, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(D, B) )
%   | | | then return 0.09819423933843922;  // std dev = 1.368, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.36409730730143913;  // std dev = 1.685, 44.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=40 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return -0.15616809028378342;  // std dev = 3.188, 76.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=19 */
%   | | | else return 0.07832251978303353;  // std dev = 7.966, 266.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=148 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.01283447991788906;  // std dev = 1.840, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.28309337682174124;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.4949227806898449;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17677591857620642;  // std dev = 3.474, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   else return -0.07324622576333709;  // std dev = 8.16e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.3886936964637594;  // std dev = 2.061, 121.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=119 */
%   | | | else return -0.01569808930970423;  // std dev = 8.280, 313.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=150 */
%   | | else if ( interaction(A, G), interaction(H, A) )
%   | | | then return -0.3472765296294034;  // std dev = 0.256, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.5067557891603317;  // std dev = 0.242, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.393489061869215;  // std dev = 0.264, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.24380676500888207;  // std dev = 0.850, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.05911103554665121;  // std dev = 1.452, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.1641223835750648;  // std dev = 0.209, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.37202322050098197;  // std dev = 0.729, 59.000 (wgt'ed) examples reached here.  /* #pos=59 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11051558504093624;  // std dev = 0.045, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.4151960409167313;  // std dev = 0.750, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.0011678983134891232;  // std dev = 2.479, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return 0.12028883232179789;  // std dev = 6.836, 225.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=139 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.07960538524301657;  // std dev = 1.958, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return -0.05765109879546056;  // std dev = 3.334, 51.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=26 */
%   else return -0.06419184008202575;  // std dev = 1.61e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
Inference time using transfer learning 3.9087395668029785
Refined model CLL: -0.24589


******************************************
Best model found
******************************************
Results 

CLL : -0.243364 

AUC ROC : 0.953737 

AUC PR : 0.248252 

Precision : 0.058498 

Recall : 0.860465 

F1 : 0.109548 

Total Learning Time : 38.33560037612915 

Total Inference Time : 39.40475344657898 

Total revision time: 111.83839344978333
Best scored revision CLL: -0.24589


Results 

CLL : -0.243364 

AUC ROC : 0.953737 

AUC PR : 0.248252 

Precision : 0.058498 

Recall : 0.860465 

F1 : 0.109548 

Total Learning Time : 111.86973357200623 

Total Inference Time : 39.40475344657898 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.099699020385742
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4210231865965139;  // std dev = 0.496, 501.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004874;  // std dev = 1.42e-08, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.37433682580740246;  // std dev = 10.941, 490.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3384214898186878;  // std dev = 0.489, 465.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360633;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24330052925993378;  // std dev = 10.849, 484.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783616;  // std dev = 1.56e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.16705553432551207;  // std dev = 11.103, 501.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1450622148178344;  // std dev = 10.864, 485.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=282 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.23e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10672719232374225;  // std dev = 0.494, 487.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 2.08e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.09221322390835221;  // std dev = 10.737, 477.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633377;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05822611858895639;  // std dev = 10.880, 486.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03898381099124577;  // std dev = 10.941, 490.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202561;  // std dev = 9.68e-09, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
Inference time using transfer learning 3.416081666946411
Parameter learned model CLL:-0.329453 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 219, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.42e-08, 379, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.941, 208, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 183, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.849, 202, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.56e-07, 368, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.103, 219, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.864, 203, 282], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.23e-07, 353, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.494, 205, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.08e-07, 360, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.737, 195, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 389, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.88, 204, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.941, 208, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.68e-09, 395, 0]}]
{'': [0.24604682849869414, 1.9685220911559503e-16], 'false': [nan, 1.9685220911559503e-16]}
{'': [0.24429820907954852, -1.1892987386297974e-16], 'true': [0.24429820907954852, nan], 'false': [nan, -1.1892987386297974e-16], 'false,false': [nan, -1.1892987386297974e-16], 'false,false,false': [nan, -1.1892987386297974e-16]}
{'': [0.23866805411030345, -2.598394312952494e-17], 'false': [nan, -2.598394312952494e-17], 'false,false': [nan, -2.598394312952494e-17]}
{'': [0.24316986544634703, 6.637202864606914e-17], 'true': [nan, 0.24316986544634703], 'false': [nan, 6.637202864606914e-17], 'false,false': [nan, 6.637202864606914e-17], 'false,false,false': [6.637202864606914e-17, nan]}
{'': [0.24604682849869247, 1.2064851365868752e-16], 'true': [0.24604682849869247, nan], 'false': [nan, 1.2064851365868752e-16]}
{'': [0.24336698905303084, 4.277346497139413e-17], 'true': [0.24336698905303084, nan], 'true,true': [0.24336698905303084, nan], 'false': [nan, 4.277346497139413e-17], 'false,false': [4.277346497139413e-17, nan]}
{'': [0.243750237172651, 1.1965737043182242e-16], 'true': [0.243750237172651, nan], 'false': [nan, 1.1965737043182242e-16], 'false,false': [1.1965737043182242e-16, nan]}
{'': [0.2416834777105347, -6.849705036247752e-17], 'true': [0.2416834777105347, nan], 'false': [nan, -6.849705036247752e-17], 'false,false': [nan, -6.849705036247752e-17]}
{'': [0.2435604328608446, -9.11747400111162e-17], 'true': [0.2435604328608446, nan], 'false': [nan, -9.11747400111162e-17], 'false,false': [nan, -9.11747400111162e-17]}
{'': [0.24429820907954816, 9.443922437317787e-17], 'true': [0.24429820907954816, nan], 'false': [nan, 9.443922437317787e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 21.26706051826477
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.8409075557891676;  // std dev = 0.991, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.52903501104888;  // std dev = 4.176, 79.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.34299741994799804;  // std dev = 4.973, 99.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=48 */
%   | | | else return 0.435689042051381;  // std dev = 6.755, 187.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=108 */
%   else return -0.14185106490048746;  // std dev = 2.58e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.7229400605454663;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.21792293863195797;  // std dev = 1.365, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.7867864673500993;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.3577207602308473;  // std dev = 1.108, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6885895675937076;  // std dev = 0.942, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.22508103477076746;  // std dev = 5.068, 111.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=48 */
%   | | | else return 0.3635759031442502;  // std dev = 8.422, 296.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=168 */
%   else return -0.12544463852839216;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.5591866334844049;  // std dev = 0.006, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.2998694274527991;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.6469547456321466;  // std dev = 0.133, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5850805896180874;  // std dev = 0.150, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, H), interaction(A, I) )
%   | | | then return 0.09155342625747767;  // std dev = 2.885, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.2522142586842778;  // std dev = 9.069, 342.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=178 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6545335634949709;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.38010743000633423;  // std dev = 3.585, 56.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   else return -0.11231637819360643;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return 0.467273737927882;  // std dev = 0.311, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.21334009096674392;  // std dev = 1.204, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.4400095207886849;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5503119605485631;  // std dev = 0.141, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( interaction(I, I) )
%   | | | then return -0.022070523892608482;  // std dev = 2.123, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.2507501251239894;  // std dev = 2.367, 33.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.2744680491803696;  // std dev = 5.091, 109.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=66 */
%   | | | else return 0.20841757574516467;  // std dev = 7.979, 263.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=143 */
%   else return -0.10159632948783649;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.39585758763148965;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.37399807617633807;  // std dev = 0.922, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3275630769620472;  // std dev = 0.123, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.40081527837384834;  // std dev = 0.188, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.47999283916060415;  // std dev = 4.045, 153.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=132 */
%   | | | else return -0.328491994528395;  // std dev = 0.652, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.008267819836432034;  // std dev = 3.038, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.13912389135175487;  // std dev = 6.303, 168.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=89 */
%   else return -0.09269127618926043;  // std dev = 1.97e-07, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2572024032111864;  // std dev = 0.084, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.046168014838335734;  // std dev = 1.109, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16852259940123493;  // std dev = 0.136, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.10167689201776954;  // std dev = 2.935, 64.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=31 */
%   | else if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.46897216628713195;  // std dev = 0.886, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.42525226880186306;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3117168316164953;  // std dev = 0.276, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.1573275092435674;  // std dev = 7.659, 283.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=162 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(E, F), interaction(F, D) )
%   | | | then return 0.3379241214982962;  // std dev = 1.176, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.06939287061171896;  // std dev = 1.739, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(D, A), location(E, G) )
%   | | | then return -0.2215019412982891;  // std dev = 0.460, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.033945044781797;  // std dev = 4.637, 117.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=53 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return 0.2085897701086094;  // std dev = 1.224, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | else return -0.09888670436598744;  // std dev = 1.702, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.39159927604975914;  // std dev = 0.806, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.17600816408582787;  // std dev = 6.273, 218.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=141 */
%   else return -0.07877675473109141;  // std dev = 7.30e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( complex(D, E), phenotype(A, F) )
%   | | | then return 0.07936573713832631;  // std dev = 0.540, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.18031835143406802;  // std dev = 0.124, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.23059687140534174;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.30457736909367894;  // std dev = 0.256, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.38778421778066663;  // std dev = 1.481, 89.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=87 */
%   | | | else return -0.36107475686406815;  // std dev = 0.868, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0054389708079736546;  // std dev = 6.452, 237.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=109 */
%   | | | else return 0.08276413598824998;  // std dev = 3.815, 68.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=40 */
%   else return -0.07324622576333707;  // std dev = 8.43e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.14227976991516478;  // std dev = 0.046, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.05185033316966895;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.19231785236167168;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24722682818578398;  // std dev = 0.216, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.030010182040795762;  // std dev = 2.739, 62.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=27 */
%   | | | else return 0.0464932608863962;  // std dev = 2.734, 78.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | | else if ( enzyme(A, J), location(A, K) )
%   | | | then return 0.027555260344607164;  // std dev = 3.540, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | | | else return 0.1181056881551926;  // std dev = 6.057, 189.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=115 */
%   else return -0.06842697784420326;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.20368645851142073;  // std dev = 1.171, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.35637640534752013;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, G), location(A, H) )
%   | | | then return -0.11947873629009845;  // std dev = 3.218, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.12787748675135147;  // std dev = 1.258, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.17701151872040047;  // std dev = 0.172, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.02997664995536635;  // std dev = 3.322, 107.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=55 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.0275790834710451;  // std dev = 2.146, 37.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=22 */
%   | | | else return 0.1009865320015143;  // std dev = 5.836, 193.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=122 */
%   else return -0.06419184008202578;  // std dev = 1.56e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
Inference time using transfer learning 8.714905977249146
Refined model CLL: -0.225888


******************************************
Best model found
******************************************
Results 

CLL : -0.213518 

AUC ROC : 0.977156 

AUC PR : 0.313687 

Precision : 0.076493 

Recall : 0.942529 

F1 : 0.141501 

Total Learning Time : 21.26706051826477 

Total Inference Time : 20.36359453201294 

Total revision time: 74.62392473220825
Best scored revision CLL: -0.225888


Results 

CLL : -0.213518 

AUC ROC : 0.977156 

AUC PR : 0.313687 

Precision : 0.076493 

Recall : 0.942529 

F1 : 0.141501 

Total Learning Time : 74.65066528320312 

Total Inference Time : 20.36359453201294 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.305096864700317
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43928928597670097;  // std dev = 0.493, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3669958727414817;  // std dev = 10.661, 464.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33072807778517643;  // std dev = 0.490, 441.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.27478019188326513;  // std dev = 10.103, 431.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 9.19e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.1706882036720637;  // std dev = 10.615, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926046;  // std dev = 1.09e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13150823879267248;  // std dev = 10.583, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09508235982981704;  // std dev = 0.495, 462.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 5.58e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.10974119576097885;  // std dev = 10.140, 433.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.46e-09, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04516884693652881;  // std dev = 10.615, 461.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.013489355610087777;  // std dev = 10.867, 478.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.27e-09, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
Inference time using transfer learning 4.816332578659058
Parameter learned model CLL:-0.329475 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 191, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.661, 199, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.49, 176, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.103, 166, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.19e-08, 346, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.615, 196, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.583, 194, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 335, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.495, 197, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.58e-08, 338, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.14, 168, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.46e-09, 380, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.615, 196, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.867, 213, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.27e-09, 375, 0]}]
{'': [0.2434162434595292, 1.4676452519261327e-16], 'false': [nan, 1.4676452519261327e-16]}
{'': [0.2449418475029734, -1.1596394797271666e-16], 'true': [0.2449418475029734, nan], 'false': [nan, -1.1596394797271666e-16], 'false,false': [nan, -1.1596394797271666e-16], 'false,false,false': [nan, -1.1596394797271666e-16]}
{'': [0.23981777140184274, -2.944237855359531e-17], 'false': [nan, -2.944237855359531e-17], 'false,false': [nan, -2.944237855359531e-17]}
{'': [0.23680966403066006, 2.4386401696968757e-17], 'true': [nan, 0.23680966403066006], 'false': [nan, 2.4386401696968757e-17], 'false,false': [nan, 2.4386401696968757e-17], 'false,false,false': [2.4386401696968757e-17, nan]}
{'': [0.2443993770027435, 1.186790129771719e-16], 'true': [0.2443993770027435, nan], 'false': [nan, 1.186790129771719e-16]}
{'': [0.2440182076219495, 3.9769182971647396e-17], 'true': [0.2440182076219495, nan], 'true,true': [0.2440182076219495, nan], 'false': [nan, 3.9769182971647396e-17], 'false,false': [3.9769182971647396e-17, nan]}
{'': [0.24458405951912726, 9.197113813462836e-18], 'true': [0.24458405951912726, nan], 'false': [nan, 9.197113813462836e-18], 'false,false': [9.197113813462836e-18, nan]}
{'': [0.23745393063059583, 5.843279076974508e-18], 'true': [0.23745393063059583, nan], 'false': [nan, 5.843279076974508e-18], 'false,false': [nan, 5.843279076974508e-18]}
{'': [0.24439937700274114, -7.42378046586701e-17], 'true': [0.24439937700274114, nan], 'false': [nan, -7.42378046586701e-17], 'false,false': [nan, -7.42378046586701e-17]}
{'': [0.24704136832338647, 8.526512829121202e-17], 'true': [0.24704136832338647, nan], 'false': [nan, 8.526512829121202e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 32.126728773117065
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.4199768920887562;  // std dev = 9.570, 372.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=209 */
%   else return -0.14185106490048754;  // std dev = 2.23e-07, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7256933007953837;  // std dev = 0.030, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( phenotype(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.68092913852671;  // std dev = 3.490, 124.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=110 */
%   | | | else return -0.19661878926738235;  // std dev = 0.183, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109543;  // std dev = 7.30e-08, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.33168103565646134;  // std dev = 7.183, 208.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=111 */
%   else return -0.12544463852839216;  // std dev = 0.000, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.563672707516269;  // std dev = 0.146, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.4833192730733042;  // std dev = 0.971, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.13541718321066992;  // std dev = 0.950, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11641457861369273;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(G, A), location(G, H) )
%   | | | then return 0.2640441750817138;  // std dev = 8.537, 337.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=179 */
%   | | | else return 0.4394421452061753;  // std dev = 3.200, 63.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=46 */
%   else return -0.11231637819360668;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(A, F) )
%   | | then return 0.42222700605686325;  // std dev = 0.113, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(G, D), interaction(D, G) )
%   | | | then return -0.011882571658999752;  // std dev = 1.003, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3785737833847833;  // std dev = 1.008, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6288024771174077;  // std dev = 0.204, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.22054998256419353;  // std dev = 6.426, 201.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=107 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.24086389287954887;  // std dev = 2.695, 41.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=24 */
%   | | | else return 0.15249431790352602;  // std dev = 5.865, 157.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=77 */
%   else return -0.1015963294878362;  // std dev = 1.40e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.3414557707216384;  // std dev = 0.185, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5550212508899961;  // std dev = 0.695, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12832905885053641;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.33437687894881685;  // std dev = 0.608, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(F, A), enzyme(A, G) )
%   | | then if ( interaction(A, H), complex(F, I) )
%   | | | then return 0.15418581447368446;  // std dev = 1.666, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.3939195539399897;  // std dev = 2.437, 47.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=37 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.18224269248981498;  // std dev = 3.470, 78.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=47 */
%   | | | else return 0.26264378884029826;  // std dev = 4.673, 99.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=64 */
%   else return -0.09269127618926055;  // std dev = 1.91e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( complex(F, G) )
%   | | | then return 0.26036086505466116;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.06583052161541562;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, H), interaction(A, H) )
%   | | | then return 0.27011493848861734;  // std dev = 0.100, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.35322882629360824;  // std dev = 0.151, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.13569963060484283;  // std dev = 0.991, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.05036409809485968;  // std dev = 2.258, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.14589527151102455;  // std dev = 7.046, 283.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=165 */
%   | | | else return 0.08192714987486652;  // std dev = 3.646, 75.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=39 */
%   else return -0.08518475138839678;  // std dev = 1.10e-07, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), phenotype(A, H) )
%   | | | then return 0.07719055725945145;  // std dev = 1.204, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.3178079176233369;  // std dev = 0.465, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, E), interaction(I, D) )
%   | | | then return -0.05187907059655037;  // std dev = 2.030, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.05418324356057002;  // std dev = 5.245, 157.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=81 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.23427750254012736;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2996380261548871;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return 0.017223801122156046;  // std dev = 1.607, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.13525528687212596;  // std dev = 5.758, 194.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=119 */
%   else return -0.07877675473109143;  // std dev = 5.96e-08, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.20071297004640362;  // std dev = 0.113, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17628772861873326;  // std dev = 0.604, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( complex(D, G), phenotype(D, H) )
%   | | | then return 0.08784217191090134;  // std dev = 2.781, 81.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=47 */
%   | | | else return 0.1746184878854085;  // std dev = 2.149, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K), interaction(J, A) )
%   | | | then return 0.13529603908023294;  // std dev = 0.983, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.012331070130971278;  // std dev = 5.020, 143.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=72 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.008206836189678253;  // std dev = 3.408, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.13128057693477077;  // std dev = 4.642, 94.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=59 */
%   else return -0.07324622576333722;  // std dev = 0.000, 401.000 (wgt'ed) examples reached here.  /* #neg=401 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.1887649828607489;  // std dev = 0.142, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3978647764527988;  // std dev = 0.661, 87.000 (wgt'ed) examples reached here.  /* #pos=87 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.3250779916044698;  // std dev = 0.375, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.4706884907290145;  // std dev = 0.852, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.24619813547747327;  // std dev = 0.905, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.04217302334986515;  // std dev = 3.342, 77.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=31 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2098673765484198;  // std dev = 1.464, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.09794524721705336;  // std dev = 4.992, 144.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=89 */
%   else return -0.06842697784420318;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.22444635903015803;  // std dev = 2.904, 147.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=133 */
%   | | | else return -0.30560479788705974;  // std dev = 1.075, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.25310607752612346;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.34610458784529335;  // std dev = 0.206, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.17435337513008622;  // std dev = 0.256, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.05719444147592367;  // std dev = 2.094, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.07799302418650986;  // std dev = 3.605, 79.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=48 */
%   | | | else return 0.16118513470478987;  // std dev = 3.587, 79.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=58 */
%   else return -0.06419184008202586;  // std dev = 1.36e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
Inference time using transfer learning 7.2670347690582275
Refined model CLL: -0.213068


******************************************
Best model found
******************************************
Results 

CLL : -0.213906 

AUC ROC : 0.986236 

AUC PR : 0.365259 

Precision : 0.072505 

Recall : 0.971154 

F1 : 0.134937 

Total Learning Time : 32.126728773117065 

Total Inference Time : 28.477750301361084 

Total revision time: 90.53459548950195
Best scored revision CLL: -0.213068


Results 

CLL : -0.213906 

AUC ROC : 0.986236 

AUC PR : 0.365259 

Precision : 0.072505 

Recall : 0.971154 

F1 : 0.134937 

Total Learning Time : 90.56133604049683 

Total Inference Time : 28.477750301361084 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.605915069580078
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43764684304929874;  // std dev = 0.494, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3568706261509992;  // std dev = 11.031, 494.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32149684526402067;  // std dev = 0.492, 470.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360642;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.25524601667063623;  // std dev = 10.649, 469.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783634;  // std dev = 9.19e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.17670669348900192;  // std dev = 10.899, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.12454294776129969;  // std dev = 11.016, 493.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=277 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0925581513631077;  // std dev = 0.496, 494.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 9.42e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.11221791992762457;  // std dev = 10.480, 459.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333702;  // std dev = 5.35e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.080255200402394;  // std dev = 10.532, 462.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04019385472943071;  // std dev = 10.793, 478.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202572;  // std dev = 8.88e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
Inference time using transfer learning 3.8457155227661133
Parameter learned model CLL:-0.33267 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 201, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [11.031, 217, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 193, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.649, 192, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.19e-08, 346, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.899, 208, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [11.016, 216, 277], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 337, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.496, 217, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.42e-08, 370, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.48, 182, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.35e-09, 314, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.532, 185, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.793, 201, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.88e-09, 362, 0]}]
{'': [0.24368008263160962, 1.8760988009708529e-16], 'false': [nan, 1.8760988009708529e-16]}
{'': [0.24631201953810458, -1.2166827667125003e-16], 'true': [0.24631201953810458, nan], 'false': [nan, -1.2166827667125003e-16], 'false,false': [nan, -1.2166827667125003e-16], 'false,false,false': [nan, -1.2166827667125003e-16]}
{'': [0.2420144861928466, -2.944237855359531e-17], 'false': [nan, -2.944237855359531e-17], 'false,false': [nan, -2.944237855359531e-17]}
{'': [0.24178831701983428, 2.4386401696968757e-17], 'true': [nan, 0.24178831701983428], 'false': [nan, 2.4386401696968757e-17], 'false,false': [nan, 2.4386401696968757e-17], 'false,false,false': [2.4386401696968757e-17, nan]}
{'': [0.24493995111064024, 1.2064851365868752e-16], 'true': [0.24493995111064024, nan], 'false': [nan, 1.2064851365868752e-16]}
{'': [0.24617258248337012, 3.821539194555435e-17], 'true': [0.24617258248337012, nan], 'true,true': [0.24617258248337012, nan], 'false': [nan, 3.821539194555435e-17], 'false,false': [3.821539194555435e-17, nan]}
{'': [0.24631201953809767, 2.400482215405744e-17], 'true': [0.24631201953809767, nan], 'false': [nan, 2.400482215405744e-17], 'false,false': [2.400482215405744e-17, nan]}
{'': [0.23929068117201024, 2.7578788509796882e-17], 'true': [0.23929068117201024, nan], 'false': [nan, 2.7578788509796882e-17], 'false,false': [nan, 2.7578788509796882e-17]}
{'': [0.24008639268379137, -9.215778867362024e-17], 'true': [0.24008639268379137, nan], 'false': [nan, -9.215778867362024e-17], 'false,false': [nan, -9.215778867362024e-17]}
{'': [0.24368008263160845, 7.973977524932064e-17], 'true': [0.24368008263160845, nan], 'false': [nan, 7.973977524932064e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 59.31188893318176
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.832507909458486;  // std dev = 0.987, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return 0.44905802600860323;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=13 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.1418510649004877;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.3828126122295538;  // std dev = 7.458, 223.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=117 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.49344305274657185;  // std dev = 4.438, 85.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=54 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3998156017661785;  // std dev = 4.228, 72.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=39 */
%   else return -0.14185106490048766;  // std dev = 1.84e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), interaction(D, F) )
%   | | | then return 0.7010260039634177;  // std dev = 1.269, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return 0.27093242812040297;  // std dev = 2.136, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14553086928286335;  // std dev = 0.190, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.420405444556644;  // std dev = 7.328, 229.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=142 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7688993957004863;  // std dev = 0.122, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6266100511568734;  // std dev = 0.945, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.3132892272498;  // std dev = 5.428, 118.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=61 */
%   else return -0.1254446385283922;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0.5723937675440931;  // std dev = 1.028, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.7112668631472776;  // std dev = 0.909, 69.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=68 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.16121564494374027;  // std dev = 0.441, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.26541507022621325;  // std dev = 0.069, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), phenotype(I, J) )
%   | | | then return 0.38799389653538385;  // std dev = 1.162, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.6628016435458007;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.15164338266523292;  // std dev = 4.941, 116.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else return 0.2658167381925208;  // std dev = 6.976, 196.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=105 */
%   else return -0.11231637819360647;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), phenotype(E, F) )
%   | | | then return 0.4581239441507376;  // std dev = 4.421, 189.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=158 */
%   | | | else return 0.16243409088229044;  // std dev = 6.494, 216.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=105 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.19584195507291682;  // std dev = 0.194, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return -0.3162462785068063;  // std dev = 0.155, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.30500348754777257;  // std dev = 0.644, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0049712765068896094;  // std dev = 2.128, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else return 0.3020733579243258;  // std dev = 0.489, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else return -0.10159632948783626;  // std dev = 1.25e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.3740059833014782;  // std dev = 3.981, 183.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=158 */
%   | | | else return -0.29313419727375223;  // std dev = 0.678, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1249918918363917;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.24031808293570775;  // std dev = 0.148, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.44081450009048606;  // std dev = 0.226, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.09340439301452824;  // std dev = 2.781, 57.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=25 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.16690675176008182;  // std dev = 2.883, 39.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
%   | | | else return 0.30260046813761665;  // std dev = 4.403, 97.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=64 */
%   else return -0.09269127618926061;  // std dev = 1.85e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return 0.30063944791083863;  // std dev = 0.298, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.07593339367450551;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.3084043935402782;  // std dev = 0.599, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.4703053710311156;  // std dev = 0.310, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3457343310411918;  // std dev = 0.178, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.026496402117378432;  // std dev = 3.800, 146.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=60 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.1227894292730666;  // std dev = 5.923, 190.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=106 */
%   | | | else return 0.17964756063648318;  // std dev = 4.062, 99.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=60 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(D, E) )
%   | | then if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.229991433695767;  // std dev = 0.669, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.12827695562153252;  // std dev = 0.865, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, G), interaction(H, D) )
%   | | | then return 0.28989376425597924;  // std dev = 0.175, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3881216054171438;  // std dev = 0.197, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(K, A) )
%   | | | then return 0.2318958954521944;  // std dev = 1.969, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | | else return -0.03236051171907311;  // std dev = 4.473, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return 0.017079861351576922;  // std dev = 2.732, 52.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=24 */
%   | | | else return 0.1320917172020555;  // std dev = 5.817, 194.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=113 */
%   else return -0.07877675473109143;  // std dev = 4.71e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.2124867120780891;  // std dev = 0.327, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.04097725887826757;  // std dev = 0.760, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(H, D), phenotype(H, I) )
%   | | | then return 0.3120897560179383;  // std dev = 0.226, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2423397801850112;  // std dev = 0.156, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(J, A), interaction(A, J) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.027479801849768594;  // std dev = 2.028, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | | | else return -0.09085655828181534;  // std dev = 1.378, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.28983277540722824;  // std dev = 0.226, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.08731978885089021;  // std dev = 7.427, 333.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=182 */
%   else return -0.07324622576333711;  // std dev = 7.15e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.1340762893888393;  // std dev = 0.014, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.08353930863571805;  // std dev = 0.565, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, G), interaction(D, H) )
%   | | | then return 0.18262264598745848;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2346425577287034;  // std dev = 0.226, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( enzyme(J, I) )
%   | | | then return -0.0872673759298174;  // std dev = 0.930, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.1776678073643292;  // std dev = 2.397, 48.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=33 */
%   | | else if ( phenotype(A, K), interaction(A, L) )
%   | | | then return -0.01744900674371979;  // std dev = 2.866, 98.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=41 */
%   | | | else return 0.05493371026132398;  // std dev = 6.933, 287.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=156 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(E, A), complex(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.17078852684327042;  // std dev = 0.236, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.03546928367477706;  // std dev = 1.717, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.30819813325179224;  // std dev = 0.728, 68.000 (wgt'ed) examples reached here.  /* #pos=68 */
%   | | | else return -0.23433226032286228;  // std dev = 0.413, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, A) )
%   | | | then return -0.0026409095602480605;  // std dev = 3.337, 71.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=38 */
%   | | | else return 0.11837843513079756;  // std dev = 3.942, 84.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.012446408266946405;  // std dev = 4.074, 94.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=51 */
%   | | | else return 0.057000931204484406;  // std dev = 3.096, 53.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=30 */
%   else return -0.0641918400820258;  // std dev = 1.49e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
Inference time using transfer learning 5.699267387390137
Refined model CLL: -0.205814


******************************************
Best model found
******************************************
Results 

CLL : -0.192207 

AUC ROC : 0.983187 

AUC PR : 0.489974 

Precision : 0.114011 

Recall : 0.902174 

F1 : 0.202439 

Total Learning Time : 59.31188893318176 

Total Inference Time : 55.80974769592285 

Total revision time: 147.74894857406616
Best scored revision CLL: -0.205814


Results 

CLL : -0.192207 

AUC ROC : 0.983187 

AUC PR : 0.489974 

Precision : 0.114011 

Recall : 0.902174 

F1 : 0.202439 

Total Learning Time : 147.77568912506104 

Total Inference Time : 55.80974769592285 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.603821277618408
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4465065234570963;  // std dev = 0.492, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.38799158662789524;  // std dev = 10.728, 477.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3077271763943984;  // std dev = 0.493, 485.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360643;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21475247315155158;  // std dev = 11.210, 509.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783597;  // std dev = 2.09e-07, 394.000 (wgt'ed) examples reached here.  /* #neg=394 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.18185342796578008;  // std dev = 10.994, 494.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10499992592112724;  // std dev = 11.409, 524.000 (wgt'ed) examples reached here.  /* #neg=241 #pos=283 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.30e-07, 393.000 (wgt'ed) examples reached here.  /* #neg=393 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08214924593428938;  // std dev = 0.498, 521.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 2.16e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.08112072034620102;  // std dev = 11.126, 503.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333767;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07226124866644455;  // std dev = 10.979, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420325;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04167776146279548;  // std dev = 11.140, 504.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.17e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
Inference time using transfer learning 3.3252758979797363
Parameter learned model CLL:-0.317428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 198, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.728, 194, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 202, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.21, 226, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.09e-07, 394, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.994, 211, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [11.409, 241, 283], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.3e-07, 393, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.498, 238, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.16e-07, 380, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.126, 220, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.979, 210, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.14, 221, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.17e-09, 370, 0]}]
{'': [0.24219293657963395, 1.7666764206569248e-16], 'false': [nan, 1.7666764206569248e-16]}
{'': [0.2412967138254908, -1.2166827667125003e-16], 'true': [0.2412967138254908, nan], 'false': [nan, -1.2166827667125003e-16], 'false,false': [nan, -1.2166827667125003e-16], 'false,false,false': [nan, -1.2166827667125003e-16]}
{'': [0.24302688914868154, -2.960594732333751e-17], 'false': [nan, -2.960594732333751e-17], 'false,false': [nan, -2.960594732333751e-17]}
{'': [0.24686488009541388, 1.1045873747539628e-16], 'true': [nan, 0.24686488009541388], 'false': [nan, 1.1045873747539628e-16], 'false,false': [nan, 1.1045873747539628e-16], 'false,false,false': [1.1045873747539628e-16, nan]}
{'': [0.24468930813486633, 1.1859949224482385e-16], 'true': [0.24468930813486633, nan], 'false': [nan, 1.1859949224482385e-16]}
{'': [0.2483938873026034, 4.293992359873379e-17], 'true': [0.2483938873026034, nan], 'true,true': [0.2483938873026034, nan], 'false': [nan, 4.293992359873379e-17], 'false,false': [4.293992359873379e-17, nan]}
{'': [0.24813495382053494, 1.2270886061646468e-16], 'true': [0.24813495382053494, nan], 'false': [nan, 1.2270886061646468e-16], 'false,false': [1.2270886061646468e-16, nan]}
{'': [0.2460782027516816, -6.54998834587113e-17], 'true': [0.2460782027516816, nan], 'false': [nan, -6.54998834587113e-17], 'false,false': [nan, -6.54998834587113e-17]}
{'': [0.24451859501582265, -9.550959718693128e-17], 'true': [0.24451859501582265, nan], 'false': [nan, -9.550959718693128e-17], 'false,false': [nan, -9.550959718693128e-17]}
{'': [0.24621677374653259, 8.401687753920104e-17], 'true': [0.24621677374653259, nan], 'false': [nan, 8.401687753920104e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.937010526657104
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( complex(D, F), interaction(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.3770168596278151;  // std dev = 5.144, 106.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=55 */
%   | | | else return 0.46599207235441126;  // std dev = 8.541, 306.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=186 */
%   else return -0.14185106490048763;  // std dev = 2.00e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7224494604401169;  // std dev = 0.123, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.31011252128708144;  // std dev = 1.180, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.7948034738989315;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.47262832604708654;  // std dev = 3.488, 56.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=38 */
%   | | | else return 0.302245393250955;  // std dev = 9.587, 370.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=187 */
%   else return -0.1254446385283922;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.5716683052031812;  // std dev = 0.162, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.3472236224692942;  // std dev = 1.016, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else return 0.5546314270257725;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.3730183014139906;  // std dev = 2.985, 40.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=26 */
%   | | | else return 0.21965720884444434;  // std dev = 6.767, 191.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=92 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.23346968379405214;  // std dev = 3.350, 45.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | else return 0.3410730724924557;  // std dev = 6.303, 166.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=100 */
%   else return -0.11231637819360642;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.5512130440784441;  // std dev = 0.565, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.032256184660542385;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), enzyme(G, E) )
%   | | | then return -0.19312115003013341;  // std dev = 1.624, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.14704983836075533;  // std dev = 3.783, 60.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48616250005005296;  // std dev = 0.922, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.20731465372929775;  // std dev = 8.975, 340.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=183 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.2857899194263696;  // std dev = 2.501, 28.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | else return 0.6692034783031482;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.10159632948783649;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.35122184800654055;  // std dev = 0.221, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.1562371336708641;  // std dev = 0.856, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.34488149808788726;  // std dev = 0.085, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.20854241696685402;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.22677065022415424;  // std dev = 5.251, 122.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=75 */
%   | | | else return 0.15312921815804953;  // std dev = 8.791, 317.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=166 */
%   else return -0.0926912761892605;  // std dev = 1.98e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.26893675929262206;  // std dev = 0.129, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.538847112103198;  // std dev = 1.049, 87.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=86 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.3040469107595353;  // std dev = 0.278, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.43622666853721526;  // std dev = 0.305, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, A) )
%   | | | then return 0.21514035275025226;  // std dev = 0.692, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4201585838838693;  // std dev = 0.371, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.09239362834103697;  // std dev = 3.953, 67.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
%   | | | else return 0.1616584616132902;  // std dev = 7.054, 212.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=122 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B), complex(E, D) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2096442990769843;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.25868754172771447;  // std dev = 0.040, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.37319579863777835;  // std dev = 2.084, 30.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=26 */
%   | | | else return -0.041652676850138015;  // std dev = 4.998, 145.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=56 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.06694270369223182;  // std dev = 2.985, 49.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=27 */
%   | | | else return 0.3496326239216965;  // std dev = 1.913, 30.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=25 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return -0.0017723768366494851;  // std dev = 3.114, 50.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=23 */
%   | | | else return 0.12217366478052548;  // std dev = 5.934, 172.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=102 */
%   else return -0.07877675473109141;  // std dev = 8.69e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E), complex(A, F) )
%   | | | then return 0.15016817411246408;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2105383843783739;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.22219043084824286;  // std dev = 0.931, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.01847583677058117;  // std dev = 4.379, 129.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=62 */
%   | else if ( interaction(A, H), location(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.29288937555188566;  // std dev = 2.389, 51.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=45 */
%   | | | else return -0.007166818988864224;  // std dev = 5.096, 126.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=59 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.2754995446833768;  // std dev = 1.845, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.17005116142744797;  // std dev = 4.889, 113.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=76 */
%   else return -0.07324622576333709;  // std dev = 8.16e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.16422047127176212;  // std dev = 0.142, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.27433504929693747;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(D, F) )
%   | | | then return -0.07601998592088306;  // std dev = 1.299, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.28925006217320093;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.1393620834713248;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.23157390537229552;  // std dev = 0.135, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.09785150825795699;  // std dev = 2.904, 69.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=42 */
%   | | | else return 0.014078566384340496;  // std dev = 9.062, 384.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=200 */
%   else return -0.0684269778442032;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.12685733777982466;  // std dev = 0.040, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.16044616353458419;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.12589456518191008;  // std dev = 2.487, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.0011624503083608965;  // std dev = 2.538, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), complex(J, K) )
%   | | | then return 0.19872891655204195;  // std dev = 2.698, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | | | else return 0.03851080623562157;  // std dev = 3.103, 47.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=25 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.04941871471983638;  // std dev = 2.144, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.06028592820997448;  // std dev = 7.052, 253.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=149 */
%   else return -0.06419184008202569;  // std dev = 1.74e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
Inference time using transfer learning 2.613823652267456
Refined model CLL: -0.263596


******************************************
Best model found
******************************************
Results 

CLL : -0.264206 

AUC ROC : 0.946304 

AUC PR : 0.245878 

Precision : 0.046693 

Recall : 0.837209 

F1 : 0.088452 

Total Learning Time : 17.937010526657104 

Total Inference Time : 11.545165777206421 

Total revision time: 63.9620361328125
Best scored revision CLL: -0.263596


Results 

CLL : -0.264206 

AUC ROC : 0.946304 

AUC PR : 0.245878 

Precision : 0.046693 

Recall : 0.837209 

F1 : 0.088452 

Total Learning Time : 63.98877668380737 

Total Inference Time : 11.545165777206421 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.193723917007446
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.46329914969178265;  // std dev = 0.489, 466.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3919468739302753;  // std dev = 10.621, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 376.000 (wgt'ed) examples reached here.  /* #neg=376 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.27737119046857545;  // std dev = 0.497, 506.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360649;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.255853582562569;  // std dev = 10.688, 474.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.16885892293895893;  // std dev = 11.045, 497.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926049;  // std dev = 1.05e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13824044505470276;  // std dev = 10.911, 488.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=282 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.19e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11852073303681224;  // std dev = 0.491, 476.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109141;  // std dev = 7.30e-08, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.05159544410154978;  // std dev = 11.201, 508.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.61e-09, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07852102537967678;  // std dev = 10.688, 474.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442033;  // std dev = 0.000, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.038348591230382034;  // std dev = 10.956, 491.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
Inference time using transfer learning 3.405689239501953
Parameter learned model CLL:-0.32891 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.489, 184, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.621, 188, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 376, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 224, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.688, 192, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 324, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.045, 215, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.911, 206, 282], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.19e-07, 357, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.491, 194, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 349, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.201, 226, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 357, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.688, 192, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.956, 209, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 360, 0]}]
{'': [0.23894343237120164, 1.3644480070755548e-16], 'false': [nan, 1.3644480070755548e-16]}
{'': [0.24000000000000354, -1.2283318570320881e-16], 'true': [0.24000000000000354, nan], 'false': [nan, -1.2283318570320881e-16], 'false,false': [nan, -1.2283318570320881e-16], 'false,false,false': [nan, -1.2283318570320881e-16]}
{'': [0.24671530566013666, -3.036507417778206e-17], 'false': [nan, -3.036507417778206e-17], 'false,false': [nan, -3.036507417778206e-17]}
{'': [0.24098702131069116, -2.6042268478861695e-17], 'true': [nan, 0.24098702131069116], 'false': [nan, -2.6042268478861695e-17], 'false,false': [nan, -2.6042268478861695e-17], 'false,false,false': [-2.6042268478861695e-17, nan]}
{'': [0.24545664328020494, 1.1164954710919654e-16], 'true': [0.24545664328020494, nan], 'false': [nan, 1.1164954710919654e-16]}
{'': [0.24393644181671972, 3.9806315728857154e-17], 'true': [0.24393644181671972, nan], 'true,true': [0.24393644181671972, nan], 'false': [nan, 3.9806315728857154e-17], 'false,false': [3.9806315728857154e-17, nan]}
{'': [0.2414554056916865, 1.5269543032093844e-17], 'true': [0.2414554056916865, nan], 'false': [nan, 1.5269543032093844e-17], 'false,false': [1.5269543032093844e-17, nan]}
{'': [0.24696199392398702, 1.3061447348531253e-17], 'true': [0.24696199392398702, nan], 'false': [nan, 1.3061447348531253e-17], 'false,false': [nan, 1.3061447348531253e-17]}
{'': [0.24098702131069058, -1.1332328282443309e-16], 'true': [0.24098702131069058, nan], 'false': [nan, -1.1332328282443309e-16], 'false,false': [nan, -1.1332328282443309e-16]}
{'': [0.24447384903829067, 7.956598343146955e-17], 'true': [0.24447384903829067, nan], 'false': [nan, 7.956598343146955e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 20.726433277130127
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), phenotype(H, J) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2370963035205636;  // std dev = 4.728, 95.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=36 */
%   | | | else return 0.3844647245731949;  // std dev = 9.234, 342.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=180 */
%   else return -0.1418510649004873;  // std dev = 3.01e-07, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.7673142087194729;  // std dev = 1.728, 137.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=134 */
%   | | | else return 0.3614638553787279;  // std dev = 3.124, 40.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=22 */
%   | | else return -0.18964444108128023;  // std dev = 0.128, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109542;  // std dev = 7.30e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.2722267699685894;  // std dev = 5.933, 143.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=67 */
%   | | | else return 0.41870200112788863;  // std dev = 3.743, 60.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=37 */
%   else return -0.1254446385283922;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(G, A) )
%   | | | then return 0.604309748587453;  // std dev = 0.998, 44.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=43 */
%   | | | else return 0.14350948444148146;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5998609391166922;  // std dev = 3.299, 146.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=133 */
%   | | | else return -0.21091124305166112;  // std dev = 0.460, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5650617136636851;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.4335053100356573;  // std dev = 2.617, 37.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return 0.3312338644158677;  // std dev = 4.766, 105.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=62 */
%   else return -0.11231637819360651;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(A, F) )
%   | | | then return 0.41430688393949033;  // std dev = 0.196, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.1056644156027342;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.4637971389541255;  // std dev = 0.218, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5753093710481135;  // std dev = 0.153, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.15032443075305327;  // std dev = 0.120, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.2609722338881794;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.3055265830981071;  // std dev = 4.531, 131.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=87 */
%   | | | else return 0.17749222693563407;  // std dev = 7.113, 297.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=149 */
%   else return -0.10159632948783598;  // std dev = 2.04e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.3146907318250153;  // std dev = 0.136, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.10820316549526456;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.33137994356201445;  // std dev = 0.126, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.4267640301678013;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.1486660930618491;  // std dev = 4.926, 150.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=82 */
%   | | | else return -0.2803659595220515;  // std dev = 0.449, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.21150359732161966;  // std dev = 4.172, 133.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=81 */
%   | | | else return 0.16070823431124331;  // std dev = 5.296, 142.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=73 */
%   else return -0.09269127618926064;  // std dev = 1.83e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.24799676383538494;  // std dev = 0.096, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.04172636112126109;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.3032299852196079;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3460228271140998;  // std dev = 0.159, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1408960977687247;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.06766853662270524;  // std dev = 3.870, 108.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=50 */
%   | | | else return 0.1643528772532853;  // std dev = 7.132, 314.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=186 */
%   else return -0.08518475138839678;  // std dev = 1.23e-07, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(D, B) )
%   | | | then return 0.22365840266583814;  // std dev = 0.052, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.181627501391315;  // std dev = 1.729, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return -0.008429080608634374;  // std dev = 2.751, 51.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=24 */
%   | | | else return 0.12060896032787657;  // std dev = 2.843, 59.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=35 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.20661608975779489;  // std dev = 0.084, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2691212206393452;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06026802606810666;  // std dev = 4.950, 197.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=97 */
%   | | | else return 0.13274854647928253;  // std dev = 5.367, 154.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=89 */
%   else return -0.07877675473109143;  // std dev = 8.69e-08, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.1690807268445227;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.19188900018806476;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, F), phenotype(D, G) )
%   | | | then return 0.251917990084996;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21896284555349374;  // std dev = 0.129, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(I, J) )
%   | | | then return -0.03943199308718531;  // std dev = 3.076, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | | else return 0.0534870653482172;  // std dev = 4.162, 157.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=81 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return -0.0442131696141859;  // std dev = 2.606, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.149958216451166;  // std dev = 5.651, 177.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=111 */
%   else return -0.07324622576333768;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(D, F), phenotype(D, G) )
%   | | | then return 0.07925800257994291;  // std dev = 0.560, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.1788229320951921;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.17395758328937844;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2377434706491938;  // std dev = 0.179, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( complex(I, J), complex(A, J) )
%   | | | then return -0.13837769944094397;  // std dev = 1.295, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.03035227110511925;  // std dev = 2.551, 53.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=23 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.12361979281968932;  // std dev = 2.917, 72.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=44 */
%   | | | else return 0.05958576348470552;  // std dev = 6.960, 293.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=165 */
%   else return -0.06842697784420336;  // std dev = 0.000, 404.000 (wgt'ed) examples reached here.  /* #neg=404 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), complex(D, F) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.16141920907966154;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.14162766650449843;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.14642326395451916;  // std dev = 0.083, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.2035851484242064;  // std dev = 0.160, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.21520723668653138;  // std dev = 0.399, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.048211345932186574;  // std dev = 3.142, 64.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=34 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.004541354573037291;  // std dev = 4.519, 138.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | | else return 0.0711718799146752;  // std dev = 5.957, 226.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=133 */
%   else return -0.06419184008202566;  // std dev = 1.79e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
Inference time using transfer learning 4.813319683074951
Refined model CLL: -0.222339


******************************************
Best model found
******************************************
Results 

CLL : -0.220211 

AUC ROC : 0.972275 

AUC PR : 0.276549 

Precision : 0.067058 

Recall : 0.91954 

F1 : 0.125 

Total Learning Time : 20.726433277130127 

Total Inference Time : 16.859275102615356 

Total revision time: 71.03767466545105
Best scored revision CLL: -0.222339


Results 

CLL : -0.220211 

AUC ROC : 0.972275 

AUC PR : 0.276549 

Precision : 0.067058 

Recall : 0.91954 

F1 : 0.125 

Total Learning Time : 71.06406545639038 

Total Inference Time : 16.859275102615356 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.241016149520874
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43050314676257495;  // std dev = 0.495, 463.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 1.02e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.38358203631728616;  // std dev = 10.471, 452.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839213;  // std dev = 0.000, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29573208759562153;  // std dev = 0.495, 467.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360654;  // std dev = 0.000, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22390231140917263;  // std dev = 10.824, 475.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783649;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.1918450521410312;  // std dev = 10.583, 459.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.05e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14932180595694414;  // std dev = 10.536, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.15e-07, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11752083845845193;  // std dev = 0.492, 452.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109141;  // std dev = 6.99e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.09209861665499958;  // std dev = 10.421, 449.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.56e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03795781960813354;  // std dev = 10.810, 474.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420312;  // std dev = 0.000, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04177648881844156;  // std dev = 10.645, 463.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.79e-09, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
Inference time using transfer learning 4.853334665298462
Parameter learned model CLL:-0.32691 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 198, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 330, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.471, 187, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 319, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 202, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.824, 210, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 330, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.583, 194, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 322, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.536, 191, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.15e-07, 338, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.492, 187, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.99e-08, 345, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.421, 184, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.56e-09, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.81, 209, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 328, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.645, 198, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.79e-09, 326, 0]}]
{'': [0.24476486805461925, 1.049665405100148e-16], 'false': [nan, 1.049665405100148e-16]}
{'': [0.24255521184117668, -1.1137033475863638e-16], 'true': [0.24255521184117668, nan], 'false': [nan, -1.1137033475863638e-16], 'false,false': [nan, -1.1137033475863638e-16], 'false,false,false': [nan, -1.1137033475863638e-16]}
{'': [0.24545025196135742, -3.3761168000297156e-17], 'false': [nan, -3.3761168000297156e-17], 'false,false': [nan, -3.3761168000297156e-17]}
{'': [0.24664819944598101, -1.2111523905001707e-17], 'true': [nan, 0.24664819944598101], 'false': [nan, -1.2111523905001707e-17], 'false,false': [nan, -1.2111523905001707e-17], 'false,false,false': [-1.2111523905001707e-17, nan]}
{'': [0.24401820762195178, 1.1171188198091636e-16], 'true': [0.24401820762195178, nan], 'false': [nan, 1.1171188198091636e-16]}
{'': [0.24341624345952395, 3.9416202057697863e-17], 'true': [0.24341624345952395, nan], 'true,true': [0.24341624345952395, nan], 'false': [nan, 3.9416202057697863e-17], 'false,false': [3.9416202057697863e-17, nan]}
{'': [0.2425552118411775, 1.4159366111161416e-17], 'true': [0.2425552118411775, nan], 'false': [nan, 1.4159366111161416e-17], 'false,false': [1.4159366111161416e-17, nan]}
{'': [0.24186387964345346, 2.140188963132832e-17], 'true': [0.24186387964345346, nan], 'false': [nan, 2.140188963132832e-17], 'false,false': [nan, 2.140188963132832e-17]}
{'': [0.2465105307197921, -7.108135218636673e-17], 'true': [0.2465105307197921, nan], 'false': [nan, -7.108135218636673e-17], 'false,false': [nan, -7.108135218636673e-17]}
{'': [0.24476486805461828, 6.061953938137357e-17], 'true': [0.24476486805461828, nan], 'false': [nan, 6.061953938137357e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 16.31783890724182
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.18018283340459706;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | | | else return 0.3568365991415048;  // std dev = 9.760, 381.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=190 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.7395094851247731;  // std dev = 0.967, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.20654543927331362;  // std dev = 1.020, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.16523008669500147;  // std dev = 1.29e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.4449508929987134;  // std dev = 4.207, 79.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=51 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, H) )
%   | | | then return 0.33498990056041444;  // std dev = 5.021, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | | | else return 0.5449246336613119;  // std dev = 2.793, 45.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.7280391727467099;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.28925769282708425;  // std dev = 6.716, 183.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=88 */
%   else return -0.12544463852839216;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then return 0.5894270496202276;  // std dev = 0.239, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.24255628974719726;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.17791778928708474;  // std dev = 0.216, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.2096117695622449;  // std dev = 6.611, 182.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=85 */
%   | | | else return 0.31554215008513586;  // std dev = 7.676, 247.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=140 */
%   else return -0.11231637819360657;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.4416458022890782;  // std dev = 0.204, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( enzyme(D, F) )
%   | | | then return 0.6444089322078197;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5613685311777283;  // std dev = 0.150, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.24306931483509225;  // std dev = 2.755, 37.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=20 */
%   | | | else return 0.024106370894060217;  // std dev = 3.165, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.1961450443706838;  // std dev = 5.311, 119.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=60 */
%   | | | else return 0.28353487708959535;  // std dev = 7.055, 215.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=129 */
%   else return -0.10159632948783627;  // std dev = 1.17e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( phenotype(A, F), location(A, G) )
%   | | | then return 0.3078735881738229;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3578015869483005;  // std dev = 0.120, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( enzyme(D, H), phenotype(A, I) )
%   | | | then return 0.4666827364189019;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.3911193163813772;  // std dev = 0.132, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6115723238493103;  // std dev = 1.317, 88.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=86 */
%   | | | else return -0.34605593620157804;  // std dev = 0.547, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.29223828524066786;  // std dev = 3.962, 84.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=56 */
%   | | | else return 0.19157603779887372;  // std dev = 6.034, 149.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=83 */
%   else return -0.09269127618926046;  // std dev = 1.66e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), location(A, G) )
%   | | | then return 0.24294425795256075;  // std dev = 1.83e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2866714578627924;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.14460080415577292;  // std dev = 1.534, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | | else return -0.015950480491448545;  // std dev = 3.819, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.3045532641264973;  // std dev = 1.212, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.07522746172082147;  // std dev = 5.885, 169.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=85 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.10203181826024217;  // std dev = 2.833, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return 0.22762673445904397;  // std dev = 4.862, 127.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=83 */
%   else return -0.08518475138839678;  // std dev = 1.12e-07, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), enzyme(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A), interaction(G, F) )
%   | | | then return 0.2184938601386806;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4684682327369657;  // std dev = 0.426, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | else if ( complex(H, D), interaction(H, H) )
%   | | | then return -0.3559531492613394;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.28756834977818635;  // std dev = 0.094, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, I), location(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3123449088018755;  // std dev = 1.767, 48.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=45 */
%   | | | else return -0.020903371074632932;  // std dev = 5.694, 170.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=71 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.22836082422143852;  // std dev = 2.237, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.12460876823210519;  // std dev = 5.417, 138.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=83 */
%   else return -0.07877675473109143;  // std dev = 3.33e-08, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A), location(A, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.05528149527769166;  // std dev = 0.664, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.1668484351423879;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.19267680772932994;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.29270495220643744;  // std dev = 0.225, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, J), phenotype(A, K) )
%   | | | then return -0.1680558483135133;  // std dev = 0.088, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.25521452332983013;  // std dev = 0.241, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.05906552000275779;  // std dev = 6.672, 241.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=130 */
%   | | | else return 0.12640996696125284;  // std dev = 5.405, 155.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=94 */
%   else return -0.07324622576333704;  // std dev = 8.82e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(E, F) )
%   | | | then return 0.22470248913067742;  // std dev = 0.399, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.34149176519758584;  // std dev = 1.415, 84.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=82 */
%   | | else if ( interaction(A, G), enzyme(G, D) )
%   | | | then return -0.19372005802968947;  // std dev = 0.233, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.329235942849891;  // std dev = 0.419, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(A, I) )
%   | | | then return 0.12277042952546909;  // std dev = 0.993, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.2541495145863292;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.19520246782501544;  // std dev = 0.140, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.025342806102059186;  // std dev = 7.778, 259.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=136 */
%   else return -0.0684269778442032;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.13555841927445592;  // std dev = 0.143, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.3299679618526472;  // std dev = 1.056, 27.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=26 */
%   | | else if ( interaction(A, G), complex(D, H) )
%   | | | then return -0.06252269266890939;  // std dev = 3.552, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.058020436252915655;  // std dev = 6.238, 230.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=133 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, L) )
%   | | | then return 0.1734451033831107;  // std dev = 1.694, 26.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | else return 0.02310215636886184;  // std dev = 1.775, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.25366829901619464;  // std dev = 1.216, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.38714881690784625;  // std dev = 0.951, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else return -0.06419184008202579;  // std dev = 1.54e-07, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
Inference time using transfer learning 5.804202556610107
Refined model CLL: -0.238369


******************************************
Best model found
******************************************
Results 

CLL : -0.242123 

AUC ROC : 0.95662 

AUC PR : 0.150365 

Precision : 0.039933 

Recall : 0.923077 

F1 : 0.076555 

Total Learning Time : 16.31783890724182 

Total Inference Time : 11.527212381362915 

Total revision time: 58.386056423187256
Best scored revision CLL: -0.238369


Results 

CLL : -0.242123 

AUC ROC : 0.95662 

AUC PR : 0.150365 

Precision : 0.039933 

Recall : 0.923077 

F1 : 0.076555 

Total Learning Time : 58.41244721412659 

Total Inference Time : 11.527212381362915 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.960550308227539
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4669401438907168;  // std dev = 0.488, 455.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.37327909355430555;  // std dev = 10.761, 476.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839224;  // std dev = 0.000, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2965768727915682;  // std dev = 0.495, 483.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360647;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2173237945694353;  // std dev = 11.073, 497.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783641;  // std dev = 5.58e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.20407984521023056;  // std dev = 10.599, 466.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926055;  // std dev = 1.01e-08, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.13247129435659932;  // std dev = 10.884, 484.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=277 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.21e-07, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06308841220048117;  // std dev = 0.499, 517.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109141;  // std dev = 1.03e-07, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.09349084959440028;  // std dev = 10.761, 476.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333706;  // std dev = 4.75e-09, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05005574644959505;  // std dev = 11.016, 493.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420329;  // std dev = 0.000, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03642140819538255;  // std dev = 11.031, 494.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 3.7847037315368652
Parameter learned model CLL:-0.320305 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.488, 178, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.761, 199, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 382, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 206, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [11.073, 220, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.58e-08, 339, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.599, 189, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.01e-08, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.884, 207, 277], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.21e-07, 361, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.499, 240, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.03e-07, 380, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.761, 199, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.75e-09, 327, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.016, 216, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 377, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.031, 217, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 343, 0]}]
{'': [0.23816447288975076, 1.1859949224482385e-16], 'false': [nan, 1.1859949224482385e-16]}
{'': [0.24328702069063735, -1.2555401744452033e-16], 'true': [0.24328702069063735, nan], 'false': [nan, -1.2555401744452033e-16], 'false,false': [nan, -1.2555401744452033e-16], 'false,false,false': [nan, -1.2555401744452033e-16]}
{'': [0.24459790217284, -4.083578941150001e-17], 'false': [nan, -4.083578941150001e-17], 'false,false': [nan, -4.083578941150001e-17]}
{'': [0.24671165827965214, 9.169983684219582e-18], 'true': [nan, 0.24671165827965214], 'false': [nan, 9.169983684219582e-18], 'false,false': [nan, 9.169983684219582e-18], 'false,false,false': [9.169983684219582e-18, nan]}
{'': [0.2410847501335466, 1.0059479339145065e-16], 'true': [0.2410847501335466, nan], 'false': [nan, 1.0059479339145065e-16]}
{'': [0.2447706782323606, 4.059541253477027e-17], 'true': [0.2447706782323606, nan], 'true,true': [0.2447706782323606, nan], 'false': [nan, 4.059541253477027e-17], 'false,false': [4.059541253477027e-17, nan]}
{'': [0.24871955074843832, 2.804773956947764e-17], 'true': [0.24871955074843832, nan], 'false': [nan, 2.804773956947764e-17], 'false,false': [2.804773956947764e-17, nan]}
{'': [0.2432870206906265, 2.2408171139223344e-17], 'true': [0.2432870206906265, nan], 'false': [nan, 2.2408171139223344e-17], 'false,false': [nan, 2.2408171139223344e-17]}
{'': [0.24617258248336743, -1.0189314761811781e-16], 'true': [0.24617258248336743, nan], 'false': [nan, -1.0189314761811781e-16], 'false,false': [nan, -1.0189314761811781e-16]}
{'': [0.24631201953810358, 7.05622796992082e-17], 'true': [0.24631201953810358, nan], 'false': [nan, 7.05622796992082e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 40.421725034713745
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), interaction(F, A) )
%   | | then return 0.8581489350995115;  // std dev = 2.53e-07, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(H, I) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.3295775065280825;  // std dev = 4.176, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | | | else return 0.4422759192264949;  // std dev = 8.748, 315.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=184 */
%   else return -0.14185106490048752;  // std dev = 2.44e-07, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then return 0.7221758264441864;  // std dev = 0.061, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.2194734122109545;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6742771112161222;  // std dev = 0.987, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), complex(A, H) )
%   | | | then return 0.7487140345702717;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4357734100442405;  // std dev = 1.584, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2013568885822653;  // std dev = 4.493, 85.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=33 */
%   | | | else return 0.3271814597297378;  // std dev = 9.282, 346.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=184 */
%   else return -0.12544463852839222;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5583414861339352;  // std dev = 0.078, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.24245892330034283;  // std dev = 1.183, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.6118590866550331;  // std dev = 0.193, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.21941724708110566;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, G), interaction(H, A) )
%   | | | then return 0.22177930315497715;  // std dev = 5.882, 140.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=68 */
%   | | | else return 0.3005322684138869;  // std dev = 8.452, 295.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=166 */
%   else return -0.11231637819360657;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.41613349778586395;  // std dev = 2.11e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5429775611405829;  // std dev = 0.176, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(D, F), interaction(D, G) )
%   | | | then return 0.015774625120800818;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.41485914709221533;  // std dev = 0.963, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H) )
%   | | | then return 0.4654397874398617;  // std dev = 0.191, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.20439010342039526;  // std dev = 0.846, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.2549662835908676;  // std dev = 7.354, 225.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=126 */
%   | | | else return 0.19070104236801144;  // std dev = 6.694, 181.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=91 */
%   else return -0.1015963294878363;  // std dev = 1.05e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, E) )
%   | | then if ( phenotype(E, F), enzyme(E, G) )
%   | | | then return -1.929981002029013E-4;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.33318766840178;  // std dev = 0.131, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( complex(A, H), interaction(D, I) )
%   | | | then return 0.4467932393527891;  // std dev = 0.159, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.39737706209635343;  // std dev = 0.156, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L), complex(A, M) )
%   | | | then return 0.3097344853147619;  // std dev = 1.994, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return 0.1356008585124684;  // std dev = 7.579, 237.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=120 */
%   | | else if ( location(A, N) )
%   | | | then return 0.20461584880914852;  // std dev = 6.113, 157.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=89 */
%   | | | else return 0.40820726306282584;  // std dev = 1.240, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else return -0.09269127618926044;  // std dev = 1.84e-07, 316.000 (wgt'ed) examples reached here.  /* #neg=316 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F), interaction(A, G) )
%   | | | then return 0.47357617869910484;  // std dev = 1.471, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return 0.08373090742939948;  // std dev = 1.454, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.37981851454447585;  // std dev = 0.522, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.17134328702414295;  // std dev = 7.299, 235.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=142 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.23545120352317164;  // std dev = 0.727, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.12943211457112141;  // std dev = 2.197, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10291223569512739;  // std dev = 5.091, 111.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=59 */
%   | | | else return 0.5376145004655035;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839678;  // std dev = 1.21e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.35467857339356523;  // std dev = 1.723, 62.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=60 */
%   | | | else return 0.03609751967312076;  // std dev = 1.962, 21.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=12 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return -0.1391843154950682;  // std dev = 3.516, 84.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=22 */
%   | | | else return 0.036266009617924304;  // std dev = 4.944, 99.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=51 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3744798726630495;  // std dev = 3.281, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.45512715011223076;  // std dev = 0.233, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.5204148198217436;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15086525172175086;  // std dev = 4.525, 89.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=55 */
%   else return -0.07877675473109141;  // std dev = 9.66e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), interaction(G, E) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.33157422889988614;  // std dev = 0.155, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08786098104438901;  // std dev = 2.754, 38.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | else if ( recursion_proteinclass(E, B), complex(E, D) )
%   | | | then return 0.15146275152595592;  // std dev = 0.961, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.04964456699201706;  // std dev = 4.451, 107.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=44 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H), phenotype(H, I) )
%   | | | then return -0.19895871583762476;  // std dev = 1.352, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.0562119147399105;  // std dev = 2.455, 44.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | else if ( location(A, J) )
%   | | | then return 0.13411046580895683;  // std dev = 6.943, 237.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=145 */
%   | | | else return -0.05383862678981376;  // std dev = 2.179, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   else return -0.07324622576333716;  // std dev = 5.96e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.15317246749891916;  // std dev = 0.254, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.08227481333187536;  // std dev = 0.528, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.3062542711172359;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.21900909864950135;  // std dev = 0.159, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.16832523095722204;  // std dev = 2.596, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.07568366893667323;  // std dev = 4.869, 132.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=46 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13029331206494735;  // std dev = 4.624, 128.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=80 */
%   | | | else return 0.023168675025549396;  // std dev = 5.812, 140.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=75 */
%   else return -0.06842697784420314;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.31336011328972424;  // std dev = 4.456, 261.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=239 */
%   | | | else return -0.27226441498631526;  // std dev = 4.274, 141.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=24 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.37507878582029164;  // std dev = 0.438, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.48499312695520724;  // std dev = 0.391, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then return -0.0594647253208221;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.22749232602279493;  // std dev = 1.187, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.4353486657967663;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.06419184008202575;  // std dev = 1.61e-07, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 4.598972320556641
Refined model CLL: -0.226921


******************************************
Best model found
******************************************
Results 

CLL : -0.217599 

AUC ROC : 0.96016 

AUC PR : 0.45625 

Precision : 0.174359 

Recall : 0.73913 

F1 : 0.282158 

Total Learning Time : 40.421725034713745 

Total Inference Time : 38.03731322288513 

Total revision time: 111.07946705818176
Best scored revision CLL: -0.226921


Results 

CLL : -0.217599 

AUC ROC : 0.96016 

AUC PR : 0.45625 

Precision : 0.174359 

Recall : 0.73913 

F1 : 0.282158 

Total Learning Time : 111.1058578491211 

Total Inference Time : 38.03731322288513 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.155773401260376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.39925792171518665;  // std dev = 0.498, 523.000 (wgt'ed) examples reached here.  /* #neg=240 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3810337251089021;  // std dev = 10.919, 489.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.1254446385283922;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3089522974639206;  // std dev = 0.494, 493.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360638;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2589257873129125;  // std dev = 10.793, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.1015963294878361;  // std dev = 1.72e-07, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.19337883518529483;  // std dev = 10.872, 486.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.146560108504967;  // std dev = 10.872, 486.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=283 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.21e-07, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11144883809326843;  // std dev = 0.493, 485.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 3.65e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.06385564157240248;  // std dev = 11.111, 502.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333768;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0547165377287591;  // std dev = 11.024, 496.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08705960599933286;  // std dev = 10.417, 459.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.79e-09, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
Inference time using transfer learning 3.28233003616333
Parameter learned model CLL:-0.333643 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.498, 240, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 352, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.919, 206, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 210, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 369, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.793, 198, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.72e-07, 375, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.872, 203, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.872, 203, 283], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.21e-07, 378, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.493, 202, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.65e-08, 329, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.111, 219, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.024, 213, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.417, 176, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.79e-09, 326, 0]}]
{'': [0.24831005121943472, 1.4887081466564598e-16], 'false': [nan, 1.4887081466564598e-16]}
{'': [0.24380125543134348, -1.1740289455806254e-16], 'true': [0.24380125543134348, nan], 'false': [nan, -1.1740289455806254e-16], 'false,false': [nan, -1.1740289455806254e-16], 'false,false,false': [nan, -1.1740289455806254e-16]}
{'': [0.24451859501581233, -2.647686345989533e-17], 'false': [nan, -2.647686345989533e-17], 'false,false': [nan, -2.647686345989533e-17]}
{'': [0.2421929365796301, 7.934393882654452e-17], 'true': [nan, 0.2421929365796301], 'false': [nan, 7.934393882654452e-17], 'false,false': [nan, 7.934393882654452e-17], 'false,false,false': [7.934393882654452e-17, nan]}
{'': [0.24322596487663087, 1.182486061730936e-16], 'true': [0.24322596487663087, nan], 'false': [nan, 1.182486061730936e-16]}
{'': [0.2432259648766297, 3.876969292341816e-17], 'true': [0.2432259648766297, nan], 'true,true': [0.2432259648766297, nan], 'false': [nan, 3.876969292341816e-17], 'false,false': [3.876969292341816e-17, nan]}
{'': [0.24302688914869033, 4.049445682523367e-18], 'true': [0.24302688914869033, nan], 'false': [nan, 4.049445682523367e-18], 'false,false': [4.049445682523367e-18, nan]}
{'': [0.2459365724353573, -6.747211751865592e-17], 'true': [0.2459365724353573, nan], 'false': [nan, -6.747211751865592e-17], 'false,false': [nan, -6.747211751865592e-17]}
{'': [0.245020649063475, -9.667672405443779e-17], 'true': [0.245020649063475, nan], 'false': [nan, -9.667672405443779e-17], 'false,false': [nan, -9.667672405443779e-17]}
{'': [0.23641429459704644, 6.130065780138901e-17], 'true': [0.23641429459704644, nan], 'false': [nan, 6.130065780138901e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 39.30375528335571
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.7152917922423694;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.7192600462106227;  // std dev = 2.075, 36.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=31 */
%   | | | else return 0.314353314661553;  // std dev = 8.245, 274.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=125 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.2775037738091898;  // std dev = 2.747, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.49229527656292654;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=78 */
%   else return -0.14185106490048746;  // std dev = 2.58e-07, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.7267152432317411;  // std dev = 0.095, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.22626355595332376;  // std dev = 0.987, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7816801905034244;  // std dev = 0.186, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6241425802209837;  // std dev = 2.174, 42.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=36 */
%   | | | else return 0.18706089110772406;  // std dev = 6.539, 183.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=70 */
%   | | else if ( interaction(H, A), location(H, I) )
%   | | | then return 0.4453140277017867;  // std dev = 6.865, 207.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=133 */
%   | | | else return 0.17981328521808157;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   else return -0.12544463852839216;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.571217182987315;  // std dev = 0.198, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.33996057620701475;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5829937563181616;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6779301931223686;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.36151183322362157;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.658472627344691;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.16419655756603407;  // std dev = 6.212, 167.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=72 */
%   | | | else return 0.2953447895895363;  // std dev = 8.134, 274.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=153 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( enzyme(E, F), interaction(E, D) )
%   | | | then return 0.29374822750930285;  // std dev = 0.766, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.44883801738516266;  // std dev = 0.231, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( complex(D, G), interaction(H, A) )
%   | | | then return 0.45763882556114355;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.5071287657698176;  // std dev = 0.066, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.11405779868921499;  // std dev = 4.143, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   | | | else return 0.7446438851796072;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.3428690957766607;  // std dev = 3.868, 72.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=47 */
%   | | | else return 0.2052407625530974;  // std dev = 8.470, 296.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=159 */
%   else return -0.10159632948783577;  // std dev = 2.58e-07, 424.000 (wgt'ed) examples reached here.  /* #neg=424 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), interaction(A, A) )
%   | | then if ( interaction(A, D), phenotype(A, F) )
%   | | | then return 0.3138390206201253;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08551287557645776;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.42468606712663054;  // std dev = 0.374, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.33903599404514706;  // std dev = 0.960, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.3414783855558369;  // std dev = 2.058, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else return 0.0682989562328018;  // std dev = 5.514, 132.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=55 */
%   | | else if ( location(A, K) )
%   | | | then return 0.20254909379324454;  // std dev = 7.825, 260.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=151 */
%   | | | else return 0.3331532233402866;  // std dev = 1.704, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   else return -0.09269127618926082;  // std dev = 1.58e-07, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E), phenotype(A, F) )
%   | | | then return 0.30146532034783957;  // std dev = 0.079, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.26083798307410055;  // std dev = 0.139, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, G), complex(D, H) )
%   | | | then return -0.19909497039311883;  // std dev = 1.540, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.01581056676560109;  // std dev = 3.442, 70.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=33 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.34555596410148665;  // std dev = 0.293, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.12751718384303184;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09717882014262616;  // std dev = 5.998, 151.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=73 */
%   | | | else return 0.18609173359967596;  // std dev = 7.142, 216.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=131 */
%   else return -0.08518475138839678;  // std dev = 1.28e-07, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E) )
%   | | | then return 0.20551845573560884;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24107694129703136;  // std dev = 0.080, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, F) )
%   | | | then return -0.34264488720427866;  // std dev = 0.280, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.43085195178216523;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(G, A), phenotype(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.12412763569055656;  // std dev = 4.583, 105.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=60 */
%   | | | else return 0.00927456329289322;  // std dev = 5.269, 120.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=58 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.21632606999850365;  // std dev = 3.324, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | | | else return 0.12070838039418173;  // std dev = 6.502, 182.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=107 */
%   else return -0.07877675473109143;  // std dev = 1.01e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), enzyme(A, F) )
%   | | | then return 0.22179973521743895;  // std dev = 0.103, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.181314961660543;  // std dev = 0.109, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.27929995627933707;  // std dev = 0.231, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.03431221630366018;  // std dev = 3.401, 71.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=37 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.5042509952785338;  // std dev = 1.405, 83.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=82 */
%   | | | else return -0.45672527104971955;  // std dev = 0.470, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.2663141661430131;  // std dev = 0.251, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.06988072961751965;  // std dev = 7.464, 232.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=128 */
%   else return -0.0732462257633377;  // std dev = 0.000, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.37099627547295394;  // std dev = 3.511, 250.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=239 */
%   | | | else return -0.2280343237456961;  // std dev = 4.345, 150.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=30 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.20734759402240455;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.4350319588518235;  // std dev = 0.692, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(G, A), enzyme(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.14660182649600906;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.4563094283858616;  // std dev = 0.263, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.1070852839147145;  // std dev = 1.638, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.17274306319137914;  // std dev = 1.187, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else return -0.06842697784420326;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.12307670857786679;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19899105262537603;  // std dev = 0.964, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( complex(D, F) )
%   | | | then return 0.06837272134263224;  // std dev = 5.672, 255.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=156 */
%   | | | else return 0.001392586688614094;  // std dev = 4.804, 148.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=79 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.07484132145253106;  // std dev = 1.156, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.35210428882056694;  // std dev = 1.264, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04810446557002992;  // std dev = 1.690, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.19304703145345864;  // std dev = 1.891, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   else return -0.0641918400820257;  // std dev = 1.69e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
Inference time using transfer learning 3.7445714473724365
Refined model CLL: -0.224279


******************************************
Best model found
******************************************
Results 

CLL : -0.208665 

AUC ROC : 0.985284 

AUC PR : 0.332513 

Precision : 0.209632 

Recall : 0.860465 

F1 : 0.33713 

Total Learning Time : 39.30375528335571 

Total Inference Time : 34.35358452796936 

Total revision time: 108.02351307868958
Best scored revision CLL: -0.224279


Results 

CLL : -0.208665 

AUC ROC : 0.985284 

AUC PR : 0.332513 

Precision : 0.209632 

Recall : 0.860465 

F1 : 0.33713 

Total Learning Time : 108.0499038696289 

Total Inference Time : 34.35358452796936 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.071290254592896
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.458148935099508;  // std dev = 0.490, 470.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.40583766183792397;  // std dev = 10.446, 460.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839222;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3221480702109234;  // std dev = 0.489, 467.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360643;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.23388427240381038;  // std dev = 10.817, 482.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=282 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783599;  // std dev = 2.02e-07, 390.000 (wgt'ed) examples reached here.  /* #neg=390 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.15786853493632927;  // std dev = 11.088, 500.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0926912761892606;  // std dev = 9.86e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1159371496257774;  // std dev = 11.131, 503.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=282 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.23e-07, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08939318735257995;  // std dev = 0.496, 501.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 8.94e-08, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.07736618037323925;  // std dev = 10.971, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333768;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07358514659139603;  // std dev = 10.769, 479.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.017289192200951348;  // std dev = 11.255, 512.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202564;  // std dev = 9.45e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
Inference time using transfer learning 3.5016634464263916
Parameter learned model CLL:-0.322916 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 188, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.446, 178, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 372, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 185, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.817, 200, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.02e-07, 390, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.088, 218, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.86e-09, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [11.131, 221, 282], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.23e-07, 389, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.496, 219, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.94e-08, 364, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.971, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.769, 197, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.255, 230, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.45e-09, 384, 0]}]
{'': [0.24000000000000304, 1.3644480070755548e-16], 'false': [nan, 1.3644480070755548e-16]}
{'': [0.23722117202268148, -1.2415397264625405e-16], 'true': [0.23722117202268148, nan], 'false': [nan, -1.2415397264625405e-16], 'false,false': [nan, -1.2415397264625405e-16], 'false,false,false': [nan, -1.2415397264625405e-16]}
{'': [0.23921426573555007, -2.960594732333751e-17], 'false': [nan, -2.960594732333751e-17], 'false,false': [nan, -2.960594732333751e-17]}
{'': [0.24276441521323, 1.047595059133481e-16], 'true': [nan, 0.24276441521323], 'false': [nan, 1.047595059133481e-16], 'false,false': [nan, 1.047595059133481e-16], 'false,false,false': [1.047595059133481e-16, nan]}
{'': [0.2459040000000025, 9.516197353929913e-17], 'true': [0.2459040000000025, nan], 'false': [nan, 9.516197353929913e-17]}
{'': [0.24632325332300026, 3.881499520540393e-17], 'true': [0.24632325332300026, nan], 'true,true': [0.24632325332300026, nan], 'false': [nan, 3.881499520540393e-17], 'false,false': [3.881499520540393e-17, nan]}
{'': [0.2460468284986918, 2.1960455432145953e-17], 'true': [0.2460468284986918, nan], 'false': [nan, 2.1960455432145953e-17], 'false,false': [2.1960455432145953e-17, nan]}
{'': [0.2446460440214137, -6.763083654050818e-17], 'true': [0.2446460440214137, nan], 'false': [nan, -6.763083654050818e-17], 'false,false': [nan, -6.763083654050818e-17]}
{'': [0.24212760578972095, -1.047380211910525e-16], 'true': [0.24212760578972095, nan], 'false': [nan, -1.047380211910525e-16], 'false,false': [nan, -1.047380211910525e-16]}
{'': [0.24742126464843434, 8.962737959213503e-17], 'true': [0.24742126464843434, nan], 'false': [nan, 8.962737959213503e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 37.43774914741516
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.8581489350995121;  // std dev = 5.96e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( complex(A, E), interaction(A, D) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.36432177460568244;  // std dev = 7.794, 243.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=123 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.4287704040260662;  // std dev = 6.585, 177.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=101 */
%   else return -0.14185106490048752;  // std dev = 2.40e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.774469147320714;  // std dev = 0.312, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | | else return 0.6411178409124229;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04993282726720556;  // std dev = 2.154, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | | else return 0.3186659381746729;  // std dev = 6.993, 197.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=101 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.7278731563331485;  // std dev = 0.075, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.35868985176806967;  // std dev = 6.658, 180.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=101 */
%   else return -0.1254446385283922;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.5452110272728502;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24855536584645951;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.6183297876768478;  // std dev = 0.383, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.5662911806088552;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.25542660482996726;  // std dev = 1.196, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.6494511497674436;  // std dev = 0.342, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.18873039106550743;  // std dev = 4.347, 80.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=36 */
%   | | | else return 0.27582438683102506;  // std dev = 9.094, 337.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=180 */
%   else return -0.11231637819360643;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.4366589010257688;  // std dev = 0.339, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.11046564473465788;  // std dev = 1.191, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(D, F), phenotype(A, G) )
%   | | | then return 0.6186337776094817;  // std dev = 0.172, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.44443713053626294;  // std dev = 0.296, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5097923268609795;  // std dev = 0.217, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.42822717132183225;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.1192938056961322;  // std dev = 5.107, 114.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=48 */
%   | | | else return 0.22377591756669182;  // std dev = 8.735, 315.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=168 */
%   else return -0.10159632948783635;  // std dev = 8.16e-08, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | | then return 0.42092037520701525;  // std dev = 0.936, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | | | else return 0.630012385647794;  // std dev = 0.548, 62.000 (wgt'ed) examples reached here.  /* #pos=62 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.22742826405848374;  // std dev = 0.195, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.3532628920789337;  // std dev = 0.179, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10429149271786994;  // std dev = 0.924, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.147439262837099;  // std dev = 4.363, 83.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=44 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2968886314934036;  // std dev = 5.160, 128.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=86 */
%   | | | else return 0.18741882339941948;  // std dev = 3.891, 62.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=36 */
%   else return -0.09269127618926075;  // std dev = 1.67e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2560065249703329;  // std dev = 0.188, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.47282104573237216;  // std dev = 0.469, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | else if ( complex(H, E), interaction(A, H) )
%   | | | then return -0.2214806722577236;  // std dev = 0.203, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.2861958553016479;  // std dev = 0.407, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), interaction(A, K) )
%   | | | then return 0.08993998303173749;  // std dev = 1.293, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.33070045770665357;  // std dev = 0.423, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.11883721393253908;  // std dev = 3.535, 52.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=27 */
%   | | | else return 0.18234585958369853;  // std dev = 7.279, 257.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=156 */
%   else return -0.08518475138839678;  // std dev = 1.17e-07, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), complex(D, H) )
%   | | | then return 0.22694066695089665;  // std dev = 0.128, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.46347628367534366;  // std dev = 0.328, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.2506869399636134;  // std dev = 0.150, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.16291939243284595;  // std dev = 3.729, 82.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=52 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2883647364737347;  // std dev = 1.072, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.03864188982047458;  // std dev = 6.194, 214.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=103 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.10985174053367369;  // std dev = 3.321, 60.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=36 */
%   | | | else return 0.23434939037170024;  // std dev = 2.899, 49.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=35 */
%   else return -0.07877675473109141;  // std dev = 9.19e-08, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( interaction(D, A), phenotype(A, F) )
%   | | | then return 0.22461679991462555;  // std dev = 0.136, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.055561972160410054;  // std dev = 0.504, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A), complex(A, G) )
%   | | | then return 0.15289978393765366;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.21739152551102384;  // std dev = 0.257, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.19153877014416806;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.015917102514491598;  // std dev = 3.554, 69.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=34 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.11974572771588066;  // std dev = 4.935, 156.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=94 */
%   | | | else return 0.061310142451192234;  // std dev = 6.324, 196.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=108 */
%   else return -0.07324622576333717;  // std dev = 5.58e-08, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.2340065042187947;  // std dev = 0.310, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.0673447956386003;  // std dev = 0.679, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( enzyme(A, E) )
%   | | | then return -0.21201722462329572;  // std dev = 1.287, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.01327689667862229;  // std dev = 4.286, 102.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=54 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.06948020301512099;  // std dev = 3.205, 56.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | else return 0.20309216909640956;  // std dev = 2.217, 36.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=27 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.014607509141747473;  // std dev = 4.288, 120.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=61 */
%   | | | else return 0.08083802722680461;  // std dev = 5.135, 148.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=91 */
%   else return -0.06842697784420322;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.31981413625384214;  // std dev = 3.435, 245.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=230 */
%   | | | else return -0.23746289443296426;  // std dev = 4.811, 172.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.195679455561521;  // std dev = 0.181, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.44534124589676666;  // std dev = 0.628, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then return 0.3923094797194511;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.14959307440021355;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.21010134438265737;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else return -0.0641918400820257;  // std dev = 1.70e-07, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
Inference time using transfer learning 4.726626396179199
Refined model CLL: -0.216597


******************************************
Best model found
******************************************
Results 

CLL : -0.211163 

AUC ROC : 0.988302 

AUC PR : 0.36006 

Precision : 0.174538 

Recall : 0.977011 

F1 : 0.296167 

Total Learning Time : 37.43774914741516 

Total Inference Time : 31.676148176193237 

Total revision time: 102.68204975128174
Best scored revision CLL: -0.216597


Results 

CLL : -0.211163 

AUC ROC : 0.988302 

AUC PR : 0.36006 

Precision : 0.174538 

Recall : 0.977011 

F1 : 0.296167 

Total Learning Time : 102.70893168449402 

Total Inference Time : 31.676148176193237 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.104934692382812
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45099009841047;  // std dev = 0.491, 447.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048754;  // std dev = 1.22e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.39487474156486735;  // std dev = 10.284, 441.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839216;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30436361365364095;  // std dev = 0.493, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.1123163781936066;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2647571444614689;  // std dev = 10.195, 436.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=265 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783612;  // std dev = 1.67e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.13700423453526495;  // std dev = 11.018, 489.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.04e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.17653586275263003;  // std dev = 10.103, 431.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=265 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.12e-07, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11203137671163022;  // std dev = 0.491, 446.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109144;  // std dev = 3.33e-08, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.06345519516197827;  // std dev = 10.630, 462.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333704;  // std dev = 4.93e-09, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06553820795602054;  // std dev = 10.404, 448.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420303;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04013121690666753;  // std dev = 10.519, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202576;  // std dev = 8.59e-09, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
Inference time using transfer learning 4.413188457489014
Parameter learned model CLL:-0.335787 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 182, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.22e-08, 351, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.284, 176, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 190, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.195, 171, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.67e-07, 373, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.018, 224, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.04e-08, 319, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.103, 166, 265], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.12e-07, 327, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.491, 181, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 304, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.63, 197, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.93e-09, 325, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.404, 183, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 305, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.519, 190, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.59e-09, 348, 0]}]
{'': [0.2413805183950705, 1.4676452519261327e-16], 'false': [nan, 1.4676452519261327e-16]}
{'': [0.23981777140183308, -1.1538269500636068e-16], 'true': [0.23981777140183308, nan], 'false': [nan, -1.1538269500636068e-16], 'false,false': [nan, -1.1538269500636068e-16], 'false,false,false': [nan, -1.1538269500636068e-16]}
{'': [0.24320734210844297, -3.722903555629267e-17], 'false': [nan, -3.722903555629267e-17], 'false,false': [nan, -3.722903555629267e-17]}
{'': [0.2383795555929594, 7.500702471998377e-17], 'true': [nan, 0.2383795555929594], 'false': [nan, 7.500702471998377e-17], 'false,false': [nan, 7.500702471998377e-17], 'false,false,false': [7.500702471998377e-17, nan]}
{'': [0.2482425215685785, 1.0858607638967048e-16], 'true': [0.2482425215685785, nan], 'false': [nan, 1.0858607638967048e-16]}
{'': [0.23680966403066486, 3.8025987387772944e-17], 'true': [0.23680966403066486, nan], 'true,true': [0.23680966403066486, nan], 'false': [nan, 3.8025987387772944e-17], 'false,false': [3.8025987387772944e-17, nan]}
{'': [0.24113193508817599, 3.652049423109067e-18], 'true': [0.24113193508817599, nan], 'false': [nan, 3.652049423109067e-18], 'false,false': [3.652049423109067e-18, nan]}
{'': [0.24458405951912449, 2.3912495915003373e-17], 'true': [0.24458405951912449, nan], 'false': [nan, 2.3912495915003373e-17], 'false,false': [nan, 2.3912495915003373e-17]}
{'': [0.24162448182398114, -5.314510216238454e-17], 'true': [0.24162448182398114, nan], 'false': [nan, -5.314510216238454e-17], 'false,false': [nan, -5.314510216238454e-17]}
{'': [0.24320734210844047, 7.337680909878908e-17], 'true': [0.24320734210844047, nan], 'false': [nan, 7.337680909878908e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 16.354488372802734
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), phenotype(A, E) )
%   | | then if ( location(A, F), interaction(A, A) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7002541982574071;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | | else return 0.3995997123015818;  // std dev = 9.790, 386.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=209 */
%   else return -0.1418510649004877;  // std dev = 1.63e-07, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), location(E, G) )
%   | | | then return 0.756538275032077;  // std dev = 0.277, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.44822890743592825;  // std dev = 1.373, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.10287191591895957;  // std dev = 3.460, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.34142290270486236;  // std dev = 8.249, 278.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=151 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then return 0.7970439077857576;  // std dev = 0.049, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7502124734683523;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40224740048769114;  // std dev = 3.286, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   else return -0.12544463852839205;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(A, E) )
%   | then if ( enzyme(D, F), recursion_proteinclass(D, B) )
%   | | then if ( location(A, G), interaction(H, D) )
%   | | | then return 0.5561518905912105;  // std dev = 0.094, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6549879247984401;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, I), interaction(A, J) )
%   | | | then return 0.1923884140272613;  // std dev = 3.009, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | | else return 0.40406119482017305;  // std dev = 4.242, 82.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=55 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(A, A), location(A, L) )
%   | | | then return 0.5461960721148592;  // std dev = 2.98e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6398396105344846;  // std dev = 0.239, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13717207156453362;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.2461531113880515;  // std dev = 8.370, 288.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=149 */
%   else return -0.1123163781936066;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, A), location(A, E) )
%   | | | then return 0.4100376814502945;  // std dev = 0.005, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.4585608095613594;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return -0.24605988789557148;  // std dev = 0.398, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.07063441942386493;  // std dev = 3.061, 58.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=22 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.22026285783297322;  // std dev = 1.219, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.5543482962694409;  // std dev = 0.201, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.26080703043782627;  // std dev = 4.793, 96.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=55 */
%   | | | else return 0.2044349053173726;  // std dev = 8.266, 277.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=149 */
%   else return -0.10159632948783665;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( recursion_proteinclass(D, B), phenotype(A, F) )
%   | | then if ( interaction(A, D), location(A, G) )
%   | | | then return 0.31990614845186854;  // std dev = 0.041, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.44103685130097137;  // std dev = 0.113, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, H), interaction(I, D) )
%   | | | then return 0.15784675087928104;  // std dev = 4.535, 96.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=50 */
%   | | | else return 0.2338782750673718;  // std dev = 5.568, 132.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=81 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4203374815467957;  // std dev = 0.374, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.058351386609012575;  // std dev = 4.173, 81.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=36 */
%   | | else if ( enzyme(A, M), phenotype(A, N) )
%   | | | then return 0.06111740045656644;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.20164232334253968;  // std dev = 4.870, 105.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=60 */
%   else return -0.09269127618926043;  // std dev = 1.88e-07, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), phenotype(F, E) )
%   | | | then return 0.5307633095256202;  // std dev = 0.691, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | | else return 0.2838429396619411;  // std dev = 1.510, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18654476798326822;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.4306913121640115;  // std dev = 0.393, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(I, J) )
%   | | | then return 0.20375070428025702;  // std dev = 3.180, 72.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=48 */
%   | | | else return 0.05591326541287853;  // std dev = 4.383, 91.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=43 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.11881789586431267;  // std dev = 5.088, 109.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=60 */
%   | | | else return 0.2595262857512648;  // std dev = 4.344, 88.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=61 */
%   else return -0.08518475138839678;  // std dev = 1.13e-07, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( enzyme(E, F), phenotype(A, G) )
%   | | | then return -0.05106790239832304;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.24215731012024697;  // std dev = 0.162, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.36555171999624164;  // std dev = 0.115, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.29132275018028525;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3263227061131315;  // std dev = 1.688, 26.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=22 */
%   | | | else return 0.03701217338001182;  // std dev = 6.009, 172.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=77 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.09508117850662735;  // std dev = 4.308, 94.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=54 */
%   | | | else return 0.17948474509335038;  // std dev = 4.973, 109.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=71 */
%   else return -0.07877675473109143;  // std dev = 2.58e-08, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), location(A, E) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.17199468059356723;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19946114590172276;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(G, A), location(A, H) )
%   | | | then return 0.2808976084068528;  // std dev = 0.161, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22913517817061943;  // std dev = 0.064, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then if ( location(A, I), phenotype(A, J) )
%   | | | then return -0.15695738507487192;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.18789909492960422;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.057471758709917456;  // std dev = 6.371, 188.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=100 */
%   | | | else return 0.12170702151102387;  // std dev = 6.438, 202.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=124 */
%   else return -0.07324622576333711;  // std dev = 6.83e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.2133559290682866;  // std dev = 0.875, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.3835711560253558;  // std dev = 0.504, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return -0.327438524948726;  // std dev = 0.136, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.3868882079549788;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, A), location(A, K) )
%   | | | then return 0.12178944897919249;  // std dev = 0.679, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.2055266894692681;  // std dev = 0.203, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.12289498106506795;  // std dev = 3.178, 50.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=30 */
%   | | | else return 0.01223144929716233;  // std dev = 8.152, 286.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=146 */
%   else return -0.06842697784420315;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( location(A, E), enzyme(A, F) )
%   | | | then return 0.12729303406576636;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15480673022389582;  // std dev = 0.049, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( enzyme(D, G), phenotype(D, H) )
%   | | | then return -0.24287264856873017;  // std dev = 1.020, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.015353600677373815;  // std dev = 2.237, 46.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=20 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.25963608982195147;  // std dev = 1.708, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return 0.0648157380256435;  // std dev = 2.172, 27.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=16 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06513760823838635;  // std dev = 7.796, 298.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=178 */
%   | | | else return -0.07619376040985919;  // std dev = 1.851, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else return -0.06419184008202584;  // std dev = 1.40e-07, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
Inference time using transfer learning 4.565593242645264
Refined model CLL: -0.270965


******************************************
Best model found
******************************************
Results 

CLL : -0.273458 

AUC ROC : 0.939924 

AUC PR : 0.130403 

Precision : 0.034824 

Recall : 0.846154 

F1 : 0.066895 

Total Learning Time : 16.354488372802734 

Total Inference Time : 10.2816321849823 

Total revision time: 56.362544298172
Best scored revision CLL: -0.270965


Results 

CLL : -0.273458 

AUC ROC : 0.939924 

AUC PR : 0.130403 

Precision : 0.034824 

Recall : 0.846154 

F1 : 0.066895 

Total Learning Time : 56.38942623138428 

Total Inference Time : 10.2816321849823 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.803414344787598
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44377261374644245;  // std dev = 0.493, 473.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004876;  // std dev = 1.12e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.3662798855750049;  // std dev = 10.899, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839213;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3159419594052825;  // std dev = 0.492, 472.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360668;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2517611879937567;  // std dev = 10.665, 470.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=277 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.1015963294878361;  // std dev = 1.65e-07, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.15145100900311997;  // std dev = 11.197, 506.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926051;  // std dev = 1.05e-08, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.15539806284915803;  // std dev = 10.681, 471.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=277 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09527901787205353;  // std dev = 0.496, 489.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109141;  // std dev = 6.99e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.0726518471251472;  // std dev = 10.944, 488.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333707;  // std dev = 4.56e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05565762508312054;  // std dev = 10.929, 487.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420329;  // std dev = 0.000, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04766684876920466;  // std dev = 10.854, 482.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202569;  // std dev = 9.08e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
Inference time using transfer learning 3.776864528656006
Parameter learned model CLL:-0.324538 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 196, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.12e-08, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [10.899, 208, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 323, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 195, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 322, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.665, 193, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.65e-07, 372, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.197, 229, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [10.681, 194, 277], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 337, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.496, 212, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [6.99e-08, 348, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.944, 211, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.56e-09, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.929, 210, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 378, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.854, 205, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08e-09, 367, 0]}]
{'': [0.24266858565496954, 1.2313978090237726e-16], 'false': [nan, 1.2313978090237726e-16]}
{'': [0.24493995111063774, -1.1274091395574345e-16], 'true': [0.24493995111063774, nan], 'false': [nan, -1.1274091395574345e-16], 'false,false': [nan, -1.1274091395574345e-16], 'false,false,false': [nan, -1.1274091395574345e-16]}
{'': [0.24245457483481728, -4.13747711040431e-17], 'false': [nan, -4.13747711040431e-17], 'false,false': [nan, -4.13747711040431e-17]}
{'': [0.242014486192846, 7.282108010982209e-17], 'true': [nan, 0.242014486192846], 'false': [nan, 7.282108010982209e-17], 'false,false': [nan, 7.282108010982209e-17], 'false,false,false': [7.282108010982209e-17, nan]}
{'': [0.24775031636176176, 1.0883313030128295e-16], 'true': [0.24775031636176176, nan], 'false': [nan, 1.0883313030128295e-16]}
{'': [0.242236556813214, 3.821539194555435e-17], 'true': [0.242236556813214, nan], 'true,true': [0.242236556813214, nan], 'false': [nan, 3.821539194555435e-17], 'false,false': [3.821539194555435e-17, nan]}
{'': [0.2455827802660567, 1.403730261020313e-17], 'true': [0.2455827802660567, nan], 'false': [nan, 1.403730261020313e-17], 'false,false': [1.403730261020313e-17, nan]}
{'': [0.245427136522442, 2.140188963132832e-17], 'true': [0.245427136522442, nan], 'false': [nan, 2.140188963132832e-17], 'false,false': [nan, 2.140188963132832e-17]}
{'': [0.24526814212649772, -1.0279842820603301e-16], 'true': [0.24526814212649772, nan], 'false': [nan, -1.0279842820603301e-16], 'false,false': [nan, -1.0279842820603301e-16]}
{'': [0.24442158365041747, 8.228355931826773e-17], 'true': [0.24442158365041747, nan], 'false': [nan, 8.228355931826773e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 31.376718282699585
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.8581489350995117;  // std dev = 2.46e-07, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.330059047459064;  // std dev = 8.157, 267.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=126 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.5381489350995123;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=17 */
%   | | | else return 0.43970921878745545;  // std dev = 5.858, 141.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=82 */
%   else return -0.14185106490048766;  // std dev = 1.84e-07, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(D, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.735339595552877;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.018626950282603694;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G), phenotype(D, H) )
%   | | | then return 0.6018263533874249;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.723439958046435;  // std dev = 0.064, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( interaction(A, A) )
%   | | then return -0.19818619480229882;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5725474871479924;  // std dev = 1.802, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return 0.3326138065248424;  // std dev = 10.126, 411.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=217 */
%   else return -0.1254446385283922;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(E, F), phenotype(D, G) )
%   | | | then return 0.4105474084709531;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.5759392892905222;  // std dev = 0.128, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return 0.661802320064158;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.07774218668595329;  // std dev = 2.938, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return 0.2826295276404236;  // std dev = 5.041, 102.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=55 */
%   | | else if ( enzyme(A, K), phenotype(A, L) )
%   | | | then return 0.39885619819010165;  // std dev = 3.198, 47.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=31 */
%   | | | else return 0.31467742594579345;  // std dev = 7.479, 233.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=134 */
%   else return -0.11231637819360633;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4625774468045876;  // std dev = 0.171, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.6698453863078752;  // std dev = 0.587, 80.000 (wgt'ed) examples reached here.  /* #pos=80 */
%   | | else return -0.2969154488511348;  // std dev = 0.392, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), location(I, J) )
%   | | | then return 0.1327054271666388;  // std dev = 3.432, 57.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=28 */
%   | | | else return 0.2977636162195004;  // std dev = 3.022, 40.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=25 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.25803874055188253;  // std dev = 4.024, 67.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=39 */
%   | | | else return 0.39165842656033995;  // std dev = 4.591, 111.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=81 */
%   else return -0.10159632948783644;  // std dev = 0.000, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.38352211492374083;  // std dev = 0.112, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.3506192836591042;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.17207394286377525;  // std dev = 1.297, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.024466116580558077;  // std dev = 1.706, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.16841024761630688;  // std dev = 7.864, 299.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=164 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.1409523998979752;  // std dev = 2.371, 27.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=14 */
%   | | | else return 0.040217836394878324;  // std dev = 4.921, 116.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=50 */
%   else return -0.09269127618926071;  // std dev = 1.72e-07, 377.000 (wgt'ed) examples reached here.  /* #neg=377 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(E, F) )
%   | | | then return 0.42996787966018385;  // std dev = 1.476, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | | | else return 0.06612309796534549;  // std dev = 2.060, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
%   | | else if ( location(E, D), interaction(A, H) )
%   | | | then return -0.0033605881197366102;  // std dev = 4.339, 109.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=44 */
%   | | | else return 0.13062223564752037;  // std dev = 6.856, 218.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=122 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(I, K), location(A, L) )
%   | | | then return 0.05918862503153954;  // std dev = 1.784, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.27254287094108753;  // std dev = 1.235, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.46981851858849993;  // std dev = 0.772, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.21635281813307516;  // std dev = 1.967, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   else return -0.08518475138839678;  // std dev = 1.19e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(D, E), enzyme(D, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.036661222501641506;  // std dev = 1.267, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.14255541381591721;  // std dev = 1.582, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.14295698913454577;  // std dev = 2.051, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return -0.012106292111833346;  // std dev = 2.364, 41.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=20 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, J) )
%   | | | then return 0.010652573206947827;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.30229692240045464;  // std dev = 0.192, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1201117439950753;  // std dev = 8.181, 325.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=186 */
%   | | | else return -3.4795412157667915E-4;  // std dev = 2.329, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   else return -0.07877675473109141;  // std dev = 9.42e-08, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( location(D, E) )
%   | | then return 0.2184303818460461;  // std dev = 0.314, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else return -0.073193277132369;  // std dev = 0.732, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.16802782276492603;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.11272309714078091;  // std dev = 7.410, 286.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=170 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.08665868644771751;  // std dev = 3.469, 59.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=33 */
%   | | | else return -0.03866156483317876;  // std dev = 3.892, 73.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=31 */
%   else return -0.07324622576333706;  // std dev = 8.69e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.32194406843563433;  // std dev = 1.566, 103.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=102 */
%   | | | else return -0.3205682050750654;  // std dev = 0.509, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.17766922104480784;  // std dev = 0.127, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.34298748676345486;  // std dev = 0.128, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.43191437781348174;  // std dev = 1.459, 59.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=57 */
%   | | | else return -0.482031328517274;  // std dev = 0.601, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.09907569029687889;  // std dev = 1.167, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -8.99087513353467E-4;  // std dev = 7.014, 211.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=106 */
%   else return -0.06842697784420317;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( phenotype(D, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.24150918440835778;  // std dev = 1.561, 57.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=54 */
%   | | | else return -0.05044611187584168;  // std dev = 3.804, 108.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.15108942364843816;  // std dev = 1.247, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.0831497180984086;  // std dev = 3.211, 75.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=30 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3182941739595285;  // std dev = 1.408, 52.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else return -0.3624342009523386;  // std dev = 0.407, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.2888696499830676;  // std dev = 0.909, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.08647905742629657;  // std dev = 5.229, 136.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=83 */
%   else return -0.06419184008202572;  // std dev = 1.66e-07, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
Inference time using transfer learning 4.0164635181427
Refined model CLL: -0.22151


******************************************
Best model found
******************************************
Results 

CLL : -0.208213 

AUC ROC : 0.97535 

AUC PR : 0.504599 

Precision : 0.06683 

Recall : 0.891304 

F1 : 0.124337 

Total Learning Time : 31.376718282699585 

Total Inference Time : 48.4573712348938 

Total revision time: 112.36958289146423
Best scored revision CLL: -0.22151


Results 

CLL : -0.208213 

AUC ROC : 0.97535 

AUC PR : 0.504599 

Precision : 0.06683 

Recall : 0.891304 

F1 : 0.124337 

Total Learning Time : 112.39646482467651 

Total Inference Time : 48.4573712348938 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.180623769760132
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4416540897386832;  // std dev = 0.493, 485.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.35367613761387046;  // std dev = 11.182, 507.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.12544463852839224;  // std dev = 0.000, 396.000 (wgt'ed) examples reached here.  /* #neg=396 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2825593779911689;  // std dev = 0.497, 514.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, A), function(D, C) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.26142915932164357;  // std dev = 10.793, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( function(A, G) )
%   | | | then return -0.10159632948783602;  // std dev = 1.92e-07, 385.000 (wgt'ed) examples reached here.  /* #neg=385 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(A, D) )
%   | then return 0.16162538405206064;  // std dev = 11.304, 516.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14134596414120848;  // std dev = 11.068, 499.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=283 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 1.26e-07, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10421621266806136;  // std dev = 0.496, 501.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( function(A, F) )
%   | | then return -0.07877675473109143;  // std dev = 2.06e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( function(C, D) )
%   | then return 0.08508740216311106;  // std dev = 11.009, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333768;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0891486385080441;  // std dev = 10.679, 474.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06815969541333734;  // std dev = 10.662, 473.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
Inference time using transfer learning 3.1926937103271484
Parameter learned model CLL:-0.330454 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 202, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 375, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(G, A)'}, {'true,true': [11.182, 224, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [0.0, 396, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 231, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 365, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, A), function(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'function(A, G)'}, {'true,true': [0.0, 0, 0], 'true,false': [10.793, 198, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.92e-07, 385, 0], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [11.304, 233, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 339, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'function(A, G)'}, {'true,true,true': [11.068, 216, 283], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.26e-07, 371, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'function(A, F)'}, {'true,true': [0.496, 218, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.06e-07, 358, 0], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'function(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [11.009, 212, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 364, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [10.679, 191, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 360, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [10.662, 190, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 344, 0]}]
{'': [0.2430268891486904, 1.9184653865522705e-16], 'false': [nan, 1.9184653865522705e-16]}
{'': [0.24661445872187987, -1.2560098864446215e-16], 'true': [0.24661445872187987, nan], 'false': [nan, -1.2560098864446215e-16], 'false,false': [nan, -1.2560098864446215e-16], 'false,false,false': [nan, -1.2560098864446215e-16]}
{'': [0.24744129358506292, -2.6767020867675008e-17], 'false': [nan, -2.6767020867675008e-17], 'false,false': [nan, -2.6767020867675008e-17]}
{'': [0.24219293657963165, 9.573871277287064e-17], 'true': [nan, 0.24219293657963165], 'false': [nan, 9.573871277287064e-17], 'false,false': [nan, 9.573871277287064e-17], 'false,false,false': [9.573871277287064e-17, nan]}
{'': [0.24765263505798607, 1.1920978789485457e-16], 'true': [0.24765263505798607, nan], 'false': [nan, 1.1920978789485457e-16]}
{'': [0.24549298998798993, 4.309221443289017e-17], 'true': [0.24549298998798993, nan], 'true,true': [0.24549298998798993, nan], 'false': [nan, 4.309221443289017e-17], 'false,false': [4.309221443289017e-17, nan]}
{'': [0.24579184943486307, 1.1908537470839668e-16], 'true': [0.24579184943486307, nan], 'false': [nan, 1.1908537470839668e-16], 'false,false': [1.1908537470839668e-16, nan]}
{'': [0.24485664728088985, -6.64913789473308e-17], 'true': [0.24485664728088985, nan], 'false': [nan, -6.64913789473308e-17], 'false,false': [nan, -6.64913789473308e-17]}
{'': [0.24058199362637747, -9.190179481619351e-17], 'true': [0.24058199362637747, nan], 'false': [nan, -9.190179481619351e-17], 'false,false': [nan, -9.190179481619351e-17]}
{'': [0.2403354057811012, 7.10026352957949e-17], 'true': [0.2403354057811012, nan], 'false': [nan, 7.10026352957949e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 21.663665294647217
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.41370449065506754;  // std dev = 4.216, 72.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=40 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.37579599392304236;  // std dev = 4.607, 85.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=44 */
%   | | | else return 0.4535687824277536;  // std dev = 7.944, 262.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=156 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.7194734122109542;  // std dev = 7.30e-08, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.29176812834613797;  // std dev = 0.984, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7688948915743518;  // std dev = 0.176, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.27858835150797884;  // std dev = 4.206, 71.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=34 */
%   | | else if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.2964658807273218;  // std dev = 4.744, 91.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=46 */
%   | | | else return 0.3954544866211389;  // std dev = 7.994, 269.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=162 */
%   else return -0.12544463852839222;  // std dev = 0.000, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( location(A, F), location(D, F) )
%   | | | then return 0.5409157812894616;  // std dev = 0.976, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.008211031662833731;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.597577227056623;  // std dev = 0.252, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.3553706067542934;  // std dev = 4.047, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.1984091803340627;  // std dev = 4.171, 72.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=34 */
%   | | | else return 0.245969117518366;  // std dev = 8.836, 316.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=164 */
%   else return -0.11231637819360646;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), enzyme(A, G) )
%   | | | then return 0.49738161782186996;  // std dev = 0.212, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4153525503919351;  // std dev = 0.152, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return 0.5777197476495952;  // std dev = 0.141, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(J, H) )
%   | | | then return 0.15113795262707896;  // std dev = 0.993, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5041130907489315;  // std dev = 0.122, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.11063479573613812;  // std dev = 5.062, 112.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | else return 0.20740733814123904;  // std dev = 9.154, 341.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=180 */
%   else return -0.10159632948783637;  // std dev = 7.30e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D), interaction(F, A) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3526074691868797;  // std dev = 0.257, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.11661796065534041;  // std dev = 1.600, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | else if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.2644906290912233;  // std dev = 2.798, 35.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=22 */
%   | | | else return 0.5419056551759579;  // std dev = 1.350, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.20298337025938612;  // std dev = 0.722, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.3710180572687989;  // std dev = 0.270, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1472248953968883;  // std dev = 0.282, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.18708721650425053;  // std dev = 9.211, 351.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=197 */
%   else return -0.09269127618926044;  // std dev = 2.03e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E), location(A, F) )
%   | | | then return 0.2510273548138314;  // std dev = 0.071, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.30154297961173837;  // std dev = 0.208, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.38486939314512125;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2955996920502706;  // std dev = 0.084, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(A, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5043710667753238;  // std dev = 1.791, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return 0.05586081207691061;  // std dev = 8.723, 318.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=150 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.054989232651742076;  // std dev = 1.418, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.26001645286757813;  // std dev = 3.869, 72.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=50 */
%   else return -0.08518475138839678;  // std dev = 1.23e-07, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(A, E), location(D, F) )
%   | | then if ( location(A, F), phenotype(D, G) )
%   | | | then return 0.12004966457984063;  // std dev = 0.962, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.36555754053334477;  // std dev = 1.289, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.1997512432702475;  // std dev = 1.786, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.05925173498052803;  // std dev = 2.885, 46.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4849147499155209;  // std dev = 1.335, 54.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=53 */
%   | | | else return -0.4222355544411941;  // std dev = 0.410, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.06075007841642838;  // std dev = 4.929, 110.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=60 */
%   | | | else return 0.11528396969056472;  // std dev = 6.502, 184.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=107 */
%   else return -0.07877675473109141;  // std dev = 9.66e-08, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.20202778769269858;  // std dev = 0.208, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.3387679665391521;  // std dev = 0.747, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.15179395396769504;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3073633738423662;  // std dev = 0.203, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, H) )
%   | | | then return -0.10481937392751048;  // std dev = 2.996, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.08184231400932448;  // std dev = 3.953, 74.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=41 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11842499006088171;  // std dev = 6.865, 229.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=136 */
%   | | | else return 0.019867849316478937;  // std dev = 4.517, 88.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=46 */
%   else return -0.07324622576333709;  // std dev = 8.16e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.26493540489815637;  // std dev = 1.962, 63.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=59 */
%   | | | else return -0.13606344813727195;  // std dev = 1.464, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.33100166824368993;  // std dev = 0.987, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.016052252848568774;  // std dev = 4.575, 104.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=50 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.43137290588987776;  // std dev = 0.401, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return -0.4540474014919523;  // std dev = 0.522, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.2917400533124478;  // std dev = 1.569, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.11858238923727539;  // std dev = 6.350, 191.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=120 */
%   else return -0.06842697784420325;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.12052833489610114;  // std dev = 0.662, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.3498051207568611;  // std dev = 0.428, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( location(A, G), interaction(A, D) )
%   | | | then return -0.2627821802899104;  // std dev = 0.326, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.007153600942421954;  // std dev = 4.521, 108.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=55 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.1342972185147152;  // std dev = 0.076, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0520082297528876;  // std dev = 2.456, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.15375324986383374;  // std dev = 2.433, 49.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=34 */
%   | | | else return 0.06959828998895504;  // std dev = 6.905, 233.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=142 */
%   else return -0.06419184008202566;  // std dev = 1.78e-07, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 2.828268527984619
Refined model CLL: -0.267184


******************************************
Best model found
******************************************
Results 

CLL : -0.268173 

AUC ROC : 0.935859 

AUC PR : 0.260338 

Precision : 0.041503 

Recall : 0.860465 

F1 : 0.079187 

Total Learning Time : 21.663665294647217 

Total Inference Time : 19.625223636627197 

Total revision time: 75.92205309867859
Best scored revision CLL: -0.267184


Results 

CLL : -0.268173 

AUC ROC : 0.935859 

AUC PR : 0.260338 

Precision : 0.041503 

Recall : 0.860465 

F1 : 0.079187 

Total Learning Time : 75.94893503189087 

Total Inference Time : 19.625223636627197 

Starting experiments for fasttext using wmd 

Run: 1

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.98515796661377
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4187851180020924;  // std dev = 0.496, 503.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048766;  // std dev = 1.02e-08, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3907890981850614;  // std dev = 7.956, 262.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=155 */
%   | else return 0.3513599577934255;  // std dev = 7.541, 230.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.32631613169154755;  // std dev = 0.491, 475.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360661;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5950825135245897;  // std dev = 4.092, 258.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=240 */
%   | else return -0.16346919151946898;  // std dev = 5.869, 243.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 205.000 (wgt'ed) examples reached here.  /* #neg=205 */
%   | | | else return -0.10159632948783649;  // std dev = 0.000, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21017354576713715;  // std dev = 7.072, 259.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=155 */
%   | else return 0.17490011782184572;  // std dev = 6.142, 219.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926049;  // std dev = 1.05e-08, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.16609945677931354;  // std dev = 8.373, 391.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=237 */
%   | | else return 0.05349601710494683;  // std dev = 4.078, 91.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.74e-08, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | | else return -0.08518475138839678;  // std dev = 6.99e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07411125408538603;  // std dev = 0.432, 517.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 7.74e-08, 194.000 (wgt'ed) examples reached here.  /* #neg=194 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09510206989764314;  // std dev = 8.537, 400.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=237 */
%   | else return -0.0015596964434522072;  // std dev = 4.175, 97.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 3.95e-09, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.047241206076978515;  // std dev = 9.680, 507.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420317;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05772940504572035;  // std dev = 9.407, 484.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202566;  // std dev = 9.27e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 6.520501136779785
Parameter learned model CLL:-0.264915 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 221, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.956, 107, 155], 'true,false': [7.541, 103, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 313, 0], 'false,false,false,false': [0.0, 62, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 193, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 331, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.092, 18, 240], 'true,false': [5.869, 201, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 205, 0], 'false,false,false,false': [0.0, 170, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.072, 104, 155], 'true,false': [6.142, 92, 127], 'false,true': [0.0, 0, 0], 'false,false': [1.05e-08, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.373, 154, 237], 'true,true,false': [4.078, 46, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 187, 0], 'false,false,false': [6.99e-08, 167, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.432, 235, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 194, 0], 'false,false,false': [8.43e-08, 170, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.537, 163, 237], 'true,false': [4.175, 52, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.95e-09, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.68, 225, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.407, 202, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.27e-09, 373, 0]}]
{'': [0.24632325332300722, 1.0733273954080064e-16], 'false': [nan, 1.0733273954080064e-16]}
{'': [0.24464604402142176, -1.2552921665095104e-16], 'true': [0.24160888060137006, 0.2472778827977371], 'false': [nan, -1.2552921665095104e-16], 'false,false': [nan, -1.2552921665095104e-16], 'false,false,false': [-1.1066759862078237e-16, -4.118569284899774e-17]}
{'': [0.24125570770971014, -3.756645883928022e-17], 'false': [nan, -3.756645883928022e-17], 'false,false': [nan, -3.756645883928022e-17]}
{'': [0.24590071260482987, 7.934393882654452e-17], 'true': [0.0648890784782836, 0.14177177700805624], 'false': [nan, 7.934393882654452e-17], 'false,false': [nan, 7.934393882654452e-17], 'false,false,false': [-8.448526431293874e-17, -7.706253935633439e-17]}
{'': [0.18386804696381115, 1.1164954710919654e-16], 'true': [0.19310576934423757, 0.172268902801313], 'false': [nan, 1.1164954710919654e-16]}
{'': [0.18187962192030593, 4.014365738757628e-17], 'true': [0.18187962192030593, nan], 'true,true': [0.17928432593086827, 0.1827451581752852], 'false': [nan, 4.014365738757628e-17], 'false,false': [3.2059916219122166e-17, 2.9251385079944247e-17]}
{'': [0.18644536162072978, 2.1960455432145953e-17], 'true': [0.18644536162072978, nan], 'false': [nan, 2.1960455432145953e-17], 'false,false': [3.0903115118432194e-17, 4.179663151530001e-17]}
{'': [0.18318733957479422, 1.4846005561848022e-17], 'true': [0.18220252688401434, 0.17972850567503354], 'false': [nan, 1.4846005561848022e-17], 'false,false': [nan, 1.4846005561848022e-17]}
{'': [0.18480819969605988, -8.73936491687441e-17], 'true': [0.18480819969605988, nan], 'false': [nan, -8.73936491687441e-17], 'false,false': [nan, -8.73936491687441e-17]}
{'': [0.18284910980644617, 8.453172627172773e-17], 'true': [0.18284910980644617, nan], 'false': [nan, 8.453172627172773e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 43.81025576591492
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), complex(A, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 1.414, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.22434611819810266;  // std dev = 4.059, 71.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=26 */
%   | | | else return 0.39185680026805;  // std dev = 9.413, 356.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=190 */
%   else return -0.14185106490048752;  // std dev = 2.40e-07, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then return 0.7297735341618792;  // std dev = 0.145, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( enzyme(D, F), phenotype(D, G) )
%   | | | then return 0.4197726590753387;  // std dev = 2.865, 34.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=21 */
%   | | | else return 0.24170046932485448;  // std dev = 5.830, 144.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=63 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.3319045176838227;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7231296197029744;  // std dev = 0.060, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.3924027099656971;  // std dev = 7.425, 229.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=135 */
%   | | | else return 0.5762001850203883;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=17 */
%   else if ( interaction(M, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( enzyme(A, E), phenotype(A, F) )
%   | | | then return 0.6409473057730563;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03141177245375047;  // std dev = 0.808, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, G), complex(D, H) )
%   | | | then return 0.5108882495945627;  // std dev = 1.136, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.625943642026767;  // std dev = 0.177, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.21322653163631108;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.2717906284039938;  // std dev = 3.712, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.3649738480545412;  // std dev = 4.459, 90.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=58 */
%   | | | else return 0.2782452535127285;  // std dev = 8.201, 276.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=151 */
%   else return -0.11231637819360639;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return 0.5266858198828327;  // std dev = 0.192, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13568121840774527;  // std dev = 0.760, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.48855489609801084;  // std dev = 0.256, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.4026327060360209;  // std dev = 0.982, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48156524978365217;  // std dev = 1.265, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.11166522510661572;  // std dev = 4.466, 91.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=40 */
%   | | else if ( phenotype(A, K), enzyme(A, L) )
%   | | | then return 0.31090721902835683;  // std dev = 3.705, 59.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=37 */
%   | | | else return 0.20899706034621773;  // std dev = 8.271, 281.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=150 */
%   else return -0.10159632948783608;  // std dev = 9.22e-09, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), location(A, F) )
%   | | then if ( complex(A, E), interaction(D, G) )
%   | | | then return 0.350648115943815;  // std dev = 0.290, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.014768626009226947;  // std dev = 1.426, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( enzyme(A, H), enzyme(D, H) )
%   | | | then return 0.2849496773096466;  // std dev = 0.691, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.4220021003674711;  // std dev = 0.319, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, I), location(I, J) )
%   | | | then return -0.054047398432029735;  // std dev = 2.205, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.1256922529171009;  // std dev = 3.607, 54.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.06515880996276581;  // std dev = 4.731, 96.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=44 */
%   | | | else return 0.18894118246485028;  // std dev = 8.169, 280.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=158 */
%   else return -0.09269127618926044;  // std dev = 1.04e-08, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(A, F) )
%   | | then if ( phenotype(D, F) )
%   | | | then return 0.3268320588874614;  // std dev = 0.207, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15505761195331022;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2662242081520622;  // std dev = 0.156, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.3809468798079706;  // std dev = 0.372, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5837229586390961;  // std dev = 1.239, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.11195416251818344;  // std dev = 4.457, 89.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=45 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.022606105167651984;  // std dev = 3.679, 56.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=26 */
%   | | | else return 0.13833341510214914;  // std dev = 7.827, 258.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=143 */
%   else return -0.08518475138839678;  // std dev = 6.38e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, F) )
%   | | | then return 0.45793031934020006;  // std dev = 1.842, 148.000 (wgt'ed) examples reached here.  /* #pos=148 */
%   | | | else return 0.04650800991186425;  // std dev = 7.493, 248.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=121 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.22298645038208714;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.4274558393719135;  // std dev = 0.272, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then return -0.3211084601084386;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.23229036227418687;  // std dev = 1.406, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.03351848115348942;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   else if ( interaction(A, K) )
%   | then return -0.07877675473109148;  // std dev = 6.25e-09, 206.000 (wgt'ed) examples reached here.  /* #neg=206 */
%   | else return -0.0787767547310915;  // std dev = 6.72e-09, 162.000 (wgt'ed) examples reached here.  /* #neg=162 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(A, G) )
%   | | | then return 0.24691166541045068;  // std dev = 1.903, 61.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=58 */
%   | | | else return -0.09417447990361973;  // std dev = 1.359, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2868073134719398;  // std dev = 0.433, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.05748238131647252;  // std dev = 5.022, 147.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=84 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, J) )
%   | | | then return 0.15169627298987534;  // std dev = 6.519, 195.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=120 */
%   | | | else return 0.021727279943696817;  // std dev = 2.033, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | else return 0.3378475749733927;  // std dev = 0.874, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else return -0.07324622576333768;  // std dev = 0.000, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.23307617619303517;  // std dev = 0.817, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.2632321930069724;  // std dev = 0.687, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(E, G), complex(G, D) )
%   | | | then return -0.20222548320537498;  // std dev = 2.015, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | | | else return -0.013826606017414185;  // std dev = 3.129, 56.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=28 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4670519803461105;  // std dev = 0.257, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.46993219092520144;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.028287767175610545;  // std dev = 3.076, 42.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=21 */
%   | | | else return 0.07587267057712316;  // std dev = 7.428, 283.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=169 */
%   else return -0.06842697784420328;  // std dev = 0.000, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.33384792781874834;  // std dev = 1.522, 111.000 (wgt'ed) examples reached here.  /* #pos=111 */
%   | | | else return -0.3932328070045765;  // std dev = 1.009, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.20488423094721397;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.309185846312649;  // std dev = 0.176, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), interaction(K, H) )
%   | | | then return 0.1121894527405652;  // std dev = 4.393, 104.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=66 */
%   | | | else return 0.00902868131940074;  // std dev = 3.974, 88.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=48 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.16895489629090266;  // std dev = 2.772, 45.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=31 */
%   | | | else return 0.08209134958438485;  // std dev = 2.717, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   else return -0.0641918400820258;  // std dev = 8.12e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
Inference time using transfer learning 5.416473150253296
Refined model CLL: -0.237342


******************************************
Best model found
******************************************
Results 

CLL : -0.230333 

AUC ROC : 0.983905 

AUC PR : 0.437869 

Precision : 0.073666 

Recall : 1.0 

F1 : 0.137224 

Total Learning Time : 43.81025576591492 

Total Inference Time : 47.681525230407715 

Total revision time: 130.06950879096985
Best scored revision CLL: -0.237342


Results 

CLL : -0.230333 

AUC ROC : 0.983905 

AUC PR : 0.437869 

Precision : 0.073666 

Recall : 1.0 

F1 : 0.137224 

Total Learning Time : 130.08655548095703 

Total Inference Time : 47.681525230407715 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.594381093978882
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42197872233355055;  // std dev = 0.496, 470.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.15e-08, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3690055015714727;  // std dev = 9.789, 391.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=223 */
%   | else return 0.3171915392715822;  // std dev = 4.497, 81.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29817117735119264;  // std dev = 0.496, 470.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360646;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6276693034546185;  // std dev = 3.094, 233.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=223 */
%   | else return -0.12659706175458368;  // std dev = 5.855, 211.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
%   | | | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1696298251200074;  // std dev = 8.141, 383.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=223 */
%   | else return 0.2403821049802673;  // std dev = 4.435, 79.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926042;  // std dev = 1.09e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1238948154081492;  // std dev = 9.282, 463.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=259 */
%   | | else return 0.15888479356416077;  // std dev = 1.725, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 9.66e-08, 261.000 (wgt'ed) examples reached here.  /* #neg=261 */
%   | | else return -0.08518475138839685;  // std dev = 2.89e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12166113661412734;  // std dev = 0.427, 451.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.71e-08, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | | else return -0.07877675473109177;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.12546301008930097;  // std dev = 8.427, 414.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=259 */
%   | else return -0.031374827558950755;  // std dev = 1.929, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333722;  // std dev = 0.000, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.03820905876961057;  // std dev = 9.351, 476.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420308;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04015350006804304;  // std dev = 9.253, 463.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202586;  // std dev = 7.62e-09, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
Inference time using transfer learning 4.275500059127808
Parameter learned model CLL:-0.26871 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.496, 205, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.15e-08, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.789, 168, 223], 'true,false': [4.497, 39, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 279, 0], 'false,false,false,false': [0.0, 58, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 205, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.094, 10, 223], 'true,false': [5.855, 169, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 273, 0], 'false,false,false,false': [3.33e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.141, 160, 223], 'true,false': [4.435, 37, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.282, 204, 259], 'true,true,false': [1.725, 6, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.66e-08, 261, 0], 'false,false,false': [2.89e-08, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.427, 186, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.71e-08, 285, 0], 'false,false,false': [1.49e-08, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.427, 155, 259], 'true,false': [1.929, 10, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.351, 211, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 318, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.253, 198, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.62e-09, 321, 0]}]
{'': [0.24592575826165997, 1.3425952855932125e-16], 'false': [nan, 1.3425952855932125e-16]}
{'': [0.24622504309106996, -1.1596394797271666e-16], 'true': [0.24505334214193233, 0.24965706447187805], 'false': [nan, -1.1596394797271666e-16], 'false,false': [nan, -1.1596394797271666e-16], 'false,false,false': [-1.0186992627384949e-16, -4.0197730201945323e-17]}
{'': [0.24602256712956408, -3.010774304068221e-17], 'false': [nan, -3.010774304068221e-17], 'false,false': [nan, -3.010774304068221e-17]}
{'': [0.24064905224194824, -1.3498152275077891e-17], 'true': [0.04107646116156152, 0.16247647597108178], 'false': [nan, -1.3498152275077891e-17], 'false,false': [nan, -1.3498152275077891e-17], 'false,false,false': [-5.856121448572254e-17, 1.9825411154020653e-17]}
{'': [0.18673819085476276, 1.1956247957501685e-16], 'true': [0.17303998946616853, 0.24899855792340905], 'false': [nan, 1.1956247957501685e-16]}
{'': [0.1876620932389008, 3.85543687008093e-17], 'true': [0.1876620932389008, nan], 'true,true': [0.1860705361138549, 0.24787630339034772], 'false': [nan, 3.85543687008093e-17], 'false,false': [3.573131573506251e-17, 1.6653345369377347e-17]}
{'': [0.1825081622789594, 2.6122894697062506e-17], 'true': [0.1825081622789594, nan], 'false': [nan, 2.6122894697062506e-17], 'false,false': [7.791038769299344e-18, 4.037174635000569e-18]}
{'': [0.1746731233121874, -1.290957005378089e-18], 'true': [0.17152483086489861, 0.2324523614794401], 'false': [nan, -1.290957005378089e-18], 'false,false': [nan, -1.290957005378089e-18]}
{'': [0.18368383221509624, -6.354106618923852e-17], 'true': [0.18368383221509624, nan], 'false': [nan, -6.354106618923852e-17], 'false,false': [nan, -6.354106618923852e-17]}
{'': [0.18490247208745011, 5.810513026075585e-17], 'true': [0.18490247208745011, nan], 'false': [nan, 5.810513026075585e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.00808620452881
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2940463709969469;  // std dev = 4.379, 78.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=34 */
%   | | | else return 0.4101994082856305;  // std dev = 8.854, 317.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=175 */
%   else return -0.14185106490048782;  // std dev = 1.07e-07, 303.000 (wgt'ed) examples reached here.  /* #neg=303 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.7331028195093842;  // std dev = 0.118, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( phenotype(D, F), location(D, G) )
%   | | | then return 0.08806525814373523;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7205739331591984;  // std dev = 0.016, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18648860691210678;  // std dev = 0.096, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.3306547396165068;  // std dev = 7.614, 234.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=124 */
%   | | | else return 0.395007156519506;  // std dev = 6.363, 170.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=101 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839197;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
%   | else return -0.12544463852839113;  // std dev = 6.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.5533253561789695;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.6211762308834472;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.00345784215820392;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.518701399760413;  // std dev = 0.833, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return -0.09048182860476202;  // std dev = 1.197, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.1796958489463383;  // std dev = 3.248, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.2876772490602343;  // std dev = 5.799, 138.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=76 */
%   | | | else return 0.3766855959645977;  // std dev = 6.765, 200.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=128 */
%   else return -0.11231637819360661;  // std dev = 0.000, 331.000 (wgt'ed) examples reached here.  /* #neg=331 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(F, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.44444427671861053;  // std dev = 0.237, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.41224851872268464;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.37631501332358197;  // std dev = 0.813, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5720349875770228;  // std dev = 0.176, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6830004927032258;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.10891445017170345;  // std dev = 5.514, 128.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=54 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.2083450516813958;  // std dev = 7.922, 263.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=144 */
%   | | | else return 0.46114451968728487;  // std dev = 1.801, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   else return -0.10159632948783665;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.3657490622910815;  // std dev = 0.278, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.6208369259928861;  // std dev = 0.552, 85.000 (wgt'ed) examples reached here.  /* #pos=85 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.19583164754205046;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.36203435950441787;  // std dev = 0.189, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.3477241395753081;  // std dev = 0.195, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.011433406290111341;  // std dev = 3.489, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2575668100163031;  // std dev = 3.410, 57.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=38 */
%   | | | else return 0.14115670985345918;  // std dev = 6.357, 168.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=91 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( enzyme(E, F), interaction(D, E) )
%   | | | then return 0.23779719011362918;  // std dev = 0.023, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.25564427605938517;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.24754909547479023;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36147890113411096;  // std dev = 0.210, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), enzyme(I, L) )
%   | | | then return -0.05650306635842713;  // std dev = 1.851, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.09245098271852024;  // std dev = 4.938, 122.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=61 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.3130661460317903;  // std dev = 0.896, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.1294400203638426;  // std dev = 7.473, 267.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=146 */
%   else return -0.08518475138839678;  // std dev = 6.18e-09, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D), recursion_proteinclass(D, B) )
%   | | | then return 0.21996815825146443;  // std dev = 0.171, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.4308394501529597;  // std dev = 1.283, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.26451775405770067;  // std dev = 0.567, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.05286942546801834;  // std dev = 6.071, 184.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=94 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.06431589247687072;  // std dev = 0.544, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.30277775480978747;  // std dev = 1.909, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.17116683578074435;  // std dev = 2.772, 58.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=38 */
%   | | | else return 0.10353693752508142;  // std dev = 5.040, 109.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=62 */
%   else return -0.07877675473109143;  // std dev = 3.23e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.1796063812964188;  // std dev = 0.109, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.04439459866347831;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2602524979158781;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30724682233480477;  // std dev = 0.109, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( enzyme(A, G), interaction(A, H) )
%   | | then if ( location(A, I) )
%   | | | then return 0.11214261742082737;  // std dev = 3.147, 73.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=41 */
%   | | | else return 0.5257353650228013;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.17129870735964167;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06173967195812138;  // std dev = 8.287, 327.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=180 */
%   else return -0.07324622576333718;  // std dev = 1.86e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.14954396235984482;  // std dev = 0.017, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.1682623674369643;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(D, E), complex(A, E) )
%   | | | then return 0.21801853301003538;  // std dev = 0.078, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.24901109974287913;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.10764786689007384;  // std dev = 8.108, 357.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=216 */
%   | | | else return -0.40569327133969885;  // std dev = 0.659, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.24334197194949572;  // std dev = 1.823, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.4062858420208945;  // std dev = 0.045, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else return -0.0684269778442032;  // std dev = 0.000, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2042002453393506;  // std dev = 0.431, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4404545522542231;  // std dev = 0.530, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09988896592707786;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.3678582404608404;  // std dev = 0.568, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( interaction(H, H), phenotype(H, J) )
%   | | | then return 0.049733002615185755;  // std dev = 1.591, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.0931813330005736;  // std dev = 2.271, 47.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=18 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.10749118377939376;  // std dev = 2.583, 47.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=32 */
%   | | | else return 0.02147214559374021;  // std dev = 6.911, 267.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=143 */
%   else return -0.06419184008202579;  // std dev = 8.28e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
Inference time using transfer learning 4.90272068977356
Refined model CLL: -0.231885


******************************************
Best model found
******************************************
Results 

CLL : -0.234339 

AUC ROC : 0.967111 

AUC PR : 0.251347 

Precision : 0.049871 

Recall : 0.932692 

F1 : 0.09468 

Total Learning Time : 18.00808620452881 

Total Inference Time : 13.526324033737183 

Total revision time: 62.83782172203064
Best scored revision CLL: -0.231885


Results 

CLL : -0.234339 

AUC ROC : 0.967111 

AUC PR : 0.251347 

Precision : 0.049871 

Recall : 0.932692 

F1 : 0.09468 

Total Learning Time : 62.85486841201782 

Total Inference Time : 13.526324033737183 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.998190879821777
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42928295571806463;  // std dev = 0.495, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048738;  // std dev = 1.45e-08, 386.000 (wgt'ed) examples reached here.  /* #neg=386 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3612543674189746;  // std dev = 10.485, 447.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=252 */
%   | else return 0.5787459781572305;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31240600704023264;  // std dev = 0.493, 475.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360625;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5305485738740319;  // std dev = 5.875, 292.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=252 */
%   | else return -0.22590039237599746;  // std dev = 4.493, 214.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | | | else return -0.10159632948783638;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17010082876330027;  // std dev = 8.953, 448.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=252 */
%   | else return 0.32729315409208287;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926054;  // std dev = 1.03e-08, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.11607582647536543;  // std dev = 9.607, 494.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=271 */
%   | | else return 0.13661647356720838;  // std dev = 1.582, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.13e-07, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
%   | | else return -0.08518475138839696;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09692260499154515;  // std dev = 0.428, 500.000 (wgt'ed) examples reached here.  /* #neg=223 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 3.33e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08268016699419256;  // std dev = 9.345, 476.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=271 */
%   | else return 0.08154174222061562;  // std dev = 1.575, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.61e-09, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08753125880451912;  // std dev = 9.147, 464.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420322;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.052312618385020215;  // std dev = 9.329, 477.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202583;  // std dev = 7.90e-09, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
Inference time using transfer learning 2.9756429195404053
Parameter learned model CLL:-0.267805 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 208, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.45e-08, 386, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.485, 195, 252], 'true,false': [2.339, 7, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 307, 0], 'false,false,false,false': [0.0, 30, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 198, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 391, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.875, 40, 252], 'true,false': [4.493, 189, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 280, 0], 'false,false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.953, 196, 252], 'true,false': [2.924, 13, 25], 'false,true': [0.0, 0, 0], 'false,false': [1.03e-08, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.607, 223, 271], 'true,true,false': [1.582, 6, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.13e-07, 328, 0], 'false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 223, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 300, 0], 'false,false,false': [0.0, 33, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.345, 205, 271], 'true,false': [1.575, 6, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.61e-09, 332, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.147, 187, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 354, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.329, 200, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.9e-09, 329, 0]}]
{'': [0.2449399511106417, 2.0938921293448549e-16], 'false': [nan, 2.0938921293448549e-16]}
{'': [0.24387097336570565, -1.1596394797271666e-16], 'true': [0.24593486779875157, 0.1708984375000006], 'false': [nan, -1.1596394797271666e-16], 'false,false': [nan, -1.1596394797271666e-16], 'false,false,false': [-1.0993739396939661e-16, -9.25185853854297e-18]}
{'': [0.24281069624349863, -2.271556060614131e-17], 'false': [nan, -2.271556060614131e-17], 'false,false': [nan, -2.271556060614131e-17]}
{'': [0.24776788404163727, -4.7891973611281265e-17], 'true': [0.11822105460686681, 0.09432166681944919], 'false': [nan, -4.7891973611281265e-17], 'false,false': [nan, -4.7891973611281265e-17], 'false,false,false': [-5.709718412357947e-17, 0.0]}
{'': [0.18429431967722146, 1.0544017552305956e-16], 'true': [0.1789037188392979, 0.22506925207756232], 'false': [nan, 1.0544017552305956e-16]}
{'': [0.18734310124720246, 4.0257378796606245e-17], 'true': [0.18734310124720246, nan], 'true,true': [0.18681477511009356, 0.20868061500672078], 'false': [nan, 4.0257378796606245e-17], 'false,false': [3.9263985017231144e-17, -3.3306690738754695e-18]}
{'': [0.1832256000044101, 1.8670417230933565e-17], 'true': [0.1832256000044101, nan], 'false': [nan, 1.8670417230933565e-17], 'false,false': [3.7007434154171884e-18, 0.0]}
{'': [0.18401973998145774, 1.4044990070559208e-17], 'true': [0.18344997807531774, 0.2066190314498303], 'false': [nan, 1.4044990070559208e-17], 'false,false': [nan, 1.4044990070559208e-17]}
{'': [0.18033607017277467, -8.906873982868488e-17], 'true': [0.18033607017277467, nan], 'false': [nan, -8.906873982868488e-17], 'false,false': [nan, -8.906873982868488e-17]}
{'': [0.1824609153422182, 6.20915004653583e-17], 'true': [0.1824609153422182, nan], 'false': [nan, 6.20915004653583e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 26.051942348480225
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995118;  // std dev = 2.31e-07, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(E, F) )
%   | | | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.2748156017661777;  // std dev = 4.518, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   | | | else return 0.4233663264038584;  // std dev = 8.896, 322.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=182 */
%   else return -0.1418510649004874;  // std dev = 2.73e-07, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), interaction(A, D) )
%   | | then if ( phenotype(D, F), interaction(D, E) )
%   | | | then return 0.7831154304022047;  // std dev = 0.342, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return 0.5765228249448296;  // std dev = 1.529, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.178699358683045;  // std dev = 3.33e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.3779679762487822;  // std dev = 8.206, 283.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=166 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.18265452986635225;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4484498092802016;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7194734122109545;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.25034080307599443;  // std dev = 3.992, 64.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=29 */
%   else return -0.1254446385283922;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, D), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), interaction(A, E) )
%   | | | then return 0.40036713777394245;  // std dev = 1.277, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.6134550791755503;  // std dev = 1.375, 51.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=49 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return -0.04513763015084386;  // std dev = 2.515, 64.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | else return 0.32143988156422293;  // std dev = 7.837, 262.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=157 */
%   | else if ( interaction(A, H) )
%   | | then if ( interaction(H, I), complex(I, J) )
%   | | | then return 0.21497463934568734;  // std dev = 2.899, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return 0.5014947040606496;  // std dev = 1.718, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.29362774673148806;  // std dev = 1.322, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.075091879845423;  // std dev = 3.137, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   else return -0.11231637819360667;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.4914153438859395;  // std dev = 0.221, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.6639488137224729;  // std dev = 0.428, 79.000 (wgt'ed) examples reached here.  /* #pos=79 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.15562605563611656;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.3247952094874299;  // std dev = 0.189, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return 0.3962515698023696;  // std dev = 0.601, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.5276954795988031;  // std dev = 0.942, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14817067224041655;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.19858450597553146;  // std dev = 7.937, 279.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=150 */
%   else return -0.10159632948783638;  // std dev = 3.48e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.33625560382637765;  // std dev = 0.067, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.04809413840251373;  // std dev = 1.009, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.5485994825461373;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4209140704350713;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(G, A), complex(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.2908421951732374;  // std dev = 1.899, 29.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=23 */
%   | | | else return 0.054745859182172014;  // std dev = 4.444, 110.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=45 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13006522424899108;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.19740074642250696;  // std dev = 7.503, 287.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=166 */
%   else return -0.09269127618926043;  // std dev = 2.05e-07, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(E, E) )
%   | | | then return 0.23353706173404773;  // std dev = 0.856, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.35948003034816317;  // std dev = 1.222, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | else if ( interaction(A, E), interaction(D, E) )
%   | | | then return -0.1123104542812439;  // std dev = 1.956, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | | else return 0.12691658086046423;  // std dev = 7.383, 277.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=156 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4770977683226973;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08947421375224655;  // std dev = 2.965, 48.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=24 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.1492017730197158;  // std dev = 1.429, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.4376775721564563;  // std dev = 1.541, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2654275127476328;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.5290568994537391;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.22404749593785817;  // std dev = 0.053, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.3167069330356436;  // std dev = 0.273, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.158539417490234;  // std dev = 7.742, 357.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=222 */
%   | | | else return -0.3262412480630815;  // std dev = 0.916, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.171653427749096;  // std dev = 1.416, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.5250134163688523;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.07877675473109141;  // std dev = 3.95e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, F), complex(F, E) )
%   | | | then return 0.20116417304523798;  // std dev = 0.083, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.29427502152460466;  // std dev = 0.212, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.03317704757268033;  // std dev = 5.968, 216.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=112 */
%   | | | else return 0.16047663418352912;  // std dev = 2.480, 53.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=35 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.21245305026284458;  // std dev = 4.381, 135.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=101 */
%   | | | else return -0.3002011731342034;  // std dev = 0.364, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.21870958393478357;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.016311907367719005;  // std dev = 1.660, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else return -0.07324622576333718;  // std dev = 4.71e-08, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.20895180142656708;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.36891530182240884;  // std dev = 0.437, 47.000 (wgt'ed) examples reached here.  /* #pos=47 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.18854946847392579;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.32916115217377184;  // std dev = 0.449, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.16989795301510704;  // std dev = 2.083, 69.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=62 */
%   | | | else return 0.01621491394246168;  // std dev = 6.983, 261.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=131 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return -0.14975215318757248;  // std dev = 1.030, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.004128970656383915;  // std dev = 3.114, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   else return -0.06842697784420328;  // std dev = 0.000, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), phenotype(E, F) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.16529070591171857;  // std dev = 0.283, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.2537508905780917;  // std dev = 1.035, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.16385386548003397;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.3021192264150982;  // std dev = 0.249, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.018430416808047946;  // std dev = 4.198, 152.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=68 */
%   | | | else return 0.1282211157119729;  // std dev = 1.977, 27.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=17 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.043427326277657774;  // std dev = 2.934, 82.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=48 */
%   | | | else return 0.0910707883467831;  // std dev = 5.722, 160.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=101 */
%   else return -0.06419184008202579;  // std dev = 1.51e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
Inference time using transfer learning 3.74397349357605
Refined model CLL: -0.23315


******************************************
Best model found
******************************************
Results 

CLL : -0.228842 

AUC ROC : 0.971716 

AUC PR : 0.38669 

Precision : 0.056998 

Recall : 0.978261 

F1 : 0.10772 

Total Learning Time : 26.051942348480225 

Total Inference Time : 22.726196765899658 

Total revision time: 85.44605588912964
Best scored revision CLL: -0.23315


Results 

CLL : -0.228842 

AUC ROC : 0.971716 

AUC PR : 0.38669 

Precision : 0.056998 

Recall : 0.978261 

F1 : 0.10772 

Total Learning Time : 85.46310257911682 

Total Inference Time : 22.726196765899658 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.420140743255615
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.42642202746898583;  // std dev = 0.495, 498.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004874;  // std dev = 1.43e-08, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3803242031422129;  // std dev = 10.238, 431.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=251 */
%   | else return 0.49360978772810193;  // std dev = 3.121, 46.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.33045443638123667;  // std dev = 0.489, 469.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360653;  // std dev = 0.000, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5499598611341531;  // std dev = 5.253, 282.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=251 */
%   | else return -0.19264425730513454;  // std dev = 5.087, 207.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783633;  // std dev = 9.19e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | | | else return -0.10159632948783631;  // std dev = 2.11e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.21031129248187008;  // std dev = 8.308, 399.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=251 */
%   | else return 0.2198404536714384;  // std dev = 3.827, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926046;  // std dev = 1.09e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.10750988521495151;  // std dev = 9.741, 502.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=280 */
%   | | else return 0.01680111394758242;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.01e-07, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
%   | | else return -0.08518475138839686;  // std dev = 2.36e-08, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.1056295167833201;  // std dev = 0.422, 492.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 3.33e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09301320844567487;  // std dev = 9.185, 469.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=280 */
%   | else return 0.039711404733093605;  // std dev = 1.281, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333725;  // std dev = 0.000, 389.000 (wgt'ed) examples reached here.  /* #neg=389 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06977073928202139;  // std dev = 9.299, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.052817325951869845;  // std dev = 9.303, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202579;  // std dev = 8.28e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
Inference time using transfer learning 2.6761703491210938
Parameter learned model CLL:-0.277539 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 215, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.43e-08, 383, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.238, 180, 251], 'true,false': [3.121, 14, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 309, 0], 'false,false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.489, 186, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.253, 31, 251], 'true,false': [5.087, 175, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [9.19e-08, 347, 0], 'false,false,false,false': [2.11e-08, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.308, 148, 251], 'true,false': [3.827, 27, 32], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.741, 222, 280], 'true,true,false': [1.339, 5, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.01e-07, 282, 0], 'false,false,false': [2.36e-08, 43, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.422, 209, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.33e-08, 306, 0], 'false,false,false': [0.0, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.185, 189, 280], 'true,false': [1.281, 4, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 389, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.299, 192, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.303, 192, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.28e-09, 340, 0]}]
{'': [0.24533878485831165, 2.0639132990420664e-16], 'false': [nan, 2.0639132990420664e-16]}
{'': [0.24129671382548937, -1.2122769516798366e-16], 'true': [0.2432157449626127, 0.21172022684310154], 'false': [nan, -1.2122769516798366e-16], 'false,false': [nan, -1.2122769516798366e-16], 'false,false,false': [-1.092258250763908e-16, -3.3306690738754695e-17]}
{'': [0.23947646485019208, -3.3662738939071804e-17], 'false': [nan, -3.3662738939071804e-17], 'false,false': [nan, -3.3662738939071804e-17]}
{'': [0.24397464723693363, 1.0676313484886416e-16], 'true': [0.09784467582113479, 0.12502987757458844], 'false': [nan, 1.0676313484886416e-16], 'false,false': [nan, 1.0676313484886416e-16], 'false,false,false': [2.4316123882280087e-17, 1.0092936587501423e-17]}
{'': [0.18267780977374615, 1.1995513139628128e-16], 'true': [0.17297669610749744, 0.248204538925596], 'false': [nan, 1.1995513139628128e-16]}
{'': [0.18970200033414625, 3.9626421802005585e-17], 'true': [0.18970200033414625, nan], 'true,true': [0.18902650296319362, 0.22399044711674526], 'false': [nan, 3.9626421802005585e-17], 'false,false': [3.622004193812568e-17, 1.290957005378089e-17]}
{'': [0.17850433520794293, 2.885325374732045e-17], 'true': [0.17850433520794293, nan], 'false': [nan, 2.885325374732045e-17], 'false,false': [3.6281798190364595e-18, 0.0]}
{'': [0.18074269163891177, -4.566470024165168e-18], 'true': [0.17989992271255534, 0.23440890804752876], 'false': [nan, -4.566470024165168e-18], 'false,false': [nan, -4.566470024165168e-18]}
{'': [0.18203594584961863, -8.238176646493915e-17], 'true': [0.18203594584961863, nan], 'false': [nan, -8.238176646493915e-17], 'false,false': [nan, -8.238176646493915e-17]}
{'': [0.18220079804268222, 6.791952621236252e-17], 'true': [0.18220079804268222, nan], 'false': [nan, 6.791952621236252e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 24.737316370010376
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(A, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( location(A, I) )
%   | | | then return 0.3763087413949076;  // std dev = 10.154, 413.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=214 */
%   | | | else return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else return -0.1418510649004874;  // std dev = 2.81e-07, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.7405827235052798;  // std dev = 0.184, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(D, F), complex(D, G) )
%   | | | then return 0.07352525466573474;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6652378510171559;  // std dev = 0.918, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J), complex(H, K) )
%   | | | then return 0.45809035021365757;  // std dev = 2.284, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.16214436016915865;  // std dev = 3.650, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6639178566553986;  // std dev = 0.972, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.34228673818690847;  // std dev = 9.336, 351.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=189 */
%   else if ( interaction(M, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 313.000 (wgt'ed) examples reached here.  /* #neg=313 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( complex(A, G), interaction(H, D) )
%   | | | then return -0.06239783269750345;  // std dev = 0.755, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.595227923934397;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.5967857497482862;  // std dev = 0.163, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5650497568491771;  // std dev = 0.037, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else if ( complex(A, K), interaction(A, L) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6064751697285504;  // std dev = 1.633, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return 0.09251816107951212;  // std dev = 4.305, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return 0.23363547124778017;  // std dev = 4.582, 85.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | | | else return 0.3140662727140909;  // std dev = 7.792, 249.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=142 */
%   else return -0.11231637819360656;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.4300995640208637;  // std dev = 0.229, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.5245373661747451;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(D, F), phenotype(F, G) )
%   | | | then return -0.18364493146607108;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4096906634153376;  // std dev = 0.793, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5100429797572088;  // std dev = 1.778, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.1771123501829033;  // std dev = 7.282, 220.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=108 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.26366167667045937;  // std dev = 4.016, 65.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=37 */
%   | | | else return 0.13289132483354218;  // std dev = 5.833, 142.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=65 */
%   else return -0.1015963294878362;  // std dev = 7.45e-09, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(G, A) )
%   | | | then return 0.4303604010715634;  // std dev = 1.061, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.03193471702164817;  // std dev = 1.849, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(H, A), interaction(D, H) )
%   | | | then return -0.2114072170662197;  // std dev = 1.665, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.11939588700551783;  // std dev = 5.259, 121.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=59 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.20889675612128566;  // std dev = 6.700, 195.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=115 */
%   | | | else return 0.09437848376214616;  // std dev = 3.901, 64.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=30 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.2414486284621674;  // std dev = 2.149, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.4479903599922118;  // std dev = 1.774, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   else return -0.09269127618926065;  // std dev = 9.41e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), enzyme(A, F) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.3371464985684002;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.23088699850287586;  // std dev = 0.697, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.2626821033699577;  // std dev = 0.162, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.33442176565753323;  // std dev = 0.234, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( interaction(J, H), phenotype(H, K) )
%   | | | then return 0.19535628925703857;  // std dev = 6.868, 220.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=132 */
%   | | | else return 0.09886305325629356;  // std dev = 5.852, 141.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=73 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.20641736893473986;  // std dev = 3.355, 50.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=31 */
%   | | | else return 0.5793206321934471;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), interaction(F, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.2603676931136711;  // std dev = 0.134, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2250161665190593;  // std dev = 0.614, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return 0.2057596436270105;  // std dev = 0.129, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.31799062703974423;  // std dev = 0.220, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.3129317174784332;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.304105172138388;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0706714897061647;  // std dev = 8.139, 289.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=154 */
%   | | | else return 0.1369798730348887;  // std dev = 5.927, 153.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=88 */
%   else return -0.07877675473109143;  // std dev = 5.19e-09, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.16215487661277767;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.20455855225938896;  // std dev = 0.062, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.35877898291776794;  // std dev = 0.624, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return -0.0023055299668721845;  // std dev = 3.677, 80.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=41 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.4717491643575585;  // std dev = 1.354, 88.000 (wgt'ed) examples reached here.  /* #pos=88 */
%   | | | else return -0.4348146238183731;  // std dev = 0.487, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.3523594629176556;  // std dev = 1.858, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | | | else return 0.13848446417400664;  // std dev = 6.601, 190.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=119 */
%   else return -0.07324622576333713;  // std dev = 3.73e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, F) )
%   | | | then return 0.2881045674194207;  // std dev = 1.648, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.0886257833206949;  // std dev = 0.872, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.3368113997694266;  // std dev = 0.536, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.13252499119338443;  // std dev = 3.640, 82.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=53 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.10100367943963946;  // std dev = 7.137, 260.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=161 */
%   | | | else return -0.4523665064408047;  // std dev = 0.393, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.02298650006304222;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.17705957938709657;  // std dev = 1.642, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else return -0.06842697784420325;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(F, D) )
%   | | | then return 0.251855475187041;  // std dev = 0.645, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.25269210637547673;  // std dev = 1.209, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.26661692344625665;  // std dev = 0.573, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.03057448338541355;  // std dev = 5.338, 156.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=87 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.12688812897807925;  // std dev = 2.756, 74.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=52 */
%   | | | else return -0.2697985661139866;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.10293674550273077;  // std dev = 3.356, 57.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=39 */
%   | | | else return 0.20864332314758557;  // std dev = 3.833, 88.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=64 */
%   else return -0.06419184008202568;  // std dev = 9.22e-09, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
Inference time using transfer learning 3.1479036808013916
Refined model CLL: -0.25411


******************************************
Best model found
******************************************
Results 

CLL : -0.260518 

AUC ROC : 0.953958 

AUC PR : 0.233088 

Precision : 0.050364 

Recall : 0.965116 

F1 : 0.095732 

Total Learning Time : 24.737316370010376 

Total Inference Time : 26.664457082748413 

Total revision time: 89.77696204185486
Best scored revision CLL: -0.25411


Results 

CLL : -0.260518 

AUC ROC : 0.953958 

AUC PR : 0.233088 

Precision : 0.050364 

Recall : 0.965116 

F1 : 0.095732 

Total Learning Time : 89.79400873184204 

Total Inference Time : 26.664457082748413 

Run: 2

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 8.010334730148315
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.43483605166392514;  // std dev = 0.494, 489.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.18e-08, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3833947589148535;  // std dev = 9.958, 409.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=240 */
%   | else return 0.32159769290018947;  // std dev = 4.467, 80.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30130472100848077;  // std dev = 0.495, 493.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360657;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5869192771335273;  // std dev = 4.297, 260.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=240 */
%   | else return -0.14751755771416397;  // std dev = 5.920, 228.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return -0.10159632948783634;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17228726034965022;  // std dev = 8.476, 410.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=240 */
%   | else return 0.23384458283535775;  // std dev = 4.467, 80.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926044;  // std dev = 1.09e-08, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14703642577961518;  // std dev = 9.275, 468.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=275 */
%   | | else return 0.07008269838840034;  // std dev = 2.029, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.05e-07, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | | else return -0.08518475138839686;  // std dev = 2.58e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.10253891516155716;  // std dev = 0.432, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 3.94e-08, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | | else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07627813773440185;  // std dev = 9.354, 480.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=275 */
%   | else return 0.1569696421583357;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 4.17e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06796538930242867;  // std dev = 9.429, 484.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420321;  // std dev = 0.000, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.018587141290134612;  // std dev = 9.881, 516.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202572;  // std dev = 8.79e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
Inference time using transfer learning 5.530184507369995
Parameter learned model CLL:-0.266208 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 207, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.18e-08, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.958, 169, 240], 'true,false': [4.467, 38, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 323, 0], 'false,false,false,false': [0.0, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.495, 211, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.297, 20, 240], 'true,false': [5.92, 186, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 318, 0], 'false,false,false,false': [0.0, 40, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.476, 170, 240], 'true,false': [4.467, 38, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.275, 193, 275], 'true,true,false': [2.029, 10, 7], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.05e-07, 300, 0], 'false,false,false': [2.58e-08, 48, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.432, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.94e-08, 305, 0], 'false,false,false': [1.49e-08, 55, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.354, 205, 275], 'true,false': [1.798, 6, 7], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.17e-09, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.429, 202, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 349, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.881, 234, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.79e-09, 356, 0]}]
{'': [0.24411908615303843, 1.3861744122487504e-16], 'false': [nan, 1.3861744122487504e-16]}
{'': [0.24411908615303787, -1.2453295302673713e-16], 'true': [0.24246626933124696, 0.2493750000000003], 'false': [nan, -1.2453295302673713e-16], 'false,false': [nan, -1.2453295302673713e-16], 'false,false,false': [-1.1274091395574345e-16, -3.633457171500512e-17]}
{'': [0.24478951964560808, -3.4262075537393555e-17], 'false': [nan, -3.4262075537393555e-17], 'false,false': [nan, -3.4262075537393555e-17]}
{'': [0.2439177656237172, 4.7137960822073685e-17], 'true': [0.07100591715976405, 0.1537140487395089], 'false': [nan, 4.7137960822073685e-17], 'false,false': [nan, 4.7137960822073685e-17], 'false,false,false': [-4.1895208476421005e-17, -6.938893903907228e-18]}
{'': [0.187859458483078, 1.1774123142998778e-16], 'true': [0.17523776412232073, 0.24937500000000062], 'false': [nan, 1.1774123142998778e-16]}
{'': [0.1860573530067598, 3.9559670992390636e-17], 'true': [0.1860573530067598, nan], 'true,true': [0.1838090304617179, 0.24223804488661158], 'false': [nan, 3.9559670992390636e-17], 'false,false': [3.700743415417188e-17, 1.3877787807814457e-17]}
{'': [0.1862033954054858, 2.0970879354030734e-17], 'true': [0.1862033954054858, nan], 'false': [nan, 2.0970879354030734e-17], 'false,false': [5.096105686803997e-18, 4.037174635000569e-18]}
{'': [0.18421138052074262, 1.817909046169847e-17], 'true': [0.1822973421108038, 0.24854414186854626], 'false': [nan, 1.817909046169847e-17], 'false,false': [nan, 1.817909046169847e-17]}
{'': [0.18367705786244565, -8.52549485958573e-17], 'true': [0.18367705786244565, nan], 'false': [nan, -8.52549485958573e-17], 'false,false': [nan, -8.52549485958573e-17]}
{'': [0.1892313674660646, 7.734137924355023e-17], 'true': [0.1892313674660646, nan], 'false': [nan, 7.734137924355023e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 21.3441801071167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( phenotype(D, F), enzyme(D, G) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.7956489350995123;  // std dev = 0.968, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return 0.08037115732173453;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.2616577070293369;  // std dev = 3.704, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.40100607795665205;  // std dev = 9.320, 350.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=190 */
%   else return -0.14185106490048752;  // std dev = 2.37e-07, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( enzyme(D, F), interaction(E, A) )
%   | | | then return 0.6121458262048987;  // std dev = 0.844, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.731744814687613;  // std dev = 0.129, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return 0.4866942727497202;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), interaction(G, I) )
%   | | | then return 0.7373280168843747;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4950601417343122;  // std dev = 1.456, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( location(A, J) )
%   | | | then return 0.29706661891236513;  // std dev = 10.192, 418.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=205 */
%   | | | else return 0.5877384763574662;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
%   | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( complex(A, G), complex(D, G) )
%   | | | then return 0.5556032046643556;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.12787505809039998;  // std dev = 1.816, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(D, H), complex(H, I) )
%   | | | then return 0.5562434708862032;  // std dev = 0.024, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6122948768841268;  // std dev = 0.139, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(J, K) )
%   | | | then return 0.623811889084618;  // std dev = 0.127, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.585473434052041;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return 0.20976898845245656;  // std dev = 4.679, 89.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=40 */
%   | | | else return 0.30979534903217104;  // std dev = 8.804, 314.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=176 */
%   else return -0.11231637819360656;  // std dev = 0.000, 339.000 (wgt'ed) examples reached here.  /* #neg=339 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.4250964562629592;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.09853166913735498;  // std dev = 1.185, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, A), complex(D, G) )
%   | | | then return 0.2717969533405025;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.4682131110846909;  // std dev = 0.294, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.238110075310332;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.3100236701373751;  // std dev = 4.986, 109.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=67 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13783542125182893;  // std dev = 4.444, 83.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=36 */
%   | | | else return 0.21167024662749098;  // std dev = 7.675, 246.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=133 */
%   else return -0.10159632948783588;  // std dev = 1.14e-08, 407.000 (wgt'ed) examples reached here.  /* #neg=407 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(D, A) )
%   | | | then return 0.4630144609006474;  // std dev = 2.099, 56.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=53 */
%   | | | else return 0.03856489285002725;  // std dev = 1.469, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.2838988937129212;  // std dev = 0.348, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.13703355698822828;  // std dev = 4.705, 98.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=53 */
%   | else if ( enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5705077427505066;  // std dev = 1.730, 64.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=61 */
%   | | | else return -0.3647605720030689;  // std dev = 0.105, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.1081272196960222;  // std dev = 2.422, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.277675826366955;  // std dev = 5.601, 144.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=95 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, E) )
%   | | | then return 0.2919040035451267;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.43581438036145687;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return 0.1311638515072464;  // std dev = 1.299, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.2838918420655163;  // std dev = 0.183, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, I), recursion_proteinclass(I, B) )
%   | | | then return -0.318422661792369;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.10106291769959455;  // std dev = 7.170, 251.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=126 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.18918677036585635;  // std dev = 2.500, 35.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=21 */
%   | | | else return 0.13179627951307227;  // std dev = 5.785, 160.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=88 */
%   else return -0.08518475138839678;  // std dev = 6.72e-09, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.21120482382677636;  // std dev = 0.083, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3077441887106844;  // std dev = 0.159, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.2720416791998122;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.12024708905723253;  // std dev = 1.083, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( phenotype(A, K), interaction(I, I) )
%   | | | then return -0.12797505772947432;  // std dev = 2.007, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.04061509000853139;  // std dev = 4.055, 85.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=42 */
%   | | else if ( enzyme(A, L), location(A, M) )
%   | | | then return 0.19904765451453518;  // std dev = 3.883, 97.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=62 */
%   | | | else return 0.09187114787915505;  // std dev = 7.324, 233.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=125 */
%   else return -0.07877675473109147;  // std dev = 1.04e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B), complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.17823215598962125;  // std dev = 0.073, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.257273311160353;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.2859291342814018;  // std dev = 2.392, 36.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=29 */
%   | | | else return -0.009797374915710677;  // std dev = 6.829, 230.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=102 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.19493800049513996;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2585669586504873;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.12118424836083007;  // std dev = 4.616, 111.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=67 */
%   | | | else return 0.0643607185108642;  // std dev = 4.159, 83.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=46 */
%   else return -0.07324622576333766;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, F), complex(F, G) )
%   | | | then return 0.1517705851228094;  // std dev = 0.058, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.18104626327517126;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.21037726645979996;  // std dev = 0.090, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3041088192016896;  // std dev = 0.129, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.31154537440173247;  // std dev = 1.977, 37.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=31 */
%   | | | else return -0.11119291800232046;  // std dev = 4.935, 143.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=42 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07701711053077312;  // std dev = 7.358, 269.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=154 */
%   | | | else return -0.11607746527340641;  // std dev = 2.046, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), interaction(A, G) )
%   | | | then return 0.25682800784726806;  // std dev = 1.121, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | | | else return 0.08943710612536361;  // std dev = 1.293, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   | | else if ( interaction(A, H), interaction(H, E) )
%   | | | then return -0.20381096838074425;  // std dev = 2.485, 60.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | else return 0.052107912023585605;  // std dev = 7.101, 248.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=140 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, I), complex(A, K) )
%   | | | then return 0.06950413872857118;  // std dev = 1.647, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.2896158045905239;  // std dev = 1.754, 31.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | else if ( phenotype(A, L), enzyme(A, M) )
%   | | | then return -0.020569276835582774;  // std dev = 1.449, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.09048260761849623;  // std dev = 3.510, 58.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=35 */
%   else return -0.06419184008202573;  // std dev = 8.74e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
Inference time using transfer learning 6.874389886856079
Refined model CLL: -0.256127


******************************************
Best model found
******************************************
Results 

CLL : -0.255799 

AUC ROC : 0.938661 

AUC PR : 0.167836 

Precision : 0.041387 

Recall : 0.850575 

F1 : 0.078933 

Total Learning Time : 21.3441801071167 

Total Inference Time : 17.892314910888672 

Total revision time: 65.34105324745178
Best scored revision CLL: -0.256127


Results 

CLL : -0.255799 

AUC ROC : 0.938661 

AUC PR : 0.167836 

Precision : 0.041387 

Recall : 0.850575 

F1 : 0.078933 

Total Learning Time : 65.3586642742157 

Total Inference Time : 17.892314910888672 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.756592750549316
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45634306602501595;  // std dev = 0.490, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048777;  // std dev = 7.68e-09, 309.000 (wgt'ed) examples reached here.  /* #neg=309 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3590805273814754;  // std dev = 9.838, 394.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=223 */
%   | else return 0.42945431602937867;  // std dev = 3.908, 66.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283919;  // std dev = 0.000, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
%   | | | else return -0.12544463852839122;  // std dev = 4.94e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3108480887556737;  // std dev = 0.493, 453.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360688;  // std dev = 0.000, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5800329618455449;  // std dev = 4.284, 243.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=223 */
%   | else return -0.1527299354241967;  // std dev = 5.755, 221.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783662;  // std dev = 0.000, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
%   | | | else return -0.1015963294878362;  // std dev = 3.94e-08, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14919823471551927;  // std dev = 8.446, 399.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=223 */
%   | else return 0.1805030256796059;  // std dev = 4.583, 84.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.07e-08, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15114759956217327;  // std dev = 8.975, 442.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=259 */
%   | | else return 0.10868908604042425;  // std dev = 1.774, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 9.77e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | | else return -0.08518475138839687;  // std dev = 1.67e-08, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09536731644921984;  // std dev = 0.434, 470.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.47e-08, 281.000 (wgt'ed) examples reached here.  /* #neg=281 */
%   | | else return -0.07877675473109179;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.09746258216950428;  // std dev = 8.911, 435.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=259 */
%   | else return -0.06133129324933936;  // std dev = 1.960, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333709;  // std dev = 4.17e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04214067329121377;  // std dev = 9.479, 478.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420314;  // std dev = 0.000, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04240574374769601;  // std dev = 9.328, 469.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
Inference time using transfer learning 4.4581379890441895
Parameter learned model CLL:-0.265081 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 178, 265], 'false,true': [0.0, 0, 0], 'false,false': [7.68e-09, 309, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.838, 171, 223], 'true,false': [3.908, 24, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 269, 0], 'false,false,false,false': [4.94e-08, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.493, 188, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 298, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.284, 20, 223], 'true,false': [5.755, 179, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 288, 0], 'false,false,false,false': [3.94e-08, 60, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.446, 176, 223], 'true,false': [4.583, 42, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 329, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [8.975, 183, 259], 'true,true,false': [1.774, 7, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [9.77e-08, 275, 0], 'false,false,false': [1.67e-08, 38, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.434, 205, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.47e-08, 281, 0], 'false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.911, 176, 259], 'true,false': [1.96, 12, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [4.17e-09, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.479, 213, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.328, 204, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 342, 0]}]
{'': [0.24035791265178746, 5.748727635599516e-17], 'false': [nan, 5.748727635599516e-17]}
{'': [0.24421077504726013, -8.909626780690911e-17], 'true': [0.2456453399984553, 0.23140495867768598], 'false': [nan, -8.909626780690911e-17], 'false,false': [nan, -8.909626780690911e-17], 'false,false,false': [-7.263912726172028e-17, 4.884981308350689e-17]}
{'': [0.2427005172174351, -7.600184463876911e-17], 'false': [nan, -7.600184463876911e-17], 'false,false': [nan, -7.600184463876911e-17]}
{'': [0.24487517788557012, 2.807460522040626e-17], 'true': [0.07553049162559534, 0.1498777586768445], 'false': [nan, 2.807460522040626e-17], 'false,false': [nan, 2.807460522040626e-17], 'false,false,false': [-5.551115123125783e-17, 2.590520390792032e-17]}
{'': [0.1913245038299836, 1.120346638831465e-16], 'true': [0.1788013347616159, 0.25], 'false': [nan, 1.120346638831465e-16]}
{'': [0.18401500184584096, 3.688919954026079e-17], 'true': [0.18401500184584096, nan], 'true,true': [0.18225570763580534, 0.24207978605573185], 'false': [nan, 3.688919954026079e-17], 'false,false': [3.47197018610049e-17, 7.304098846218135e-18]}
{'': [0.18801636591788837, 4.024977732780024e-18], 'true': [0.18801636591788837, nan], 'false': [nan, 4.024977732780024e-18], 'false,false': [7.111748912189615e-18, -1.1102230246251566e-18]}
{'': [0.18472129559220424, 1.8448809904750375e-17], 'true': [0.18253418564622878, 0.21336289794294155], 'false': [nan, 1.8448809904750375e-17], 'false,false': [nan, 1.8448809904750375e-17]}
{'': [0.18797518613050537, -8.177091738257141e-17], 'true': [0.18797518613050537, nan], 'false': [nan, -8.177091738257141e-17], 'false,false': [nan, -8.177091738257141e-17]}
{'': [0.18554538910036797, 7.011934892369409e-17], 'true': [0.18554538910036797, nan], 'false': [nan, 7.011934892369409e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 16.007556438446045
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.07243464938522666;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.34090755578916754;  // std dev = 2.691, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3736128526252825;  // std dev = 6.961, 194.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=100 */
%   | | | else return 0.4524346493852238;  // std dev = 6.496, 175.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=104 */
%   else return -0.14185106490048757;  // std dev = 2.15e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.7349018672026029;  // std dev = 0.169, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.12557754668046225;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.7219538956171121;  // std dev = 0.956, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.28766037139232964;  // std dev = 2.654, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.0880325858583423;  // std dev = 2.378, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5537748259806738;  // std dev = 1.573, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | | else return 0.31786593426111326;  // std dev = 9.563, 367.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=190 */
%   else if ( interaction(J, A) )
%   | then return -0.12544463852839208;  // std dev = 0.000, 286.000 (wgt'ed) examples reached here.  /* #neg=286 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, D), enzyme(A, E) )
%   | | | then return 0.551553436537623;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6849572084792189;  // std dev = 0.255, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return 0.27539347321187624;  // std dev = 3.180, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.47505649336279315;  // std dev = 1.968, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.610610848130403;  // std dev = 0.255, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.4832384821445118;  // std dev = 0.811, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.19618106150555378;  // std dev = 3.630, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | | | else return 0.31068350794015803;  // std dev = 8.265, 280.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=159 */
%   else return -0.11231637819360663;  // std dev = 0.000, 329.000 (wgt'ed) examples reached here.  /* #neg=329 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(F, D) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.15064189453157897;  // std dev = 0.997, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.44355337790104477;  // std dev = 0.319, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.5987183837777299;  // std dev = 0.011, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.554221104654216;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.19082285650492778;  // std dev = 3.407, 49.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=24 */
%   | | | else return 0.03283910067875866;  // std dev = 2.952, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return 0.4228142974072251;  // std dev = 1.841, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   | | | else return 0.23399274468776002;  // std dev = 8.692, 308.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=173 */
%   else return -0.1015963294878361;  // std dev = 8.84e-09, 375.000 (wgt'ed) examples reached here.  /* #neg=375 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, F) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.3296493376470855;  // std dev = 0.186, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.09221302993595364;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( enzyme(D, G), phenotype(D, H) )
%   | | | then return 0.4062223441920458;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.44931311179928307;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6201626063316824;  // std dev = 0.414, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.3690973714176267;  // std dev = 0.135, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( location(A, L), interaction(A, M) )
%   | | | then return 0.14778191276939687;  // std dev = 6.097, 155.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=78 */
%   | | | else return 0.24738515501578956;  // std dev = 6.240, 168.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=106 */
%   else return -0.09269127618926046;  // std dev = 1.01e-08, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), location(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.29720394633633657;  // std dev = 0.216, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.07337608589210515;  // std dev = 2.477, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(H, D), enzyme(H, I) )
%   | | | then return 0.2568831139731946;  // std dev = 1.521, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | else return 0.07055841226523882;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=21 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, A) )
%   | | | then return 0.247469561293715;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3915330392591448;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14282821160043993;  // std dev = 6.856, 207.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=116 */
%   | | | else return 0.2159160819102245;  // std dev = 4.711, 111.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   else return -0.08518475138839678;  // std dev = 6.25e-09, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.23491586384758742;  // std dev = 0.178, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.5277330082882705;  // std dev = 0.443, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, E), complex(G, D) )
%   | | | then return -0.12982382323629302;  // std dev = 2.123, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.170995568877988;  // std dev = 3.785, 84.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=54 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.20237849882239303;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.32005106758510177;  // std dev = 0.090, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, I), phenotype(A, J) )
%   | | | then return 0.07594332807727489;  // std dev = 4.284, 81.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=43 */
%   | | | else return 0.005711782305345546;  // std dev = 7.615, 245.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=114 */
%   else return -0.07877675473109143;  // std dev = 5.82e-09, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1701894566531291;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.0059663872028347135;  // std dev = 2.844, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.10759000608413952;  // std dev = 1.348, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.3221080660134526;  // std dev = 1.609, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4526925462326137;  // std dev = 0.654, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | | else return -0.386761539433456;  // std dev = 0.365, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, K) )
%   | | | then return 0.042207446286912746;  // std dev = 8.087, 295.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=157 */
%   | | | else return 0.22974233069264208;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.07324622576333718;  // std dev = 2.28e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F), enzyme(D, G) )
%   | | then if ( complex(A, F), phenotype(A, H) )
%   | | | then return 0.14668759605681206;  // std dev = 1.133, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return -0.061673750220377944;  // std dev = 2.248, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.26480000485769817;  // std dev = 1.743, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return 0.06664375294498513;  // std dev = 6.039, 185.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=102 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3746353771948822;  // std dev = 0.299, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.345487545493406;  // std dev = 0.213, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.18268075016637708;  // std dev = 0.171, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.03193639995153773;  // std dev = 6.278, 173.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=81 */
%   else return -0.0684269778442032;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.1872622520880232;  // std dev = 0.814, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.0054985446752752205;  // std dev = 3.216, 63.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=32 */
%   | | else if ( interaction(I, D), enzyme(I, J) )
%   | | | then return 0.06331499833921748;  // std dev = 3.196, 58.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=34 */
%   | | | else return 0.23998239175947816;  // std dev = 2.976, 59.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=46 */
%   | else if ( interaction(K, A), location(K, L) )
%   | | then if ( interaction(A, M), phenotype(K, N) )
%   | | | then return 0.1320701588362946;  // std dev = 2.010, 27.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | else return -0.0016808532932636217;  // std dev = 5.549, 146.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=76 */
%   | | else if ( enzyme(A, P), interaction(A, Q) )
%   | | | then return 0.0038292367851160895;  // std dev = 1.917, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | | | else return 0.18183048973276986;  // std dev = 2.904, 44.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=31 */
%   else return -0.06419184008202582;  // std dev = 8.12e-09, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
Inference time using transfer learning 4.486807107925415
Refined model CLL: -0.267485


******************************************
Best model found
******************************************
Results 

CLL : -0.277697 

AUC ROC : 0.957507 

AUC PR : 0.078252 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 16.007556438446045 

Total Inference Time : 10.546923160552979 

Total revision time: 57.70461130142212
Best scored revision CLL: -0.265081


Results 

CLL : -0.277697 

AUC ROC : 0.957507 

AUC PR : 0.078252 

Precision : 0.079646 

Recall : 0.951923 

F1 : 0.146993 

Total Learning Time : 57.722222328186035 

Total Inference Time : 10.546923160552979 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.169593095779419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.426937436126202;  // std dev = 0.495, 487.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.1418510649004875;  // std dev = 1.29e-08, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.41856416139316455;  // std dev = 9.777, 406.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=252 */
%   | else return 0.31870783955408344;  // std dev = 3.461, 48.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.2876101585482245;  // std dev = 0.496, 491.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.526785416621347;  // std dev = 5.811, 291.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=252 */
%   | else return -0.19485659917177636;  // std dev = 4.732, 179.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.15595620552520326;  // std dev = 9.099, 451.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=252 */
%   | else return 0.29162408864713213;  // std dev = 3.286, 44.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15021493469595068;  // std dev = 9.233, 461.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=271 */
%   | | else return 0.06521825065777961;  // std dev = 1.886, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.10e-07, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | | else return -0.08518475138839691;  // std dev = 0.000, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.13229006948004207;  // std dev = 0.427, 458.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.0686230892148329;  // std dev = 9.345, 475.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=271 */
%   | else return -0.02612894581879593;  // std dev = 1.955, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333716;  // std dev = 2.95e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07108105286513905;  // std dev = 9.324, 468.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07237068738129518;  // std dev = 8.981, 457.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 2.952277898788452
Parameter learned model CLL:-0.278364 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 210, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.29e-08, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.777, 154, 252], 'true,false': [3.461, 23, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 318, 0], 'false,false,false,false': [0.0, 29, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 214, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.811, 39, 252], 'true,false': [4.732, 154, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 306, 0], 'false,false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.099, 199, 252], 'true,false': [3.286, 19, 25], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 335, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.233, 190, 271], 'true,true,false': [1.886, 9, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.1e-07, 311, 0], 'false,false,false': [0.0, 26, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.427, 181, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 330, 0], 'false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.345, 204, 271], 'true,false': [1.955, 11, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.95e-09, 347, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.324, 191, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.981, 180, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.38e-09, 343, 0]}]
{'': [0.24526814212650347, 1.648419781714914e-16], 'false': [nan, 1.648419781714914e-16]}
{'': [0.2378709076442325, -1.1774123142998778e-16], 'true': [0.23543400713435736, 0.24956597222222143], 'false': [nan, -1.1774123142998778e-16], 'false,false': [nan, -1.1774123142998778e-16], 'false,false,false': [-1.1451356983555074e-16, -7.656710514656252e-18]}
{'': [0.24628454550487555, -2.6334131042321772e-17], 'false': [nan, -2.6334131042321772e-17], 'false,false': [nan, -2.6334131042321772e-17]}
{'': [0.24229440359369336, -3.988825238174215e-18], 'true': [0.11605909235838005, 0.12508248027420832], 'false': [nan, -3.988825238174215e-18], 'false,false': [nan, -3.988825238174215e-18], 'false,false,false': [-4.9343245538895844e-17, -1.982541115402065e-18]}
{'': [0.19057113822118804, 1.1798190948255396e-16], 'true': [0.1835906692344941, 0.24535123966942127], 'false': [nan, 1.1798190948255396e-16]}
{'': [0.18680178343879278, 3.821539194555435e-17], 'true': [0.18680178343879278, nan], 'true,true': [0.18493948529255685, 0.23703963764331512], 'false': [nan, 3.821539194555435e-17], 'false,false': [3.85543687008093e-17, -3.2025664171879517e-18]}
{'': [0.18198957947182537, 3.294068314821893e-17], 'true': [0.18198957947182537, nan], 'false': [nan, 3.294068314821893e-17], 'false,false': [5.382899513334092e-18, 0.0]}
{'': [0.18555050071867832, 8.318673959727397e-18], 'true': [0.18383240533345155, 0.22488837258294192], 'false': [nan, 8.318673959727397e-18], 'false,false': [nan, 8.318673959727397e-18]}
{'': [0.1857517087655055, -8.238176646493915e-17], 'true': [0.1857517087655055, nan], 'false': [nan, -8.238176646493915e-17], 'false,false': [nan, -8.238176646493915e-17]}
{'': [0.176481756603598, 7.05622796992082e-17], 'true': [0.176481756603598, nan], 'false': [nan, 7.05622796992082e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 21.3989577293396
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then return 0.8581489350995116;  // std dev = 2.23e-07, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else if ( phenotype(D, F), phenotype(A, F) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.3658412427918188;  // std dev = 4.031, 65.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=33 */
%   | | | else return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.40155729522812583;  // std dev = 8.784, 311.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=169 */
%   | | | else return 0.5331489350995116;  // std dev = 2.962, 40.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=27 */
%   else return -0.1418510649004874;  // std dev = 2.78e-07, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, F) )
%   | | | then return 0.7612463298094294;  // std dev = 1.024, 60.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=59 */
%   | | | else return 0.3603792383896418;  // std dev = 2.328, 24.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.18447538825702414;  // std dev = 0.113, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | | else return 0.33459399585156147;  // std dev = 8.741, 310.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=166 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.7700815900658196;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.30572208257447214;  // std dev = 2.395, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.5064361974328675;  // std dev = 2.369, 28.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=20 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), phenotype(D, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5966759882373376;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.023291048233234284;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, D), interaction(A, G) )
%   | | | then return 0.5449134983592101;  // std dev = 0.002, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.6434419314387977;  // std dev = 0.151, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15995945056144364;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.25512974210654865;  // std dev = 6.296, 176.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=91 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.19159272489326998;  // std dev = 2.509, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | | else return 0.32787925571289583;  // std dev = 7.292, 220.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=130 */
%   else return -0.11231637819360667;  // std dev = 0.000, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(E, D), enzyme(A, F) )
%   | | | then return 0.2208892363733;  // std dev = 0.911, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.44039624383029413;  // std dev = 0.307, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4893441859562848;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6475683063992833;  // std dev = 0.221, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J), enzyme(I, K) )
%   | | | then return 0.2079419087671363;  // std dev = 2.235, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | | else return 0.48425142400856064;  // std dev = 2.057, 31.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.3849927647477415;  // std dev = 1.365, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.17197091595021477;  // std dev = 9.348, 368.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=181 */
%   else return -0.10159632948783595;  // std dev = 1.06e-08, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), location(A, E) )
%   | | | then return 0.42270541464702677;  // std dev = 1.849, 70.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=66 */
%   | | | else return 0.055126834803476236;  // std dev = 1.729, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.20998804999705847;  // std dev = 0.358, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.12979827104624705;  // std dev = 5.702, 136.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=73 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.4490641430282025;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.38628221702871623;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.19698296783813493;  // std dev = 6.662, 180.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=101 */
%   | | | else return 0.31160126886862843;  // std dev = 2.456, 28.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   else return -0.09269127618926067;  // std dev = 9.41e-09, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then if ( interaction(A, E), location(A, F) )
%   | | | then return 0.20035017098185479;  // std dev = 0.765, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.34602450188944595;  // std dev = 0.306, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else return -0.07719530662833458;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return -0.16757690465822123;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.13113955249569534;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.08814525758128129;  // std dev = 5.282, 121.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=62 */
%   | | | else return 0.15114886595315807;  // std dev = 8.198, 298.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=172 */
%   else if ( interaction(J, A) )
%   | then return -0.08518475138839678;  // std dev = 6.11e-09, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | else return -0.0851847513883969;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.20834926334727735;  // std dev = 0.117, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.21063151753149212;  // std dev = 0.879, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.4223184164271892;  // std dev = 0.180, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.3176439067529294;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( complex(A, I), interaction(A, J) )
%   | | | then return 0.17883346365774724;  // std dev = 1.830, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return -0.005516294860772474;  // std dev = 5.125, 120.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=52 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1450356012289521;  // std dev = 4.689, 102.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=62 */
%   | | | else return 0.07407933817983556;  // std dev = 6.700, 201.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=105 */
%   else return -0.07877675473109144;  // std dev = 3.73e-09, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.17441434425620544;  // std dev = 0.111, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.17855184296135995;  // std dev = 0.615, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21677597581891347;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.30311219539528045;  // std dev = 0.217, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3285616636603057;  // std dev = 1.306, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | | | else return -0.07310962145129786;  // std dev = 4.698, 116.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=42 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.10620480192562154;  // std dev = 7.952, 271.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=158 */
%   | | | else return 0.3802148250955082;  // std dev = 0.919, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else return -0.07324622576333718;  // std dev = 2.28e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( interaction(F, A), enzyme(E, G) )
%   | | | then return 0.020970586753961195;  // std dev = 1.026, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.17054278107349255;  // std dev = 0.212, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.16743415748584797;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.266332988257008;  // std dev = 0.181, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), enzyme(A, K) )
%   | | | then return -0.1677973260898392;  // std dev = 1.398, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.008428226907504248;  // std dev = 3.216, 76.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=31 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.06634761478075708;  // std dev = 8.580, 328.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=185 */
%   | | | else return -0.009363450250605074;  // std dev = 2.581, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   else return -0.06842697784420326;  // std dev = 0.000, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), complex(F, E) )
%   | | then if ( enzyme(D, G), phenotype(D, H) )
%   | | | then return -0.14093775825898822;  // std dev = 1.517, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.030547694575840004;  // std dev = 2.793, 87.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=49 */
%   | | else if ( interaction(I, D), interaction(I, A) )
%   | | | then return -4.020081337611851E-4;  // std dev = 3.969, 71.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=36 */
%   | | | else return 0.15340894045096773;  // std dev = 4.801, 116.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=76 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(J, K), interaction(L, A) )
%   | | | then return 0.21183645216296798;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15519710386513766;  // std dev = 0.057, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, M), complex(A, N) )
%   | | | then return 0.1560815821768987;  // std dev = 2.176, 22.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | else return -0.022121091209226167;  // std dev = 6.203, 168.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=82 */
%   else return -0.0641918400820257;  // std dev = 9.03e-09, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
Inference time using transfer learning 2.9684243202209473
Refined model CLL: -0.277025


******************************************
Best model found
******************************************
Results 

CLL : -0.293232 

AUC ROC : 0.881081 

AUC PR : 0.183049 

Precision : 0.024254 

Recall : 0.804348 

F1 : 0.047089 

Total Learning Time : 21.3989577293396 

Total Inference Time : 16.46168828010559 

Total revision time: 74.68218111991882
Best scored revision CLL: -0.277025


Results 

CLL : -0.293232 

AUC ROC : 0.881081 

AUC PR : 0.183049 

Precision : 0.024254 

Recall : 0.804348 

F1 : 0.047089 

Total Learning Time : 74.69979214668274 

Total Inference Time : 16.46168828010559 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.336079597473145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44407026015126777;  // std dev = 0.493, 483.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3807547479141885;  // std dev = 7.804, 251.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=147 */
%   | else return 0.3524744265765881;  // std dev = 7.759, 244.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
%   | | | else return -0.12544463852839147;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.29256616858466217;  // std dev = 0.496, 502.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360644;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.580494565504122;  // std dev = 4.678, 275.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=251 */
%   | else return -0.17650886479824449;  // std dev = 5.180, 204.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1015963294878365;  // std dev = 0.000, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | | else return -0.10159632948783648;  // std dev = 0.000, 160.000 (wgt'ed) examples reached here.  /* #neg=160 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18326711393097694;  // std dev = 7.100, 259.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=147 */
%   | else return 0.19777230503767915;  // std dev = 6.258, 224.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926057;  // std dev = 9.94e-09, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1655520064665057;  // std dev = 8.541, 400.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=243 */
%   | | else return 0.0024630304807426485;  // std dev = 4.074, 92.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.60e-08, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else return -0.08518475138839678;  // std dev = 6.66e-08, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09010857417729891;  // std dev = 0.428, 507.000 (wgt'ed) examples reached here.  /* #neg=224 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109148;  // std dev = 8.43e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else return -0.07877675473109148;  // std dev = 8.16e-08, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11183688322870106;  // std dev = 8.463, 392.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=243 */
%   | else return 0.05269178960117587;  // std dev = 3.708, 78.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333725;  // std dev = 0.000, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05721522340982044;  // std dev = 9.419, 495.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420328;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04742113138814414;  // std dev = 9.421, 488.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.17e-09, 369.000 (wgt'ed) examples reached here.  /* #neg=369 */
Inference time using transfer learning 3.0744974613189697
Parameter learned model CLL:-0.269174 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 200, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 333, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.804, 104, 147], 'true,false': [7.759, 108, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 321, 0], 'false,false,false,false': [0.0, 38, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.496, 219, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 356, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.678, 24, 251], 'true,false': [5.18, 172, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 172, 0], 'false,false,false,false': [0.0, 160, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.1, 112, 147], 'true,false': [6.258, 88, 136], 'false,true': [0.0, 0, 0], 'false,false': [9.94e-09, 361, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.541, 157, 243], 'true,true,false': [4.074, 52, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.6e-08, 189, 0], 'false,false,false': [6.66e-08, 157, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 224, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.43e-08, 172, 0], 'false,false,false': [8.16e-08, 180, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.463, 149, 243], 'true,false': [3.708, 38, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 391, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.419, 212, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.421, 205, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.17e-09, 369, 0]}]
{'': [0.2426175259013528, 1.1202250338560137e-16], 'false': [nan, 1.1202250338560137e-16]}
{'': [0.2448566472808789, -1.2122769516798366e-16], 'true': [0.24266281487595784, 0.24670787422736168], 'false': [nan, -1.2122769516798366e-16], 'false,false': [nan, -1.2122769516798366e-16], 'false,false,false': [-1.134433495567138e-16, -2.0451476769410777e-17]}
{'': [0.24595997237936598, -2.993859841685815e-17], 'false': [nan, -2.993859841685815e-17], 'false,false': [nan, -2.993859841685815e-17]}
{'': [0.24182749182542676, -6.6880905097900996e-18], 'true': [0.07958278705947557, 0.131542006137628], 'false': [nan, -6.6880905097900996e-18], 'false,false': [nan, -6.6880905097900996e-18], 'false,false,false': [-8.003933433344151e-17, -6.800116025829084e-17]}
{'': [0.18549146495146934, 1.0087344932882309e-16], 'true': [0.1946098941696659, 0.17483545767438705], 'false': [nan, 1.0087344932882309e-16]}
{'': [0.18604940947033222, 3.850484478468751e-17], 'true': [0.18604940947033222, nan], 'true,true': [0.18236407004984326, 0.18044822264439314], 'false': [nan, 3.850484478468751e-17], 'false,false': [3.054581866693552e-17, 2.828593693312501e-17]}
{'': [0.18290481371179035, 1.6401021954689813e-17], 'true': [0.18290481371179035, nan], 'false': [nan, 1.6401021954689813e-17], 'false,false': [4.131062417209885e-17, 3.700743415417188e-17]}
{'': [0.18211925586154412, -3.4073340909211966e-18], 'true': [0.18269948799799682, 0.1762856180635091], 'false': [nan, -3.4073340909211966e-18], 'false,false': [nan, -3.4073340909211966e-18]}
{'': [0.17924632172747906, -1.0627268524486793e-16], 'true': [0.17924632172747906, nan], 'false': [nan, -1.0627268524486793e-16], 'false,false': [nan, -1.0627268524486793e-16]}
{'': [0.18189419583666275, 8.304107176058081e-17], 'true': [0.18189419583666275, nan], 'false': [nan, 8.304107176058081e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.347230911254883
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(D, F) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.858148935099512;  // std dev = 1.19e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.3977172804232491;  // std dev = 10.178, 417.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=225 */
%   else return -0.14185106490048757;  // std dev = 2.15e-07, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(D, E) )
%   | | then if ( complex(A, E), recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.16406304791602225;  // std dev = 3.943, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3418232682342636;  // std dev = 2.533, 28.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=15 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), location(F, G) )
%   | | | then return 0.7248699547628289;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.48566303986657855;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.728222033674077;  // std dev = 0.109, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3643105777093467;  // std dev = 9.149, 340.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=191 */
%   else return -0.1254446385283922;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.5693761479839997;  // std dev = 0.220, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.23427316597040462;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return -0.27348336415603325;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.6049154808689405;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, J), location(I, K) )
%   | | | then return 0.06651960509749162;  // std dev = 3.094, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | | else return 0.2570539231364855;  // std dev = 7.629, 236.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=122 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.4326026438312857;  // std dev = 3.536, 60.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=42 */
%   | | | else return 0.3155795761155632;  // std dev = 5.018, 106.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=62 */
%   else return -0.11231637819360636;  // std dev = 0.000, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(D, F) )
%   | | then if ( complex(D, E) )
%   | | | then return 0.4194692561269015;  // std dev = 0.079, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.19079884537445893;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.44251194213376976;  // std dev = 0.251, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1808810677757135;  // std dev = 0.119, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.27304694448087125;  // std dev = 5.939, 152.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=90 */
%   | | | else return 0.21126682961023313;  // std dev = 8.317, 282.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=151 */
%   else if ( interaction(A, I) )
%   | then return -0.10159632948783655;  // std dev = 0.000, 207.000 (wgt'ed) examples reached here.  /* #neg=207 */
%   | else return -0.1015963294878365;  // std dev = 0.000, 174.000 (wgt'ed) examples reached here.  /* #neg=174 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), location(A, G) )
%   | | then if ( interaction(E, E), complex(A, H) )
%   | | | then return -0.026700151968099384;  // std dev = 1.437, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.1887273681946852;  // std dev = 5.291, 125.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=74 */
%   | | else if ( complex(E, I), complex(A, I) )
%   | | | then return 0.014727384798716344;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5090161102382383;  // std dev = 0.959, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(J, L), interaction(M, J) )
%   | | | then return 0.09044966442710768;  // std dev = 3.077, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return 0.30116803671559705;  // std dev = 2.670, 39.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=27 */
%   | | else if ( interaction(A, N), recursion_proteinclass(N, B) )
%   | | | then return 0.3844273068209448;  // std dev = 0.345, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.10942447719974459;  // std dev = 7.831, 259.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=125 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(E, E), complex(E, F) )
%   | | then if ( phenotype(E, D), interaction(A, E) )
%   | | | then return 0.13013423343062894;  // std dev = 1.659, 20.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=12 */
%   | | | else return 0.42852478757557577;  // std dev = 1.808, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( phenotype(E, D), location(A, G) )
%   | | | then return 0.1048058661260091;  // std dev = 3.881, 69.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=36 */
%   | | | else return 0.20592089134103023;  // std dev = 4.465, 94.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=61 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45419552711818645;  // std dev = 2.014, 64.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=60 */
%   | | | else return -0.4230927724112783;  // std dev = 0.440, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.29833658378239974;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13800941235514338;  // std dev = 6.064, 153.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=84 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.2538483540841551;  // std dev = 0.283, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return 0.15740375984464705;  // std dev = 1.321, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | else if ( complex(A, G), complex(D, G) )
%   | | | then return -0.055405438762417665;  // std dev = 3.049, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.10554622720669332;  // std dev = 5.875, 159.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=88 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J), interaction(K, I) )
%   | | | then return 0.14979438770550318;  // std dev = 5.835, 159.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=99 */
%   | | | else return 0.3418578599341245;  // std dev = 1.984, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.020086386646470007;  // std dev = 1.642, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.10494457016484135;  // std dev = 2.117, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   else return -0.07877675473109141;  // std dev = 4.37e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), enzyme(G, H) )
%   | | | then return 0.2023499883653349;  // std dev = 0.201, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.132225812807455;  // std dev = 0.841, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.17558150493657704;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.2346199718069526;  // std dev = 0.172, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.16228719797787633;  // std dev = 0.038, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.21995688690392992;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.16981914834712986;  // std dev = 3.664, 63.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=41 */
%   | | | else return 0.060034682902217425;  // std dev = 9.047, 363.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=200 */
%   else return -0.07324622576333713;  // std dev = 7.15e-08, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), enzyme(G, D) )
%   | | | then return 0.2168385474704399;  // std dev = 0.816, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.4449643144328953;  // std dev = 0.415, 46.000 (wgt'ed) examples reached here.  /* #pos=46 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.5316712721219775;  // std dev = 0.343, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return -0.3919622026044019;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2690963349548892;  // std dev = 2.504, 57.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | | else return -0.049418110776365;  // std dev = 4.946, 126.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=56 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.17037590471094413;  // std dev = 4.510, 106.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=73 */
%   | | | else return 0.0582639679583343;  // std dev = 4.164, 83.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=49 */
%   else return -0.06842697784420318;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.19062088629798993;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.13618962379021127;  // std dev = 0.116, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( location(A, G), location(D, G) )
%   | | | then return -0.10351053835365662;  // std dev = 4.098, 89.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=35 */
%   | | | else return 0.05508781344581121;  // std dev = 2.921, 45.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=27 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( location(I, J) )
%   | | | then return 0.11980094392362124;  // std dev = 3.383, 81.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=55 */
%   | | | else return -0.13909356004958343;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.014677955834565218;  // std dev = 5.325, 144.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=73 */
%   | | | else return 0.06119223176848314;  // std dev = 4.908, 124.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=75 */
%   else return -0.06419184008202578;  // std dev = 8.33e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
Inference time using transfer learning 2.843219041824341
Refined model CLL: -0.266316


******************************************
Best model found
******************************************
Results 

CLL : -0.272122 

AUC ROC : 0.941357 

AUC PR : 0.271951 

Precision : 0.039728 

Recall : 0.883721 

F1 : 0.076038 

Total Learning Time : 18.347230911254883 

Total Inference Time : 11.642247200012207 

Total revision time: 84.6015100479126
Best scored revision CLL: -0.266316


Results 

CLL : -0.272122 

AUC ROC : 0.941357 

AUC PR : 0.271951 

Precision : 0.039728 

Recall : 0.883721 

F1 : 0.076038 

Total Learning Time : 84.61912107467651 

Total Inference Time : 11.642247200012207 

Run: 3

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.070605754852295
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4324870206392228;  // std dev = 0.494, 491.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048746;  // std dev = 1.34e-08, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3446812209896591;  // std dev = 8.373, 283.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=155 */
%   | else return 0.39043598470287844;  // std dev = 7.185, 214.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1254446385283921;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.30843961972845174;  // std dev = 0.494, 489.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.607241509903809;  // std dev = 3.753, 255.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=240 */
%   | else return -0.15186441550951685;  // std dev = 5.893, 233.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783655;  // std dev = 0.000, 197.000 (wgt'ed) examples reached here.  /* #neg=197 */
%   | | | else return -0.10159632948783646;  // std dev = 0.000, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.17757717010547305;  // std dev = 7.450, 282.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=155 */
%   | else return 0.1474103219190292;  // std dev = 6.311, 225.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926068;  // std dev = 9.13e-09, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1544082999147584;  // std dev = 8.679, 405.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=237 */
%   | | else return 0.010831268340538753;  // std dev = 4.222, 102.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.02e-08, 203.000 (wgt'ed) examples reached here.  /* #neg=203 */
%   | | else return -0.08518475138839678;  // std dev = 7.15e-08, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0911840459920015;  // std dev = 0.428, 514.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109146;  // std dev = 7.30e-08, 210.000 (wgt'ed) examples reached here.  /* #neg=210 */
%   | | else return -0.07877675473109148;  // std dev = 8.16e-08, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.08802358899764197;  // std dev = 8.785, 409.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=237 */
%   | else return 0.062203520256911664;  // std dev = 3.839, 85.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.08e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.0839526113193051;  // std dev = 9.233, 479.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 362.000 (wgt'ed) examples reached here.  /* #neg=362 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.04727006465525372;  // std dev = 9.471, 494.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0641918400820257;  // std dev = 8.93e-09, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
Inference time using transfer learning 6.6473658084869385
Parameter learned model CLL:-0.265257 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.494, 209, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.34e-08, 370, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [8.373, 128, 155], 'true,false': [7.185, 87, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 302, 0], 'false,false,false,false': [0.0, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 207, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.753, 15, 240], 'true,false': [5.893, 191, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 197, 0], 'false,false,false,false': [0.0, 152, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.45, 127, 155], 'true,false': [6.311, 98, 127], 'false,true': [0.0, 0, 0], 'false,false': [9.13e-09, 374, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.679, 168, 237], 'true,true,false': [4.222, 57, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.02e-08, 203, 0], 'false,false,false': [7.15e-08, 168, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.428, 232, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.3e-08, 210, 0], 'false,false,false': [8.16e-08, 178, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.785, 172, 237], 'true,false': [3.839, 40, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 355, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.233, 197, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 362, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.471, 212, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.93e-09, 363, 0]}]
{'': [0.24447384903829297, 1.848371305862423e-16], 'false': [nan, 1.848371305862423e-16]}
{'': [0.24545664328020564, -1.1808152400637502e-16], 'true': [0.2477244065976574, 0.24126561271726513], 'false': [nan, -1.1808152400637502e-16], 'false,false': [nan, -1.1808152400637502e-16], 'false,false,false': [-1.0881656135398885e-16, -2.7755575615628914e-17]}
{'': [0.24381577575728214, -3.700743415417188e-17], 'false': [nan, -3.700743415417188e-17], 'false,false': [nan, -3.700743415417188e-17]}
{'': [0.24379871496082697, 3.053908606418769e-17], 'true': [0.05524365034045457, 0.14904730197632923], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-9.017039793909901e-17, -6.281525007747596e-17]}
{'': [0.18825416166367487, 8.311830130883525e-17], 'true': [0.1967969727551096, 0.17704099637440304], 'false': [nan, 8.311830130883525e-17]}
{'': [0.18703565983706152, 4.069820251995183e-17], 'true': [0.18703565983706152, nan], 'true,true': [0.18599094760831017, 0.1747166864223123], 'false': [nan, 4.069820251995183e-17], 'false,false': [3.172065784643304e-17, 3.0398963769498337e-17]}
{'': [0.1832579172912048, 3.204767493763338e-17], 'true': [0.1832579172912048, nan], 'false': [nan, 3.204767493763338e-17], 'false,false': [2.5376526277146434e-17, 3.742324802107269e-17]}
{'': [0.18616276523855105, 5.003822082817607e-18], 'true': [0.18870196042742518, 0.17339279094645213], 'false': [nan, 5.003822082817607e-18], 'false,false': [nan, 5.003822082817607e-18]}
{'': [0.17796194083562694, -9.998141050491742e-17], 'true': [0.17796194083562694, nan], 'false': [nan, -9.998141050491742e-17], 'false,false': [nan, -9.998141050491742e-17]}
{'': [0.1815787070095614, 8.074349270001139e-17], 'true': [0.1815787070095614, nan], 'false': [nan, 8.074349270001139e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 49.88775086402893
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), complex(D, E) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( complex(D, F), phenotype(A, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.8105298874804647;  // std dev = 0.976, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.3709694479200246;  // std dev = 6.243, 156.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=80 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.39754287449344905;  // std dev = 6.403, 165.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=89 */
%   | | | else return 0.4843171593985777;  // std dev = 5.005, 107.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=67 */
%   else return -0.14185106490048738;  // std dev = 2.87e-07, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.7505196083609762;  // std dev = 1.003, 58.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=57 */
%   | | | else return 0.556501307905945;  // std dev = 1.474, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | else if ( interaction(D, E), interaction(A, F) )
%   | | | then return 0.0808437757653346;  // std dev = 4.034, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.3635676887922396;  // std dev = 7.044, 204.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=115 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.2781646401327577;  // std dev = 1.040, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7936875963082018;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.45716117727904393;  // std dev = 1.419, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.2937657296224347;  // std dev = 5.504, 121.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=61 */
%   else return -0.12544463852839222;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, D), enzyme(A, E) )
%   | | then if ( phenotype(A, F), enzyme(D, E) )
%   | | | then return 0.5565131198256577;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3035712383217922;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5578897751098927;  // std dev = 0.081, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.6552589897448872;  // std dev = 0.245, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(H, A), location(A, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13822821473795988;  // std dev = 0.064, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.2766129600071732;  // std dev = 9.110, 345.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=186 */
%   | | else if ( interaction(A, J), interaction(K, A) )
%   | | | then return 0.7938330302158555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4289911763528274;  // std dev = 3.710, 67.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=47 */
%   else return -0.11231637819360639;  // std dev = 0.000, 365.000 (wgt'ed) examples reached here.  /* #neg=365 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.5677972122448354;  // std dev = 3.974, 246.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=230 */
%   | | | else return -0.08154889738367697;  // std dev = 5.118, 166.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=39 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11928321258161435;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.31365787974189574;  // std dev = 0.303, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.04867413646781336;  // std dev = 1.197, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.3918134323020053;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.047917593544376504;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.12762385147407146;  // std dev = 1.894, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   else return -0.10159632948783631;  // std dev = 5.43e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, F) )
%   | | then if ( interaction(A, E), interaction(F, G) )
%   | | | then return 0.36881590095419625;  // std dev = 0.659, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.07785234542518976;  // std dev = 1.165, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.3494147235531375;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5362117492362133;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K), enzyme(A, K) )
%   | | | then return -0.03981732895067238;  // std dev = 1.276, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.13996223578815106;  // std dev = 4.565, 136.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=69 */
%   | | else if ( location(A, L) )
%   | | | then return 0.1753810734889792;  // std dev = 7.172, 275.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=154 */
%   | | | else return 0.3222024123787612;  // std dev = 1.613, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   else return -0.09269127618926043;  // std dev = 2.02e-07, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then if ( complex(A, E), complex(D, F) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.23948466203643598;  // std dev = 1.155, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return 0.027531096485633726;  // std dev = 4.128, 125.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=52 */
%   | | else if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.26470337246850456;  // std dev = 1.640, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return 0.13663475866154187;  // std dev = 6.500, 243.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=135 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), phenotype(I, K) )
%   | | | then return 0.3575166998103148;  // std dev = 1.169, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.13654821052084226;  // std dev = 2.288, 23.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=12 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.33465490218240707;  // std dev = 2.219, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.6162573866533279;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return 0.1158677167772009;  // std dev = 0.604, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.20747395638382427;  // std dev = 0.178, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( complex(D, H), interaction(I, A) )
%   | | | then return 0.2738567202398418;  // std dev = 0.754, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.4039484240540278;  // std dev = 0.224, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.443797928763813;  // std dev = 1.544, 90.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=87 */
%   | | | else return -0.3411155744437697;  // std dev = 0.654, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( location(A, L) )
%   | | | then return 0.09121446803649731;  // std dev = 6.702, 260.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=142 */
%   | | | else return -0.0480506660705077;  // std dev = 1.963, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   else return -0.07877675473109148;  // std dev = 5.59e-09, 414.000 (wgt'ed) examples reached here.  /* #neg=414 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2047863423860869;  // std dev = 0.298, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.3628431438533616;  // std dev = 0.935, 86.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=85 */
%   | | else if ( interaction(G, A), location(A, H) )
%   | | | then return -0.26017679224964707;  // std dev = 0.415, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return -0.38970332328676305;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, A), location(A, J) )
%   | | | then return 0.08727951026870769;  // std dev = 0.979, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.26355247390581316;  // std dev = 0.214, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.023194385115629802;  // std dev = 5.593, 201.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=94 */
%   | | | else return 0.08537514223133881;  // std dev = 4.433, 100.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=57 */
%   else return -0.07324622576333767;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, D) )
%   | | | then return 0.14956835997577878;  // std dev = 0.089, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.13526413799206816;  // std dev = 1.214, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3385335310955199;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.2602631465448914;  // std dev = 0.200, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.13839020546526068;  // std dev = 1.548, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.06330062963961801;  // std dev = 3.225, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09575494068566402;  // std dev = 3.818, 103.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=59 */
%   | | | else return 0.04465419084953428;  // std dev = 5.849, 235.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=132 */
%   else return -0.0684269778442032;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), phenotype(F, G) )
%   | | then if ( interaction(F, A), phenotype(D, G) )
%   | | | then return -0.027501166775545774;  // std dev = 3.288, 104.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=52 */
%   | | | else return 0.07642705591348875;  // std dev = 4.468, 149.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=88 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.05839244354717264;  // std dev = 2.470, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | else return 0.015694101460193687;  // std dev = 2.176, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2601424259211429;  // std dev = 0.977, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
%   | | | else return -0.24581407540967704;  // std dev = 0.245, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.034089956177106806;  // std dev = 2.167, 32.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=18 */
%   | | | else return 0.13465335862763794;  // std dev = 3.497, 70.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   else return -0.06419184008202569;  // std dev = 1.73e-07, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
Inference time using transfer learning 5.398394346237183
Refined model CLL: -0.205147


******************************************
Best model found
******************************************
Results 

CLL : -0.197699 

AUC ROC : 0.989326 

AUC PR : 0.428268 

Precision : 0.170478 

Recall : 0.942529 

F1 : 0.288732 

Total Learning Time : 49.88775086402893 

Total Inference Time : 33.95316791534424 

Total revision time: 122.24307918548584
Best scored revision CLL: -0.205147


Results 

CLL : -0.197699 

AUC ROC : 0.989326 

AUC PR : 0.428268 

Precision : 0.170478 

Recall : 0.942529 

F1 : 0.288732 

Total Learning Time : 122.26029109954834 

Total Inference Time : 33.95316791534424 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.232204675674438
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44573208365826633;  // std dev = 0.492, 451.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 334.000 (wgt'ed) examples reached here.  /* #neg=334 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3770719352378477;  // std dev = 9.652, 383.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=223 */
%   | else return 0.31334502294697214;  // std dev = 4.497, 81.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839205;  // std dev = 0.000, 280.000 (wgt'ed) examples reached here.  /* #neg=280 */
%   | | | else return -0.12544463852839155;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.27608282936414336;  // std dev = 0.498, 484.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360636;  // std dev = 0.000, 371.000 (wgt'ed) examples reached here.  /* #neg=371 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6173706962291926;  // std dev = 3.374, 235.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=223 */
%   | else return -0.14030452079021333;  // std dev = 5.912, 225.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 295.000 (wgt'ed) examples reached here.  /* #neg=295 */
%   | | | else return -0.10159632948783626;  // std dev = 2.58e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.14333539659490935;  // std dev = 8.459, 404.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=223 */
%   | else return 0.3682555679652311;  // std dev = 3.800, 64.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926054;  // std dev = 1.02e-08, 357.000 (wgt'ed) examples reached here.  /* #neg=357 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1460950928701842;  // std dev = 9.043, 443.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=259 */
%   | | else return 0.3099797686469306;  // std dev = 1.362, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.03e-07, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
%   | | else return -0.08518475138839685;  // std dev = 2.58e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.115180427292501;  // std dev = 0.423, 455.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 5.16e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.08816002047459628;  // std dev = 8.902, 441.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=259 */
%   | else return -0.13740405188825514;  // std dev = 1.971, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.28e-09, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08622296870822822;  // std dev = 8.841, 435.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 358.000 (wgt'ed) examples reached here.  /* #neg=358 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05744114155072633;  // std dev = 8.925, 443.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202565;  // std dev = 9.36e-09, 378.000 (wgt'ed) examples reached here.  /* #neg=378 */
Inference time using transfer learning 4.243555784225464
Parameter learned model CLL:-0.275136 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 186, 265], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 334, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [9.652, 160, 223], 'true,false': [4.497, 39, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 280, 0], 'false,false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.498, 219, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 371, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [3.374, 12, 223], 'true,false': [5.912, 183, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 295, 0], 'false,false,false,false': [2.58e-08, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.459, 181, 223], 'true,false': [3.8, 22, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.02e-08, 357, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.043, 184, 259], 'true,true,false': [1.362, 3, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.03e-07, 289, 0], 'false,false,false': [2.58e-08, 46, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.423, 190, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [5.16e-08, 275, 0], 'false,false,false': [0.0, 50, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.902, 182, 259], 'true,false': [1.971, 13, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.28e-09, 337, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.841, 170, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 358, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.925, 178, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.36e-09, 378, 0]}]
{'': [0.24232919208853768, 1.1168710666887802e-16], 'false': [nan, 1.1168710666887802e-16]}
{'': [0.24494184750297174, -1.15732339536683e-16], 'true': [0.24323568911097493, 0.24965706447187963], 'false': [nan, -1.15732339536683e-16], 'false,false': [nan, -1.15732339536683e-16], 'false,false,false': [-1.0467817089322904e-16, -3.3306690738754695e-17]}
{'': [0.24772640025231715, -2.6334131042321772e-17], 'false': [nan, -2.6334131042321772e-17], 'false,false': [nan, -2.6334131042321772e-17]}
{'': [0.2441988269510806, 2.4386401696968757e-17], 'true': [0.04845631507469593, 0.1553652286218191], 'false': [nan, 2.4386401696968757e-17], 'false,false': [nan, 2.4386401696968757e-17], 'false,false,false': [-5.268855032119387e-17, 1.3061447348531253e-17]}
{'': [0.1897105069325939, 1.0449157878825003e-16], 'true': [0.17710910514357694, 0.22558593749999928], 'false': [nan, 1.0449157878825003e-16]}
{'': [0.18553493355636652, 4.1094822404035644e-17], 'true': [0.18553493355636652, nan], 'true,true': [0.18457987695981865, 0.20622154154039155], 'false': [nan, 4.1094822404035644e-17], 'false,false': [3.6879380748794125e-17, 1.4481169886415085e-17]}
{'': [0.17912959259607455, 2.049642507000289e-17], 'true': [0.17912959259607455, nan], 'false': [nan, 2.049642507000289e-17], 'false,false': [9.689219124001367e-18, 0.0]}
{'': [0.1827547155190806, 3.953316408160795e-18], 'true': [0.17971525384627002, 0.20452460006006895], 'false': [nan, 3.953316408160795e-18], 'false,false': [nan, 3.953316408160795e-18]}
{'': [0.17966724521554325, -9.11747400111162e-17], 'true': [0.17966724521554325, nan], 'false': [nan, -9.11747400111162e-17], 'false,false': [nan, -9.11747400111162e-17]}
{'': [0.17980038150872169, 8.693809928281649e-17], 'true': [0.17980038150872169, nan], 'false': [nan, 8.693809928281649e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.3248074054718
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(G, A), location(G, H) )
%   | | | then return 0.043334120284697505;  // std dev = 2.018, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.3343394112899874;  // std dev = 3.964, 63.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=30 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.35045662740720573;  // std dev = 5.700, 130.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=64 */
%   | | | else return 0.46201366939902644;  // std dev = 7.037, 207.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=125 */
%   else return -0.14185106490048763;  // std dev = 1.98e-07, 335.000 (wgt'ed) examples reached here.  /* #neg=335 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.25055117589312487;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7298326667716779;  // std dev = 0.080, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return 0.18098213223061832;  // std dev = 2.962, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.3297351495174613;  // std dev = 6.539, 171.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=90 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7177100405859029;  // std dev = 0.967, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.3869187822683347;  // std dev = 6.697, 185.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=109 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839208;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( location(A, F), interaction(D, A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.2822023284777459;  // std dev = 0.669, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return 0.6108112339342779;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5630008525358894;  // std dev = 0.106, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( complex(H, I), complex(A, I) )
%   | | | then return -0.06693190776659322;  // std dev = 1.290, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.22982886960415286;  // std dev = 3.069, 39.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=18 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6185927387269731;  // std dev = 0.927, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.3014082140753115;  // std dev = 9.101, 337.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=190 */
%   else return -0.11231637819360644;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, E), interaction(A, G) )
%   | | | then return 0.37142834629517596;  // std dev = 0.571, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.5928012769345758;  // std dev = 0.419, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.24426765178207432;  // std dev = 0.155, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.19270395446906344;  // std dev = 4.099, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.3260352062377349;  // std dev = 2.973, 48.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | | else return 0.18803200078782586;  // std dev = 4.462, 92.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=49 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.15694684690809424;  // std dev = 2.916, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | else return 0.3057224819969779;  // std dev = 6.207, 172.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=111 */
%   else return -0.1015963294878363;  // std dev = 5.74e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( phenotype(D, H), recursion_proteinclass(D, B) )
%   | | | then return 0.40215097099277647;  // std dev = 0.384, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.12631269265080697;  // std dev = 4.032, 70.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=34 */
%   | | else if ( interaction(D, D), phenotype(A, I) )
%   | | | then return 0.1068470044379812;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.30946611207619223;  // std dev = 4.265, 103.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=75 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5937154752362142;  // std dev = 0.477, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.35860108354192066;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.31612426389974857;  // std dev = 0.892, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.13426339925632758;  // std dev = 7.030, 205.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=107 */
%   else return -0.09269127618926044;  // std dev = 1.05e-08, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), enzyme(A, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.30347508111524174;  // std dev = 0.200, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.026003507290942213;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.27483472222282984;  // std dev = 0.144, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.42575948430459526;  // std dev = 0.247, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.503288264513866;  // std dev = 1.384, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return 0.057623011554901245;  // std dev = 7.737, 261.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=125 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.3150502263503373;  // std dev = 2.721, 50.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=38 */
%   | | | else return 0.13973574110769246;  // std dev = 3.806, 64.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=37 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.22223698348775855;  // std dev = 0.135, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.3279643503742153;  // std dev = 0.247, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.023859478690412533;  // std dev = 0.990, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.48388538022446487;  // std dev = 1.199, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | | else return -0.40387782845700854;  // std dev = 0.536, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.2778131915477558;  // std dev = 0.201, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.10984985790168739;  // std dev = 8.487, 317.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=185 */
%   else if ( interaction(J, A) )
%   | then return -0.07877675473109143;  // std dev = 2.63e-09, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | else return -0.07877675473109179;  // std dev = 1.32e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.1964309061639794;  // std dev = 0.145, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.3728302501201603;  // std dev = 0.953, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | else if ( interaction(D, H), complex(H, I) )
%   | | | then return 0.012660597933554996;  // std dev = 3.364, 69.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=33 */
%   | | | else return 0.19051382475672624;  // std dev = 3.122, 61.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=42 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.40265627438692725;  // std dev = 0.980, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.47384335490583895;  // std dev = 0.278, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.001482345696200008;  // std dev = 2.016, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.0873758255107368;  // std dev = 6.736, 218.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=130 */
%   else return -0.07324622576333722;  // std dev = 0.000, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(D, F), complex(D, G) )
%   | | | then return 0.14332662215659647;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.1897721972699037;  // std dev = 0.119, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.30991402622219816;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.23023372924197572;  // std dev = 0.148, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.15591556076883725;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.23544759844214225;  // std dev = 0.106, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.20480921923825554;  // std dev = 0.167, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.033638850611988645;  // std dev = 9.050, 389.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=209 */
%   else return -0.06842697784420322;  // std dev = 0.000, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( recursion_proteinclass(D, B), location(D, G) )
%   | | | then return 0.11135975487914207;  // std dev = 0.952, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return 0.3176442465525595;  // std dev = 0.928, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else if ( interaction(H, E), interaction(E, H) )
%   | | | then return -0.1714712738064752;  // std dev = 3.327, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.03807305500931316;  // std dev = 3.412, 64.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=36 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3223622295558531;  // std dev = 0.505, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.34189632855657265;  // std dev = 0.371, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.054287145788644284;  // std dev = 4.538, 101.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=60 */
%   | | | else return 0.154486362008447;  // std dev = 4.730, 106.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=73 */
%   else return -0.06419184008202576;  // std dev = 8.54e-09, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
Inference time using transfer learning 7.2564897537231445
Refined model CLL: -0.271229


******************************************
Best model found
******************************************
Results 

CLL : -0.282561 

AUC ROC : 0.933207 

AUC PR : 0.106158 

Precision : 0.031336 

Recall : 0.875 

F1 : 0.060505 

Total Learning Time : 17.3248074054718 

Total Inference Time : 15.766464948654175 

Total revision time: 63.78122854232788
Best scored revision CLL: -0.271229


Results 

CLL : -0.282561 

AUC ROC : 0.933207 

AUC PR : 0.106158 

Precision : 0.031336 

Recall : 0.875 

F1 : 0.060505 

Total Learning Time : 63.79844045639038 

Total Inference Time : 15.766464948654175 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.899899959564209
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4257718859191801;  // std dev = 0.495, 488.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048757;  // std dev = 1.15e-08, 344.000 (wgt'ed) examples reached here.  /* #neg=344 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3773727549784487;  // std dev = 10.296, 435.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=252 */
%   | else return 0.4390880511765042;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.28778959006400096;  // std dev = 0.497, 496.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360639;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5482434765524364;  // std dev = 5.544, 287.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=252 */
%   | else return -0.20721707455821434;  // std dev = 4.616, 200.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783646;  // std dev = 0.000, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1596339291584182;  // std dev = 9.102, 454.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=252 */
%   | else return 0.342550052186072;  // std dev = 2.996, 39.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926046;  // std dev = 1.09e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.15789124266779014;  // std dev = 9.069, 460.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=271 */
%   | | else return 0.3891159111934332;  // std dev = 1.157, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.17e-07, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
%   | | else return -0.08518475138839693;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11994663713591791;  // std dev = 0.424, 469.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 4.21e-08, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07816973703033187;  // std dev = 9.285, 466.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=271 */
%   | else return 0.026090235458157116;  // std dev = 1.645, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633372;  // std dev = 1.32e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.05689431632347125;  // std dev = 9.353, 485.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420326;  // std dev = 0.000, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.017555131507358445;  // std dev = 9.731, 508.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.59e-09, 349.000 (wgt'ed) examples reached here.  /* #neg=349 */
Inference time using transfer learning 3.072779655456543
Parameter learned model CLL:-0.265147 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.495, 211, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.15e-08, 344, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.296, 183, 252], 'true,false': [2.996, 14, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 341, 0], 'false,false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.497, 219, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 366, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.544, 35, 252], 'true,false': [4.616, 175, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 333, 0], 'false,false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.102, 202, 252], 'true,false': [2.996, 14, 25], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 348, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.069, 189, 271], 'true,true,false': [1.157, 2, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.17e-07, 347, 0], 'false,false,false': [0.0, 24, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.424, 192, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [4.21e-08, 300, 0], 'false,false,false': [0.0, 37, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.285, 195, 271], 'true,false': [1.645, 6, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [1.32e-09, 373, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.353, 208, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 367, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.731, 231, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.59e-09, 349, 0]}]
{'': [0.24542713652244316, 1.3425952855932125e-16], 'false': [nan, 1.3425952855932125e-16]}
{'': [0.2428786341220279, -1.2552921665095104e-16], 'true': [0.24370986920333265, 0.2301117685733076], 'false': [nan, -1.2552921665095104e-16], 'false,false': [nan, -1.2552921665095104e-16], 'false,false,false': [-1.1720829585485523e-16, -1.6326809185664067e-17]}
{'': [0.24660056203021405, -2.669388693087808e-17], 'false': [nan, -2.669388693087808e-17], 'false,false': [nan, -2.669388693087808e-17]}
{'': [0.2449925927863102, 5.057682667736824e-17], 'true': [0.10707911957167694, 0.10655997734289788], 'false': [nan, 5.057682667736824e-17], 'false,false': [nan, 5.057682667736824e-17], 'false,false,false': [-5.334404923123875e-18, -2.05596856412066e-18]}
{'': [0.18869669892633326, 1.186790129771719e-16], 'true': [0.18249221345719158, 0.2301117685733068], 'false': [nan, 1.186790129771719e-16]}
{'': [0.17951636852588498, 4.069820251995183e-17], 'true': [0.17951636852588498, nan], 'true,true': [0.17881455995192108, 0.16731944320828832], 'false': [nan, 4.069820251995183e-17], 'false,false': [3.9673675807930666e-17, -4.625929269271485e-18]}
{'': [0.1801663739647897, 2.240212631291117e-17], 'true': [0.1801663739647897, nan], 'false': [nan, 2.240212631291117e-17], 'false,false': [5.921189464667502e-18, 0.0]}
{'': [0.18609996228916623, 2.3811753879359926e-18], 'true': [0.18501603524361818, 0.2255482786467641], 'false': [nan, 2.3811753879359926e-18], 'false,false': [nan, 2.3811753879359926e-18]}
{'': [0.18038611893293804, -9.680418743325616e-17], 'true': [0.18038611893293804, nan], 'false': [nan, -9.680418743325616e-17], 'false,false': [nan, -9.680418743325616e-17]}
{'': [0.18640224319652327, 7.380279132178691e-17], 'true': [0.18640224319652327, nan], 'false': [nan, 7.380279132178691e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 17.045048475265503
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(A, E) )
%   | | then return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.7748156017661789;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(G, A), recursion_proteinclass(H, B) )
%   | | | then return 0.8311219080724844;  // std dev = 0.986, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.21479229174286957;  // std dev = 5.728, 143.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=51 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.6228548174524535;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.44330177352745676;  // std dev = 7.456, 229.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=134 */
%   else return -0.14185106490048763;  // std dev = 2.00e-07, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.7491799769194932;  // std dev = 0.178, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.19396001903308405;  // std dev = 1.101, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.6602624942261346;  // std dev = 1.349, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), phenotype(G, I) )
%   | | | then return 0.28184205646247196;  // std dev = 1.198, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6594098712337524;  // std dev = 0.956, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.27320528058049587;  // std dev = 7.940, 264.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=126 */
%   | | | else return 0.37215494705686575;  // std dev = 6.220, 159.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=91 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( complex(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, F) )
%   | | | then return 0.5890029583990912;  // std dev = 1.009, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.7361139412965135;  // std dev = 0.304, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.2212026531658646;  // std dev = 0.122, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return -0.265432099479649;  // std dev = 0.075, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K), complex(J, L) )
%   | | | then return 0.3340109831674029;  // std dev = 0.764, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6071980073402622;  // std dev = 0.291, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.21458187090858755;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.3371597792732176;  // std dev = 8.327, 300.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=181 */
%   else return -0.1123163781936067;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( location(A, E), interaction(A, A) )
%   | | | then return 0.4090729767060588;  // std dev = 0.039, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.4641768199665797;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18443129781340842;  // std dev = 0.063, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.18372843138734235;  // std dev = 3.807, 74.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=39 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(F, G), complex(A, H) )
%   | | | then return 0.2646766846216093;  // std dev = 0.894, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.49295153628435084;  // std dev = 0.282, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4416296156736149;  // std dev = 0.868, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.21757063906677074;  // std dev = 8.756, 337.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=184 */
%   else return -0.10159632948783597;  // std dev = 1.02e-08, 391.000 (wgt'ed) examples reached here.  /* #neg=391 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.30530787001071996;  // std dev = 0.029, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.3778912064244002;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(D, G), complex(G, H) )
%   | | | then return 0.03904796556089505;  // std dev = 1.364, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.33399793136647016;  // std dev = 0.810, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3878912738826437;  // std dev = 1.362, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | | else return 0.06739803818341573;  // std dev = 4.458, 111.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=46 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15303203464405254;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.21084592515055717;  // std dev = 7.966, 275.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=164 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.2467254454919224;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2833717004676741;  // std dev = 0.117, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.00440396674924094;  // std dev = 1.919, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.10937085837366571;  // std dev = 2.827, 46.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=28 */
%   | else if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5274009328909834;  // std dev = 1.056, 48.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=47 */
%   | | | else return -0.35389537711980384;  // std dev = 0.405, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2522691339532041;  // std dev = 0.989, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | | | else return 0.12088888079419949;  // std dev = 7.961, 280.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=152 */
%   else return -0.08518475138839678;  // std dev = 6.38e-09, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D) )
%   | | then if ( recursion_proteinclass(F, B), phenotype(F, G) )
%   | | | then return 0.3529285381919636;  // std dev = 0.446, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.057233361945801114;  // std dev = 4.174, 100.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=50 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3996216390297119;  // std dev = 0.592, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.42783023088481525;  // std dev = 0.515, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), phenotype(I, K) )
%   | | | then return 0.3532632306049703;  // std dev = 0.659, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | | else return 0.1473345503495037;  // std dev = 3.638, 86.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=50 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.1730096372379572;  // std dev = 3.985, 83.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=53 */
%   | | | else return 0.06317619953393654;  // std dev = 4.797, 107.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=58 */
%   else return -0.07877675473109143;  // std dev = 4.75e-09, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( complex(E, F) )
%   | | | then return 0.19545519476183454;  // std dev = 0.269, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.06841523412832345;  // std dev = 0.836, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.224512269940565;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.34471351821962276;  // std dev = 0.250, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, H) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1718881942139538;  // std dev = 2.925, 61.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=41 */
%   | | | else return 0.05448673227616766;  // std dev = 5.320, 174.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=93 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.01358649923385918;  // std dev = 6.329, 188.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=89 */
%   | | | else return 0.19028363468732198;  // std dev = 1.586, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else return -0.07324622576333717;  // std dev = 2.95e-09, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1558752738166281;  // std dev = 0.118, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.05936141277027139;  // std dev = 1.955, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   | | else if ( enzyme(D, E), phenotype(A, F) )
%   | | | then return -0.1506807003812148;  // std dev = 1.617, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.037039255125666644;  // std dev = 2.460, 39.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=20 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( complex(G, H), complex(A, I) )
%   | | | then return 0.2374715604745084;  // std dev = 0.922, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.048374198191807743;  // std dev = 3.246, 46.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.043089690056878106;  // std dev = 4.734, 138.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=76 */
%   | | | else return 0.10658477335356178;  // std dev = 5.966, 183.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=112 */
%   else return -0.06842697784420322;  // std dev = 0.000, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B), location(A, F) )
%   | | | then return 0.13422335729338825;  // std dev = 0.098, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.19115039433531159;  // std dev = 0.168, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.16869170544160952;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.26013802997351115;  // std dev = 0.157, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then if ( complex(A, I), complex(H, I) )
%   | | | then return -0.08860901730788116;  // std dev = 0.726, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.01942807387071654;  // std dev = 2.927, 63.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=33 */
%   | | else if ( interaction(J, A), interaction(A, K) )
%   | | | then return 0.12334062633417646;  // std dev = 3.780, 80.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=49 */
%   | | | else return 0.047591847076253135;  // std dev = 7.211, 261.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=149 */
%   else return -0.06419184008202575;  // std dev = 8.64e-09, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
Inference time using transfer learning 2.7969048023223877
Refined model CLL: -0.256519


******************************************
Best model found
******************************************
Results 

CLL : -0.259065 

AUC ROC : 0.936283 

AUC PR : 0.317351 

Precision : 0.036715 

Recall : 0.826087 

F1 : 0.070305 

Total Learning Time : 17.045048475265503 

Total Inference Time : 11.855788469314575 

Total revision time: 65.65953803062439
Best scored revision CLL: -0.256519


Results 

CLL : -0.259065 

AUC ROC : 0.936283 

AUC PR : 0.317351 

Precision : 0.036715 

Recall : 0.826087 

F1 : 0.070305 

Total Learning Time : 65.67674994468689 

Total Inference Time : 11.855788469314575 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 14.399196147918701
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44407026015126777;  // std dev = 0.493, 483.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048743;  // std dev = 1.38e-08, 372.000 (wgt'ed) examples reached here.  /* #neg=372 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.3854588231793928;  // std dev = 7.760, 249.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=147 */
%   | else return 0.3713685638369382;  // std dev = 7.591, 236.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 322.000 (wgt'ed) examples reached here.  /* #neg=322 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31862205358336254;  // std dev = 0.491, 478.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360654;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.6027381778831161;  // std dev = 3.763, 266.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=251 */
%   | else return -0.19838716888738633;  // std dev = 5.229, 224.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783652;  // std dev = 0.000, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | | | else return -0.10159632948783653;  // std dev = 0.000, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.20171005739605732;  // std dev = 6.810, 246.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=147 */
%   | else return 0.16519816404148374;  // std dev = 6.349, 234.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=136 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.09e-08, 342.000 (wgt'ed) examples reached here.  /* #neg=342 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.1602834005019693;  // std dev = 8.376, 399.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=243 */
%   | | else return 0.07078777785590674;  // std dev = 3.673, 78.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=40 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 8.30e-08, 202.000 (wgt'ed) examples reached here.  /* #neg=202 */
%   | | else return -0.08518475138839678;  // std dev = 7.60e-08, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07136497028146788;  // std dev = 0.427, 515.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 8.82e-08, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else return -0.07877675473109148;  // std dev = 8.43e-08, 167.000 (wgt'ed) examples reached here.  /* #neg=167 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11927418194673216;  // std dev = 8.171, 388.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=243 */
%   | else return 0.0056457209377321505;  // std dev = 3.892, 81.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333711;  // std dev = 3.84e-09, 325.000 (wgt'ed) examples reached here.  /* #neg=325 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.036042024041517975;  // std dev = 9.594, 509.000 (wgt'ed) examples reached here.  /* #neg=226 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0684269778442032;  // std dev = 0.000, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06094071775798269;  // std dev = 9.165, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.22e-09, 373.000 (wgt'ed) examples reached here.  /* #neg=373 */
Inference time using transfer learning 3.0674591064453125
Parameter learned model CLL:-0.268643 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.493, 200, 283], 'false,true': [0.0, 0, 0], 'false,false': [1.38e-08, 372, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.76, 102, 147], 'true,false': [7.591, 100, 136], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 322, 0], 'false,false,false,false': [0.0, 39, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.491, 195, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [3.763, 15, 251], 'true,false': [5.229, 192, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 182, 0], 'false,false,false,false': [0.0, 192, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [6.81, 99, 147], 'true,false': [6.349, 98, 136], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 342, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.376, 156, 243], 'true,true,false': [3.673, 38, 40], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.3e-08, 202, 0], 'false,false,false': [7.6e-08, 183, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 232, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [8.82e-08, 190, 0], 'false,false,false': [8.43e-08, 167, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.171, 145, 243], 'true,false': [3.892, 41, 40], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.84e-09, 325, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.594, 226, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 345, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.165, 192, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.22e-09, 373, 0]}]
{'': [0.2426175259013528, 1.862309589693811e-16], 'false': [nan, 1.862309589693811e-16]}
{'': [0.2430268891486766, -1.2055607358810565e-16], 'true': [0.24183480911598548, 0.2441827061189347], 'false': [nan, -1.2055607358810565e-16], 'false,false': [nan, -1.2055607358810565e-16], 'false,false,false': [-1.130910410177178e-16, -2.2773805633336544e-17]}
{'': [0.2415128396576918, -3.386017435806929e-17], 'false': [nan, -3.386017435806929e-17], 'false,false': [nan, -3.386017435806929e-17]}
{'': [0.24397697539453567, 7.718127978677559e-17], 'true': [0.05323885542482651, 0.12207178990071285], 'false': [nan, 7.718127978677559e-17], 'false,false': [nan, 7.718127978677559e-17], 'false,false,false': [-8.540177112501205e-17, -9.136210306811184e-17]}
{'': [0.1809477640042409, 1.2076110092413984e-16], 'true': [0.1885436194352372, 0.17227915436787583], 'false': [nan, 1.2076110092413984e-16]}
{'': [0.17647132503992433, 3.9218267882862673e-17], 'true': [0.17647132503992433, nan], 'true,true': [0.17585109288551412, 0.17294430866507324], 'false': [nan, 3.9218267882862673e-17], 'false,false': [3.407615224097015e-17, 3.154732091831046e-17]}
{'': [0.18230442841753786, 3.109868416316965e-17], 'true': [0.18230442841753786, nan], 'false': [nan, 3.109868416316965e-17], 'false,false': [4.0902953538821554e-17, 4.254746920719163e-17]}
{'': [0.17650022536683518, 1.4347497549002023e-17], 'true': [0.17208094207901684, 0.18698761608363895], 'false': [nan, 1.4347497549002023e-17], 'false,false': [nan, 1.4347497549002023e-17]}
{'': [0.18081850203772437, -8.238176646493915e-17], 'true': [0.18081850203772437, nan], 'false': [nan, -8.238176646493915e-17], 'false,false': [nan, -8.238176646493915e-17]}
{'': [0.17682718531338845, 8.453172627172773e-17], 'true': [0.17682718531338845, nan], 'false': [nan, 8.453172627172773e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 45.2127468585968
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( complex(A, F), location(D, G) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.7528857772047755;  // std dev = 1.338, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.29629326499641817;  // std dev = 6.911, 194.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=85 */
%   | | | else return 0.4249505545327078;  // std dev = 7.788, 247.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=140 */
%   else return -0.1418510649004875;  // std dev = 2.44e-07, 360.000 (wgt'ed) examples reached here.  /* #neg=360 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( location(F, E), interaction(A, D) )
%   | | | then return 0.7871416519066524;  // std dev = 0.321, 55.000 (wgt'ed) examples reached here.  /* #pos=55 */
%   | | | else return 0.4188312251239771;  // std dev = 2.013, 20.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=13 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.11198090618999135;  // std dev = 3.917, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | | else return 0.37867014715457914;  // std dev = 7.814, 253.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=147 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.726389063418206;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.3740190352368057;  // std dev = 2.901, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   | | | else return 0.5662403707391284;  // std dev = 2.141, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   else if ( interaction(L, A) )
%   | then return -0.12544463852839216;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.5871179718405681;  // std dev = 4.077, 163.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=143 */
%   | | | else return -0.24212206990378438;  // std dev = 0.259, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, G), complex(A, H) )
%   | | | then return -0.21552742044490428;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.2635382519288083;  // std dev = 0.052, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5970437797839463;  // std dev = 0.862, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.16567833716594885;  // std dev = 3.730, 60.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=25 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.34691332629470994;  // std dev = 3.241, 45.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=28 */
%   | | | else return 0.42447270741545523;  // std dev = 4.256, 89.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=63 */
%   else return -0.11231637819360639;  // std dev = 0.000, 366.000 (wgt'ed) examples reached here.  /* #neg=366 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B), location(A, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.33837937443141203;  // std dev = 1.151, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.5248191395052484;  // std dev = 0.233, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(D, A), interaction(D, D) )
%   | | | then return 0.03932472016651807;  // std dev = 2.199, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.21477309047346557;  // std dev = 5.915, 178.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=95 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4988752730704864;  // std dev = 2.382, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | | else return -0.22815952944373744;  // std dev = 0.161, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.5706753862743951;  // std dev = 0.187, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.29338228484846945;  // std dev = 4.849, 103.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   else return -0.10159632948783608;  // std dev = 9.22e-09, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3727822024685182;  // std dev = 0.169, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.43877248294350135;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, D), location(A, H) )
%   | | | then return 0.32184631351167986;  // std dev = 0.038, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.4277360011682931;  // std dev = 0.286, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.43546801532950175;  // std dev = 0.743, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.19231747496971396;  // std dev = 4.499, 111.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=62 */
%   | | else if ( location(A, L), complex(A, M) )
%   | | | then return 0.0854412278250688;  // std dev = 4.677, 129.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=60 */
%   | | | else return 0.15308257818258578;  // std dev = 6.143, 192.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=106 */
%   else return -0.09269127618926043;  // std dev = 1.09e-08, 332.000 (wgt'ed) examples reached here.  /* #neg=332 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.24958572041740365;  // std dev = 0.009, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.26961521115446535;  // std dev = 0.027, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( enzyme(A, F), enzyme(D, F) )
%   | | | then return -0.21997746372274504;  // std dev = 0.695, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.08280780860349705;  // std dev = 3.181, 70.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=36 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), enzyme(G, J) )
%   | | | then return 0.48239013079617804;  // std dev = 1.212, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.23743395647698665;  // std dev = 3.558, 74.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.18371382326541183;  // std dev = 3.684, 111.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=72 */
%   | | | else return 0.108401999639152;  // std dev = 5.955, 158.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=92 */
%   else return -0.08518475138839678;  // std dev = 6.65e-09, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.23446294315409463;  // std dev = 0.231, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.04351765562584;  // std dev = 0.397, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(D, G), interaction(H, D) )
%   | | | then return 0.35958902251002034;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.2717655695684263;  // std dev = 0.104, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( enzyme(A, K), location(I, L) )
%   | | | then return -0.08589562087175906;  // std dev = 2.799, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.10889059280937347;  // std dev = 3.448, 66.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=39 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.1613361157780471;  // std dev = 4.072, 97.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=63 */
%   | | | else return 0.07889564288780615;  // std dev = 6.573, 219.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=123 */
%   else return -0.07877675473109144;  // std dev = 1.08e-08, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), complex(A, F) )
%   | | then if ( enzyme(A, E) )
%   | | | then return 0.22024871045351338;  // std dev = 0.107, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.342121659318396;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.1772695448049374;  // std dev = 0.032, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.3009330336115839;  // std dev = 0.206, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( complex(H, G) )
%   | | | then return -0.08382137521666738;  // std dev = 2.882, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.06734420648830584;  // std dev = 3.140, 62.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=32 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18527261096337985;  // std dev = 3.246, 70.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=48 */
%   | | | else return 0.04760023379424103;  // std dev = 6.984, 259.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=145 */
%   else return -0.07324622576333764;  // std dev = 0.000, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.35566379668238907;  // std dev = 0.642, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.15726585697417322;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return 0.15339869575206228;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.2326998979331657;  // std dev = 0.228, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, G), location(A, H) )
%   | | | then return -0.2697605428032629;  // std dev = 0.253, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.37177514335165834;  // std dev = 0.243, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.11772921564434788;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=41 */
%   | | | else return 0.029401367942949983;  // std dev = 8.326, 368.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=200 */
%   else return -0.06842697784420324;  // std dev = 0.000, 361.000 (wgt'ed) examples reached here.  /* #neg=361 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, A), interaction(F, D) )
%   | | | then return 0.21833341242776866;  // std dev = 1.545, 39.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=36 */
%   | | | else return -0.025106063737713805;  // std dev = 1.656, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2748370714354569;  // std dev = 0.523, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.03954950237606868;  // std dev = 4.871, 133.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=64 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.17115402610805228;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.021837953823782612;  // std dev = 3.612, 70.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=37 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08334748553776283;  // std dev = 5.418, 170.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=105 */
%   | | | else return 0.1921101348269912;  // std dev = 2.371, 35.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=26 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 4.11246395111084
Refined model CLL: -0.254313


******************************************
Best model found
******************************************
Results 

CLL : -0.244243 

AUC ROC : 0.968219 

AUC PR : 0.334637 

Precision : 0.060259 

Recall : 0.918605 

F1 : 0.113099 

Total Learning Time : 45.2127468585968 

Total Inference Time : 38.94428753852844 

Total revision time: 137.3201880455017
Best scored revision CLL: -0.254313


Results 

CLL : -0.244243 

AUC ROC : 0.968219 

AUC PR : 0.334637 

Precision : 0.060259 

Recall : 0.918605 

F1 : 0.113099 

Total Learning Time : 137.3373999595642 

Total Inference Time : 38.94428753852844 

Run: 4

 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 10498
Target train pos examples: 282
Target train neg examples: 39912

Target test facts examples: 4517
Target test pos examples: 87
Target test neg examples: 11565

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 10.82620358467102
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45434343827075535;  // std dev = 0.491, 473.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048752;  // std dev = 1.28e-08, 359.000 (wgt'ed) examples reached here.  /* #neg=359 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.39653146244776016;  // std dev = 7.843, 257.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=155 */
%   | else return 0.3528899876196006;  // std dev = 7.480, 227.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839213;  // std dev = 0.000, 312.000 (wgt'ed) examples reached here.  /* #neg=312 */
%   | | | else return -0.1254446385283915;  // std dev = 0.000, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31504467895764193;  // std dev = 0.492, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360668;  // std dev = 0.000, 321.000 (wgt'ed) examples reached here.  /* #neg=321 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5746898069691642;  // std dev = 4.487, 262.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=240 */
%   | else return -0.15130897780567643;  // std dev = 5.801, 219.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10159632948783653;  // std dev = 0.000, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | | else return -0.10159632948783644;  // std dev = 0.000, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.21518968801361754;  // std dev = 7.012, 253.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=155 */
%   | else return 0.18528863025675724;  // std dev = 6.026, 214.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=127 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926075;  // std dev = 8.54e-09, 384.000 (wgt'ed) examples reached here.  /* #neg=384 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.14242815629132455;  // std dev = 8.614, 404.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=237 */
%   | | else return 0.06204642258327876;  // std dev = 3.993, 89.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=45 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, G) )
%   | | then return -0.08518475138839678;  // std dev = 7.60e-08, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else return -0.08518475138839678;  // std dev = 5.58e-08, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.11121051445395239;  // std dev = 0.427, 478.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(A, F) )
%   | | then return -0.07877675473109147;  // std dev = 7.74e-08, 188.000 (wgt'ed) examples reached here.  /* #neg=188 */
%   | | else return -0.07877675473109148;  // std dev = 8.02e-08, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.07480200742862497;  // std dev = 8.715, 407.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=237 */
%   | else return 0.0072113057500337256;  // std dev = 4.040, 92.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=45 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333713;  // std dev = 3.48e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.052350985891410046;  // std dev = 9.579, 492.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420329;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.053658517058437084;  // std dev = 9.361, 481.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=282 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202568;  // std dev = 9.08e-09, 370.000 (wgt'ed) examples reached here.  /* #neg=370 */
Inference time using transfer learning 6.623489618301392
Parameter learned model CLL:-0.273151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 191, 282], 'false,true': [0.0, 0, 0], 'false,false': [1.28e-08, 359, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [7.843, 102, 155], 'true,false': [7.48, 100, 127], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 312, 0], 'false,false,false,false': [0.0, 41, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 196, 282], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 321, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(A, G)'}, {'true,true': [4.487, 22, 240], 'true,false': [5.801, 177, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 196, 0], 'false,false,false,false': [0.0, 144, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [7.012, 98, 155], 'true,false': [6.026, 87, 127], 'false,true': [0.0, 0, 0], 'false,false': [8.54e-09, 384, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(A, G)'}, {'true,true,true': [8.614, 167, 237], 'true,true,false': [3.993, 44, 45], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.6e-08, 200, 0], 'false,false,false': [5.58e-08, 140, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(A, F)'}, {'true,true': [0.427, 196, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [7.74e-08, 188, 0], 'false,false,false': [8.02e-08, 172, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [8.715, 170, 237], 'true,false': [4.04, 47, 45], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.48e-09, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.579, 210, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 380, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.361, 199, 282], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [9.08e-09, 370, 0]}]
{'': [0.2407466175596399, 1.657603178827532e-16], 'false': [nan, 1.657603178827532e-16]}
{'': [0.24316986544634367, -1.2077213638981874e-16], 'true': [0.23936774213084477, 0.24646315666906266], 'false': [nan, -1.2077213638981874e-16], 'false,false': [nan, -1.2077213638981874e-16], 'false,false,false': [-1.1102230246251565e-16, -2.4370749321040022e-17]}
{'': [0.2416531587073044, -3.873675350717057e-17], 'false': [nan, -3.873675350717057e-17], 'false,false': [nan, -3.873675350717057e-17]}
{'': [0.2425468747394794, 1.0449157878825003e-17], 'true': [0.076849334358346, 0.15368206635612297], 'false': [nan, 1.0449157878825003e-17], 'false,false': [nan, 1.0449157878825003e-17], 'false,false,false': [-9.06304509898087e-17, -5.551115123125783e-17]}
{'': [0.1832827532470826, 7.28583859910259e-17], 'true': [0.19435277459916367, 0.1697109286464227], 'false': [nan, 7.28583859910259e-17]}
{'': [0.1838032329468574, 3.7878197310740636e-17], 'true': [0.1838032329468574, nan], 'true,true': [0.18365849952328053, 0.17916542970499374], 'false': [nan, 3.7878197310740636e-17], 'false,false': [2.886579864025407e-17, 2.2204460492503132e-17]}
{'': [0.18225748275472833, 1.850371707708594e-17], 'true': [0.18225748275472833, nan], 'false': [nan, 1.850371707708594e-17], 'false,false': [3.188938474987152e-17, 3.743775315596458e-17]}
{'': [0.18561386652783338, 1.2580430873939451e-17], 'true': [0.18662480552254923, 0.1774153464912139], 'false': [nan, 1.2580430873939451e-17], 'false,false': [nan, 1.2580430873939451e-17]}
{'': [0.18649479048767997, -1.092693187394233e-16], 'true': [0.18649479048767997, nan], 'false': [nan, -1.092693187394233e-16], 'false,false': [nan, -1.092693187394233e-16]}
{'': [0.18218428671017536, 8.221651587764673e-17], 'true': [0.18218428671017536, nan], 'false': [nan, 8.221651587764673e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(A, G).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(A, G).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(A, F).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 77.09572958946228
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( phenotype(A, F), phenotype(D, F) )
%   | | | then return 0.6359267128772901;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), complex(A, H) )
%   | | | then return 0.35814893509951345;  // std dev = 5.874, 138.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=69 */
%   | | | else return 0.4400304682005552;  // std dev = 8.356, 287.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=167 */
%   else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109546;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return -0.04840172135722235;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.39948694445363414;  // std dev = 5.249, 116.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=68 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), location(A, I) )
%   | | | then return 0.510040460076106;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.761390991079942;  // std dev = 0.126, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.25835704066349524;  // std dev = 3.555, 53.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=24 */
%   | | | else return 0.37947286008758435;  // std dev = 7.591, 239.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=140 */
%   else if ( interaction(K, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
%   | else return -0.12544463852839155;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, E) )
%   | | | then return 0.5634725137797015;  // std dev = 0.093, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.3532917457629189;  // std dev = 0.892, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.7273817090315167;  // std dev = 0.064, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6532197788788411;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, G), location(A, H) )
%   | | then if ( complex(A, I), complex(G, I) )
%   | | | then return 0.063426563064838;  // std dev = 3.324, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.2769122248190422;  // std dev = 6.216, 158.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=86 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.21760572217511057;  // std dev = 3.736, 58.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=29 */
%   | | | else return 0.3548236029972125;  // std dev = 6.144, 165.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=104 */
%   else return -0.11231637819360663;  // std dev = 0.000, 330.000 (wgt'ed) examples reached here.  /* #neg=330 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.34379739801933024;  // std dev = 1.306, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return -0.1270123494683246;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.3170394156189596;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5110300117056784;  // std dev = 0.234, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.5598433489350916;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.1855383240339669;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.18537489651302222;  // std dev = 0.064, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.1992357600211835;  // std dev = 10.092, 413.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=216 */
%   else return -0.10159632948783595;  // std dev = 1.06e-08, 395.000 (wgt'ed) examples reached here.  /* #neg=395 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D) )
%   | | | then return 0.5072720909568611;  // std dev = 3.555, 168.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=154 */
%   | | | else return -0.3671797934837608;  // std dev = 0.297, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.30261421902862473;  // std dev = 0.219, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.3779394638739249;  // std dev = 0.099, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3368628505314883;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.39686494414587425;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.25900692768303946;  // std dev = 3.257, 47.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=30 */
%   | | | else return 0.10277993206062491;  // std dev = 6.030, 154.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=75 */
%   else return -0.09269127618926043;  // std dev = 1.06e-08, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), location(D, G) )
%   | | then if ( interaction(H, D), interaction(H, A) )
%   | | | then return 0.0678855506242146;  // std dev = 2.680, 41.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=22 */
%   | | | else return 0.24285669087592848;  // std dev = 3.139, 58.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=40 */
%   | | else if ( phenotype(A, I), interaction(J, D) )
%   | | | then return 0.14779065877528372;  // std dev = 3.834, 105.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=61 */
%   | | | else return 0.02565895151621779;  // std dev = 5.132, 127.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=58 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.2613016780002844;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35907146740698226;  // std dev = 0.142, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, M), interaction(N, A) )
%   | | | then return 0.06145073893349773;  // std dev = 2.779, 42.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=20 */
%   | | | else return 0.18532388014205764;  // std dev = 4.588, 106.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=64 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( location(A, F), interaction(E, G) )
%   | | | then return 0.23413286131729738;  // std dev = 0.127, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.3625602671233927;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(D, H), interaction(H, D) )
%   | | | then return -0.3691745855860884;  // std dev = 0.787, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2017275699787052;  // std dev = 1.294, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | else if ( complex(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4516921124921193;  // std dev = 1.074, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.33127262952427644;  // std dev = 0.506, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, L), interaction(L, A) )
%   | | | then return -0.003538390797836032;  // std dev = 3.243, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.07241310694450616;  // std dev = 8.175, 331.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=175 */
%   else return -0.07877675473109143;  // std dev = 6.32e-09, 379.000 (wgt'ed) examples reached here.  /* #neg=379 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(E, A) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, E), enzyme(E, F) )
%   | | | then return 0.04361696775363538;  // std dev = 0.852, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.21859618159433084;  // std dev = 0.348, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27371209192831847;  // std dev = 2.567, 44.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=36 */
%   | | | else return -0.1049687703245265;  // std dev = 4.745, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J) )
%   | | | then return 0.30107870274191234;  // std dev = 1.349, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.010785735050849288;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.1196274689459543;  // std dev = 5.265, 153.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=93 */
%   | | | else return 0.01567366366616769;  // std dev = 4.588, 107.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=54 */
%   else return -0.07324622576333768;  // std dev = 0.000, 364.000 (wgt'ed) examples reached here.  /* #neg=364 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.3471624067834485;  // std dev = 3.644, 243.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=230 */
%   | | | else return -0.2002033730199864;  // std dev = 4.588, 162.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=39 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.24656072376884744;  // std dev = 0.393, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.39219230319011317;  // std dev = 0.434, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | else if ( phenotype(A, H) )
%   | | then return -0.057600520372672825;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.5156141180337319;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.25298291279783597;  // std dev = 1.439, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else return -0.0684269778442032;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.24831498165884586;  // std dev = 4.229, 250.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=230 */
%   | | | else return -0.1549443519205945;  // std dev = 4.574, 159.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=39 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.22885191781456307;  // std dev = 0.438, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return -0.30695043047950477;  // std dev = 0.271, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09160950052480883;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.24068456573164945;  // std dev = 0.563, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return -0.17346963660478099;  // std dev = 1.576, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.08414078896701113;  // std dev = 1.418, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   else return -0.06419184008202573;  // std dev = 8.74e-09, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
Inference time using transfer learning 7.9451165199279785
Refined model CLL: -0.189817


******************************************
Best model found
******************************************
Results 

CLL : -0.190847 

AUC ROC : 0.991413 

AUC PR : 0.452326 

Precision : 0.172131 

Recall : 0.965517 

F1 : 0.292174 

Total Learning Time : 77.09572958946228 

Total Inference Time : 78.79911732673645 

Total revision time: 194.36072421073914
Best scored revision CLL: -0.189817


Results 

CLL : -0.190847 

AUC ROC : 0.991413 

AUC PR : 0.452326 

Precision : 0.172131 

Recall : 0.965517 

F1 : 0.292174 

Total Learning Time : 194.37830138206482 

Total Inference Time : 78.79911732673645 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11159
Target train pos examples: 265
Target train neg examples: 35157

Target test facts examples: 3856
Target test pos examples: 104
Target test neg examples: 16320

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 9.640941858291626
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.45499578194635487;  // std dev = 0.491, 444.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 9.50e-09, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3217476977476765;  // std dev = 10.255, 422.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=223 */
%   | else return 0.36087924635789487;  // std dev = 4.262, 74.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839208;  // std dev = 0.000, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3232493839153264;  // std dev = 0.492, 450.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=265 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360658;  // std dev = 0.000, 336.000 (wgt'ed) examples reached here.  /* #neg=336 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5935005577154396;  // std dev = 4.081, 241.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=223 */
%   | else return -0.14027696940345505;  // std dev = 5.775, 216.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
%   | | | else return -0.10159632948783623;  // std dev = 3.33e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17794985917051195;  // std dev = 8.162, 378.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=223 */
%   | else return 0.33637481644120604;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=42 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.06e-08, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.12111123011099989;  // std dev = 9.235, 464.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=259 */
%   | | else return -0.04844575275531431;  // std dev = 1.964, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.01e-07, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
%   | | else return -0.08518475138839685;  // std dev = 2.98e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.12013208476108912;  // std dev = 0.428, 449.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 3.94e-08, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | | else return -0.07877675473109172;  // std dev = 2.58e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.06611629076691698;  // std dev = 9.184, 460.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=259 */
%   | else return 0.11252237851337384;  // std dev = 1.679, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.0732462257633371;  // std dev = 3.95e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06807708456893079;  // std dev = 9.117, 456.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420301;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06284774466124081;  // std dev = 8.978, 446.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=265 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202584;  // std dev = 7.74e-09, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
Inference time using transfer learning 4.250550270080566
Parameter learned model CLL:-0.272197 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.491, 179, 265], 'false,true': [0.0, 0, 0], 'false,false': [9.5e-09, 323, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.255, 199, 223], 'true,false': [4.262, 32, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 293, 0], 'false,false,false,false': [0.0, 65, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 185, 265], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 336, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.081, 18, 223], 'true,false': [5.775, 174, 42], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 287, 0], 'false,false,false,false': [3.33e-08, 56, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.162, 155, 223], 'true,false': [3.855, 23, 42], 'false,true': [0.0, 0, 0], 'false,false': [1.06e-08, 327, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.235, 205, 259], 'true,true,false': [1.964, 13, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.01e-07, 278, 0], 'false,false,false': [2.98e-08, 51, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.428, 184, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [3.94e-08, 302, 0], 'false,false,false': [2.58e-08, 61, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.184, 201, 259], 'true,false': [1.679, 6, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [3.95e-09, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.117, 191, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 304, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.978, 181, 265], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [7.74e-09, 324, 0]}]
{'': [0.24062068825582664, 8.799290845326319e-17], 'false': [nan, 8.799290845326319e-17]}
{'': [0.24882527965659776, -1.215663200148216e-16], 'true': [0.24919139282584785, 0.2454346238130019], 'false': [nan, -1.215663200148216e-16], 'false,false': [nan, -1.215663200148216e-16], 'false,false,false': [-1.0609639825769414e-16, -3.75767792950053e-17]}
{'': [0.2421405388903473, -3.700743415417188e-17], 'false': [nan, -3.700743415417188e-17], 'false,false': [nan, -3.700743415417188e-17]}
{'': [0.24362157717646243, 1.5536648741110063e-17], 'true': [0.06911038033092066, 0.15438881675635358], 'false': [nan, 1.5536648741110063e-17], 'false,false': [nan, 1.5536648741110063e-17], 'false,false,false': [-5.415722071342227e-17, 1.9825411154020653e-17]}
{'': [0.18707807973056745, 1.1271989118518409e-16], 'true': [0.17624873215494488, 0.2286390532544377], 'false': [nan, 1.1271989118518409e-16]}
{'': [0.18562443909803023, 4.049445682523367e-17], 'true': [0.18562443909803023, nan], 'true,true': [0.18378477285229208, 0.20293239035410418], 'false': [nan, 4.049445682523367e-17], 'false,false': [3.6741193620688633e-17, 1.7415263131375004e-17]}
{'': [0.18290934970609032, 2.202095255454856e-17], 'true': [0.18290934970609032, nan], 'false': [nan, 2.202095255454856e-17], 'false,false': [5.1467292532292026e-18, 1.0920226471722851e-17]}
{'': [0.18471338646005775, 1.6184009105322982e-17], 'true': [0.1833472147838396, 0.23498452637023595], 'false': [nan, 1.6184009105322982e-17], 'false,false': [nan, 1.6184009105322982e-17]}
{'': [0.18226611636673562, -5.91632006543669e-17], 'true': [0.18226611636673562, nan], 'false': [nan, -5.91632006543669e-17], 'false,false': [nan, -5.91632006543669e-17]}
{'': [0.18074614841585876, 6.030841121420603e-17], 'true': [0.18074614841585876, nan], 'false': [nan, 6.030841121420603e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 51.606231451034546
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995117;  // std dev = 2.46e-07, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), complex(F, G) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.21370449065506653;  // std dev = 4.541, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | | | else return 0.3802728289048207;  // std dev = 9.197, 339.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=177 */
%   else return -0.14185106490048777;  // std dev = 1.33e-07, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.7117255659318381;  // std dev = 1.315, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return 0.3386797463719308;  // std dev = 1.279, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.19155588156825484;  // std dev = 0.104, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.42257548492217784;  // std dev = 6.584, 187.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=116 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, I), interaction(H, J) )
%   | | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.17699105327482864;  // std dev = 0.030, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2859990496317374;  // std dev = 6.987, 197.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=94 */
%   else return -0.1254446385283921;  // std dev = 0.000, 355.000 (wgt'ed) examples reached here.  /* #neg=355 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D) )
%   | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, E), interaction(F, A) )
%   | | | then return 0.6729507514216575;  // std dev = 2.824, 224.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=216 */
%   | | | else return 0.05323134496078618;  // std dev = 5.130, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | else return -0.24522840893169187;  // std dev = 0.318, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(G, A), interaction(A, H) )
%   | | then if ( location(G, I), interaction(G, G) )
%   | | | then return 0.2304981977188585;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05725066961194618;  // std dev = 1.456, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.3242365319400922;  // std dev = 0.492, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else return -0.11231637819360671;  // std dev = 0.000, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.43720873096270096;  // std dev = 0.174, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.6222837411269813;  // std dev = 0.488, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else return -0.24657510168280514;  // std dev = 0.313, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), location(A, I) )
%   | | | then return 0.20913091481633259;  // std dev = 0.965, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.43373155461398827;  // std dev = 0.305, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return 0.11668555444434381;  // std dev = 2.511, 46.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=19 */
%   | | | else return 0.251828514059068;  // std dev = 7.281, 286.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=165 */
%   else if ( interaction(K, A) )
%   | then return -0.1015963294878366;  // std dev = 0.000, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
%   | else return -0.10159632948783619;  // std dev = 0.000, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( recursion_proteinclass(D, B), location(D, E) )
%   | | then if ( interaction(F, D) )
%   | | | then return 0.32530491405432166;  // std dev = 0.941, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | | else return 0.18662591107186027;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.058323196693144556;  // std dev = 2.660, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
%   | | | else return 0.1619540057783473;  // std dev = 6.662, 280.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=159 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.4843366523764103;  // std dev = 1.894, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | else return -0.22828430403503605;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.13748796120230794;  // std dev = 2.021, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.35020210464814167;  // std dev = 2.254, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   else return -0.09269127618926046;  // std dev = 1.08e-08, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(E, F), interaction(G, E) )
%   | | then if ( location(D, F), location(G, H) )
%   | | | then return 0.09738133724098771;  // std dev = 6.213, 279.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=149 */
%   | | | else return 0.004766467893570256;  // std dev = 2.668, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
%   | | else if ( location(E, I), location(D, I) )
%   | | | then return 0.14640663378322957;  // std dev = 1.906, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | | | else return 0.4435500936338346;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( complex(J, K) )
%   | | | then return 0.18941684476251397;  // std dev = 3.239, 63.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=36 */
%   | | | else return 0.4067030068323394;  // std dev = 1.486, 20.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=16 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.45495894904298856;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11804231743831355;  // std dev = 2.367, 34.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=19 */
%   else return -0.08518475138839678;  // std dev = 6.11e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, A), complex(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.2139382002008016;  // std dev = 0.002, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07505318521461901;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.2533653165381795;  // std dev = 0.177, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.32307879178795196;  // std dev = 0.114, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1938406700345772;  // std dev = 0.101, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.06193806020246963;  // std dev = 4.604, 145.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=70 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.1832833676622978;  // std dev = 1.883, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   | | | else return 0.11505776493861336;  // std dev = 6.375, 222.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=129 */
%   else return -0.07877675473109141;  // std dev = 3.48e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.28496992150228867;  // std dev = 0.606, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.233716573242639;  // std dev = 0.622, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, G), complex(D, H) )
%   | | | then return -0.015382773131897353;  // std dev = 2.942, 69.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=30 */
%   | | | else return 0.09755597878318564;  // std dev = 2.561, 54.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=32 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2022617432014837;  // std dev = 5.602, 228.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=166 */
%   | | | else return -0.2965861352561792;  // std dev = 0.422, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.02088327869633222;  // std dev = 1.390, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1541195031299264;  // std dev = 1.210, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.0732462257633371;  // std dev = 3.84e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), complex(D, G) )
%   | | | then return 0.13132067294282745;  // std dev = 0.559, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.3399212549483228;  // std dev = 0.378, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.2258202043653727;  // std dev = 0.302, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.13778073302838897;  // std dev = 3.206, 76.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=51 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.1581608991122304;  // std dev = 0.088, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2966098480472825;  // std dev = 0.087, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.038425953229418476;  // std dev = 6.591, 275.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=153 */
%   | | | else return -0.0846273471106071;  // std dev = 2.111, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   else return -0.06842697784420317;  // std dev = 0.000, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.21658594678677973;  // std dev = 0.887, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | | | else return -0.08546372080096303;  // std dev = 1.324, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( location(D, E) )
%   | | | then return -0.025407528431485436;  // std dev = 6.056, 258.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=123 */
%   | | | else return 0.1230976618198285;  // std dev = 2.706, 63.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=42 */
%   | else if ( phenotype(A, H), enzyme(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.2924880246672089;  // std dev = 0.751, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.316696879171608;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.41760836086198744;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18437708313895876;  // std dev = 2.704, 51.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   else return -0.06419184008202578;  // std dev = 8.38e-09, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
Inference time using transfer learning 7.962818622589111
Refined model CLL: -0.224388


******************************************
Best model found
******************************************
Results 

CLL : -0.227749 

AUC ROC : 0.98108 

AUC PR : 0.213332 

Precision : 0.095149 

Recall : 0.980769 

F1 : 0.173469 

Total Learning Time : 51.606231451034546 

Total Inference Time : 35.27441048622131 

Total revision time: 118.42384171485901
Best scored revision CLL: -0.224388


Results 

CLL : -0.227749 

AUC ROC : 0.98108 

AUC PR : 0.213332 

Precision : 0.095149 

Recall : 0.980769 

F1 : 0.173469 

Total Learning Time : 118.44141888618469 

Total Inference Time : 35.27441048622131 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11594
Target train pos examples: 277
Target train neg examples: 38883

Target test facts examples: 3421
Target test pos examples: 92
Target test neg examples: 12594

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 12.806549310684204
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.44501334187916897;  // std dev = 0.492, 472.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048763;  // std dev = 1.07e-08, 333.000 (wgt'ed) examples reached here.  /* #neg=333 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.375588851373542;  // std dev = 10.280, 434.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=252 */
%   | else return 0.4528384269253279;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 337.000 (wgt'ed) examples reached here.  /* #neg=337 */
%   | | | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.3026097374954613;  // std dev = 0.494, 480.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=277 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360632;  // std dev = 0.000, 380.000 (wgt'ed) examples reached here.  /* #neg=380 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5760649294054992;  // std dev = 4.681, 276.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=252 */
%   | else return -0.20771700361777992;  // std dev = 4.582, 188.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1015963294878363;  // std dev = 1.07e-07, 351.000 (wgt'ed) examples reached here.  /* #neg=351 */
%   | | | else return -0.10159632948783635;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.17617601872759334;  // std dev = 8.652, 430.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=252 */
%   | else return 0.36720003494455583;  // std dev = 2.847, 37.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=25 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926043;  // std dev = 1.10e-08, 343.000 (wgt'ed) examples reached here.  /* #neg=343 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14019277489703208;  // std dev = 9.010, 462.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=271 */
%   | | else return 0.0011755107100081313;  // std dev = 1.849, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.10e-07, 315.000 (wgt'ed) examples reached here.  /* #neg=315 */
%   | | else return -0.08518475138839689;  // std dev = 5.27e-09, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.07726603990333973;  // std dev = 0.424, 504.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109144;  // std dev = 2.11e-08, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.07904925405035804;  // std dev = 9.144, 467.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=271 */
%   | else return 0.08006162643798195;  // std dev = 1.701, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333767;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08117050593897347;  // std dev = 9.024, 460.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420312;  // std dev = 0.000, 326.000 (wgt'ed) examples reached here.  /* #neg=326 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06074864944370663;  // std dev = 9.017, 462.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=277 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202576;  // std dev = 8.48e-09, 345.000 (wgt'ed) examples reached here.  /* #neg=345 */
Inference time using transfer learning 3.0807881355285645
Parameter learned model CLL:-0.274047 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.492, 195, 277], 'false,true': [0.0, 0, 0], 'false,false': [1.07e-08, 333, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.28, 182, 252], 'true,false': [2.924, 13, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 337, 0], 'false,false,false,false': [0.0, 25, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.494, 203, 277], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 380, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [4.681, 24, 252], 'true,false': [4.582, 163, 25], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [1.07e-07, 351, 0], 'false,false,false,false': [0.0, 27, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.652, 178, 252], 'true,false': [2.847, 12, 25], 'false,true': [0.0, 0, 0], 'false,false': [1.1e-08, 343, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.01, 191, 271], 'true,true,false': [1.849, 11, 6], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.1e-07, 315, 0], 'false,false,false': [5.27e-09, 31, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.424, 227, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.11e-08, 318, 0], 'false,false,false': [0.0, 28, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.144, 196, 271], 'true,false': [1.701, 7, 6], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 346, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.024, 183, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 326, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.017, 185, 277], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.48e-09, 345, 0]}]
{'': [0.2424545748348206, 1.1202250338560137e-16], 'false': [nan, 1.1202250338560137e-16]}
{'': [0.24245457483481805, -1.2022304576051418e-16], 'true': [0.24349635796045788, 0.22506925207756315], 'false': [nan, -1.2022304576051418e-16], 'false,false': [nan, -1.2022304576051418e-16], 'false,false,false': [-1.1596394797271666e-16, -6.661338147750939e-18]}
{'': [0.24414179083766568, -2.337311630789803e-17], 'false': [nan, -2.337311630789803e-17], 'false,false': [nan, -2.337311630789803e-17]}
{'': [0.24053399541726142, 8.458842092382145e-17], 'true': [0.07939508506616136, 0.11168864546227147], 'false': [nan, 8.458842092382145e-17], 'false,false': [nan, 8.458842092382145e-17], 'false,false,false': [3.289549702593056e-17, -2.05596856412066e-18]}
{'': [0.18031861060120868, 1.2299846920045467e-16], 'true': [0.17408724814652426, 0.2191380569758949], 'false': [nan, 1.2299846920045467e-16]}
{'': [0.1772786788149784, 3.978833961084376e-17], 'true': [0.1772786788149784, nan], 'true,true': [0.1757185983811321, 0.20103624343186619], 'false': [nan, 3.978833961084376e-17], 'false,false': [3.8064789415719653e-17, 8.953411488912552e-19]}
{'': [0.18013434099966724, 2.4386401696968757e-17], 'true': [0.18013434099966724, nan], 'false': [nan, 2.4386401696968757e-17], 'false,false': [1.3965069492140335e-18, 0.0]}
{'': [0.18021704193006657, -6.609998354704689e-17], 'true': [0.1790356892304585, 0.22265386869116868], 'false': [nan, -6.609998354704689e-17], 'false,false': [nan, -6.609998354704689e-17]}
{'': [0.17701524727780552, -7.015519726158965e-17], 'true': [0.17701524727780552, nan], 'false': [nan, -7.015519726158965e-17], 'false,false': [nan, -7.015519726158965e-17]}
{'': [0.17597679722981602, 7.144043810631442e-17], 'true': [0.17597679722981602, nan], 'false': [nan, 7.144043810631442e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 18.971866607666016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), enzyme(A, F) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), enzyme(G, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.29840050742655755;  // std dev = 6.260, 159.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=70 */
%   | | | else return 0.4368890925798237;  // std dev = 7.869, 254.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=147 */
%   else return -0.14185106490048752;  // std dev = 2.33e-07, 354.000 (wgt'ed) examples reached here.  /* #neg=354 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(A, F) )
%   | | then return 0.7235208191248607;  // std dev = 0.061, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.43838473439827563;  // std dev = 1.203, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1947242965578613;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6201961532120382;  // std dev = 1.351, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.3633182664096823;  // std dev = 9.763, 388.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=217 */
%   else if ( interaction(I, A) )
%   | then return -0.12544463852839213;  // std dev = 0.000, 317.000 (wgt'ed) examples reached here.  /* #neg=317 */
%   | else return -0.1254446385283914;  // std dev = 0.000, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.5912401758605116;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5588954738017945;  // std dev = 0.051, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.09539273432781685;  // std dev = 0.827, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5159145613109104;  // std dev = 0.838, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6714051540145582;  // std dev = 1.354, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.09393888200799243;  // std dev = 5.123, 121.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=42 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.24780371850981175;  // std dev = 6.505, 172.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=89 */
%   | | | else return 0.36853893326803666;  // std dev = 5.195, 119.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=76 */
%   else return -0.1123163781936065;  // std dev = 0.000, 347.000 (wgt'ed) examples reached here.  /* #neg=347 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(D, A), interaction(E, E) )
%   | | | then return 0.4188101824060067;  // std dev = 0.044, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.015020230890393477;  // std dev = 1.433, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.4273246367639858;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.466706169690586;  // std dev = 0.143, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.6643324243148208;  // std dev = 0.702, 78.000 (wgt'ed) examples reached here.  /* #pos=78 */
%   | | | else return -0.273511184207159;  // std dev = 0.426, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2910974890920317;  // std dev = 4.522, 89.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=55 */
%   | | | else return 0.20552752301324778;  // std dev = 6.724, 188.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=101 */
%   else return -0.10159632948783638;  // std dev = 3.48e-09, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.03208572924764397;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, D), interaction(G, A) )
%   | | | then return 0.33966084116032835;  // std dev = 0.302, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | | else return 0.2223351015927207;  // std dev = 1.175, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4203053653415502;  // std dev = 1.196, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.15471107143984972;  // std dev = 3.271, 53.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=27 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.21932398000194467;  // std dev = 2.837, 55.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=33 */
%   | | | else return 0.12735353738218727;  // std dev = 8.307, 322.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=161 */
%   else if ( interaction(A, A) )
%   | then return -0.09269127618926094;  // std dev = 0.000, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else return -0.09269127618926046;  // std dev = 9.68e-09, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3609241624135394;  // std dev = 0.522, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.060081729845287035;  // std dev = 0.928, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.41898657119380656;  // std dev = 0.326, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07776700053033475;  // std dev = 4.918, 121.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=61 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.20756371630061762;  // std dev = 7.070, 288.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=187 */
%   | | | else return -0.348133538095517;  // std dev = 0.402, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.6071363014124822;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2622929272802899;  // std dev = 1.130, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( enzyme(A, F), recursion_proteinclass(D, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.19703672072234257;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.3032293768352517;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.32325531251855516;  // std dev = 0.389, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.01615602970729811;  // std dev = 3.833, 93.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=43 */
%   | else if ( interaction(A, A) )
%   | | then if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.21531346050387928;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.2279389970798891;  // std dev = 0.159, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.18716241696456148;  // std dev = 3.984, 103.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=67 */
%   | | | else return 0.13107108889412672;  // std dev = 6.750, 224.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=132 */
%   else return -0.07877675473109141;  // std dev = 5.10e-09, 356.000 (wgt'ed) examples reached here.  /* #neg=356 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(F, G) )
%   | | | then return 0.23759398583442545;  // std dev = 1.224, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.4595048716006254;  // std dev = 0.524, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.3034831041859673;  // std dev = 0.331, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.44266232008931067;  // std dev = 0.350, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, I), phenotype(A, J) )
%   | | | then return -0.03683777617538045;  // std dev = 1.779, 33.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | else return 0.1865177273958982;  // std dev = 2.502, 49.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=36 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.15326560992007363;  // std dev = 1.279, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return 0.034331116020029785;  // std dev = 7.675, 297.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=152 */
%   else return -0.07324622576333717;  // std dev = 2.79e-09, 352.000 (wgt'ed) examples reached here.  /* #neg=352 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.15782695810522498;  // std dev = 1.966, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | | | else return 0.03261129241021304;  // std dev = 5.973, 221.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=110 */
%   | | else if ( location(A, H) )
%   | | | then return 0.115011169293848;  // std dev = 3.340, 68.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=44 */
%   | | | else return 0.46433996849045794;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.1687132577819317;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.07403732842535932;  // std dev = 2.482, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.024693294507441406;  // std dev = 1.278, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.07353466812775668;  // std dev = 3.868, 88.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=50 */
%   else return -0.06842697784420328;  // std dev = 0.000, 374.000 (wgt'ed) examples reached here.  /* #neg=374 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.16964376454275779;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.13994776531321262;  // std dev = 0.055, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.1359041692488844;  // std dev = 2.690, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.09822616171135487;  // std dev = 2.169, 31.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=19 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.27191015292957826;  // std dev = 1.128, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   | | | else return 0.10142829533544338;  // std dev = 2.191, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.20552832170493426;  // std dev = 0.284, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.03948722015108003;  // std dev = 7.457, 305.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=165 */
%   else return -0.06419184008202569;  // std dev = 9.08e-09, 367.000 (wgt'ed) examples reached here.  /* #neg=367 */
Inference time using transfer learning 3.1386313438415527
Refined model CLL: -0.242675


******************************************
Best model found
******************************************
Results 

CLL : -0.224871 

AUC ROC : 0.97216 

AUC PR : 0.333557 

Precision : 0.076302 

Recall : 0.923913 

F1 : 0.140962 

Total Learning Time : 18.971866607666016 

Total Inference Time : 15.20616865158081 

Total revision time: 73.35892391204834
Best scored revision CLL: -0.242675


Results 

CLL : -0.224871 

AUC ROC : 0.97216 

AUC PR : 0.333557 

Precision : 0.076302 

Recall : 0.923913 

F1 : 0.140962 

Total Learning Time : 73.37650108337402 

Total Inference Time : 15.20616865158081 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 11794
Target train pos examples: 283
Target train neg examples: 40479

Target test facts examples: 3221
Target test pos examples: 86
Target test neg examples: 10998

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 11.122818231582642
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.4551953486016177;  // std dev = 0.490, 474.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.14185106490048768;  // std dev = 9.86e-09, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.3585942695931814;  // std dev = 10.445, 444.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=251 */
%   | else return 0.33565183563379525;  // std dev = 3.827, 59.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.12544463852839216;  // std dev = 0.000, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
%   | | | else return -0.12544463852839144;  // std dev = 0.000, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then return 0.31721267389901536;  // std dev = 0.492, 481.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=283 */
%   else if ( recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.11231637819360654;  // std dev = 0.000, 341.000 (wgt'ed) examples reached here.  /* #neg=341 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(D, C) )
%   | then return 0.5609202699798513;  // std dev = 5.019, 279.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=251 */
%   | else return -0.18052844670683385;  // std dev = 5.218, 204.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(G, A) )
%   | | | then return -0.10159632948783663;  // std dev = 0.000, 305.000 (wgt'ed) examples reached here.  /* #neg=305 */
%   | | | else return -0.10159632948783631;  // std dev = 7.45e-09, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1657985481579235;  // std dev = 8.790, 438.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=251 */
%   | else return 0.19010758502868824;  // std dev = 4.060, 66.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=32 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09269127618926042;  // std dev = 1.09e-08, 338.000 (wgt'ed) examples reached here.  /* #neg=338 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.14606689386712163;  // std dev = 9.359, 480.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=280 */
%   | | else return 0.16441779857669084;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(G, A) )
%   | | then return -0.08518475138839678;  // std dev = 1.10e-07, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
%   | | else return -0.08518475138839687;  // std dev = 1.49e-08, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.09940600322881493;  // std dev = 0.433, 494.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( interaction(F, A) )
%   | | then return -0.07877675473109143;  // std dev = 2.98e-08, 324.000 (wgt'ed) examples reached here.  /* #neg=324 */
%   | | else return -0.0787767547310918;  // std dev = 0.000, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.0660244929249809;  // std dev = 9.645, 498.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=280 */
%   | else return 0.0318447630606553;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.07324622576333718;  // std dev = 2.08e-09, 353.000 (wgt'ed) examples reached here.  /* #neg=353 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.08092451695615582;  // std dev = 9.314, 475.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.06842697784420324;  // std dev = 0.000, 363.000 (wgt'ed) examples reached here.  /* #neg=363 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.06080852387762016;  // std dev = 9.317, 476.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=283 */
%   | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( recursion_proteinclass(E, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.06419184008202575;  // std dev = 8.64e-09, 350.000 (wgt'ed) examples reached here.  /* #neg=350 */
Inference time using transfer learning 2.6926631927490234
Parameter learned model CLL:-0.273335 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)'}, {'true': [0.49, 191, 283], 'false,true': [0.0, 0, 0], 'false,false': [9.86e-09, 327, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [10.445, 193, 251], 'true,false': [3.827, 27, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 327, 0], 'false,false,false,false': [0.0, 34, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'false': 'recursion_proteinclass(D, B)', 'false,false': 'recursion_proteinclass(E, B)'}, {'true': [0.492, 198, 283], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 341, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A), interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)', 'false,false,false': 'interaction(G, A)'}, {'true,true': [5.019, 28, 251], 'true,false': [5.218, 172, 32], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 305, 0], 'false,false,false,false': [7.45e-09, 44, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, A)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [8.79, 187, 251], 'true,false': [4.06, 34, 32], 'false,true': [0.0, 0, 0], 'false,false': [1.09e-08, 338, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, E)', 'true,true': 'recursion_proteinclass(E, B)', 'false': 'recursion_proteinclass(F, B)', 'false,false': 'interaction(G, A)'}, {'true,true,true': [9.359, 200, 280], 'true,true,false': [1.224, 3, 3], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [1.1e-07, 319, 0], 'false,false,false': [1.49e-08, 37, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'interaction(F, A)'}, {'true,true': [0.433, 211, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [2.98e-08, 324, 0], 'false,false,false': [0.0, 47, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'interaction(D, C)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.645, 218, 280], 'true,false': [1.309, 4, 3], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [2.08e-09, 353, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)', 'false,false': 'recursion_proteinclass(F, B)'}, {'true,true': [9.314, 192, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false': [0.0, 363, 0]}]
['proteinclass(A, B)', {'': 'recursion_proteinclass(C, B)', 'true': 'recursion_proteinclass(D, B)', 'false': 'recursion_proteinclass(E, B)'}, {'true,true': [9.317, 193, 283], 'true,false': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [8.64e-09, 350, 0]}]
{'': [0.24058199362638055, 9.778111042570187e-17], 'false': [nan, 9.778111042570187e-17]}
{'': [0.24607820275168432, -1.2055607358810565e-16], 'true': [0.24573390958526373, 0.24820453892559663], 'false': [nan, -1.2055607358810565e-16], 'false,false': [nan, -1.2055607358810565e-16], 'false,false,false': [-1.1407796216331884e-16, -1.6326809185664067e-17]}
{'': [0.24218824849198756, -4.6883318341942096e-17], 'false': [nan, -4.6883318341942096e-17], 'false,false': [nan, -4.6883318341942096e-17]}
{'': [0.24264014483893726, 3.053908606418769e-17], 'true': [0.09028660988424846, 0.13345075073849302], 'false': [nan, 3.053908606418769e-17], 'false,false': [nan, 3.053908606418769e-17], 'false,false,false': [-5.0961056868039973e-17, 1.261617073437678e-18]}
{'': [0.18606852833283855, 1.1956247957501685e-16], 'true': [0.1763922278085357, 0.2497704315886127], 'false': [nan, 1.1956247957501685e-16]}
{'': [0.18331538655423313, 3.991813122247754e-17], 'true': [0.18331538655423313, nan], 'true,true': [0.18247957553722596, 0.2498476696889699], 'false': [nan, 3.991813122247754e-17], 'false,false': [3.758748798103978e-17, 6.00120553851436e-18]}
{'': [0.18769209643829024, 3.830419060701349e-17], 'true': [0.18769209643829024, nan], 'false': [nan, 3.830419060701349e-17], 'false,false': [2.741291418827547e-18, 0.0]}
{'': [0.1876086799735946, 4.403150805878808e-18], 'true': [0.18678890381684768, 0.24477783766744582], 'false': [nan, 4.403150805878808e-18], 'false,false': [nan, 4.403150805878808e-18]}
{'': [0.18264540431208998, -1.0092936587501423e-16], 'true': [0.18264540431208998, nan], 'false': [nan, -1.0092936587501423e-16], 'false,false': [nan, -1.0092936587501423e-16]}
{'': [0.18234823712768386, 7.422633936065333e-17], 'true': [0.18234823712768386, nan], 'false': [nan, 7.422633936065333e-17]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
1;false;interaction(G, A).;true;true
2;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
3;false;interaction(G, A).;true;true
4;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
5;false;interaction(G, A).;true;true
6;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
6;false;interaction(F, A).;true;true
7;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
8;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true
9;;proteinclass(A, B) :- recursion_proteinclass(C, B).;true;true


Refining candidate
***************************
Model training time 46.361292600631714
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.858148935099512;  // std dev = 1.33e-07, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7470378239884004;  // std dev = 1.886, 36.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=32 */
%   | | | else return 0.3651911886206364;  // std dev = 7.297, 213.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=108 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.6081489350995117;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.501006077956656;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=81 */
%   else return -0.14185106490048746;  // std dev = 2.56e-07, 368.000 (wgt'ed) examples reached here.  /* #neg=368 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7767465929388412;  // std dev = 0.225, 50.000 (wgt'ed) examples reached here.  /* #pos=50 */
%   | | else return -0.20925879262513755;  // std dev = 0.091, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.7228366458326693;  // std dev = 0.103, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.45564690705972205;  // std dev = 0.777, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.6392261469351984;  // std dev = 1.318, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.31025643391266966;  // std dev = 9.440, 361.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=187 */
%   else if ( interaction(J, A) )
%   | then return -0.1254446385283921;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
%   | else return -0.12544463852839144;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.550720591338068;  // std dev = 0.023, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6379047704083465;  // std dev = 0.138, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( complex(D, G) )
%   | | | then return 0.11188282524530935;  // std dev = 0.935, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.5844421945822171;  // std dev = 0.177, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, A) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.2035400918082465;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.24950012071966765;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4702789191198462;  // std dev = 1.294, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.2691921604423069;  // std dev = 9.870, 420.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=225 */
%   else return -0.1123163781936065;  // std dev = 0.000, 348.000 (wgt'ed) examples reached here.  /* #neg=348 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.49145430460638384;  // std dev = 4.070, 164.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=143 */
%   | | | else return -0.29799442875562476;  // std dev = 0.412, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.2802018123397956;  // std dev = 0.162, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.31472534337632374;  // std dev = 0.058, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4098043695538563;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4875882885569319;  // std dev = 0.227, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.11099763061675204;  // std dev = 3.710, 64.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=28 */
%   | | | else return 0.25596636315807286;  // std dev = 6.065, 160.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=93 */
%   else return -0.1015963294878364;  // std dev = 3.23e-09, 340.000 (wgt'ed) examples reached here.  /* #neg=340 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), location(D, G) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.3132788690982844;  // std dev = 0.104, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.05919470044095899;  // std dev = 3.921, 106.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=43 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.11104719263352972;  // std dev = 1.330, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.3050482791552222;  // std dev = 1.616, 17.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=12 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return 0.1354412501375438;  // std dev = 1.991, 25.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=14 */
%   | | | else return 0.27402039728966043;  // std dev = 5.253, 155.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=101 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.36363175779823304;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.17553858486699644;  // std dev = 5.334, 136.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=78 */
%   else return -0.09269127618926075;  // std dev = 8.54e-09, 383.000 (wgt'ed) examples reached here.  /* #neg=383 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.1490343108801527;  // std dev = 0.950, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.0553758929420896;  // std dev = 2.496, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.40972258660200794;  // std dev = 0.275, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.1116806070210083;  // std dev = 2.698, 51.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=27 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.400847146648247;  // std dev = 0.180, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.29283292302688896;  // std dev = 0.313, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( location(A, K) )
%   | | | then return 0.15373811614173608;  // std dev = 7.860, 323.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=195 */
%   | | | else return 0.33755946767899847;  // std dev = 1.500, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   else return -0.08518475138839678;  // std dev = 6.32e-09, 402.000 (wgt'ed) examples reached here.  /* #neg=402 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.05298896010915084;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.22814651499700403;  // std dev = 0.118, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else if ( complex(A, H), complex(D, I) )
%   | | | then return 0.31185881051140796;  // std dev = 0.168, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.360739777101831;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.37808074201673314;  // std dev = 0.819, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.02197182701011864;  // std dev = 4.652, 117.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=46 */
%   | | else if ( interaction(M, A), phenotype(A, N) )
%   | | | then return 0.06488971767865007;  // std dev = 4.569, 145.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=73 */
%   | | | else return 0.14266061273655564;  // std dev = 6.056, 180.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=113 */
%   else return -0.07877675473109141;  // std dev = 6.38e-09, 382.000 (wgt'ed) examples reached here.  /* #neg=382 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then if ( phenotype(A, E), phenotype(D, E) )
%   | | | then return 0.17830849457763528;  // std dev = 0.028, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.20871232890438257;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(D, F), complex(A, G) )
%   | | | then return -0.18698873814114617;  // std dev = 1.023, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.028262073093557598;  // std dev = 3.628, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
%   | else if ( enzyme(A, H), interaction(A, I) )
%   | | then if ( complex(A, J), complex(I, K) )
%   | | | then return 0.07423299578010828;  // std dev = 1.816, 29.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | else return 0.33770979387125155;  // std dev = 1.373, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.10026181713931416;  // std dev = 6.771, 251.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=152 */
%   | | | else return 0.1652720945621286;  // std dev = 3.069, 55.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=37 */
%   else return -0.07324622576333714;  // std dev = 3.36e-09, 328.000 (wgt'ed) examples reached here.  /* #neg=328 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.1781868269870961;  // std dev = 0.186, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.14149373579099409;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(D, G), complex(A, G) )
%   | | | then return 0.20498118945513014;  // std dev = 0.099, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.24738275091176354;  // std dev = 0.126, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.14899621083339426;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.11932338156813191;  // std dev = 4.029, 90.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=53 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return -0.0059547318834401375;  // std dev = 5.258, 159.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=81 */
%   | | | else return 0.05027933292837532;  // std dev = 5.928, 187.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=105 */
%   else return -0.0684269778442032;  // std dev = 0.000, 346.000 (wgt'ed) examples reached here.  /* #neg=346 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(F, G) )
%   | | | then return 0.3175933528492786;  // std dev = 0.848, 38.000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else return -0.09595073957065352;  // std dev = 1.557, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | else if ( interaction(A, H), complex(H, E) )
%   | | | then return -0.13484501063493176;  // std dev = 2.323, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.07165423144910231;  // std dev = 5.680, 183.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=107 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.12090964544832329;  // std dev = 2.970, 70.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=49 */
%   | | | else return -0.36807558909742;  // std dev = 0.219, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.18859078545133326;  // std dev = 0.183, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.06226385894830209;  // std dev = 5.156, 120.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=57 */
%   else return -0.06419184008202562;  // std dev = 9.59e-09, 388.000 (wgt'ed) examples reached here.  /* #neg=388 */
Inference time using transfer learning 3.9534521102905273
Refined model CLL: -0.249071


******************************************
Best model found
******************************************
Results 

CLL : -0.241031 

AUC ROC : 0.974277 

AUC PR : 0.351753 

Precision : 0.061164 

Recall : 0.965116 

F1 : 0.115038 

Total Learning Time : 46.361292600631714 

Total Inference Time : 40.350136041641235 

Total revision time: 125.99408793449402
Best scored revision CLL: -0.249071


Results 

CLL : -0.241031 

AUC ROC : 0.974277 

AUC PR : 0.351753 

Precision : 0.061164 

Recall : 0.965116 

F1 : 0.115038 

Total Learning Time : 126.0116651058197 

Total Inference Time : 40.350136041641235 

