Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.922
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16090122867749257;  // std dev = 4.797, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
%   | | | else return 0.19777157660894512;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6325953523627581;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6562390022552966;  // std dev = 3.509, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16489803119366833;  // std dev = 0.030, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22146625412972654;  // std dev = 1.374, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.17305206306823115;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4836322711186419;  // std dev = 0.934, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5856593938143208;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11383650623180018;  // std dev = 4.280, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6187239651954379;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14590004646061822;  // std dev = 2.11e-08, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15658959196703456;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06011696657510468;  // std dev = 1.369, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4521654191659909;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4753800397384544;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6957246653247754;  // std dev = 0.119, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.05220579858568312;  // std dev = 5.061, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5404764034557377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.17356240832068942;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.8058032443552423;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3628824205260422;  // std dev = 0.024, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.006491742980519799;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.08705920198350606;  // std dev = 5.315, 212.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4065573163266063;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10335164898917899;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0033606260316646646;  // std dev = 1.191, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2951515368366934;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.345547714378157;  // std dev = 0.178, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.288736613095545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.31329210085984427;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.02845771785972839;  // std dev = 2.165, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06538106855134715;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.060352713330599723;  // std dev = 2.925, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.04251460272277788;  // std dev = 4.275, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2554351162029992;  // std dev = 0.180, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.250102605434003;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5746159145560209;  // std dev = 0.423, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.19229103519957724;  // std dev = 0.592, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.34457889926119784;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05340728839944746;  // std dev = 4.024, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18114375614923603;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.11877821342579518;  // std dev = 0.895, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40249064528158834;  // std dev = 2.651, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15611239554579676;  // std dev = 0.232, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2061700853320183;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0033473189397289654;  // std dev = 1.431, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17472450090864344;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1888071007057068;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.021692860526622806;  // std dev = 1.252, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.28954805768879555;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.009622079601379507;  // std dev = 1.620, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24861284979052523;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022764135209460603;  // std dev = 3.417, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | | | else return 0.01305907353653976;  // std dev = 1.387, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13985652113701613;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2298918761494858;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1616261675744878;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.013752969209336514;  // std dev = 2.368, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2051346636481276;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.046317882828603045;  // std dev = 3.357, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.017553184602344833;  // std dev = 1.393, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.008', 'seconds']
Parameter learned model CLL:-0.201591 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.797, 76, 33], 'false,false,true,false': [4.876, 70, 36], 'false,false,false,true': [1.279, 9, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.963, 1, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.509, 15, 69], 'false,false,true,false': [0.03, 143, 0], 'false,false,false,true': [1.374, 5, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.934, 1, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.28, 77, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [2.11e-08, 73, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.369, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.023, 0, 5], 'true,false': [0.048, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.119, 0, 14], 'false,true,false': [5.061, 158, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.37, 5, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.024, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.143, 2, 4], 'false,true': [5.315, 141, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.191, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.064, 0, 4], 'true,true,false': [0.178, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.165, 43, 12], 'false,false,true': [1.083, 2, 3], 'false,false,false,true': [2.925, 45, 20], 'false,false,false,false': [4.275, 104, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.18, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.423, 0, 33], 'true,false': [0.592, 95, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [4.024, 94, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.01, 0, 3], 'true,false': [0.895, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.651, 8, 71], 'false,true,false': [0.232, 156, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.431, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.095, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.032, 0, 3], 'false,true,true': [1.252, 31, 11], 'false,true,false,true': [0.777, 3, 1], 'false,true,false,false': [1.62, 43, 17], 'false,false,true': [0.018, 0, 3], 'false,false,false,true': [3.417, 98, 40], 'false,false,false,false': [1.387, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.017, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 3], 'false,true': [2.368, 64, 29], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.357, 77, 40], 'false,false,false,false': [1.393, 9, 4]}]
{'': [0.07638888888888877, 0.2183280666475152], 'false': [1.4802973661668753e-16, 0.21514487281033123], 'false,false': [0.21793401838831816, 0.17283950617283936], 'false,false,true': [0.21109334231125462, 0.22427910288358963], 'false,false,false': [0.14876033057851243, 0.20408163265306126], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.07892516503635094, 0.2140834104649549], 'false': [0.0, 0.21263312103415818], 'false,false': [0.21143458980537588, 0.23278545324832453], 'false,false,false': [0.23610741018416592, 0.2222222222222222], 'false,false,true': [0.1466080103311597, 6.404988688890922e-06], 'true': [0.0, 0.09273917823925917], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07471160068110065, 0.16750883840992797], 'false': [0.1657018199482543, 0.19072713610214215], 'false,false': [0.22222222222222224, 0.17026318617728167], 'false,false,true': [nan, 0.22222222222222224], 'false,false,false': [0.17026318617728167, nan], 'false,true': [0.1650096868471759, 0.16626086064652582], 'false,true,false': [0.08790523245905997, 6.083413833562501e-18], 'true': [0.09695961304951083, 0.00016041325170087126]}
{'': [0.00039480423720245577, 0.1410024241403596], 'false': [0.13568046792213695, 0.23116145777835828], 'false,false': [0.0, 0.24804505118337675], 'false,false,false': [0.2346364076091133, 0.0], 'false,true': [0.0010107860638691893, 0.11913248862228171], 'false,true,true': [nan, 0.0010107860638691893], 'true': [0.00010903639128660992, 0.000387981105015663], 'false,false,true': [nan, 0.0]}
{'': [0.132087281387165, 0.13784256863849334], 'false': [0.13324358525867114, 0.20734821063971534], 'false,false': [0.0, 0.2141921764819503], 'false,false,false': [0.2222222222222222, 0.20269472413064263], 'true': [7.896977178010824e-05, 0.21770465478797338], 'true,true': [7.896977178010824e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0038708455119610507, 0.12226051121951421], 'false': [0.08520305280689297, 0.13062918070433624], 'false,false': [0.23454888595245982, 0.12785575284752637], 'false,false,false': [0.13166802426221402, 0.12604831367669486], 'true': [0.004608451193644429, 0.00015074299483566755], 'true,true': [0.0010119385326770591, 0.0063568725620668735], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11220853068165558, 0.12001481276263082], 'false': [0.00015238593541646214, 0.1208417837193425], 'false,false': [0.1208417837193425, nan], 'true': [0.023963227934231345, 0.0036838875078628644], 'true,true': [0.00294350036381867, 0.005423284301036715], 'true,true,false': [nan, 0.005423284301036392], 'true,true,true': [0.0032352653391913067, 0.0]}
{'': [0.06754640073926345, 0.10215114627781215], 'false': [0.09975771455149535, 0.1392316161775087], 'false,false': [0.0, 0.14625022877257463], 'false,false,false': [0.14625022877257463, nan], 'false,true': [0.08892783737104866, 0.0003444106632233951], 'false,true,true': [nan, 0.0889278373710485], 'true': [3.640254789676056e-05, 0.08907736823992167], 'false,false,true': [0.0, nan]}
{'': [0.0009632531447931949, 0.07276273785817082], 'false': [0.04842758254460042, 0.08874413917712083], 'false,false': [0.00010490875619338184, 0.08949852268860568], 'false,false,false': [0.08462469276924606, 0.13745504747405604], 'false,true': [0.03732194454541713, 0.05565258465219605], 'false,true,false': [0.15082176130736066, 0.043714049684796176], 'true': [0.001138556354290169, 0.00035154547070848546], 'true,false': [nan, 0.00035154547070848546]}
{'': [0.0007669588322323936, 0.08455157700156313], 'false': [0.06029616437667201, 0.0999888627182239], 'false,false': [8.015300368321987e-05, 0.10170471808709863], 'false,false,false': [0.09633493890919036, 0.1492880636106303], 'true': [0.0009207973960371034, 0.00027630811652832693], 'true,true': [0.0009207973960371034, nan], 'true,true,true': [3.904423715757531e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;complex(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 15.509
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( recursion_proteinclass(H, B), interaction(H, G) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.03209496733951208;  // std dev = 2.831, 82.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1368374596896763;  // std dev = 3.502, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.20128619000147172;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36707196223672167;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.808741135785635;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.808741135785635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7073060858186615;  // std dev = 2.778, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.154823254462293;  // std dev = 0.162, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.004868250810968184;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.21879345327849073;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.48142865537230123;  // std dev = 0.282, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.4129483207400666;  // std dev = 0.905, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.046126363859993344;  // std dev = 3.152, 82.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=19 */
%   | | | else return 0.08526334564333587;  // std dev = 2.661, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6901641993617215;  // std dev = 0.987, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14277873723567855;  // std dev = 0.076, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return 0.18098346937826812;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06676682368364181;  // std dev = 1.108, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else return 0.009130317944507771;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.5176396358476802;  // std dev = 0.159, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4728259460309179;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.5611301049495611;  // std dev = 0.017, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.06429329506272612;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.0499069098245207;  // std dev = 2.109, 77.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=8 */
%   | | | else return 0.07190694752365387;  // std dev = 4.515, 167.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.6379189383509716;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.14578932281575366;  // std dev = 1.426, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.03804037760616475;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32968351028493725;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.4543092679458831;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.5447916481721535;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B), interaction(G, H) )
%   | | | then return 0.3705697619283205;  // std dev = 1.015, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.03500266992622082;  // std dev = 4.860, 223.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=54 */
%   | | else return 0.13192595126627044;  // std dev = 0.330, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.48211367723626397;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.07762236992534732;  // std dev = 0.930, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.21637920976797836;  // std dev = 1.325, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2793997196377224;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.16774185980650919;  // std dev = 0.819, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4527545628979275;  // std dev = 0.278, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.30904191212159765;  // std dev = 0.056, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), location(H, I) )
%   | then if ( complex(A, J), interaction(K, A) )
%   | | then return 0.09585199549565879;  // std dev = 0.333, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else return -0.022537998695077163;  // std dev = 0.297, 93.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=19 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.3617664662928705;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.16239964369480858;  // std dev = 2.195, 34.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | else return 0.07878787274321945;  // std dev = 3.277, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2744203590267139;  // std dev = 0.320, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2967689893375335;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), interaction(A, F) )
%   | | | then return 0.18757151261975327;  // std dev = 1.298, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.5934139307936581;  // std dev = 0.874, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else return -0.1490236601147504;  // std dev = 0.043, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.28306639498945113;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return 0.14269225772111835;  // std dev = 1.934, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.02243934487767555;  // std dev = 3.299, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   | | else return 0.2204134835035696;  // std dev = 0.706, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17772392392092842;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.08297521155860473;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2035084667759405;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.24941385827279883;  // std dev = 0.497, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.4281406319410667;  // std dev = 2.210, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | else return -0.1520468268105142;  // std dev = 0.034, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23875807482204725;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.05812744876029639;  // std dev = 0.807, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.01743345392057572;  // std dev = 1.296, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19051633172036037;  // std dev = 0.078, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.12076454239582395;  // std dev = 0.921, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, G) )
%   | | | then return -0.07910689519799785;  // std dev = 0.906, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.010246421135615353;  // std dev = 0.805, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.07436758083118637;  // std dev = 1.169, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.016057513515831907;  // std dev = 1.100, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19533855222486965;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.03317305299355435;  // std dev = 1.945, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.09762195994860506;  // std dev = 2.649, 72.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=30 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16382099482180384;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.227064832259569;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.3218019287624443;  // std dev = 0.251, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.13920223576368085;  // std dev = 0.460, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( location(A, J) )
%   | | | then return 0.05004928051796768;  // std dev = 1.445, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return -0.02529781447561807;  // std dev = 0.569, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.0841143675607989;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07553280050731916;  // std dev = 2.225, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.01842386121142053;  // std dev = 2.704, 75.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=27 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.708', 'seconds']
Refined model CLL: -0.195705


******************************************
Best model found
******************************************
Results 

CLL : -0.187384 

AUC ROC : 0.986957 

AUC PR : 0.333454 

Precision : 0.195333 

Recall : 0.801418 

F1 : 0.314107 

Total Learning Time : 15.509 

Total Inference Time : 28.147438764572144 

Total revision time: 64.40153003311157
Best scored revision CLL: -0.195705


Results 

CLL : -0.187384 

AUC ROC : 0.986957 

AUC PR : 0.333454 

Precision : 0.195333 

Recall : 0.801418 

F1 : 0.314107 

Total Learning Time : 64.54280996894836 

Total Inference Time : 28.147438764572144 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.007
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0764587942544409;  // std dev = 4.923, 142.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=31 */
%   | | | else return 0.18903128804068797;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.4645643791124923;  // std dev = 1.894, 18.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.723387113577731;  // std dev = 2.974, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.1588955121178065;  // std dev = 0.104, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.017187364230767867;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10290164994505359;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6190970458147723;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.4859631074008894;  // std dev = 0.989, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10750399049367364;  // std dev = 4.221, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5573359682220741;  // std dev = 2.606, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.1455592148107082;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.3013104622325601;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.12301194914047557;  // std dev = 1.543, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4748690783553486;  // std dev = 0.150, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.37550420499183745;  // std dev = 0.955, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.45425207883168733;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6010691572932576;  // std dev = 1.241, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.028110030541776798;  // std dev = 5.132, 250.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5248210066407486;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.01752765925884002;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.17459513531795762;  // std dev = 1.078, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3437954796163976;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.40736743766084793;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05894991081362096;  // std dev = 5.852, 262.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3952120837815294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.014627675823213384;  // std dev = 1.752, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.253256222823287;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.19744704808043761;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3170998520976018;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.010118629009503352;  // std dev = 2.798, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3129654331803203;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.03516280114482775;  // std dev = 2.322, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return 0.06784311790740255;  // std dev = 4.665, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28426426627961277;  // std dev = 0.321, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24273053442627257;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.009050570519546497;  // std dev = 0.816, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5399384725311639;  // std dev = 0.927, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1745421726800068;  // std dev = 0.580, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.08676172432322166;  // std dev = 0.912, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05745076257838108;  // std dev = 4.478, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.15561261435445728;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05914132454532897;  // std dev = 1.426, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3543898100321156;  // std dev = 3.390, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.1475801229408339;  // std dev = 0.287, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20092906705984181;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.06456460447914965;  // std dev = 1.413, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.11247375994217368;  // std dev = 0.748, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.049629146124865;  // std dev = 0.505, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22043593459233463;  // std dev = 0.106, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.018940260822789528;  // std dev = 1.683, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.14400460054945996;  // std dev = 0.980, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.047089483096928994;  // std dev = 1.468, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2265307670236952;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027111322284726333;  // std dev = 3.858, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
%   | | | else return 0.004695654523233473;  // std dev = 1.453, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.05849318295006603;  // std dev = 1.193, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.1907664623796684;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.40550881243206727;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19853843324748008;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.05152158736571435;  // std dev = 2.816, 135.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1893474666598952;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05523172568103755;  // std dev = 3.702, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
%   | | | else return -4.924731926891536E-4;  // std dev = 1.499, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.512', 'seconds']
Parameter learned model CLL:-0.196981 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.923, 111, 31], 'false,false,true,false': [5.487, 91, 45], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.894, 5, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.974, 10, 76], 'false,false,true,false': [0.104, 191, 0], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.125, 0, 11], 'true,false': [0.989, 1, 6], 'false,true,true': [4.221, 84, 34], 'false,true,false,true': [2.606, 8, 48], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [1.543, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.15, 0, 10], 'true,false': [0.955, 1, 7], 'false,true,true,true': [0.091, 0, 3], 'false,true,true,false': [1.241, 2, 21], 'false,true,false': [5.132, 192, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.078, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.11, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.052, 0, 10], 'false,true': [5.852, 180, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.752, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.06, 0, 5], 'true,true,false': [1.262, 2, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.016, 0, 2], 'false,true': [2.798, 60, 19], 'false,false,true': [0.044, 0, 8], 'false,false,false,true': [2.322, 53, 11], 'false,false,false,false': [4.665, 114, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.321, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.816, 1, 3], 'true,true,false,false': [0.927, 1, 33], 'true,false': [0.58, 84, 0], 'false,true': [0.912, 1, 5], 'false,false,true': [4.478, 106, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.426, 3, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.39, 15, 82], 'false,true,false': [0.287, 177, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.413, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.748, 1, 9], 'true,false,true': [0.505, 1, 2], 'true,false,false': [0.106, 0, 5], 'false,true,true': [1.683, 35, 13], 'false,true,false,true': [0.98, 1, 8], 'false,true,false,false': [1.468, 53, 11], 'false,false,true': [0.034, 0, 5], 'false,false,false,true': [3.858, 118, 47], 'false,false,false,false': [1.453, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [1.193, 2, 7], 'true,true,true,false': [0.114, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.079, 0, 3], 'false,true': [2.816, 103, 32], 'false,false,true': [0.03, 0, 5], 'false,false,false,true': [3.702, 92, 47], 'false,false,false,false': [1.499, 10, 4]}]
{'': [0.09418282548476423, 0.2083506872136615], 'false': [-2.5376526277146434e-16, 0.20104651021622322], 'false,false': [0.19864396252781982, 0.2469135802469134], 'false,false,false': [0.2469135802469134, nan], 'false,false,true': [0.17065066455068553, 0.22139922145328833], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.17384842692728097, 0.20154306132107763], 'false': [-6.344131569286608e-17, 0.19774306491412835], 'false,false': [0.1986100419504611, 0.17993079584775082], 'false,false,true': [0.1028372303660697, 5.6538082020979696e-05], 'false,false,false': [0.15999999999999998, 0.2040816326530612], 'true': [0.0, 0.19921023103563407], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.059410688966212516, 0.16087100199247079], 'false': [0.1582237195926783, 0.2096993608737979], 'false,false': [0.2096993608737979, nan], 'false,false,true': [0.25, 0.1984411077188335], 'false,true': [0.15098522809537018, 0.16396245653834246], 'false,true,false': [0.12129402010819122, -5.738231363231147e-17], 'true': [0.001413217184679299, 0.13971784535358595]}
{'': [0.05432043290445211, 0.13135644356388115], 'false': [0.12764419030860008, 0.1991507722074245], 'false,false': [0.0, 0.19980386250046975], 'false,false,false': [0.17283950617283952, 0.23248029472447324], 'false,true': [0.06179952206114432, 0.10536857019772303], 'false,true,true': [0.002770269558107996, 0.06701184502570194], 'true': [0.0022473934831368945, 0.11392652214857055], 'false,false,true': [nan, 0.0]}
{'': [0.0018448848695533126, 0.13307036716863802], 'false': [0.13070625429642896, 0.16142202889528906], 'false,false': [0.0, 0.16151949372529217], 'false,false,false': [0.16151949372529217, nan], 'true': [0.0017173754881495418, 0.00027003808669832095], 'true,true': [0.0017173754881495418, nan], 'false,false,true': [nan, 0.0]}
{'': [0.09030587936024774, 0.11508787110099424], 'false': [0.0990980463258508, 0.11958688988548351], 'false,false': [0.0002387115390973943, 0.1212289225404878], 'false,false,false': [0.08425957984026468, 0.13267767591771407], 'true': [0.10041682642344525, 0.00013174084659124674], 'true,true': [0.0007231987588483535, 0.14475877923007294], 'true,false': [nan, 0.00013174084659124674]}
{'': [0.11025148531256093, 0.13136860082486912], 'false': [0.13851646523276115, 0.13105587232319169], 'false,false': [0.13105587232319169, nan], 'true': [0.057396765863781916, 0.004001984287296294], 'true,true': [0.006539850026020783, 0.06667374504375796], 'true,true,false': [0.16662508757872235, 0.025247188358288267], 'true,true,true': [0.0068680243476513985, 0.0]}
{'': [0.10318687372751703, 0.10244818646768669], 'true': [0.0, 0.12712225020790893], 'false': [0.09986887288194456, 0.15488494804364938], 'false,false': [0.0, 0.16636162191998521], 'false,false,false': [0.16636162191998521, nan], 'false,true': [0.11848393805116142, 0.0004649880224022958], 'false,true,true': [nan, 0.1184839380511616], 'false,false,true': [0.0, nan]}
{'': [0.05351265460378437, 0.0772471760725259], 'false': [0.05153173139886205, 0.09298102396398218], 'false,false': [0.000230566731016002, 0.09446238165476956], 'false,false,false': [0.09020442072364174, 0.14083936158274807], 'true': [0.056010149324856484, 0.05036593828061298], 'false,true': [0.058997522887263974, 0.046614361397667614], 'true,false': [0.08500484424840744, 0.002231914266390994], 'false,true,false': [0.10676046761754802, 0.033654225631841055]}
{'': [0.10214105142254117, 0.08474363258154749], 'true': [0.11547973437295682, 0.002103118491015433], 'true,true': [0.11070598954277763, 0.0], 'true,true,true': [0.15822244780748707, 0.0021530796717705073], 'false': [0.05872600600868193, 0.10179103441712962], 'false,false': [0.00017763087750523597, 0.1044984196654508], 'false,false,false': [0.09857644608859424, 0.16047410567905365], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 13.884
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.14185106490048766;  // std dev = 7.88e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.15751199242435313;  // std dev = 5.738, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return 0.3581489350995123;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6671736386912429;  // std dev = 0.240, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6519248039136004;  // std dev = 3.325, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15053216780352466;  // std dev = 0.267, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.43783406196450586;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0751946922071284;  // std dev = 1.200, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.47183084219011207;  // std dev = 0.314, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.07205350103633072;  // std dev = 3.996, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | | | else return 0.1855387885228384;  // std dev = 0.918, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5855185990837013;  // std dev = 2.074, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.13173082098704475;  // std dev = 0.189, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K) )
%   | | | then return -0.05145519017449525;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08658284799658156;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.25348027141815443;  // std dev = 0.921, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.09583609068943955;  // std dev = 0.563, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.47055915652039204;  // std dev = 0.053, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2286484566728305;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.044920566487364505;  // std dev = 3.674, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
%   | | | else return 0.08997046976998821;  // std dev = 4.103, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.07714121326955843;  // std dev = 0.428, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.005980707135287449;  // std dev = 1.544, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5315932438093928;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.06427713638844895;  // std dev = 1.497, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return -0.14544034852135684;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3564212581099019;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, E), complex(A, F) )
%   | | then return -0.23040015793964144;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.28528936103689934;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), complex(A, I) )
%   | | then return 0.001272987891782556;  // std dev = 0.263, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
%   | | else if ( location(A, J), phenotype(A, K) )
%   | | | then return 0.09750123695495509;  // std dev = 4.051, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | | | else return 0.05466395475618145;  // std dev = 3.120, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4000992264125952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return -0.009436585824369417;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.4308313216014915;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25900151562880125;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.022532644422720276;  // std dev = 1.274, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.5318976259623969;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.006832296050604536;  // std dev = 0.799, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.018161207638557386;  // std dev = 0.311, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.34390724612026385;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.003975571045735056;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, J), location(A, K) )
%   | | | then return -0.019947855579293423;  // std dev = 1.819, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.05838847681971556;  // std dev = 4.531, 161.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.3177246410431864;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.5014364690449273;  // std dev = 0.202, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.15226934842390868;  // std dev = 0.058, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( phenotype(A, E), complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4223433325200882;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.1652372459939725;  // std dev = 0.084, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5878167889176764;  // std dev = 0.408, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18616769301780323;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.0807412525188977;  // std dev = 3.292, 87.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=31 */
%   | | | else return -0.013917089658091826;  // std dev = 1.406, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16068235603752562;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E), complex(A, F) )
%   | | then return -0.009030178811496176;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.24987641759101234;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I) )
%   | | | then return 0.3234256856766747;  // std dev = 3.195, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return 0.4888419284670946;  // std dev = 0.245, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14556750105137228;  // std dev = 0.046, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.24674595681695155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.05635273513187506;  // std dev = 1.291, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.16007817761411286;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.10188388419005961;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2086407886112387;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.2778642751530206;  // std dev = 1.083, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23633294473282343;  // std dev = 0.113, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(A, J), phenotype(J, K) )
%   | | then return 0.012408247552632926;  // std dev = 0.220, 108.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=30 */
%   | | else return -0.09344424896497026;  // std dev = 0.156, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.22169280936764707;  // std dev = 0.169, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.12992944425671152;  // std dev = 1.087, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.015466592160525003;  // std dev = 3.397, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14174072988169303;  // std dev = 0.221, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1805506913258487;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.28290456692434346;  // std dev = 1.292, 19.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | else return -0.037566806332327354;  // std dev = 1.385, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else return -0.060608973463013395;  // std dev = 0.174, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.013365645481279146;  // std dev = 0.962, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.0321285478700954;  // std dev = 3.424, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   | | | else return -0.09482559342652193;  // std dev = 1.328, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '57.120', 'seconds']
Refined model CLL: -0.187946


******************************************
Best model found
******************************************
Results 

CLL : -0.167339 

AUC ROC : 0.992624 

AUC PR : 0.434331 

Precision : 0.332842 

Recall : 0.85283 

F1 : 0.478814 

Total Learning Time : 13.884 

Total Inference Time : 253.53845024108887 

Total revision time: 290.8461479816437
Best scored revision CLL: -0.187946


Results 

CLL : -0.167339 

AUC ROC : 0.992624 

AUC PR : 0.434331 

Precision : 0.332842 

Recall : 0.85283 

F1 : 0.478814 

Total Learning Time : 290.9874279174805 

Total Inference Time : 253.53845024108887 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.438
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.1680080900290887;  // std dev = 5.511, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1504566274072046;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8362281629091359;  // std dev = 0.004, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16392557687575787;  // std dev = 0.007, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1527388542399594;  // std dev = 1.853, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.13294697343351697;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.046233159273544835;  // std dev = 2.063, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6779258153536699;  // std dev = 0.256, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1453716016335979;  // std dev = 0.301, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17800583225671565;  // std dev = 3.531, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3233356297135106;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43567588068333074;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4284109620733224;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38804245328703313;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5785710925931385;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05993759868400706;  // std dev = 4.136, 182.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.08248641584169003;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5110911354282741;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1199601274235531;  // std dev = 1.823, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.14940092227451574;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31739779945584107;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33910308352646973;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05905817936796365;  // std dev = 4.137, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4376998530391385;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3853930310980318;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0735476509265514;  // std dev = 3.629, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -5.245854114931392E-4;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26097987047923793;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36018899673642224;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.34731105703614196;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2537336374356963;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3158951342336894;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0765656543622355;  // std dev = 0.942, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26675133263886014;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.02599259167623977;  // std dev = 2.755, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.06239692638997633;  // std dev = 4.678, 149.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2322038025833042;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.07958379841470671;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.2576755082790143;  // std dev = 0.676, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5902367507869415;  // std dev = 1.381, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.19480624202482655;  // std dev = 0.786, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.05145918186337608;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04727069735406433;  // std dev = 3.328, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17611964319722911;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10987392719615667;  // std dev = 0.903, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42161166059320093;  // std dev = 1.211, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1424713714199486;  // std dev = 0.238, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2648045730610163;  // std dev = 0.018, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.03206262070559856;  // std dev = 3.132, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1638755943695211;  // std dev = 0.071, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1332689571033272;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17971762913387432;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.073785120346445;  // std dev = 0.397, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18922188559940478;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03350872642242488;  // std dev = 1.391, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19123087768116068;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.015361751931835853;  // std dev = 2.775, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.032443450631923505;  // std dev = 3.095, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1316599623962854;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.056687296946933835;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.1756379479462156;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1400262190687544;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.030536987120191386;  // std dev = 1.546, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1633906528461234;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.050694983072004;  // std dev = 2.567, 101.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=36 */
%   | | | else return 0.022148835876733417;  // std dev = 3.098, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.480', 'seconds']
Parameter learned model CLL:-0.178255 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.332, 17, 8], 'false,false,true,false': [5.511, 98, 44], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.004, 0, 52], 'false,false,true,false': [0.007, 140, 0], 'false,false,false,true': [1.853, 11, 5], 'false,false,false,false': [3.254, 36, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.063, 27, 8], 'false,true,false,true': [0.256, 0, 48], 'false,true,false,false': [0.301, 100, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.531, 35, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.039, 0, 9], 'true,false': [0.03, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.12, 0, 3], 'false,true,false': [4.136, 130, 52], 'false,false,true,true': [0.707, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.823, 10, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 9], 'false,true': [4.137, 131, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.629, 43, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.021, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.018, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.055, 0, 3], 'false,true': [0.942, 19, 3], 'false,false,true': [0.019, 0, 6], 'false,false,false,true': [2.755, 67, 23], 'false,false,false,false': [4.678, 103, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.11, 0, 12], 'true,true,true,false': [0.807, 1, 2], 'true,true,false,true': [0.676, 1, 1], 'true,true,false,false': [1.381, 2, 36], 'true,false': [0.786, 111, 0], 'false,true': [0.909, 1, 5], 'false,false,true': [3.328, 84, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.014, 0, 5], 'true,false': [0.903, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.211, 1, 56], 'false,true,false': [0.238, 150, 0], 'false,false,true,true': [0.018, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.132, 45, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.071, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.03, 0, 4], 'false,true,true': [0.397, 9, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.391, 54, 14], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [2.775, 86, 36], 'false,false,false,false': [3.095, 44, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.01, 0, 5], 'true,true,true,false': [0.806, 1, 3], 'true,true,false,true': [0.769, 1, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.025, 0, 4], 'false,true': [1.546, 61, 17], 'false,false,true': [0.013, 0, 5], 'false,false,false,true': [2.567, 65, 36], 'false,false,false,false': [3.098, 45, 20]}]
{'': [-2.5376526277146434e-16, 0.21842770302575013], 'false': [-1.4802973661668753e-16, 0.2120080436656147], 'false,false': [0.21442145648822178, 0.2058391094307914], 'false,false,true': [0.2176000000000001, 0.21384645903590652], 'false,false,false': [0.20686390532544327, 0.18750000000000003], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.20432633330987057], 'false': [7.401486830834377e-17, 0.20078401228178264], 'false,false': [0.1975437085024853, 0.20936988633411172], 'false,false,false': [0.21467351932325063, 0.2076124567474052], 'false,false,true': [2.5226626462973365e-07, 3.7679582037978116e-07], 'false,true': [0.0, 0.0], 'true': [0.0, -9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [0.06222222222222206, 0.16598142402005983], 'false': [0.14511869345747225, 0.22666342728996763], 'false,false': [0.22516764981840334, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.0, 0.2267187316267443], 'false,true': [0.12161247362742297, 0.1495899648639239], 'false,true,false': [0.0013655273895117521, 0.0009046234512396856], 'true': [-3.700743415417188e-17, 0.0987654320987654]}
{'': [0.00018176455932038062, 0.12990142864947418], 'false': [0.09688349161248619, 0.2285232375484584], 'false,false': [0.24496317986036598, 0.22762344399101825], 'false,false,true': [0.25, 0.0], 'false,false,false': [0.22147327874975872, 0.22959183673469383], 'false,true': [0.010429410524206595, 0.09401278008721552], 'false,true,true': [0.0, 0.004830590099983212], 'true': [0.00016493450753141126, 0.00017812926813394193]}
{'': [0.00014329834365140698, 0.1227874693059244], 'false': [0.09154435685661569, 0.2084105375399497], 'false,false': [0.0006840009053946661, 0.21125533865696217], 'false,false,false': [0.2124554141087707, 0.1875], 'false,false,true': [0.0, 0.0], 'true': [5.949013926143109e-07, 5.432112072847575e-05], 'true,true': [5.949013926143109e-07, nan]}
{'': [0.0017820127773711114, 0.1163371066565732], 'false': [0.04036240434682392, 0.1217540576035202], 'false,false': [5.893127339443952e-05, 0.12364463791483066], 'false,false,false': [0.08432262410792041, 0.146897132126704], 'true': [0.001268878720502726, 0.0017844873406608816], 'true,false': [0.002272104030231481, 0.0009992902802359316], 'true,false,true': [0.00016584133092405196, 0.0], 'true,true': [7.429411686544578e-05, 0.0]}
{'': [0.13160299024991864, 0.09444118793622616], 'true': [0.11244952582463809, 0.005570041568351731], 'true,true': [0.05973346558249778, 0.09325074548454362], 'false': [0.13776367111677898, 0.0922742283770802], 'true,true,false': [0.2285445143890782, 0.05018226085164094], 'false,false': [0.0922742283770802, nan], 'true,true,true': [0.001012652682945046, 0.21684751067183275]}
{'': [0.05531344760050782, 0.0898275746567259], 'false': [0.07084414881763751, 0.14796108006219774], 'false,false': [0.00016613527877454293, 0.15089163723114632], 'false,false,false': [0.15089163723114632, nan], 'false,true': [0.02571033281718094, 0.0003775543601612223], 'true': [4.0831414079683935e-05, 0.08148692406422361], 'false,true,true': [nan, 0.02571033281718094], 'false,false,true': [0.00016613527877454293, nan]}
{'': [0.0005612478665623921, 0.07319592194925048], 'false': [0.027613582944242532, 0.09127205747086417], 'false,false': [4.2706895366767525e-05, 0.09296799005516466], 'false,false,false': [0.06310458251341627, 0.14970372519496325], 'false,true': [0.01576581058071071, 0.02903420918770029], 'false,true,false': [0.0, 0.028470758644418354], 'true': [0.0005647757606111901, 0.0005272981029986578], 'true,false': [0.0, 0.00022762680206805247]}
{'': [0.09365415007838254, 0.07620294015758958], 'true': [0.11934495929578724, 0.000159681688944098], 'true,true': [0.08094165765192333, 0.19706116311691121], 'true,true,false': [0.19706116311691121, nan], 'true,true,true': [2.068819417986867e-05, 0.16238470830626828], 'false': [0.03063928701681366, 0.09528596220751503], 'false,false': [3.3242709034853045e-05, 0.09770634710617851], 'false,false,false': [0.06523386805913922, 0.14766778176427572]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.981
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( interaction(A, H), enzyme(I, J) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.1043027812533585;  // std dev = 3.473, 65.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.15987307303054538;  // std dev = 4.944, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.2331489350995121;  // std dev = 3.623, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.820731407771018;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15654873211869044;  // std dev = 0.135, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.21863858704419495;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.07177868366255259;  // std dev = 2.883, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12078362085250056;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.1510422174034633;  // std dev = 1.917, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6653863196941343;  // std dev = 1.008, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13912962048205305;  // std dev = 0.068, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.15102248501166754;  // std dev = 3.575, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.3168383889349562;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43308126689404197;  // std dev = 0.013, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.3910242981044222;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.592626098205096;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.024351105684790833;  // std dev = 1.916, 63.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=9 */
%   | | | else return 0.05132598343874019;  // std dev = 3.814, 161.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5178312268313722;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.04784028126080763;  // std dev = 1.907, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.23780066400402425;  // std dev = 2.860, 33.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33135446142291497;  // std dev = 0.012, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( complex(A, F), enzyme(A, G) )
%   | | | then return 0.03378249814270033;  // std dev = 1.322, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.09468467910225278;  // std dev = 0.587, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.02053012973485484;  // std dev = 2.689, 91.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=21 */
%   | | | else return 0.10313657997541728;  // std dev = 2.907, 81.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=29 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return -0.345954819506517;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.390198940486422;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return 0.012132073860755783;  // std dev = 3.631, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else return 0.25142919130685626;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2743590522315671;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3251440164034753;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1071223579047651;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.04583424342298761;  // std dev = 0.478, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.07109121491674796;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.03236208523105379;  // std dev = 0.454, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.26807118286676684;  // std dev = 0.020, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.31421240286527324;  // std dev = 1.271, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.04442607262889226;  // std dev = 5.210, 224.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5190630452753008;  // std dev = 0.205, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.18957077942426911;  // std dev = 0.072, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), enzyme(G, F) )
%   | | then if ( function(A, H), function(E, H) )
%   | | | then return -0.01901338210074251;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.031337483993190536;  // std dev = 0.592, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return 0.07681613978113581;  // std dev = 0.530, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( location(I, J) )
%   | | | then return -0.017637934587405042;  // std dev = 1.349, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return -0.11494945782923127;  // std dev = 0.368, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.03011385127410185;  // std dev = 2.024, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.05235020406693622;  // std dev = 2.237, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.13642310087565565;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18081521109231735;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.1955902134679397;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4463422130778641;  // std dev = 1.081, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.09703914763835737;  // std dev = 0.108, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.1607385613876973;  // std dev = 0.326, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1899472504650841;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.003946773387086917;  // std dev = 3.080, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | | else return 0.0675597619932061;  // std dev = 0.922, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1349924744235961;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.14406352984951848;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.07249494092724205;  // std dev = 0.079, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.0266875892676856;  // std dev = 0.355, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20253898046816277;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.04309192943301127;  // std dev = 1.193, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1882032010236061;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.06769396423375998;  // std dev = 2.051, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.019818063145179036;  // std dev = 3.622, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0997984284424716;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08909024847734404;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.11393612331111735;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.12963320428604413;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.029767365716763975;  // std dev = 0.158, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else return 0.025465285803030174;  // std dev = 0.184, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16112196438826826;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.006497386054209408;  // std dev = 2.724, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | | else return 0.017618924578838988;  // std dev = 3.142, 113.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.775', 'seconds']
Refined model CLL: -0.178455


******************************************
Best model found
******************************************
Results 

CLL : -0.198287 

AUC ROC : 0.982263 

AUC PR : 0.249028 

Precision : 0.134756 

Recall : 0.797834 

F1 : 0.230569 

Total Learning Time : 6.981 

Total Inference Time : 7.243592977523804 

Total revision time: 26.053264945983884
Best scored revision CLL: -0.178255


Results 

CLL : -0.198287 

AUC ROC : 0.982263 

AUC PR : 0.249028 

Precision : 0.134756 

Recall : 0.797834 

F1 : 0.230569 

Total Learning Time : 26.194544881820676 

Total Inference Time : 7.243592977523804 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.476
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.14282046794622713;  // std dev = 5.282, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8051887627598944;  // std dev = 1.392, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1563597373782276;  // std dev = 0.057, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.118420673794146;  // std dev = 1.901, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.14500846273210363;  // std dev = 2.206, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0329244295680157;  // std dev = 2.833, 69.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6066049813384502;  // std dev = 1.907, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | | else return -0.14359339066955779;  // std dev = 0.303, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6757564121844286;  // std dev = 0.190, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.11727093449116717;  // std dev = 2.468, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.15174974875563085;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3175135841583098;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5472221466995009;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31101875709901383;  // std dev = 1.300, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else return 0.05004452392696876;  // std dev = 4.417, 192.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.43760810723138166;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6236586763004037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.16318067287856;  // std dev = 1.791, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.057237703926821225;  // std dev = 2.241, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33056273230163785;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09010577728245442;  // std dev = 1.220, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06146098927645493;  // std dev = 4.516, 200.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.29090621477535317;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.062326875159137894;  // std dev = 0.891, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.13052424205378513;  // std dev = 2.398, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.009264506107883373;  // std dev = 1.521, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2629249507581607;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.314020677010505;  // std dev = 0.101, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23471198588437658;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30796832689947334;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.41865703918307084;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08725651713246524;  // std dev = 1.411, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15620450673557582;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06005018619823469;  // std dev = 2.263, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.07248254791487785;  // std dev = 4.541, 151.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24865385096793322;  // std dev = 0.195, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.27471069925635044;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.28319078157939775;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5656528965287985;  // std dev = 1.288, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.17882371371844116;  // std dev = 0.486, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2897059384643561;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0492843915603339;  // std dev = 3.431, 108.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16901224350083566;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.05197928327539113;  // std dev = 1.680, 15.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3961626113536023;  // std dev = 2.171, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.13752554432807332;  // std dev = 0.304, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.15560288237156583;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2588232833766617;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.006184515399289868;  // std dev = 2.500, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16492459885568111;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20131961905985962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06471135165844544;  // std dev = 0.800, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08796549746253358;  // std dev = 0.323, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.13746238969899216;  // std dev = 0.911, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.024934366942531733;  // std dev = 1.527, 83.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.243324360969152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026770365066799463;  // std dev = 3.016, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return -0.03414235270549029;  // std dev = 2.586, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1438725058237023;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14203815380719703;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.20344199638615712;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16777382123422369;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21043449718883941;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010200606384369272;  // std dev = 1.882, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.1986476768670354;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06484342193995282;  // std dev = 2.724, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.0438378519641055;  // std dev = 2.440, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.240', 'seconds']
Parameter learned model CLL:-0.176725 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.282, 98, 39], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.98e-08, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [1.392, 2, 52], 'false,false,true,false': [0.057, 143, 0], 'false,false,false,true': [1.901, 13, 5], 'false,false,false,false': [2.206, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.833, 55, 14], 'false,true,false,true': [1.907, 4, 42], 'false,true,false,false': [0.303, 90, 0], 'false,false,true,true': [0.19, 0, 3], 'false,false,true,false': [2.468, 21, 9], 'false,false,false,true': [1.414, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [0.949, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [1.3, 3, 6], 'false,true,false': [4.417, 143, 49], 'false,false,true,true': [0.069, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.791, 9, 5], 'false,false,false,false': [2.241, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.033, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.22, 2, 6], 'false,true': [4.516, 144, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.891, 1, 2], 'false,false,false,true': [2.398, 17, 9], 'false,false,false,false': [1.521, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.043, 0, 5], 'true,true,false': [0.101, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.086, 0, 3], 'true,false,false': [0.095, 0, 4], 'false,true': [1.411, 45, 5], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.263, 32, 13], 'false,false,false,false': [4.541, 104, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.195, 0, 13], 'true,true,true,false': [0.113, 0, 3], 'true,true,false,true': [0.016, 0, 3], 'true,true,false,false': [1.288, 2, 33], 'true,false': [0.486, 96, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.431, 77, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.68, 4, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.171, 5, 56], 'false,true,false': [0.304, 132, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.05, 0, 2], 'false,false,false,true': [2.5, 34, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.065, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.8, 1, 5], 'false,true,true': [0.323, 19, 1], 'false,true,false,true': [0.911, 2, 6], 'false,true,false,false': [1.527, 66, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [3.016, 69, 31], 'false,false,false,false': [2.586, 43, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.047, 0, 8], 'true,true,true,false': [0.034, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.004, 0, 2], 'true,false': [0.047, 0, 3], 'false,true': [1.882, 70, 24], 'false,false,true': [1.095, 2, 3], 'false,false,false,true': [2.724, 55, 31], 'false,false,false,false': [2.44, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.20383542200932284], 'false': [-2.5376526277146434e-16, 0.1945222320879734], 'false,false': [0.1930254286507925, 0.20118983234180587], 'false,false,false': [0.19834710743801665, 0.20999999999999988], 'false,false,true': [0.1657127991675333, 0.20363365123341734], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20054270424630838], 'false': [0.17283950617283964, 0.1961742620298436], 'false,false': [0.19381269720168812, 0.20695640370226567], 'false,false,false': [0.20066495200276163, 0.21156979755030508], 'false,false,true': [0.035858278200454875, 2.2876408280090345e-05], 'false,true': [0.0, 0.20408163265306128], 'false,true,false': [0.0, 0.24000000000000005], 'true': [0.0, 8.074349270001139e-17]}
{'': [-2.3684757858670006e-16, 0.15530070880263522], 'false': [0.14222662707781888, 0.2137504952117628], 'false,false': [0.21138220155631574, 0.22222567187356038], 'false,false,false': [0.22222567187356038, nan], 'false,false,true': [0.012085356671612221, 0.20295679251803428], 'false,true': [0.11629580241693581, 0.1533753740587118], 'false,true,false': [0.07902579233477564, 0.001018260511342681], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [0.05859375000000014, 0.1258777653422027], 'false': [0.10902725524153865, 0.20057127156817076], 'false,false': [0.009296140179937332, 0.20331647605963626], 'false,false,false': [0.22920421236397862, 0.1860606498373514], 'false,true': [0.17413373284064945, 0.10162668541673098], 'false,true,true': [0.0, 0.1879027212526235], 'true': [7.401486830834377e-17, 0.09000000000000011], 'false,false,true': [0.0024059388529370507, 0.0]}
{'': [0.10207777049019912, 0.12120204578106623], 'false': [0.10194969533516268, 0.20993765394546643], 'false,false': [0.20815484634711728, 0.21004027875031867], 'false,false,false': [0.22121661010243665, 0.1778850003383032], 'false,false,true': [0.0, 0.2644776665046434], 'true': [0.00012129992258843221, 0.18616845135206236], 'true,true': [0.00012129992258843221, nan]}
{'': [0.00572786544427116, 0.117592818380672], 'false': [0.03981229293335753, 0.13180052246697338], 'false,false': [0.1388888888888889, 0.13136089421761524], 'false,false,false': [0.11375569883338078, 0.1365719890785978], 'true': [0.0021250401693144877, 0.006733663237309534], 'true,false': [0.002874063716544556, 0.0022724018718404404], 'true,false,true': [0.0, 0.0024904620806626885], 'true,true': [0.000370211583038238, 0.003418021203990873]}
{'': [0.11404859099166845, 0.10754301786106366], 'true': [0.0533009190511982, 0.0024603338196498847], 'false': [0.0, 0.10896809363665926], 'false,false': [0.10896809363665926, nan], 'true,true': [0.0032685537944962956, 0.04948065742953132], 'true,true,false': [8.489453847124184e-05, 0.0474157763013386], 'true,true,true': [0.002920050810464374, 0.004227078926003464]}
{'': [0.1566093573836777, 0.09540417132590495], 'true': [0.0, 0.18809032533717332], 'false': [0.08646532047235662, 0.13050484608788918], 'false,false': [0.003210103809903414, 0.13589084904268925], 'false,false,false': [0.13589084904268925, nan], 'false,true': [0.07725222040182651, 0.000701097224605833], 'false,true,true': [nan, 0.07725222040182657], 'false,false,true': [0.0, 0.0012636719869708324]}
{'': [0.04045728029998029, 0.07330554992977495], 'false': [0.03204290429421253, 0.10180937671782826], 'false,false': [0.0, 0.10270284119737662], 'false,false,false': [0.09097307604121456, 0.12163590681559079], 'true': [0.00042825803104125094, 0.0938109320825542], 'true,false': [0.0, 0.10678011332644426], 'false,true': [0.00522302210623529, 0.036860538658979966], 'false,true,false': [0.10368201793184087, 0.028101434452494318]}
{'': [0.0011164542321598185, 0.082811542227486], 'false': [0.037687293988908806, 0.11375745345221171], 'false,false': [0.24, 0.10623035222700493], 'false,false,false': [0.08628170102388967, 0.14881879261988623], 'true': [0.0005609367736923101, 0.0007350507689466712], 'true,true': [0.0003407697550593447, 0.00028915728740221136], 'true,true,true': [0.0002804106915372355, 0.0005795141312914219], 'true,true,false': [0.0, 9.66302488031312e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 9.258
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.34386322081379805;  // std dev = 2.957, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | | else return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.21779805790652945;  // std dev = 5.124, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 1.49e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7727842140778068;  // std dev = 1.670, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15731588277735706;  // std dev = 0.257, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.0762292546907053;  // std dev = 1.911, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.18030505340441316;  // std dev = 2.114, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.03769478290863017;  // std dev = 1.531, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.15103624433490123;  // std dev = 2.102, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6590112327373595;  // std dev = 1.023, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14185182808644148;  // std dev = 0.146, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5957530524383111;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.06735727388953426;  // std dev = 2.254, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.3736247781332129;  // std dev = 1.449, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.18e-08, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.644146205112435;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5979549065586215;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.02084343194811679;  // std dev = 3.604, 149.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=33 */
%   | | | else return 0.08640073118370642;  // std dev = 2.130, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4384604365926218;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.030804785287444014;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.11553896371902148;  // std dev = 2.092, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.003068111012962554;  // std dev = 1.964, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3207118471601497;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1778547043030068;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5517291091220785;  // std dev = 0.289, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.13859259486018718;  // std dev = 0.168, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.06323712444272868;  // std dev = 1.147, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | | else return 0.05575642546231654;  // std dev = 3.157, 100.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3824986919603344;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.013590353284269682;  // std dev = 2.376, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return 0.28447125144821245;  // std dev = 1.388, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26078942359867485;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.12229247180239629;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.33702423488463623;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( enzyme(A, H), phenotype(F, I) )
%   | | then return 0.07690071087413633;  // std dev = 0.254, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else return -0.024318483301135212;  // std dev = 0.251, 79.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=16 */
%   | else if ( complex(A, J) )
%   | | then if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.10713093089853111;  // std dev = 1.155, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.21458256995643077;  // std dev = 1.643, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.0050581857053872414;  // std dev = 1.712, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.062312746303153;  // std dev = 2.954, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25972501782314006;  // std dev = 0.067, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2719839532010519;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.528966288168383;  // std dev = 1.117, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1672402566173774;  // std dev = 0.068, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26786037228402354;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), enzyme(H, I) )
%   | | | then return -0.009772922624054636;  // std dev = 1.309, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.07403467220727365;  // std dev = 0.655, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.006810646957649769;  // std dev = 1.035, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.07669191450330895;  // std dev = 2.278, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16914082601727531;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.11317528746428;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20545001526111342;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2124130742238738;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return 0.36864423302205873;  // std dev = 1.418, 49.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=47 */
%   | | else return -0.12755641026791972;  // std dev = 0.034, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.19145835955737847;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.021644506751763402;  // std dev = 1.515, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.06816854914898551;  // std dev = 1.859, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15846813080188757;  // std dev = 0.031, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.27841946191765343;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.05179645185559143;  // std dev = 0.826, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.05666558484221123;  // std dev = 0.130, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.00579249364998802;  // std dev = 1.202, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return -0.0992603740178849;  // std dev = 0.960, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.05214206281843775;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.10110725190425793;  // std dev = 1.837, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.04091523916859842;  // std dev = 2.736, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1536633857900474;  // std dev = 0.041, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.03159576380197457;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), enzyme(G, H) )
%   | | then if ( interaction(I, A), interaction(E, I) )
%   | | | then return -0.08948346587912737;  // std dev = 0.392, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return -0.013182065936190004;  // std dev = 1.663, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( enzyme(E, J) )
%   | | | then return 0.1461496955809761;  // std dev = 1.078, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return -0.010297462129624855;  // std dev = 1.761, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.21197910703088274;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.024951460158811375;  // std dev = 2.398, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
%   | | | else return 0.12374451306625343;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.095', 'seconds']
Refined model CLL: -0.177006


******************************************
Best model found
******************************************
Results 

CLL : -0.186533 

AUC ROC : 0.983233 

AUC PR : 0.239573 

Precision : 0.15273 

Recall : 0.780919 

F1 : 0.255491 

Total Learning Time : 9.258 

Total Inference Time : 8.983331203460693 

Total revision time: 30.76698497200012
Best scored revision CLL: -0.176725


Results 

CLL : -0.186533 

AUC ROC : 0.983233 

AUC PR : 0.239573 

Precision : 0.15273 

Recall : 0.780919 

F1 : 0.255491 

Total Learning Time : 30.908264907836912 

Total Inference Time : 8.983331203460693 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21325097591583891;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1806736857147525;  // std dev = 4.699, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
%   | | | else return 0.2087296503686553;  // std dev = 5.739, 140.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13358241313395353;  // std dev = 4.832, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.161430310759818;  // std dev = 5.765, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06116919692282849;  // std dev = 3.175, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.0987537777642904;  // std dev = 7.022, 225.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10882921269161577;  // std dev = 7.516, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0798021365048873;  // std dev = 7.567, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7277173711509429;  // std dev = 0.038, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2737412549568092;  // std dev = 0.052, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.012427928777162967;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.046810660676013374;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05346726250908749;  // std dev = 3.743, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.07068939584226644;  // std dev = 5.777, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029881444818755903;  // std dev = 6.999, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.008747752415454677;  // std dev = 7.054, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.876', 'seconds']
Parameter learned model CLL:-0.336889 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.699, 63, 34], 'false,false,false,false': [5.739, 87, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.832, 70, 35], 'false,false,false,false': [5.765, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.175, 36, 14], 'false,false,false,false': [7.022, 152, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.516, 162, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.567, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.038, 0, 35], 'true,false': [0.052, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.769, 49, 20], 'false,false,false,false': [4.631, 65, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.743, 65, 35], 'false,false,false,false': [5.777, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.999, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.054, 192, 87]}]
{'': [nan, 0.22900458142440744], 'false': [nan, 0.2290045814244073], 'false,false': [nan, 0.22900458142440744], 'false,false,false': [nan, 0.2290045814244073]}
{'': [nan, 0.232334561768946], 'false': [nan, 0.23233456176894596], 'false,false': [nan, 0.232334561768946], 'false,false,false': [0.22765437347220774, 0.23525510204081423]}
{'': [nan, 0.22741530980013785], 'false': [nan, 0.22741530980013785], 'false,false': [nan, 0.22741530980013713], 'false,false,false': [0.22236880399769157, 0.2307680332641032]}
{'': [nan, 0.21614563990943964], 'false': [nan, 0.21614563990943964], 'false,false': [nan, 0.21614563990943939], 'false,false,false': [0.2015999999999995, 0.21912116783975497]}
{'': [nan, 0.22687339576472257], 'false': [nan, 0.22687339576472257], 'false,false': [nan, 0.22687339576472346], 'false,false,false': [nan, 0.22687339576472346]}
{'': [nan, 0.22457117288077713], 'false': [nan, 0.22457117288077713], 'false,false': [nan, 0.2245711728807771], 'false,false,false': [nan, 0.2245711728807773]}
{'': [0.212374552725217, 0.21502326415932788], 'false': [nan, 0.21502326415932788], 'false,false': [nan, 0.21502326415932788], 'false,false,false': [0.20583910943079142, 0.221064937825487], 'true': [4.03454126878192e-05, 3.443544012626809e-05], 'true,true': [nan, 4.03454126878192e-05], 'true,true,false': [nan, 4.03454126878192e-05]}
{'': [nan, 0.19348707866387552], 'false': [nan, 0.19348707866387552], 'false,false': [nan, 0.1934870786638756], 'false,false,false': [0.1401335327363097, 0.23016156558901138]}
{'': [nan, 0.18767333787530993], 'false': [nan, 0.18767333787530993], 'false,false': [nan, 0.18767333787530993], 'false,false,false': [nan, 0.18767333787530993]}
{'': [nan, 0.17834452479056762], 'false': [nan, 0.17834452479056762], 'false,false': [nan, 0.1783445247905673], 'false,false,false': [nan, 0.1783445247905673]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 49.11
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.14185106490048766;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.04564893509951222;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.34751063722717196;  // std dev = 3.427, 47.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=23 */
%   | else if ( interaction(A, J), enzyme(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.048625125575702706;  // std dev = 1.799, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.31968739663797385;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.21663950113724814;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7352539180107099;  // std dev = 0.109, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(C, E), interaction(A, C) )
%   | | | then return 0.7774928536861758;  // std dev = 0.169, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.17327291207395362;  // std dev = 1.652, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14026541379772534;  // std dev = 0.091, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.15183664218119503;  // std dev = 5.728, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   else if ( phenotype(A, F) )
%   | then return 0.11421624626179254;  // std dev = 0.401, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4918511349838903;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.1699104024566093;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.018713540378577836;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(A, E), enzyme(A, F) )
%   | then return 0.17228355187367492;  // std dev = 0.416, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.10023945086230215;  // std dev = 0.410, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( location(H, I), interaction(J, H) )
%   | | then if ( phenotype(H, K), interaction(H, J) )
%   | | | then return 0.08514151382480706;  // std dev = 0.939, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.21959486118975116;  // std dev = 2.079, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return 0.4757348534334642;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, L), phenotype(L, M) )
%   | | then if ( complex(L, N), enzyme(L, P) )
%   | | | then return 0.08658724390711844;  // std dev = 1.245, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.3297014836421263;  // std dev = 1.582, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, Q) )
%   | | | then return 0.03514313545620277;  // std dev = 1.326, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.12593103361702812;  // std dev = 2.953, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.5513934362872733;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2420403065848812;  // std dev = 1.144, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1362844883525802;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(E, F) )
%   | | | then return 0.04983465379613395;  // std dev = 1.393, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.12767932427469186;  // std dev = 1.705, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4494119873764393;  // std dev = 0.723, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1250799508919456;  // std dev = 5.624, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.21242755520457848;  // std dev = 1.427, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.498136742428936;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( complex(C, E), location(A, D) )
%   | then return 0.03567784814027512;  // std dev = 0.386, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6867629446222403;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14371722950434132;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, I), phenotype(C, J) )
%   | | | then return 0.019764116801209663;  // std dev = 2.318, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.09740820659375074;  // std dev = 4.281, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   else if ( interaction(A, K), interaction(K, K) )
%   | then return 0.045888855982497416;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, L) )
%   | | then if ( interaction(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.634750407956505;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20012981500910274;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.3860165585641894;  // std dev = 0.846, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), interaction(E, A) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.4005450482500497;  // std dev = 0.086, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(C, E), phenotype(C, F) )
%   | | | then return 0.06376177767376921;  // std dev = 3.551, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
%   | | | else return -0.06381406186060372;  // std dev = 2.357, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | else if ( phenotype(A, G), complex(C, H) )
%   | | then if ( location(A, D), interaction(I, C) )
%   | | | then return 0.35246816758829524;  // std dev = 1.008, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.11076700228367249;  // std dev = 0.775, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(C, J), complex(A, J) )
%   | | | then return -0.09515546329016725;  // std dev = 0.790, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.08147583842848363;  // std dev = 4.313, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
%   else if ( interaction(K, A), phenotype(K, L) )
%   | then return -0.2795123005801728;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else return 0.06198983824179373;  // std dev = 0.367, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5436291547927149;  // std dev = 0.124, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.20077743885369242;  // std dev = 0.060, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(E, G) )
%   | | | then return 0.41881116797133894;  // std dev = 0.360, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5607903412026225;  // std dev = 0.338, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), interaction(F, H) )
%   | | | then return -0.12173662481481974;  // std dev = 1.273, 29.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=2 */
%   | | | else return 0.03109505238624661;  // std dev = 4.790, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.2215561220947011;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1957483849530983;  // std dev = 0.933, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.13559866455610875;  // std dev = 0.639, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then return 0.14710701976918772;  // std dev = 0.331, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, A) )
%   | | then return 0.19829361832328446;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.39600763021360874;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.4376246882552053;  // std dev = 0.111, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.17587167935519343;  // std dev = 0.051, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return -0.14077984518672573;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.031302401265669064;  // std dev = 1.016, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(A, J), enzyme(A, K) )
%   | | | then return 0.13817388860684396;  // std dev = 1.825, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.03956980103462251;  // std dev = 4.777, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19290121576954677;  // std dev = 0.152, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), complex(F, E) )
%   | | then if ( phenotype(D, G), phenotype(F, G) )
%   | | | then return 0.005713994618446846;  // std dev = 2.514, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return -0.1467596399625151;  // std dev = 1.398, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return -0.02829390434755215;  // std dev = 0.768, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.0837247517762871;  // std dev = 2.527, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4692876015997753;  // std dev = 1.248, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.21966177820071706;  // std dev = 0.240, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.04584914826458601;  // std dev = 1.159, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.08782641121540433;  // std dev = 3.133, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(D, D), complex(C, F) )
%   | | then return 0.033233389501263845;  // std dev = 0.314, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | else if ( interaction(A, G), recursion_proteinclass(D, B) )
%   | | | then return 0.2699154579215976;  // std dev = 0.316, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.046297541747538064;  // std dev = 4.015, 140.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=33 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then return -0.06188914655103526;  // std dev = 0.175, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.4456183311748554;  // std dev = 0.301, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.056232266951764566;  // std dev = 2.599, 36.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=13 */
%   else if ( interaction(J, A) )
%   | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then return 0.24316730972918688;  // std dev = 1.022, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return -0.3433449013456063;  // std dev = 0.056, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.016921775271872472;  // std dev = 0.212, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.840', 'seconds']
Refined model CLL: -0.26033


******************************************
Best model found
******************************************
Results 

CLL : -0.258278 

AUC ROC : 0.927338 

AUC PR : 0.367284 

Precision : 0.382586 

Recall : 0.514184 

F1 : 0.438729 

Total Learning Time : 49.11 

Total Inference Time : 25.18821406364441 

Total revision time: 82.08582505226136
Best scored revision CLL: -0.26033


Results 

CLL : -0.258278 

AUC ROC : 0.927338 

AUC PR : 0.367284 

Precision : 0.382586 

Recall : 0.514184 

F1 : 0.438729 

Total Learning Time : 82.15776785850525 

Total Inference Time : 25.18821406364441 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.437
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21069130798086866;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.11257010069755459;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.14329414904275095;  // std dev = 6.985, 227.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11899645800405025;  // std dev = 5.326, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | | | else return 0.17691905933225183;  // std dev = 6.322, 172.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.18248926435467097;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.10632283742596614;  // std dev = 7.902, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09818922147874765;  // std dev = 8.336, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09007455856816982;  // std dev = 8.273, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7347838303431822;  // std dev = 0.026, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2647116198405126;  // std dev = 0.036, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.04551902305389326;  // std dev = 3.797, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | | | else return 0.09123468894477686;  // std dev = 5.163, 115.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.039982574660073565;  // std dev = 4.150, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.029323396298697842;  // std dev = 6.562, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029299281730840048;  // std dev = 7.723, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05725860350801858;  // std dev = 7.491, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.699', 'seconds']
Parameter learned model CLL:-0.338703 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.867, 84, 33], 'false,false,false,false': [6.985, 156, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.326, 92, 41], 'false,false,false,false': [6.322, 109, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.712, 19, 12], 'false,false,false,false': [7.902, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.336, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.273, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 41], 'true,false': [0.036, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.797, 46, 21], 'false,false,false,false': [5.163, 73, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 84, 41], 'false,false,false,false': [6.562, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.723, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.491, 188, 104]}]
{'': [nan, 0.2282562482045412], 'false': [nan, 0.22825624820453955], 'false,false': [nan, 0.2282562482045412], 'false,false,false': [nan, 0.22825624820453955]}
{'': [nan, 0.2109248242293179], 'false': [nan, 0.2109248242293126], 'false,false': [nan, 0.2109248242293179], 'false,false,false': [0.20249835634451013, 0.21494692309185018]}
{'': [nan, 0.22485234009061886], 'false': [nan, 0.22485234009061886], 'false,false': [nan, 0.22485234009061514], 'false,false,false': [0.21326453794025557, 0.23234966337584737]}
{'': [nan, 0.22071411922678613], 'false': [nan, 0.22071411922678613], 'false,false': [nan, 0.22071411922678305], 'false,false,false': [0.2372528616024973, 0.21835413637673884]}
{'': [nan, 0.2220034790015079], 'false': [nan, 0.2220034790015079], 'false,false': [nan, 0.2220034790015053], 'false,false,false': [nan, 0.2220034790015053]}
{'': [nan, 0.22514529761400423], 'false': [nan, 0.22514529761400423], 'false,false': [nan, 0.22514529761400526], 'false,false,false': [nan, 0.225145297614005]}
{'': [0.2157142613656329, 0.22619372093355486], 'false': [nan, 0.22619372093355486], 'false,false': [nan, 0.22619372093355486], 'false,false,false': [0.21519269325016754, 0.23183364839319398], 'true': [1.637671047244733e-05, 1.4261438542795517e-05], 'true,true': [nan, 1.637671047244733e-05], 'true,true,false': [nan, 1.637671047244733e-05]}
{'': [nan, 0.18608663271106962], 'false': [nan, 0.18608663271106962], 'false,false': [nan, 0.18608663271106968], 'false,false,false': [0.1377909879927999, 0.21637925882414819]}
{'': [nan, 0.18408849691390064], 'false': [nan, 0.18408849691390017], 'false,false': [nan, 0.18408849691390017], 'false,false,false': [nan, 0.18408849691390017]}
{'': [nan, 0.1921993386116927], 'false': [nan, 0.1921993386116927], 'false,false': [nan, 0.19219933861169317], 'false,false,false': [nan, 0.19219933861169317]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.272
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7748156017661786;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1347446797803634;  // std dev = 3.067, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8068668838174602;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14185106490048766;  // std dev = 7.30e-08, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.17890365208064443;  // std dev = 3.398, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6991980250804319;  // std dev = 0.204, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.40264789310128285;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7297063270878137;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.16683007692376137;  // std dev = 0.245, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.11835051699435302;  // std dev = 3.836, 87.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=25 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7524726731215708;  // std dev = 0.093, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.02010623966103901;  // std dev = 2.300, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.24447681774291902;  // std dev = 3.481, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | else return 0.16256118936912867;  // std dev = 3.381, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.49382733728758976;  // std dev = 0.357, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | else return -0.02973627757742848;  // std dev = 0.305, 132.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=19 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(E, G), location(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.13245544996182618;  // std dev = 3.482, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.3171796915774216;  // std dev = 2.424, 25.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=13 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.6218275871959663;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -9.273525742799183E-4;  // std dev = 2.318, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8093591632473154;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19161551955799722;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.5009929133935196;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.46115214122751513;  // std dev = 0.117, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, E), interaction(E, A) )
%   | | then return 0.45411976502855056;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6584209251715112;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.5501893878276277;  // std dev = 2.363, 61.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=55 */
%   | | | else return -0.17493971546369436;  // std dev = 0.251, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.14876487529316904;  // std dev = 0.265, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then return 0.316449730735784;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.015725551329178775;  // std dev = 1.835, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.04721046237827862;  // std dev = 4.005, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( location(C, D), recursion_proteinclass(C, B) )
%   | then return 0.39102980743803006;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( phenotype(C, E), enzyme(C, F) )
%   | | then return 0.07576111629872585;  // std dev = 0.335, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | else return 0.010079431090973713;  // std dev = 0.347, 194.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=48 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( complex(A, H), phenotype(G, I) )
%   | | then return 0.15010963088881157;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.3636177406689212;  // std dev = 0.957, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return -0.013797449084954339;  // std dev = 0.388, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07547953342816241;  // std dev = 1.111, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07163747732215023;  // std dev = 0.623, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.24429263908510412;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( complex(C, E) )
%   | | then return 0.3019978700892177;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.02516981448579573;  // std dev = 0.448, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.28573447907977273;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5714280360571069;  // std dev = 0.238, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13219852630473158;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3820156545775865;  // std dev = 1.250, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.027856109505839142;  // std dev = 5.165, 206.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=53 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.03675133886346705;  // std dev = 1.242, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.06541028200610807;  // std dev = 1.862, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4359356859368608;  // std dev = 0.181, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.17112747780178458;  // std dev = 0.093, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( complex(E, F), phenotype(E, G) )
%   | | then if ( enzyme(E, H) )
%   | | | then return -0.19801835332079912;  // std dev = 0.760, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06716927143311921;  // std dev = 1.183, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else return -0.040784998882808364;  // std dev = 0.225, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( complex(J, K), phenotype(J, I) )
%   | | | then return 0.13015464846835714;  // std dev = 1.451, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.03370813895754233;  // std dev = 2.662, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.04301860243348132;  // std dev = 2.073, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.16229699496822123;  // std dev = 2.858, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2139253580803621;  // std dev = 0.147, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.09631071256816141;  // std dev = 1.370, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.13478107035034967;  // std dev = 0.548, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( complex(D, G), interaction(D, D) )
%   | | | then return -0.09213961334121315;  // std dev = 0.652, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.024875440573966286;  // std dev = 1.309, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.44494174825122024;  // std dev = 0.735, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.17044702774052517;  // std dev = 0.463, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09131823747282408;  // std dev = 4.271, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
%   | | | else return -0.04867074442178365;  // std dev = 1.767, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B), location(D, C) )
%   | then return 0.16789950490175576;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, E), interaction(D, E) )
%   | | then return -0.04186491011180058;  // std dev = 0.245, 107.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=25 */
%   | | else return 0.019713545768490385;  // std dev = 0.353, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.5427018257393496;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.3138236984577037;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), complex(A, J) )
%   | | | then return 0.030142498500293064;  // std dev = 0.550, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.08570053900841164;  // std dev = 1.499, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.17618767903342764;  // std dev = 0.661, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.0082084300731331;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, C) )
%   | then return 0.09842731370674358;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1650416820454448;  // std dev = 0.051, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.25007255785067817;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( recursion_proteinclass(F, B), interaction(A, E) )
%   | | | then return 0.24489626191128083;  // std dev = 1.155, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.018235755696372032;  // std dev = 4.835, 244.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=52 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2649149259820624;  // std dev = 0.518, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.11999227036596852;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, J), interaction(K, A) )
%   | | | then return 0.3459191383495317;  // std dev = 0.662, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.22326924218152389;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.646', 'seconds']
Refined model CLL: -0.219142


******************************************
Best model found
******************************************
Results 

CLL : -0.221251 

AUC ROC : 0.952058 

AUC PR : 0.28796 

Precision : 0.275304 

Recall : 0.513208 

F1 : 0.358366 

Total Learning Time : 33.272 

Total Inference Time : 31.60652995109558 

Total revision time: 73.547534116745
Best scored revision CLL: -0.219142


Results 

CLL : -0.221251 

AUC ROC : 0.952058 

AUC PR : 0.28796 

Precision : 0.275304 

Recall : 0.513208 

F1 : 0.358366 

Total Learning Time : 73.6194769229889 

Total Inference Time : 31.60652995109558 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.125
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17539031440985717;  // std dev = 7.926, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16021620583804808;  // std dev = 5.065, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | | | else return 0.13880066756857729;  // std dev = 6.133, 178.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12792636570340327;  // std dev = 5.493, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.17004256776579146;  // std dev = 5.562, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10769783295887855;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.11637286775523362;  // std dev = 6.769, 208.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09059597727522177;  // std dev = 7.909, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09894186341907057;  // std dev = 7.766, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7398160947400949;  // std dev = 0.008, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.25996739132285607;  // std dev = 0.010, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1530221475184227;  // std dev = 2.839, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.09858331457855073;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06213778585960612;  // std dev = 4.223, 126.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=44 */
%   | | | else return 0.041668446862091355;  // std dev = 5.660, 144.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03049132044904385;  // std dev = 7.101, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043575655870647656;  // std dev = 6.970, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.658', 'seconds']
Parameter learned model CLL:-0.332536 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.926, 198, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.065, 79, 38], 'false,false,false,false': [6.133, 124, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.493, 96, 44], 'false,false,false,false': [5.562, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.052, 52, 24], 'false,false,false,false': [6.769, 140, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.909, 196, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.766, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.008, 0, 44], 'true,false': [0.01, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.839, 19, 14], 'false,false,false,false': [4.644, 59, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.223, 82, 44], 'false,false,false,false': [5.66, 96, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.101, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.97, 173, 92]}]
{'': [nan, 0.21659928656361593], 'false': [nan, 0.21659928656361568], 'false,false': [nan, 0.21659928656361593], 'false,false,false': [nan, 0.21659928656361568]}
{'': [nan, 0.2146049985636313], 'false': [nan, 0.2146049985636308], 'false,false': [nan, 0.2146049985636313], 'false,false,false': [0.21930016801811636, 0.21133695240499917]}
{'': [nan, 0.2226622110522825], 'false': [nan, 0.2226622110522825], 'false,false': [nan, 0.22266221105228173], 'false,false,false': [0.21553664006008064, 0.22914867962064056]}
{'': [nan, 0.21916190650855846], 'false': [nan, 0.21916190650855846], 'false,false': [nan, 0.21916190650855877], 'false,false,false': [0.2160664819944598, 0.2202727880133106]}
{'': [nan, 0.21718816829810192], 'false': [nan, 0.21718816829810192], 'false,false': [nan, 0.21718816829810125], 'false,false,false': [nan, 0.21718816829810125]}
{'': [nan, 0.22587829466105], 'false': [nan, 0.22587829466105], 'false,false': [nan, 0.2258782946610507], 'false,false,false': [nan, 0.22587829466104994]}
{'': [0.23689487514341304, 0.23573557963690753], 'true': [1.4902914972384194e-06, 1.4916702708970117e-06], 'false': [nan, 0.23573557963690753], 'false,false': [nan, 0.23573557963690753], 'false,false,false': [0.24426078971533496, 0.23193432766793917], 'true,true': [nan, 1.4902914972384194e-06], 'true,true,false': [nan, 1.4902914972384194e-06]}
{'': [nan, 0.1848161025085985], 'false': [nan, 0.1848161025085985], 'false,false': [nan, 0.18481610250859767], 'false,false,false': [0.14153161677969864, 0.22249449706318655]}
{'': [nan, 0.1794515863727414], 'false': [nan, 0.17945158637274103], 'false,false': [nan, 0.17945158637274103], 'false,false,false': [nan, 0.17945158637274103]}
{'': [nan, 0.1833089769850324], 'false': [nan, 0.1833089769850324], 'false,false': [nan, 0.1833089769850331], 'false,false,false': [nan, 0.1833089769850331]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.897
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.35814893509951234;  // std dev = 1.732, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else if ( interaction(I, A), interaction(A, J) )
%   | | | then return 0.24945328292559932;  // std dev = 2.341, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.1455740848001101;  // std dev = 5.848, 167.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, C), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(E, D) )
%   | | | then return -0.1371336494627989;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.10615008568530661;  // std dev = 1.393, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( location(C, G), location(A, G) )
%   | | | then return 0.22803726170399233;  // std dev = 3.198, 43.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=17 */
%   | | | else return 0.11448832866838607;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7744762391631522;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.01588910305977566;  // std dev = 0.352, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.08297011283994794;  // std dev = 4.136, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | | | else return 0.16356109161042226;  // std dev = 3.333, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(C, E), enzyme(A, F) )
%   | then if ( complex(D, G), phenotype(A, H) )
%   | | then return 0.5185009633145167;  // std dev = 0.757, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, I) )
%   | | | then return 0.30633800243029713;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08768354641804531;  // std dev = 1.440, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return 0.08808617539940178;  // std dev = 0.418, 170.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=48 */
%   else if ( enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.8092899976332092;  // std dev = 0.139, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.18317224293467882;  // std dev = 0.099, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( phenotype(A, L), interaction(M, A) )
%   | | then return 0.47949862928121195;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, N) )
%   | | | then return 0.2737033745394394;  // std dev = 2.804, 32.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=15 */
%   | | | else return 0.1252698093253372;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5679608361443533;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.6387822715389668;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(C, F), complex(A, F) )
%   | | | then return 0.020002684933019703;  // std dev = 2.242, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.1272052717133544;  // std dev = 5.304, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.558433461043236;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5479966099313255;  // std dev = 1.191, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.21781684006515445;  // std dev = 0.285, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.034493256349716256;  // std dev = 2.418, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.17156363145135475;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3976879581449501;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.06534662784072479;  // std dev = 0.234, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.4721011161821078;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, F), interaction(F, E) )
%   | | | then return 0.09038854897931485;  // std dev = 3.084, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.001597420697157528;  // std dev = 3.056, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(H, A), complex(H, G) )
%   | | | then return 0.140239767851071;  // std dev = 1.375, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.03576120453376343;  // std dev = 3.056, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.054406686886800004;  // std dev = 2.755, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | | else return 0.19955186811977133;  // std dev = 2.592, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), interaction(F, E) )
%   | | then if ( phenotype(F, C) )
%   | | | then return 0.3075740845017471;  // std dev = 0.126, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.45490256183515204;  // std dev = 0.291, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.727705901440985;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.21536593990144468;  // std dev = 0.349, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.35215800245392026;  // std dev = 0.062, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.031162878333060747;  // std dev = 1.641, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.08196579334497592;  // std dev = 3.659, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.18614747365216483;  // std dev = 3.448, 51.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=23 */
%   | | | else return 0.0692633803649723;  // std dev = 2.015, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49324310184660963;  // std dev = 0.269, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.19457329355325137;  // std dev = 0.445, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( phenotype(F, G) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.03769355229270497;  // std dev = 0.762, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07673608371773633;  // std dev = 0.533, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.5538160306410566;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19945749460530848;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.34269909726949405;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return -0.0663450323374954;  // std dev = 1.615, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.03044143588669443;  // std dev = 4.625, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.1502699793718935;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, C), complex(C, E) )
%   | | then return 0.004461642019835048;  // std dev = 0.291, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( enzyme(A, D) )
%   | | | then return -0.15826607017162628;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.05844711211418862;  // std dev = 1.724, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   else if ( enzyme(A, F), complex(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4518954333090189;  // std dev = 0.121, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1686236975502718;  // std dev = 0.189, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3487708173905835;  // std dev = 3.515, 83.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=58 */
%   | | | else return -0.2322550095324071;  // std dev = 0.514, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0.14761695451832918;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), complex(A, F) )
%   | | then if ( interaction(D, E) )
%   | | | then return 0.257310423022823;  // std dev = 0.411, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.14013704977305377;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.4057277235355137;  // std dev = 0.144, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | else return -0.16775517010513477;  // std dev = 0.060, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.19841651361849164;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), enzyme(J, I) )
%   | | | then return -0.1186597628957747;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.03376707268618523;  // std dev = 1.873, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.1113413189160456;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.042431189769393515;  // std dev = 3.730, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2891604626086403;  // std dev = 1.029, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return 0.542442921566534;  // std dev = 0.960, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.26576510133972014;  // std dev = 0.714, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.17756555691673404;  // std dev = 2.036, 33.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(I, A), complex(I, H) )
%   | | | then return -0.1145117583383967;  // std dev = 0.296, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.15331200646219378;  // std dev = 0.187, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else return -0.2117464262902923;  // std dev = 0.344, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(A, A) )
%   | then return -0.039683118633417634;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.0922033300484486;  // std dev = 0.235, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '39.793', 'seconds']
Refined model CLL: -0.188927


******************************************
Best model found
******************************************
Results 

CLL : -0.212703 

AUC ROC : 0.987633 

AUC PR : 0.351868 

Precision : 0.289581 

Recall : 0.772563 

F1 : 0.42126 

Total Learning Time : 28.897 

Total Inference Time : 22.37465214729309 

Total revision time: 58.83974139404297
Best scored revision CLL: -0.188927


Results 

CLL : -0.212703 

AUC ROC : 0.987633 

AUC PR : 0.351868 

Precision : 0.289581 

Recall : 0.772563 

F1 : 0.42126 

Total Learning Time : 58.911684200286864 

Total Inference Time : 22.37465214729309 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.169
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17432540568774807;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1466873507564497;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.16890957297867384;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14944626597802166;  // std dev = 4.308, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.1532683052765323;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06349196968691763;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.11785814032755688;  // std dev = 7.181, 233.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13909889150058738;  // std dev = 7.358, 232.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05899426663837541;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.734131164676504;  // std dev = 0.037, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2651970475923177;  // std dev = 0.055, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07842921896858683;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.07373556719236919;  // std dev = 5.054, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.041003090482853305;  // std dev = 3.419, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.010971653196542601;  // std dev = 6.389, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01985603821806358;  // std dev = 7.221, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02930916602493168;  // std dev = 7.131, 267.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.243', 'seconds']
Parameter learned model CLL:-0.330784 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.392, 62, 28], 'false,false,false,false': [6.218, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.308, 55, 28], 'false,false,false,false': [6.182, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.558, 24, 9], 'false,false,false,false': [7.181, 156, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.358, 146, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.037, 0, 28], 'true,false': [0.055, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [5.054, 74, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.419, 57, 28], 'false,false,false,false': [6.389, 138, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.221, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.131, 181, 86]}]
{'': [nan, 0.21620891003460282], 'false': [nan, 0.2162089100346027], 'false,false': [nan, 0.21620891003460282], 'false,false,false': [nan, 0.2162089100346027]}
{'': [nan, 0.2196395775941214], 'false': [nan, 0.21963957759412203], 'false,false': [nan, 0.2196395775941214], 'false,false,false': [0.21432098765432175, 0.22222222222222016]}
{'': [nan, 0.2244078004312304], 'false': [nan, 0.2244078004312304], 'false,false': [nan, 0.22440780043122968], 'false,false,false': [0.2235658985343117, 0.22481405430878154]}
{'': [nan, 0.21880459263726248], 'false': [nan, 0.21880459263726248], 'false,false': [nan, 0.2188045926372632], 'false,false,false': [0.1983471074380163, 0.22133532253555877]}
{'': [nan, 0.2333369589408327], 'false': [nan, 0.2333369589408327], 'false,false': [nan, 0.23333695894083248], 'false,false,false': [nan, 0.23333695894083248]}
{'': [nan, 0.21621738428243747], 'false': [nan, 0.21621738428243747], 'false,false': [nan, 0.21621738428243825], 'false,false,false': [nan, 0.21621738428243803]}
{'': [0.21670098900058193, 0.22605358117654104], 'false': [nan, 0.22605358117654104], 'false,false': [nan, 0.22605358117654104], 'false,false,false': [0.22611570247933876, 0.2260161328216763], 'true': [4.809894633752064e-05, 5.121053249602288e-05], 'true,true': [nan, 4.809894633752064e-05], 'true,true,false': [nan, 4.809894633752064e-05]}
{'': [nan, 0.18706675312457793], 'false': [nan, 0.18706675312457793], 'false,false': [nan, 0.18706675312457824], 'false,false,false': [0.13749659571528125, 0.20829120240456472]}
{'': [nan, 0.18755442742999545], 'false': [nan, 0.18755442742999565], 'false,false': [nan, 0.18755442742999565], 'false,false,false': [nan, 0.18755442742999565]}
{'': [nan, 0.19046119868065092], 'false': [nan, 0.19046119868065092], 'false,false': [nan, 0.19046119868065114], 'false,false,false': [nan, 0.19046119868065114]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.622
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(D, A) )
%   | | then if ( phenotype(A, E), phenotype(D, E) )
%   | | | then return 0.05259337954395681;  // std dev = 2.375, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.1663250357284423;  // std dev = 5.822, 159.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=49 */
%   | | else if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.24524570929306072;  // std dev = 2.712, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7716825508758841;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, D) )
%   | | then return -0.13437370678759253;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return 0.2018107899157592;  // std dev = 0.474, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( interaction(H, F), complex(H, G) )
%   | | then return 0.013143038526846413;  // std dev = 0.381, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8171392772781193;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16332754970844768;  // std dev = 7.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.42222769815152983;  // std dev = 1.105, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.08664660442388081;  // std dev = 2.420, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.16310792913508057;  // std dev = 4.380, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.557391421301315;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.7589476494954315;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then return 0.6454645650495869;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.29785047709647433;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, A), interaction(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.11875461474668632;  // std dev = 0.041, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.045580064405316555;  // std dev = 1.481, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.17918856939717068;  // std dev = 3.731, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | | else return 0.08892490001149941;  // std dev = 5.109, 134.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=37 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), interaction(D, A) )
%   | then return 0.40438600761286514;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5908174107461248;  // std dev = 0.134, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then if ( interaction(E, H), enzyme(H, I) )
%   | | | then return 0.0779207941302846;  // std dev = 1.739, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.328972740194514;  // std dev = 1.658, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10857782599038031;  // std dev = 0.033, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.030047177069191487;  // std dev = 4.160, 101.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=25 */
%   | else if ( enzyme(A, J), complex(A, K) )
%   | | then return 0.4492385015655576;  // std dev = 0.710, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.03365054949640503;  // std dev = 2.060, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.1699413528218678;  // std dev = 3.813, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5015093700569764;  // std dev = 0.295, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, C), complex(C, F) )
%   | | then return 0.3388715088015843;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.01714490986138139;  // std dev = 0.393, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.44874567089997736;  // std dev = 0.180, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, J), interaction(K, G) )
%   | | | then return -0.04539271739425109;  // std dev = 1.605, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.12537160621268267;  // std dev = 2.336, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4091339957185123;  // std dev = 0.193, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.050579119835379924;  // std dev = 4.479, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | | else return 0.2727536348941033;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.3212050326500624;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.06273283430443803;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24496099212943728;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7487144032931998;  // std dev = 0.051, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.22724202679401365;  // std dev = 0.167, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(I, A), complex(A, J) )
%   | | then if ( interaction(A, K), interaction(I, K) )
%   | | | then return -0.07423488226321895;  // std dev = 1.304, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return -0.014061795938744896;  // std dev = 1.908, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.46321750991159316;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.016008556096238302;  // std dev = 5.533, 173.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5147777530086944;  // std dev = 0.222, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.19220926657739906;  // std dev = 0.100, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.3959913265576689;  // std dev = 1.722, 21.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | else return 0.6833291267226742;  // std dev = 0.647, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.21558099424633426;  // std dev = 0.323, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.4444594491464738;  // std dev = 0.599, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1785936255766016;  // std dev = 0.204, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( location(A, L) )
%   | | | then return 0.2081995205864801;  // std dev = 2.533, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return -4.8569010461250805E-4;  // std dev = 1.070, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4113839262025975;  // std dev = 0.208, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1745005102197487;  // std dev = 0.082, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G), phenotype(F, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.39253915301819053;  // std dev = 0.352, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.02070171103919119;  // std dev = 2.679, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.004286031385597563;  // std dev = 1.651, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.2450661320608918;  // std dev = 2.310, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.11952871898099623;  // std dev = 0.895, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.07516510387538199;  // std dev = 0.820, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.010512406064535351;  // std dev = 1.774, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.152191920805412;  // std dev = 0.066, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( interaction(G, F), complex(G, H) )
%   | | | then return -0.022610929816847487;  // std dev = 1.312, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.130954790758027;  // std dev = 0.956, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | else if ( phenotype(D, I) )
%   | | | then return -0.05420031533163125;  // std dev = 1.237, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.29479162669573655;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( phenotype(A, J) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.026800757983092338;  // std dev = 1.140, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.08284229731814348;  // std dev = 3.122, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return -0.09425065265427233;  // std dev = 2.003, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.043366446398165975;  // std dev = 2.678, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.1613571541547466;  // std dev = 0.259, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   | else if ( interaction(D, F) )
%   | | then return -0.053406778829196415;  // std dev = 0.278, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | | else return 0.16892083960837379;  // std dev = 0.899, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), interaction(J, H) )
%   | | | then return 0.0861618257816044;  // std dev = 0.865, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.47090895846769676;  // std dev = 1.089, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | else return -0.20752592235901562;  // std dev = 0.061, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( complex(A, K) )
%   | | then return -0.0077877768529063356;  // std dev = 0.260, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09197452380520682;  // std dev = 2.022, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.33955353323204884;  // std dev = 1.304, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.967', 'seconds']
Refined model CLL: -0.23666


******************************************
Best model found
******************************************
Results 

CLL : -0.254246 

AUC ROC : 0.959237 

AUC PR : 0.249775 

Precision : 0.214623 

Recall : 0.64311 

F1 : 0.321839 

Total Learning Time : 15.622 

Total Inference Time : 6.849017143249512 

Total revision time: 29.81431280708313
Best scored revision CLL: -0.23666


Results 

CLL : -0.254246 

AUC ROC : 0.959237 

AUC PR : 0.249775 

Precision : 0.214623 

Recall : 0.64311 

F1 : 0.321839 

Total Learning Time : 29.886255613327027 

Total Inference Time : 6.849017143249512 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.086
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.16656015005278196;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.1945975332303522;  // std dev = 4.888, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7799381838857765;  // std dev = 1.941, 73.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=69 */
%   | | | else return -0.16518291771102417;  // std dev = 0.024, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.209019646044467;  // std dev = 1.372, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.039718729734897804;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5600181218188023;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08645700176879302;  // std dev = 4.248, 118.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6168943083760416;  // std dev = 1.665, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14546954576792887;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08781851594534003;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1651539613586721;  // std dev = 1.264, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43558501554170315;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4214760566830797;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6184351671486781;  // std dev = 0.808, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.0432222754196383;  // std dev = 4.921, 216.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5143020203212938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -6.748701996411073E-5;  // std dev = 1.536, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.3101929021382581;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3155106758446241;  // std dev = 0.000454, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15269582042182467;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05951349494877883;  // std dev = 5.283, 236.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3876791538724831;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07351964053170303;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04218266391392105;  // std dev = 1.271, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.056181073018851425;  // std dev = 0.900, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3282116362349399;  // std dev = 0.229, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2515253821667044;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30053375017844464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.022131695683687787;  // std dev = 2.134, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3299665705967816;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.06918999931166153;  // std dev = 2.809, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.06020921935917832;  // std dev = 4.107, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2510190916263592;  // std dev = 0.213, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24135020925122697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.7928217309380693;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5682262945629968;  // std dev = 0.496, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.178698194161841;  // std dev = 0.630, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26147985482187347;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.049277203799506675;  // std dev = 3.865, 137.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19836861993149577;  // std dev = 0.000228, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.07981546271906112;  // std dev = 0.922, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32316366344996594;  // std dev = 3.301, 86.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=71 */
%   | | else return -0.15296939563750206;  // std dev = 0.222, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19994447279466032;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.037492625500208085;  // std dev = 1.528, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17548370610835878;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.009069617843406264;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04896568210586506;  // std dev = 1.478, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.10728881627720721;  // std dev = 0.596, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.014852144680678431;  // std dev = 1.640, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2010770821312324;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.033984287697814426;  // std dev = 3.502, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return 0.06488955747713726;  // std dev = 1.426, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13635186282825457;  // std dev = 0.022, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2602454501862984;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1920210476955758;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.02034597483029112;  // std dev = 2.361, 108.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.0782012718102025;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.007221820177053088;  // std dev = 3.544, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | | | else return 0.004453581995895579;  // std dev = 1.476, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.405', 'seconds']
Parameter learned model CLL:-0.19132 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.777, 74, 33], 'false,false,true,false': [4.888, 71, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.067, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [1.941, 4, 69], 'false,false,true,false': [0.024, 157, 0], 'false,false,false,true': [1.372, 5, 3], 'false,false,false,false': [0.894, 4, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.248, 84, 34], 'false,true,false,true': [1.665, 3, 37], 'false,true,false,false': [0.0, 62, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.264, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 5], 'true,false': [0.049, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.808, 1, 14], 'false,true,false': [4.921, 159, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.536, 11, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.000454, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.883, 1, 4], 'false,true': [5.283, 165, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.271, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.9, 1, 4], 'true,true,false': [0.229, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.134, 44, 12], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [2.809, 43, 20], 'false,false,false,false': [4.107, 95, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.213, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.496, 0, 33], 'true,false': [0.63, 96, 0], 'false,true': [0.004, 0, 3], 'false,false,true': [3.865, 97, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000228, 0, 3], 'true,false': [0.922, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.301, 15, 71], 'false,true,false': [0.222, 159, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.528, 17, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.131, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.692, 1, 3], 'false,true,true': [1.478, 43, 11], 'false,true,false,true': [0.596, 1, 1], 'false,true,false,false': [1.64, 38, 17], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.502, 82, 40], 'false,false,false,false': [1.426, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.022, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.026, 0, 3], 'false,true': [2.361, 79, 29], 'false,false,true': [0.862, 1, 3], 'false,false,false,true': [3.544, 100, 40], 'false,false,false,false': [1.476, 12, 4]}]
{'': [0.07638888888888877, 0.22124763705103978], 'false': [1.4802973661668753e-16, 0.2181684100215426], 'false,false': [0.21846886190933723, 0.21301775147928975], 'false,false,true': [0.21329373744431968, 0.22325093894663417], 'false,false,false': [0.22222222222222224, 0.20408163265306126], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.00044937956321756576, 0.21163175056809674], 'false': [0.0, 0.2100824828348291], 'false,false': [0.20990282366185664, 0.21318245378459805], 'false,false,false': [0.2353973334525643, 0.16], 'false,false,true': [0.051586767492801014, 3.7284856787393466e-06], 'true': [0.0, 0.0005034715476789723], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0007104641423471507, 0.16272658254407402], 'false': [0.15996096874583143, 0.20316456964205162], 'false,false': [0.2040816326530612, 0.1995711129860218], 'false,false,true': [nan, 0.2040816326530612], 'false,false,false': [0.1995711129860218, nan], 'false,true': [0.15289250216500674, 0.16572762601555566], 'false,true,false': [0.06932783792275168, -3.581364595565021e-17], 'true': [0.00039153379682199674, 0.0008198849539215273]}
{'': [0.0006409616424830118, 0.13207062081950727], 'false': [0.1277447374527697, 0.1906722161126555], 'false,false': [0.0, 0.18928434989721604], 'false,false,false': [0.16857799696174197, 0.25], 'false,true': [0.04355628766386535, 0.11210610103081171], 'false,true,true': [nan, 0.04355628766386541], 'true': [0.0008215940443140113, 0.00039995158637810374], 'false,false,true': [nan, 0.0]}
{'': [0.07141555072967738, 0.12227107781157835], 'false': [0.11828194840284739, 0.1705910139374485], 'false,false': [0.0, 0.17227238695014918], 'false,false,false': [0.20408163265306117, 0.14682407508587095], 'true': [2.939953563136604e-08, 0.1559338855898401], 'true,true': [2.939953563136604e-08, nan], 'false,false,true': [nan, 0.0]}
{'': [0.08835004812676728, 0.11579384619525206], 'false': [0.08134880393067202, 0.12361795141633108], 'false,false': [8.343222703081446e-06, 0.12442334574707015], 'false,false,false': [0.12522696649744922, 0.12402554644467513], 'true': [0.10472863218568493, 0.0006004550337935372], 'true,true': [0.16194294621922015, 0.01051400449031865], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11089295371417714, 0.10766773939260289], 'true': [0.060709586585607295, 0.0041319564498668955], 'false': [6.366643592316719e-06, 0.10906035987738423], 'false,false': [0.10906035987738423, nan], 'true,true': [0.004150632105676394, 0.06010890154319949], 'true,true,false': [0.0, 0.007446509063428989], 'true,true,true': [0.004557196472027303, 0.0]}
{'': [0.07340873528866744, 0.09744176485762773], 'false': [0.09630862779285393, 0.10852858761210045], 'false,false': [0.0, 0.11113405306423418], 'false,false,false': [0.11113405306423418, nan], 'false,true': [0.12666658924617522, 0.0003113275674737528], 'false,true,true': [nan, 0.12666658924617522], 'true': [1.734537782849266e-08, 0.0943645951651716], 'false,false,true': [0.0, nan]}
{'': [0.048923192912663484, 0.08015482667017727], 'false': [0.04824260616436091, 0.1042756175157559], 'false,false': [4.406964423983584e-06, 0.10600722723385103], 'false,false,false': [0.10053914930632639, 0.15645987580702517], 'true': [0.0021344404690621342, 0.11979407821210275], 'true,false': [nan, 0.11979407821210275], 'false,true': [0.04044373135964621, 0.053906866681418364], 'false,true,false': [0.177724412034086, 0.0488809573519087]}
{'': [0.0016476070788025406, 0.07882928052378296], 'false': [0.05161895243410216, 0.09694124551078118], 'false,false': [0.18586365782870332, 0.09447996669924667], 'false,false,false': [0.08972085099472217, 0.13611535193455487], 'true': [0.001740942652530563, 0.00022443423944867869], 'true,true': [0.001740942652530563, nan], 'true,true,true': [7.09461221935532e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 19.573
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), location(A, H) )
%   | | then if ( enzyme(G, I), location(G, H) )
%   | | | then return 0.06327714022771751;  // std dev = 2.522, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.2013442013717023;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.024815601766178936;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.7372321343150519;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.687563293942748;  // std dev = 3.182, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16380315192303108;  // std dev = 0.104, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.4332054912315484;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.18843455085907243;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4417970247836125;  // std dev = 0.330, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.03100081108546191;  // std dev = 2.295, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.09419844909835005;  // std dev = 3.715, 89.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=25 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5961785751007791;  // std dev = 2.092, 42.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=37 */
%   | | | else return -0.14479367722661754;  // std dev = 0.044, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.03589611451021585;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.06922944784354917;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.09743721882311747;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.17519995765125915;  // std dev = 0.965, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45934248742465283;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.35912085348868444;  // std dev = 0.308, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1520614394042014;  // std dev = 0.121, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | | else return 0.09379431013731175;  // std dev = 3.108, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.04088089835267825;  // std dev = 0.896, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11312927415315563;  // std dev = 4.443, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.511792236641304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.05723771579376327;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.3868952144299919;  // std dev = 1.065, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3731837862563262;  // std dev = 0.041, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.5918464795135664;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.3785900148713136;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6632666923678704;  // std dev = 0.149, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.013811816195014676;  // std dev = 2.016, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | else return 0.06261902071242609;  // std dev = 0.360, 182.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=54 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3858916988638046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.1138099581202054;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.05420765122742747;  // std dev = 1.513, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3192705620290893;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.32473711386000786;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.06407395974794955;  // std dev = 0.918, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.01408705553865466;  // std dev = 1.307, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.5784454964737878;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08774934720820407;  // std dev = 1.230, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.032922577516601215;  // std dev = 0.880, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.08872094803243469;  // std dev = 4.668, 167.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=57 */
%   | | | else return -0.08585690803820853;  // std dev = 1.808, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.25608602089327737;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5818487491679921;  // std dev = 0.541, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1972292911896519;  // std dev = 0.071, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2793174711407527;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(A, H), location(G, H) )
%   | | | then return 0.04267412694913172;  // std dev = 1.446, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.22790116646271552;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, I), complex(A, J) )
%   | | | then return -0.03003520169209795;  // std dev = 1.578, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.027813530300869097;  // std dev = 3.164, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18594507372333532;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.19577797878708045;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.2171652563047397;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), enzyme(A, I) )
%   | | | then return 0.41402968400316614;  // std dev = 0.985, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.4477952597507239;  // std dev = 1.762, 63.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | else return -0.1615591295645615;  // std dev = 0.032, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19289163667979492;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.054279741924591215;  // std dev = 1.179, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.08311645037042306;  // std dev = 0.783, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.15001332048177438;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.16836829777830048;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20208624291028654;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.13284185960067987;  // std dev = 1.660, 41.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | else return -0.13855029266083435;  // std dev = 0.814, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else return 0.17601815367013143;  // std dev = 0.505, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19253630742155578;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.010992905217812012;  // std dev = 2.481, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | | | else return 0.036150662568569324;  // std dev = 2.718, 78.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13958663734926413;  // std dev = 0.021, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.14945915074380633;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.17177906470699256;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( complex(F, G), location(A, H) )
%   | | then if ( interaction(F, F), complex(A, I) )
%   | | | then return -0.09323609048819374;  // std dev = 1.576, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.01846698754111577;  // std dev = 3.020, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3202557205287343;  // std dev = 1.179, 34.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=32 */
%   | | | else return -0.14092434100546145;  // std dev = 0.181, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | else if ( enzyme(A, K) )
%   | | then return 0.3880879930417397;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.08654720950586754;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '47.548', 'seconds']
Refined model CLL: -0.198355


******************************************
Best model found
******************************************
Results 

CLL : -0.188741 

AUC ROC : 0.986079 

AUC PR : 0.301197 

Precision : 0.172908 

Recall : 0.769504 

F1 : 0.282368 

Total Learning Time : 19.573 

Total Inference Time : 89.5609130859375 

Total revision time: 129.8158009853363
Best scored revision CLL: -0.19132


Results 

CLL : -0.188741 

AUC ROC : 0.986079 

AUC PR : 0.301197 

Precision : 0.172908 

Recall : 0.769504 

F1 : 0.282368 

Total Learning Time : 129.85934027099609 

Total Inference Time : 89.5609130859375 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.902
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09479015647355703;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
%   | | | else return 0.1914822684328449;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.14386322081379804;  // std dev = 1.690, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6480448407823829;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.2505511758931249;  // std dev = 0.938, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.2505511758931249;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7124505635086247;  // std dev = 3.091, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.16109849890862243;  // std dev = 0.084, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.006385396401564473;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.021536911553079626;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5665417881314162;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5729277032086343;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0814317201896479;  // std dev = 4.370, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5321013035658757;  // std dev = 2.864, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14559006091506943;  // std dev = 5.77e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8367988005192342;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07001550752869086;  // std dev = 1.626, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4246341223615125;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.43178807845541073;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.2959731267828865;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4270753390507019;  // std dev = 2.262, 29.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | else return 0.03224897842888365;  // std dev = 5.175, 250.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5302839816029563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.22916710822049455;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09308072590346102;  // std dev = 1.117, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32276951785126057;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33091275462056646;  // std dev = 0.003, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.07061586405397366;  // std dev = 5.874, 270.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3991520225158852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10109877197527488;  // std dev = 1.607, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25349454629426993;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24555941599285772;  // std dev = 1.145, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.28454152206907535;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.011570971470463055;  // std dev = 2.873, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.15114084802315192;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.011333651549736644;  // std dev = 2.268, 55.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=11 */
%   | | | else return 0.07088467287423239;  // std dev = 4.682, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30482024052696666;  // std dev = 0.506, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2511114810011238;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2340092939810483;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.49021814818401965;  // std dev = 1.742, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.17266056801504903;  // std dev = 0.524, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2341569022984177;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.10022140467499549;  // std dev = 4.279, 130.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16112482222505287;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.18492766973872554;  // std dev = 0.045, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.36158053397854917;  // std dev = 3.423, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.1549680699592372;  // std dev = 0.496, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2068850854866019;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.7465514963025152;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.023996233159197914;  // std dev = 1.487, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17850383725443286;  // std dev = 0.242, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2165276933159872;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.23967265838396007;  // std dev = 0.242, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.017405542988203185;  // std dev = 1.718, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2872831989486119;  // std dev = 0.192, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.03308959415888682;  // std dev = 1.405, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16741372134351343;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04102501845802334;  // std dev = 3.749, 147.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=47 */
%   | | | else return -0.042953201446631034;  // std dev = 1.515, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12254486928889068;  // std dev = 0.007, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22166408677799376;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.3053432919968838;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19167969336918197;  // std dev = 0.187, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02605536234497579;  // std dev = 2.536, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.0213415048336853;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024519900664338203;  // std dev = 3.960, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | | else return 0.03607199913953752;  // std dev = 1.438, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.127', 'seconds']
Parameter learned model CLL:-0.20263 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.865, 100, 31], 'false,false,true,false': [5.477, 90, 45], 'false,false,false,true': [1.69, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.964, 1, 13], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.938, 2, 2], 'false,true,false,false': [0.663, 1, 1], 'false,false,true,true': [3.091, 11, 76], 'false,false,true,false': [0.084, 169, 0], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.028, 0, 11], 'true,false': [0.0, 0, 6], 'false,true,true': [4.37, 97, 34], 'false,true,false,true': [2.864, 10, 48], 'false,true,false,false': [5.77e-08, 86, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.626, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.025, 0, 10], 'true,false': [0.002, 0, 7], 'false,true,true,true': [0.882, 1, 3], 'false,true,true,false': [2.262, 8, 21], 'false,true,false': [5.175, 192, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.117, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.018, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.003, 0, 10], 'false,true': [5.874, 188, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.607, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.01, 0, 5], 'true,true,false': [1.145, 3, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.034, 0, 2], 'false,true': [2.873, 58, 19], 'false,false,true': [0.943, 1, 8], 'false,false,false,true': [2.268, 44, 11], 'false,false,false,false': [4.682, 112, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.506, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.742, 4, 33], 'true,false': [0.524, 94, 0], 'false,true': [0.002, 0, 5], 'false,false,true': [4.279, 83, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.045, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.423, 16, 82], 'false,true,false': [0.496, 175, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [1.487, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.242, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.242, 0, 5], 'false,true,true': [1.718, 28, 13], 'false,true,false,true': [0.192, 0, 8], 'false,true,false,false': [1.405, 43, 11], 'false,false,true': [0.002, 0, 5], 'false,false,false,true': [3.749, 100, 47], 'false,false,false,false': [1.515, 18, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.007, 0, 7], 'true,true,true,false': [0.185, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.187, 0, 3], 'false,true': [2.536, 98, 32], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [3.96, 90, 47], 'false,false,false,false': [1.438, 11, 4]}]
{'': [-2.0898315757650005e-16, 0.21082899305555605], 'false': [0.10937499999999978, 0.2040816326530623], 'false,false': [0.20408163265306153, 0.20408163265306106], 'false,false,true': [0.18064215372064682, 0.2222222222222233], 'false,false,false': [0.20408163265306106, nan], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0], 'true': [-1.4802973661668753e-16, 0.0]}
{'': [0.0524691358024694, 0.20744202275656046], 'false': [0.1923191691861826, 0.2043326258483725], 'false,false': [0.20855321408764138, 0.14366729678638931], 'false,false,true': [0.10983562659046125, 4.1651759334000224e-05], 'false,true': [0.0009658273954848973, 0.2198880637133144], 'false,true,false': [0.21988806371331443, 0.21988806371331443], 'false,false,false': [0.1388888888888888, 0.14876033057851232], 'true': [0.0, 0.06632653061224504]}
{'': [5.549031192926138e-05, 0.15940431083633644], 'false': [0.15762841357427912, 0.18804464522883285], 'false,false': [0.18804464522883285, nan], 'false,false,true': [0.0, 0.1652117521197866], 'false,true': [0.1457502452623711, 0.1674290103709471], 'false,true,false': [0.1414022052942585, 3.872871016134267e-17], 'true': [7.136484490337254e-05, -7.401486830834377e-17]}
{'': [5.073345589125174e-05, 0.13407718281830774], 'false': [0.1304592427100211, 0.20276920494792344], 'false,false': [0.0, 0.20852966147348276], 'false,false,false': [0.24000000000000005, 0.1783343884685323], 'false,true': [0.18046634276655166, 0.10711437682539574], 'false,true,true': [0.19438060934567047, 0.17646376509092007], 'true': [6.482258546152142e-05, 5.007821730629303e-07], 'false,false,true': [nan, 0.0]}
{'': [3.655824746879082e-05, 0.13098323074317894], 'false': [0.12777544263839222, 0.19029946315555607], 'false,false': [0.0, 0.198592473387018], 'false,false,false': [0.198592473387018, nan], 'true': [4.848752452173739e-05, 9.026867337391664e-07], 'true,true': [4.848752452173739e-05, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06916618073212144, 0.12104145210805041], 'false': [0.10719792579898946, 0.12529901918705122], 'false,false': [0.09881497662235317, 0.12599043725906361], 'false,false,false': [0.09352718917502562, 0.13529858360945402], 'true': [0.07709567903567369, 0.0005637296425320265], 'true,true': [1.8859482813871064e-05, 0.10919250101812013], 'true,false': [nan, 0.0005637296425320265]}
{'': [0.11007703115332378, 0.13627135467929208], 'false': [8.393056748712268e-07, 0.14084813140218833], 'false,false': [0.14084813140218833, nan], 'true': [0.06792432686721996, 0.002920712212922473], 'true,true': [0.016157169446148006, 0.08041876513728038], 'true,true,false': [9.25185853854297e-18, 0.08201598228091715], 'true,true,true': [0.017054024647778433, 0.0]}
{'': [0.00022278883449152807, 0.1075374202239233], 'false': [0.1052091854473866, 0.1321740168017572], 'false,false': [0.22726032887342892, 0.11640913923248697], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.11640913923248697, nan], 'false,true': [0.11952889788371214, 0.0014077248619912602], 'false,true,true': [nan, 0.11952889788371196], 'true': [0.0, 0.0001580273510433447]}
{'': [0.00811899480057953, 0.08044938655117806], 'false': [0.05513325541156117, 0.09525301754523705], 'false,false': [5.069818027225725e-07, 0.09752927144966027], 'false,false,false': [0.09559708192819956, 0.10430552538583288], 'false,true': [0.07196688716420085, 0.04396796229467035], 'false,true,false': [0.004586904916792381, 0.036558486363964075], 'true': [0.0065184175851679994, 0.008502680500595645], 'true,false': [0.0, 0.011750698584263142]}
{'': [0.018665033171538913, 0.08751727702352928], 'false': [0.04946323888241309, 0.1177022284285644], 'false,false': [0.13894419301202562, 0.1167798386987767], 'false,false,false': [0.11446628386556978, 0.13779002470074342], 'true': [0.019593950651031835, 0.011633875883507292], 'true,true': [0.005077564788919716, 0.0], 'true,true,true': [6.667971989760388e-06, 0.005703431465371491], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 15.128
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.030739953789376568;  // std dev = 2.981, 90.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=10 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.13446472457319622;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.21737223607038486;  // std dev = 4.869, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6508487408489381;  // std dev = 3.594, 92.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=76 */
%   | | | else return -0.15627169164321278;  // std dev = 0.198, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1629096848856297;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07957635155229638;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4720331034129512;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5553664367462843;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08880713912206988;  // std dev = 3.752, 98.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=27 */
%   | | | else return 0.022908134197128404;  // std dev = 1.871, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5226025549521266;  // std dev = 2.937, 59.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=48 */
%   | | | else return -0.13658169358138367;  // std dev = 0.139, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.49281227140572226;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3180291425759663;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.19258329599383772;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4297504174135186;  // std dev = 0.010, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.06719037427267921;  // std dev = 1.010, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.4297504174135187;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then return 0.02649447645144915;  // std dev = 0.298, 123.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=27 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.051860388910089934;  // std dev = 2.832, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | | else return 0.12627099713408707;  // std dev = 4.019, 111.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=39 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.43280039988624264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.013182758014402222;  // std dev = 1.163, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1387400142032851;  // std dev = 1.088, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.370141334375519;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18024221087852096;  // std dev = 0.325, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then if ( enzyme(A, H), interaction(F, A) )
%   | | | then return -0.014341992572786672;  // std dev = 1.489, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.05131363638162938;  // std dev = 3.059, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.04736366323907577;  // std dev = 2.993, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
%   | | | else return 0.16897397617063661;  // std dev = 3.550, 81.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=35 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3310953732213445;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.009843533811202202;  // std dev = 1.655, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return -0.20326077051428695;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3072222632593735;  // std dev = 0.229, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else return 0.2712719669455052;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), complex(A, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15429057083933964;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(F, F), interaction(F, A) )
%   | | | then return 0.13252348063778993;  // std dev = 1.343, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.00963593606757741;  // std dev = 1.927, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.1260517294562887;  // std dev = 3.038, 62.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=23 */
%   | | | else return 0.047337633455535225;  // std dev = 3.872, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.3446550339998556;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09915215027369466;  // std dev = 1.951, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.28812536858304577;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2783587568204182;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5327248217112993;  // std dev = 1.193, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16757438059660146;  // std dev = 0.073, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.27379972373128925;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( enzyme(A, I), interaction(G, H) )
%   | | | then return 0.05985712163557151;  // std dev = 2.572, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return -0.010458645644316096;  // std dev = 3.631, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.05789818055005964;  // std dev = 0.569, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2503751975485862;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16180012158563561;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.1457628713720766;  // std dev = 0.239, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.12526962534418418;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.19612592372143353;  // std dev = 2.520, 43.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=32 */
%   | | | else return 0.43492734870336286;  // std dev = 2.608, 57.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=50 */
%   | | else return -0.15963128722486097;  // std dev = 0.046, 176.000 (wgt'ed) examples reached here.  /* #neg=176 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.16886007800348024;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.009134466825483899;  // std dev = 1.163, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.10185922304094681;  // std dev = 0.605, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, E) )
%   | | then if ( interaction(A, E), phenotype(A, F) )
%   | | | then return 0.15958462087303896;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13153369548936064;  // std dev = 0.670, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24007929033467967;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.12796208063626924;  // std dev = 0.894, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2231441891355531;  // std dev = 0.158, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then return -0.021999116697607162;  // std dev = 0.231, 142.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=32 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.05448635185486186;  // std dev = 0.841, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.050590996333666635;  // std dev = 3.492, 124.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=43 */
%   | | | else return -0.029344101754193025;  // std dev = 1.776, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1833413845899612;  // std dev = 0.053, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( complex(A, D), location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.37066233449420777;  // std dev = 0.719, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.22407586268095078;  // std dev = 0.589, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(G, E), interaction(G, A) )
%   | | | then return -0.10546372743245379;  // std dev = 0.294, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | | else return -0.18230625950562462;  // std dev = 0.563, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( location(A, H), phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.39452602026134453;  // std dev = 1.410, 38.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=34 */
%   | | | else return -0.19566243770027048;  // std dev = 0.844, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return -0.007777092517932624;  // std dev = 1.082, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.04884509232948974;  // std dev = 1.964, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.727', 'seconds']
Refined model CLL: -0.187852


******************************************
Best model found
******************************************
Results 

CLL : -0.167625 

AUC ROC : 0.992572 

AUC PR : 0.39148 

Precision : 0.308451 

Recall : 0.826415 

F1 : 0.449231 

Total Learning Time : 15.128 

Total Inference Time : 21.06743025779724 

Total revision time: 59.295334367752076
Best scored revision CLL: -0.187852


Results 

CLL : -0.167625 

AUC ROC : 0.992572 

AUC PR : 0.39148 

Precision : 0.308451 

Recall : 0.826415 

F1 : 0.449231 

Total Learning Time : 59.338873653411866 

Total Inference Time : 21.06743025779724 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.336
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.14020021715079337;  // std dev = 5.620, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7494282774446179;  // std dev = 0.080, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8420442022182926;  // std dev = 0.031, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15731055440911465;  // std dev = 0.054, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1309388204311781;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.12902671684545566;  // std dev = 3.267, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4181829460066052;  // std dev = 0.942, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5844849998943631;  // std dev = 0.093, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05798067669026066;  // std dev = 2.100, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6855641459657567;  // std dev = 0.205, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1397809709748684;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.09541300117008503;  // std dev = 0.650, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.16862211212349043;  // std dev = 3.565, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.7876657673490534;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.436425613499537;  // std dev = 0.083, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.46989141307768323;  // std dev = 0.058, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3862301718477762;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5889499646064736;  // std dev = 0.137, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05028459942529131;  // std dev = 4.220, 199.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5316985924798543;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5134356499277186;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.07716701171155109;  // std dev = 1.867, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.09088241711231415;  // std dev = 3.253, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3413137290073796;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34246864625672807;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.047220374143813894;  // std dev = 4.262, 206.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4001754929391109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3870617135546831;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0885756336856622;  // std dev = 3.629, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.10970668841141837;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2572464668160915;  // std dev = 0.042, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.44340405200583966;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.33618190337358983;  // std dev = 0.038, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26173596549;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.34442096988753895;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09033204190948628;  // std dev = 0.967, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2852678619671019;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0478307127532788;  // std dev = 2.752, 82.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=23 */
%   | | | else return 0.06187263144717659;  // std dev = 4.733, 153.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24246346841130498;  // std dev = 0.186, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23758554111036784;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.2658123310241653;  // std dev = 0.643, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6170186561920261;  // std dev = 1.170, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1931309253206085;  // std dev = 0.636, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23933241462947893;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08375009688787233;  // std dev = 3.240, 105.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17681636995040712;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19298865091025444;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4419619264359178;  // std dev = 0.756, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13830848090336306;  // std dev = 0.236, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19725768308653635;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.6437068155166674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.010100423686022646;  // std dev = 3.228, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1560952709113285;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12725134230753388;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18132683597608534;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07857144827419202;  // std dev = 0.410, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18654358375145974;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01605017992978076;  // std dev = 1.252, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1696110277267706;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.028706440171731667;  // std dev = 2.649, 115.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=36 */
%   | | | else return 0.04346586903484478;  // std dev = 3.127, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1371477155810474;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1469777175517033;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12200025342079013;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.0011998365014471268;  // std dev = 0.677, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01807637606927526;  // std dev = 1.354, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14705266064971828;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010994289879652527;  // std dev = 2.680, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return 0.026856847776877198;  // std dev = 3.139, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.997', 'seconds']
Parameter learned model CLL:-0.174108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [1.195, 2, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [5.62, 112, 44], 'false,false,false,true': [3.7, 49, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.08, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [0.031, 0, 52], 'false,false,true,false': [0.054, 125, 0], 'false,false,false,true': [1.872, 12, 5], 'false,false,false,false': [3.267, 37, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.942, 1, 6], 'true,false': [0.093, 0, 8], 'false,true,true': [2.1, 28, 8], 'false,true,false,true': [0.205, 0, 48], 'false,true,false,false': [0.0, 106, 0], 'false,false,true,true': [0.65, 1, 1], 'false,false,true,false': [3.565, 37, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.083, 0, 9], 'true,false': [0.058, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.137, 0, 3], 'false,true,false': [4.22, 147, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.867, 11, 5], 'false,false,false,false': [3.253, 36, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.016, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.1, 0, 9], 'false,true': [4.262, 150, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.629, 43, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.042, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.038, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.121, 0, 3], 'false,true': [0.967, 30, 3], 'false,false,true': [0.061, 0, 6], 'false,false,false,true': [2.752, 59, 23], 'false,false,false,false': [4.733, 107, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.186, 0, 12], 'true,true,true,false': [0.006, 0, 2], 'true,true,false,true': [0.643, 1, 1], 'true,true,false,false': [1.17, 1, 36], 'true,false': [0.636, 89, 0], 'false,true': [0.026, 0, 5], 'false,false,true': [3.24, 69, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.026, 0, 5], 'true,false': [0.063, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.756, 0, 56], 'false,true,false': [0.236, 143, 0], 'false,false,true,true': [0.006, 0, 2], 'false,false,true,false': [0.0, 1, 0], 'false,false,false,true': [3.228, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.034, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.068, 0, 4], 'false,true,true': [0.41, 17, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.252, 46, 14], 'false,false,true': [0.02, 0, 5], 'false,false,false,true': [2.649, 79, 36], 'false,false,false,false': [3.127, 41, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.011, 0, 5], 'true,true,true,false': [0.007, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.677, 1, 4], 'false,true': [1.354, 60, 17], 'false,false,true': [0.018, 0, 5], 'false,false,false,true': [2.68, 89, 36], 'false,false,false,false': [3.139, 43, 20]}]
{'': [0.10937499999999967, 0.2036336512334175], 'false': [-1.4802973661668753e-16, 0.1964802851414582], 'false,false': [0.19365370880522478, 0.20408163265306076], 'false,false,false': [0.20134083044982648, 0.25], 'false,false,true': [0.15419501133786864, 0.20249835634451108], 'true': [-2.9605947323337506e-16, 0.20408163265306106], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [0.0006674768269392395, 0.20967723968636942], 'false': [0.12244897959183687, 0.20674827090891745], 'false,false': [0.2072297896976226, 0.20547992368565368], 'false,false,true': [1.848095747014611e-05, 2.3387134210800298e-05], 'false,false,false': [0.2061759394264462, 0.20525147928994075], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [nan, 0.22222222222222224], 'true': [0.0, 0.0007178351609335504]}
{'': [0.06660050398935455, 0.16322985304908172], 'false': [0.1424334057228128, 0.22532914166915727], 'false,false': [0.22271005094012258, 0.0], 'false,false,true': [0.21155716289834908, 0.22291969987300936], 'false,true': [0.12253459731380706, 0.14641454400431464], 'false,true,false': [0.0008724829351453393, -6.70323335622736e-17], 'true': [0.1267262118897296, 0.0010842021171262872], 'false,false,false': [0.0, nan]}
{'': [0.000997839533040271, 0.12248612907556809], 'false': [0.09258917819935748, 0.20923085269057193], 'false,false': [8.33837676656457e-05, 0.20999028613376589], 'false,false,false': [0.21784491830536154, 0.2074811654543041], 'false,true': [0.012400999830474768, 0.08950878871863381], 'false,true,true': [0.0, 0.006260837846600771], 'true': [0.0007721884651595969, 0.0006840373357507978], 'false,false,true': [0.0, 0.0]}
{'': [0.0007373190242868009, 0.1181655211112561], 'false': [0.08816842701409487, 0.2098044088931766], 'false,false': [4.29928024358317e-05, 0.21355191430193213], 'false,false,false': [0.21236221580593745, 0.25000000000000006], 'true': [4.8583435705751296e-05, 0.0011194735375986082], 'true,true': [4.8583435705751296e-05, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.004353545680927606, 0.11644001174936275], 'false': [0.02832821359288144, 0.1256861995632028], 'false,false': [0.000613465437329865, 0.12758198769621124], 'false,false,false': [0.09236724029281815, 0.14638644935338557], 'true': [0.004491882171359556, 0.0036165511180551446], 'true,true': [0.00028986541082257994, 0.0], 'true,false': [0.0017556211909928593, 0.004916764353502394], 'true,false,true': [0.0007401435483020136, 0.0]}
{'': [0.14140484472038942, 0.09646133466507743], 'true': [0.0833540150570718, 0.004547959220209937], 'false': [0.00013113704298555183, 0.09994822067853017], 'false,false': [0.09994822067853017, nan], 'true,true': [0.0024697209372764634, 0.08362708688371179], 'true,true,false': [0.206895630820586, 0.03699517609073113], 'true,true,true': [0.0028745149691295955, 2.0561739226286624e-05]}
{'': [0.00039738287920350134, 0.09231280246276041], 'false': [0.0712393516543744, 0.14950344059548126], 'false,false': [0.157170761203833, 0.14881814625153375], 'false,false,true': [1.5712502103512604e-05, 0.0], 'false,false,false': [0.14881814625153375, nan], 'false,true': [0.010198294695087373, 0.0003899249305336388], 'false,true,true': [nan, 0.010198294695087404], 'true': [0.0001391651352582013, 0.00044742908445098245]}
{'': [0.0006301219845151791, 0.07278483584608242], 'false': [0.023537148288104697, 0.09334963349211128], 'false,false': [7.936557539245937e-05, 0.09549000119257452], 'false,false,false': [0.06101554027245024, 0.16034049823333948], 'false,true': [0.009347750017788203, 0.026583669382280187], 'false,true,false': [0.0, 0.02614578417623156], 'true': [0.00012530438962105348, 0.0014051857615197394], 'true,false': [0.0, 0.0011716503988001559]}
{'': [0.0348578289374433, 0.07054389343404086], 'false': [0.023823354070307556, 0.08877678281210957], 'false,false': [6.31705475665656e-05, 0.09069334644806347], 'false,false,false': [0.057470939328533116, 0.1564435198656168], 'true': [9.205317399109125e-05, 0.09164419383243755], 'true,true': [4.412471917457361e-05, 0.0], 'true,true,true': [2.34558809315194e-05, 1.8179696198559563e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.012
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return -0.011416282291792127;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.12481560176617902;  // std dev = 2.966, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.11901850031690367;  // std dev = 2.106, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.247461912198748;  // std dev = 5.581, 131.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8312592200021578;  // std dev = 0.068, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16709747235498404;  // std dev = 0.119, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.06646912667241762;  // std dev = 1.751, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.2381496192291514;  // std dev = 3.075, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.571594978180196;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3699721240368048;  // std dev = 0.396, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13103016692085012;  // std dev = 0.024, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.08386150174857858;  // std dev = 1.992, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6715075942745671;  // std dev = 0.263, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1446399940688521;  // std dev = 0.105, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.11920381623953497;  // std dev = 2.116, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.022357311476719613;  // std dev = 3.224, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else return 0.05799504995119545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44663622365710487;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4730596929080928;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38956765013673067;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5896005372791501;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.12554458761263992;  // std dev = 0.052, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.0696613695914823;  // std dev = 4.035, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5378048174660384;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.004409639517292788;  // std dev = 1.562, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.1358533434265206;  // std dev = 3.319, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32625341230170735;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.35910992595780744;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(F, G), phenotype(G, H) )
%   | | | then return -0.06589319064652885;  // std dev = 0.848, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.19703638608392315;  // std dev = 0.379, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06547668099840744;  // std dev = 2.407, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.09070536753747908;  // std dev = 3.056, 90.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4046843972074753;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.021137516217563112;  // std dev = 2.618, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.15969742036971052;  // std dev = 2.563, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2748109311109185;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3096941367056843;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.06101714581884368;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.10738621966736087;  // std dev = 0.012, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.09863172416272496;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.08871478436459469;  // std dev = 0.788, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.28303080899487887;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.07547861754993695;  // std dev = 4.168, 106.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=33 */
%   | | | else return 0.03058732331805396;  // std dev = 3.316, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24584032088217672;  // std dev = 0.042, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.4808667438567069;  // std dev = 0.383, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.7381001027927134;  // std dev = 0.149, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1917198274566302;  // std dev = 0.076, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23029608644505592;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( location(G, I) )
%   | | | then return 0.060191759763347584;  // std dev = 2.238, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return -0.062420056734202055;  // std dev = 0.586, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.05681961299487413;  // std dev = 1.389, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.09154633732444034;  // std dev = 1.637, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17178871162398288;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18476893260596508;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3189294472110092;  // std dev = 0.808, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return 0.443529151840484;  // std dev = 1.052, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11360666603770403;  // std dev = 0.146, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | | else return -0.1696960778535005;  // std dev = 0.107, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2278450337633222;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.048017619012462744;  // std dev = 1.765, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return -0.02853001971800516;  // std dev = 2.494, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15808337100703523;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18825855271416952;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.17826028391637042;  // std dev = 0.726, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.04198135834599612;  // std dev = 0.403, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2037500620147455;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.04337969113635615;  // std dev = 1.758, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.16515597394003367;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.03718252595025404;  // std dev = 2.873, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return -0.005248091776446714;  // std dev = 2.728, 132.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1417093513798222;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.02069378015986245;  // std dev = 0.802, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.29222604553136516;  // std dev = 0.173, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09143352127914005;  // std dev = 0.077, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.03759334874997085;  // std dev = 1.069, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | | else return 0.03565146980195453;  // std dev = 0.500, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.1436783916285677;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return 0.05138407512797983;  // std dev = 2.775, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.0018072811872165628;  // std dev = 2.826, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.100', 'seconds']
Refined model CLL: -0.175755


******************************************
Best model found
******************************************
Results 

CLL : -0.194534 

AUC ROC : 0.981782 

AUC PR : 0.252699 

Precision : 0.136502 

Recall : 0.808664 

F1 : 0.233577 

Total Learning Time : 7.012 

Total Inference Time : 7.824019908905029 

Total revision time: 26.456664751052855
Best scored revision CLL: -0.174108


Results 

CLL : -0.194534 

AUC ROC : 0.981782 

AUC PR : 0.252699 

Precision : 0.136502 

Recall : 0.808664 

F1 : 0.233577 

Total Learning Time : 26.500204036712645 

Total Inference Time : 7.824019908905029 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.495
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1795775065280838;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6544702717191446;  // std dev = 0.983, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7871756927151246;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15695504790616802;  // std dev = 0.063, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09862881304455988;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.22488299210398063;  // std dev = 2.067, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5740889534597556;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2693645308069626;  // std dev = 1.213, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.10856606673546525;  // std dev = 2.660, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6942858537492123;  // std dev = 0.219, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14090890616756727;  // std dev = 4.94e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6575959725514426;  // std dev = 0.181, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.06940067161959253;  // std dev = 2.547, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.2416069480433101;  // std dev = 1.305, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.418248315888954;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.39630612763279255;  // std dev = 0.962, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5284222235053677;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5940612658926674;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.04937157057298967;  // std dev = 4.276, 188.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42335413986887593;  // std dev = 0.043, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5994027012034431;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06714020069186884;  // std dev = 1.924, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.011919498800676664;  // std dev = 2.283, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32655790085064923;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.43072711071772035;  // std dev = 0.149, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05638211296908031;  // std dev = 4.400, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.2976376859906992;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4017178803718429;  // std dev = 0.070, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.060469691074126114;  // std dev = 2.538, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.016171963128830038;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2489371283666136;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30616948823875356;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.239356603317343;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.29786597872023335;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15094809678838372;  // std dev = 0.897, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07162228297786337;  // std dev = 1.224, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.07736630001148746;  // std dev = 1.139, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04317842121794652;  // std dev = 2.240, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | | else return 0.0679280213904225;  // std dev = 4.493, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24559463214644778;  // std dev = 0.212, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2526607063843607;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.286871103853292;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5685063312732372;  // std dev = 1.144, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1864033576557413;  // std dev = 0.903, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.35780758800982015;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07282991606834321;  // std dev = 3.336, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1692363220775953;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.07685402754409146;  // std dev = 1.204, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3751065935367751;  // std dev = 2.133, 61.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=56 */
%   | | else return -0.14142280529296888;  // std dev = 0.234, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16134865796837516;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.232108402441437;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04889358731456473;  // std dev = 2.448, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15638109147055285;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19815536627027608;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1993103755251005;  // std dev = 0.082, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09875050855498685;  // std dev = 0.315, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18246293532592858;  // std dev = 0.415, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.00848871140646554;  // std dev = 1.455, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26547094298574575;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06758886193446714;  // std dev = 2.672, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return 0.09464790207665441;  // std dev = 2.317, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13562788349655022;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1417901371822382;  // std dev = 0.027, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12938811490986768;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.17191210877165647;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18114190549123688;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.04212914969934222;  // std dev = 2.056, 108.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21716698487948824;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03911443630723255;  // std dev = 2.708, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.12027054641427037;  // std dev = 2.197, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.975', 'seconds']
Parameter learned model CLL:-0.188315 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [1.095, 2, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.983, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.063, 148, 0], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [2.067, 11, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.099, 0, 11], 'true,false': [1.213, 2, 4], 'false,true,true': [2.66, 35, 14], 'false,true,false,true': [0.219, 0, 42], 'false,true,false,false': [4.94e-08, 90, 0], 'false,false,true,true': [0.181, 0, 3], 'false,false,true,false': [2.547, 24, 9], 'false,false,false,true': [1.305, 4, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.018, 0, 6], 'true,false': [0.962, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.18, 0, 6], 'false,true,false': [4.276, 139, 49], 'false,false,true,true': [0.043, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.924, 14, 5], 'false,false,false,false': [2.283, 23, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.149, 0, 6], 'false,true': [4.4, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.07, 0, 2], 'false,false,false,true': [2.538, 24, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.007, 0, 5], 'true,true,false': [0.096, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.075, 0, 3], 'true,false,false': [0.897, 1, 4], 'false,true': [1.224, 29, 5], 'false,false,true': [1.139, 2, 5], 'false,false,false,true': [2.24, 35, 13], 'false,false,false,false': [4.493, 105, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.212, 0, 13], 'true,true,true,false': [0.088, 0, 3], 'true,true,false,true': [0.012, 0, 3], 'true,true,false,false': [1.144, 1, 33], 'true,false': [0.903, 101, 0], 'false,true': [0.056, 0, 3], 'false,false,true': [3.336, 60, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.204, 2, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.133, 5, 56], 'false,true,false': [0.234, 152, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.052, 0, 2], 'false,false,false,true': [2.448, 28, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.039, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.082, 0, 5], 'false,true,true': [0.315, 24, 1], 'false,true,false,true': [0.415, 1, 6], 'false,true,false,false': [1.455, 50, 17], 'false,false,true': [0.047, 0, 3], 'false,false,false,true': [2.672, 53, 31], 'false,false,false,false': [2.317, 21, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.021, 0, 8], 'true,true,true,false': [0.027, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.005, 0, 2], 'true,false': [0.057, 0, 3], 'false,true': [2.056, 84, 24], 'false,false,true': [0.041, 0, 3], 'false,false,false,true': [2.708, 59, 31], 'false,false,false,false': [2.197, 17, 12]}]
{'': [0.10380622837370206, 0.20781322635629593], 'false': [-2.5376526277146434e-16, 0.19869968587917433], 'false,false': [0.19491878384006744, 0.21606648199445933], 'false,false,false': [0.21811224489795927, 0.20999999999999988], 'false,false,true': [0.1657127991675333, 0.20633771441301016], 'true': [-1.4802973661668753e-16, 0.23999999999999994], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.061131195754811296, 0.19962407845280586], 'false': [0.10937500000000006, 0.19500708406723355], 'false,false': [0.1900473702572057, 0.2190498638261437], 'false,false,false': [0.1938909964283455, 0.23742098021804064], 'false,false,true': [0.05150004993666551, 2.687992755347914e-05], 'false,true': [0.0, 0.13888888888888892], 'false,true,false': [0.0, 0.1875], 'true': [0.0, 0.08045190893796517]}
{'': [0.10828115420432173, 0.1624324228186995], 'false': [0.14977156980659753, 0.21546279735126522], 'false,false': [0.20755419935098832, 0.24343028586839108], 'false,false,false': [0.24343028586839108, nan], 'false,false,true': [0.010962259147647776, 0.19659505124506924], 'false,true': [0.1444062284457359, 0.15169159739017596], 'false,true,false': [0.0011425519651833244, 2.7138785046392715e-17], 'true': [0.0008892521224707375, 0.24508238382270361]}
{'': [0.05799768434071026, 0.1206374405600608], 'false': [0.1038583617214916, 0.1834896807533712], 'false,false': [0.007506432097015255, 0.18264859670842548], 'false,false,false': [0.1948263553400009, 0.17375362455952098], 'false,true': [0.00513202220302362, 0.097247584873823], 'true': [5.577410242766737e-05, 0.09258228312412897], 'false,false,true': [0.0009286161628659362, 0.0], 'false,true,true': [0.0, 0.00537186153892925]}
{'': [0.004143164826257658, 0.11823661585318461], 'false': [0.10084767330073145, 0.18767384401455434], 'false,false': [0.004029758530086913, 0.19358191573972686], 'false,false,false': [0.1952573269603663, 0.18753552316881775], 'true': [8.323706080386955e-05, 0.00372232190384029], 'false,false,true': [0.0, 0.002433742174324821], 'true,true': [8.323706080386955e-05, nan]}
{'': [0.05189522768175409, 0.11847612778686752], 'false': [0.044096530748185224, 0.12815492076021553], 'false,false': [0.18524692902933346, 0.12614870327507688], 'false,false,false': [0.10456096375866092, 0.13281887392491032], 'true': [0.0019199580202184097, 0.09458636060004166], 'true,false': [0.002065058987896426, 0.16082527457162715], 'true,false,true': [0.0, 0.001897575231352792], 'true,true': [8.477960553976427e-06, 0.003058543734325292]}
{'': [0.1150342187280065, 0.12090536379794237], 'false': [0.0010523364194217621, 0.1222646814334144], 'false,false': [0.1222646814334144, nan], 'true': [0.04863731642338465, 0.008078206107773907], 'true,true': [0.003301752557270436, 0.04129774221278521], 'true,true,false': [4.971345059998078e-05, 0.038506052433426155], 'true,true,true': [0.003453856026533791, 0.0026020698821232016]}
{'': [0.08680624051105351, 0.08745023047280308], 'false': [0.07613500408064988, 0.14111618825889027], 'false,false': [0.0020002663356326056, 0.14977212614915536], 'false,false,false': [0.14977212614915536, nan], 'true': [0.0, 0.11150773807169304], 'false,true': [0.07455726669813179, 0.00035991297957648155], 'false,true,true': [nan, 0.07455726669813176], 'false,false,true': [0.0, 0.00133141902415123]}
{'': [0.0009479077928576628, 0.07301109142980149], 'false': [0.028683424517459526, 0.10526133198482883], 'false,false': [0.00074298149978085, 0.10703641270768559], 'false,false,false': [0.084978273594964, 0.16265872711756832], 'false,true': [0.00397754124571817, 0.03406680966021251], 'false,true,false': [0.024577685809275912, 0.03160905228485205], 'true': [0.00015164626781360158, 0.0011334899724199145], 'true,false': [0.0, 0.0013599656258407645]}
{'': [0.0006553691310286908, 0.07494228775263043], 'false': [0.03912721736586621, 0.10147903772068219], 'false,false': [0.0005588272571710092, 0.10340723703871882], 'false,false,false': [0.08147058969960641, 0.16650524136204023], 'true': [0.0002655944108437494, 0.0010790138129481153], 'true,true': [0.0001218625588697897, 0.00040942849293484446], 'true,true,false': [0.0, 1.1379388083120057e-05], 'true,true,true': [5.480290669601651e-05, 0.0003597224711754665]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.318
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return 0.0010060779566551492;  // std dev = 2.070, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | | else return 0.16249676118646883;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( complex(A, L), location(A, M) )
%   | | | then return 0.09727936988212106;  // std dev = 2.893, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.2146706742299463;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.052806745544287735;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.6038154407971071;  // std dev = 0.906, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5944734122109545;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7637669296612682;  // std dev = 1.925, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.16112154820391567;  // std dev = 0.134, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.052454181327153564;  // std dev = 2.343, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.09403615794550024;  // std dev = 1.923, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5887671419344759;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.13750447469538407;  // std dev = 0.039, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.1729094241102311;  // std dev = 2.467, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6492821602678611;  // std dev = 1.398, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14318207942037087;  // std dev = 0.078, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return 0.21899353434823934;  // std dev = 1.551, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.7659590663061431;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.03577886953900069;  // std dev = 1.777, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.15063134101218897;  // std dev = 1.158, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44414679245495886;  // std dev = 0.049, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5435067539943372;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3477736961209671;  // std dev = 1.006, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.0051929780335481564;  // std dev = 2.418, 81.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=16 */
%   | | | else return 0.10271343625572533;  // std dev = 3.414, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.46445413606100416;  // std dev = 0.096, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.03205201694225532;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.05160302410008959;  // std dev = 2.042, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.14770069679776132;  // std dev = 1.993, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.33979254206737863;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(E, G), interaction(G, H) )
%   | | | then return 0.10262774691510716;  // std dev = 1.970, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return -0.060846377038610275;  // std dev = 0.618, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.05266397568359413;  // std dev = 1.241, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.053549344297810546;  // std dev = 3.795, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.416764431480813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1135593236394502;  // std dev = 0.740, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.10648333634651598;  // std dev = 2.387, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.39360809972560046;  // std dev = 1.107, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2630703426588077;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.32020400245615255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3442065855721281;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3967276821839821;  // std dev = 0.162, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11802798620550085;  // std dev = 0.008, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.007418101963475754;  // std dev = 2.261, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return -0.0823634552402259;  // std dev = 1.532, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.059427114012895785;  // std dev = 4.318, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
%   | | | else return 0.30243669441370186;  // std dev = 0.875, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2523203373875138;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2607471299252868;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5963126758356507;  // std dev = 0.630, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1857009827915628;  // std dev = 0.084, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.30067240749718005;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5420161629394719;  // std dev = 0.211, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.1723026136068201;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.05391992526014511;  // std dev = 1.839, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.07628829815382038;  // std dev = 1.626, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1589957148796114;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.23126732829369231;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.030733694458624082;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.38755910868109544;  // std dev = 0.185, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14129227161663532;  // std dev = 0.032, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.20992811223940644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.08961592358876562;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.05934535252981748;  // std dev = 1.930, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.15899667759268327;  // std dev = 1.385, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16303420438850375;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22027124490653663;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.22056075018364388;  // std dev = 0.881, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.13256866805726342;  // std dev = 1.008, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.02208493991687849;  // std dev = 0.816, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.07623188023076158;  // std dev = 0.565, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.04835388390133444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return -0.030002368224409492;  // std dev = 1.924, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.025146599905670426;  // std dev = 2.847, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1471752243151274;  // std dev = 0.025, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2069965911007947;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.008959864873170754;  // std dev = 0.735, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.06462117810694713;  // std dev = 0.645, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.063900970568591;  // std dev = 0.647, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | | else return -0.026827437138652356;  // std dev = 1.016, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.20954274692090813;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.057926080349936626;  // std dev = 2.043, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return -0.002094353657049012;  // std dev = 2.947, 122.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '23.625', 'seconds']
Refined model CLL: -0.175319


******************************************
Best model found
******************************************
Results 

CLL : -0.186137 

AUC ROC : 0.982172 

AUC PR : 0.206732 

Precision : 0.147639 

Recall : 0.872792 

F1 : 0.252556 

Total Learning Time : 8.318 

Total Inference Time : 8.722068786621094 

Total revision time: 29.590942657470706
Best scored revision CLL: -0.175319


Results 

CLL : -0.186137 

AUC ROC : 0.982172 

AUC PR : 0.206732 

Precision : 0.147639 

Recall : 0.872792 

F1 : 0.252556 

Total Learning Time : 29.634481943130496 

Total Inference Time : 8.722068786621094 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.72
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.15083186192877931;  // std dev = 5.046, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7241286077720304;  // std dev = 2.820, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16050058045603116;  // std dev = 0.009, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07003884709535223;  // std dev = 1.515, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351732;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0944054405077718;  // std dev = 4.280, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6855230574426434;  // std dev = 0.995, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14067816886276688;  // std dev = 7.45e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.32324349097656224;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.10757164938223686;  // std dev = 1.314, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4338596510308287;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2941160447208322;  // std dev = 0.947, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4771215948951476;  // std dev = 1.690, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | else return 0.05204179558451151;  // std dev = 4.914, 218.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5286700175067167;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.22748959663918358;  // std dev = 1.284, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0102880728996525;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.364620455235515;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3310469010610753;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06204555946377483;  // std dev = 5.399, 239.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39798596594580915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2286424451604978;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.07418359994473873;  // std dev = 1.268, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2682751016823337;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.34843846248991256;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2930505233601969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3074964163109042;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.04546026639921454;  // std dev = 2.170, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2663101919180458;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0045156743481254875;  // std dev = 3.106, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | | else return 0.0686562937256024;  // std dev = 4.196, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2492271774757459;  // std dev = 0.188, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24613254042246835;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5796973423951706;  // std dev = 0.390, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1995837829762403;  // std dev = 0.671, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21762492418910553;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06467778400238283;  // std dev = 3.980, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18393610718021036;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18321293191692992;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41225645253329785;  // std dev = 2.453, 78.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=71 */
%   | | else return -0.1483697879582501;  // std dev = 0.203, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20335127433471567;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.018035856781109885;  // std dev = 1.396, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17366517598988623;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.42288954397370077;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.16139602349090476;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06130670522353079;  // std dev = 1.718, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.21118033459625893;  // std dev = 0.655, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -7.043262958628852E-4;  // std dev = 1.595, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15707109267948938;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0910655798434105;  // std dev = 3.077, 99.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=40 */
%   | | | else return 0.0028204134765905386;  // std dev = 1.416, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13796856471094662;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.23690877903175134;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14075168292710438;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.03309234589345772;  // std dev = 2.477, 123.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.10739755432418718;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0017935716228358431;  // std dev = 3.561, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | | else return -0.010456749458444983;  // std dev = 1.388, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.129', 'seconds']
Parameter learned model CLL:-0.195812 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.867, 84, 33], 'false,false,true,false': [5.046, 87, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.82, 9, 69], 'false,false,true,false': [0.009, 157, 0], 'false,false,false,true': [1.515, 10, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.28, 86, 34], 'false,true,false,true': [0.995, 1, 37], 'false,true,false,false': [7.45e-08, 84, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.314, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 5], 'true,false': [0.947, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.69, 4, 14], 'false,true,false': [4.914, 161, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.284, 4, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [5.399, 168, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.268, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 4], 'true,true,false': [0.183, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.17, 30, 12], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [3.106, 64, 20], 'false,false,false,false': [4.196, 82, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.188, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.39, 0, 33], 'true,false': [0.671, 98, 0], 'false,true': [0.018, 0, 3], 'false,false,true': [3.98, 85, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 3], 'true,false': [0.026, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.453, 7, 71], 'false,true,false': [0.203, 140, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.396, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.104, 0, 8], 'true,false,true': [0.0, 2, 0], 'true,false,false': [0.024, 0, 3], 'false,true,true': [1.718, 34, 11], 'false,true,false,true': [0.655, 2, 1], 'false,true,false,false': [1.595, 49, 17], 'false,false,true': [0.014, 0, 3], 'false,false,false,true': [3.077, 59, 40], 'false,false,false,false': [1.416, 8, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.015, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.021, 0, 3], 'false,true': [2.477, 94, 29], 'false,false,true': [0.848, 1, 3], 'false,false,false,true': [3.561, 89, 40], 'false,false,false,false': [1.388, 10, 4]}]
{'': [-1.6148698540002277e-16, 0.2082696180108709], 'false': [1.4802973661668753e-16, 0.2048019096038205], 'false,false': [0.2048437500000003, 0.20408163265306106], 'false,false,true': [0.20249835634451155, 0.2070196311719227], 'false,false,false': [0.22222222222222224, 0.18750000000000003], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [3.2297397080004555e-16, 0.20876028834767907], 'false': [0.0, 0.20717640875412335], 'false,false': [0.20738292180548412, 0.20365302212423236], 'false,false,true': [0.1019839277672072, 5.130177765176292e-07], 'false,false,false': [0.17648009334241413, 0.0], 'true': [0.0, -9.868649107779169e-17], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07638888888888869, 0.15793860243021604], 'false': [0.15372919322342268, 0.23763416725359246], 'false,false': [0.25, 0.2159464697948263], 'false,false,true': [nan, 0.25], 'false,false,false': [0.2159464697948263, nan], 'false,true': [0.15268666592894883, 0.15450897319028434], 'false,true,false': [0.026062409917937963, 6.608470384673551e-17], 'true': [0.09876543209876543, 0.0]}
{'': [0.07958087281725705, 0.13229885506502267], 'false': [0.1271657051695131, 0.23061993403237668], 'false,false': [0.0, 0.24148141480961077], 'false,false,false': [0.23558240391548793, 0.2222222222222222], 'false,true': [0.15875539040267567, 0.11077572556916075], 'false,true,true': [nan, 0.15875539040267567], 'true': [0.0001781292681338975, 0.1281603367492699], 'false,false,true': [nan, 0.0]}
{'': [0.0004666018545542918, 0.12619297946030208], 'false': [0.12194564155777621, 0.18873618704391956], 'false,false': [0.0, 0.1917431964548843], 'false,false,false': [0.25, 0.14610460729823946], 'true': [0.0002101790358377542, 0.00019804317100571844], 'true,true': [0.0002101790358377542, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0044517566333540145, 0.12823773066145408], 'false': [0.1121460605730257, 0.1314560426684024], 'false,false': [0.000136243563321962, 0.13264446207385472], 'false,false,false': [0.11483176848894197, 0.14313977141705495], 'true': [0.005400865582388676, 5.217095578582964e-05], 'true,true': [0.00024122869236321842, 0.006672502020646331], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11461850015447585, 0.12431867754250098], 'false': [0.00010308962858905184, 0.12675158225342004], 'false,false': [0.12675158225342004, nan], 'true': [0.024775439319881153, 0.004599475920412482], 'true,true': [0.0032292387738007185, 0.0046083682146758065], 'true,true,false': [nan, 0.004608368214675914], 'true,true,true': [0.003551292034954301, 0.0]}
{'': [8.924871244796562e-05, 0.10231381082084424], 'false': [0.10000227083121846, 0.1330264524989574], 'false,false': [0.0, 0.13926085784158893], 'false,false,false': [0.13926085784158893, nan], 'false,true': [0.07711872065382266, 0.0002950766285343663], 'false,true,true': [nan, 0.0771187206538227], 'true': [0.00010052294218412343, 8.487824471651445e-05], 'false,false,true': [0.0, nan]}
{'': [0.04671218312447499, 0.08085555633798293], 'false': [0.053732938294594336, 0.10151674386595808], 'false,false': [6.205916133967167e-05, 0.10410857481287965], 'false,false,false': [0.09564306731544188, 0.16700366275391543], 'false,true': [0.065620520619985, 0.044935207633472675], 'true': [0.0013558011554608215, 0.08204681090088242], 'true,false': [0.0, 0.00018883509582958793], 'false,true,false': [0.14322471247040838, 0.03854140938685013]}
{'': [0.0008593795196833024, 0.0798354650302407], 'false': [0.04988420816284585, 0.1045496934582102], 'false,false': [0.17979199422412845, 0.10214640729767879], 'false,false,false': [0.09829327674977353, 0.13758255002641334], 'true': [0.0011002331281309355, 0.0001502953121534159], 'true,true': [0.0011002331281309355, nan], 'true,true,true': [3.3763538061650934e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.899
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, G), location(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.05422736647206138;  // std dev = 2.835, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.1563945491345993;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6870570972405362;  // std dev = 2.692, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.1477370690939819;  // std dev = 0.199, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.02365854689619907;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.004691601542941598;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.585401360064135;  // std dev = 0.039, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.32538971895818475;  // std dev = 0.892, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.0546697563401036;  // std dev = 2.548, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.13537500348753945;  // std dev = 3.092, 63.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=21 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5657705865331065;  // std dev = 1.785, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.12783460091855656;  // std dev = 0.137, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6748468659488037;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1280632596446656;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.004053757194777546;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.3062013952172913;  // std dev = 0.987, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.4346264868382487;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14587778682197192;  // std dev = 0.050, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.047972019827952773;  // std dev = 2.090, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( location(A, G) )
%   | | | then return 0.08437334081744216;  // std dev = 4.647, 187.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=59 */
%   | | | else return 0.1958113026497581;  // std dev = 1.010, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.38877384911359036;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.0543110459071377;  // std dev = 0.585, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2609803471202899;  // std dev = 0.986, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3516701887864084;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3968868147385413;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then if ( phenotype(F, G), enzyme(F, H) )
%   | | | then return -0.09250942057250967;  // std dev = 0.767, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.046917893079699;  // std dev = 2.616, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.0766279789557655;  // std dev = 2.392, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.09261974621939104;  // std dev = 3.575, 111.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=38 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3012730453002307;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.02474131473742585;  // std dev = 0.618, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.15684225314117548;  // std dev = 1.039, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3046216647832918;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.23708567993783605;  // std dev = 0.706, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2412359699621826;  // std dev = 0.000623, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(G, I), phenotype(A, J) )
%   | | | then return -0.12944911587288482;  // std dev = 1.050, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06905053490660178;  // std dev = 2.273, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else return -0.1733813413947319;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.12259815583886166;  // std dev = 1.181, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.04832290062131074;  // std dev = 3.537, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.0848184619040972;  // std dev = 2.969, 69.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.264890099316668;  // std dev = 0.087, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.43563831514309054;  // std dev = 0.224, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.5998176209272914;  // std dev = 0.813, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.16012201735210346;  // std dev = 0.060, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.06401178264008542;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4846992423639159;  // std dev = 0.740, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return -0.16921329812615454;  // std dev = 0.264, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1374371793669517;  // std dev = 1.845, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.05923842617963184;  // std dev = 2.037, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1983259145115354;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E) )
%   | | then return 0.17902279444529814;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3197981780017158;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.13877927839020224;  // std dev = 1.914, 37.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=26 */
%   | | | else return 0.3765979661414119;  // std dev = 2.335, 53.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=45 */
%   | | else return -0.14067447569233058;  // std dev = 0.029, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1612925476946102;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.050620537330735876;  // std dev = 0.793, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.06637645746561162;  // std dev = 0.690, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17348507021949966;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.46302536785781717;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.20460458653654026;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( phenotype(A, H) )
%   | | then return -0.011518173206889788;  // std dev = 0.229, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06655910097241494;  // std dev = 1.283, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return -0.016107507415271116;  // std dev = 0.566, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -4.0163512781846156E-4;  // std dev = 0.890, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.015421161405324813;  // std dev = 2.991, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | | | else return 0.06294539858792889;  // std dev = 1.103, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15682085669363202;  // std dev = 0.050, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.09709057892433944;  // std dev = 1.168, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.0312210147988712;  // std dev = 0.400, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3397206042448752;  // std dev = 0.844, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.056301390380285726;  // std dev = 1.605, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | else if ( interaction(I, A), phenotype(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.255461742498306;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.004769582184038966;  // std dev = 1.717, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.04114250472057986;  // std dev = 2.342, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.0765186331830739;  // std dev = 1.062, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.477', 'seconds']
Refined model CLL: -0.175252


******************************************
Best model found
******************************************
Results 

CLL : -0.172844 

AUC ROC : 0.991968 

AUC PR : 0.34614 

Precision : 0.230558 

Recall : 0.893617 

F1 : 0.366545 

Total Learning Time : 12.899 

Total Inference Time : 22.089666843414307 

Total revision time: 56.27168588066101
Best scored revision CLL: -0.175252


Results 

CLL : -0.172844 

AUC ROC : 0.991968 

AUC PR : 0.34614 

Precision : 0.230558 

Recall : 0.893617 

F1 : 0.366545 

Total Learning Time : 66.35777096176147 

Total Inference Time : 22.089666843414307 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.916
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.0749321518827281;  // std dev = 4.927, 143.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=31 */
%   | | | else return 0.16427138407910336;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.058148935099512286;  // std dev = 1.789, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6480448407823829;  // std dev = 0.964, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6418084178663513;  // std dev = 3.899, 95.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=76 */
%   | | | else return -0.1570126368842356;  // std dev = 0.083, 196.000 (wgt'ed) examples reached here.  /* #neg=196 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13663631822783992;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.18425536584688754;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5665417881314162;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.42756180799972715;  // std dev = 0.942, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08124680863198927;  // std dev = 4.401, 134.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6607735919153759;  // std dev = 1.688, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.1427369666078415;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8260080806974441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.06288303311358977;  // std dev = 1.631, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43901080158499706;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.07951414895410223;  // std dev = 1.592, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.439823588837771;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48001289461142055;  // std dev = 2.138, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.017371308855980774;  // std dev = 5.294, 261.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5397893420908413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.22380343213823548;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.025704734477546752;  // std dev = 1.236, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.35615071526917763;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.38202625502837445;  // std dev = 0.133, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06861999783415923;  // std dev = 5.816, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40605581554602155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06824463514520089;  // std dev = 1.668, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.09367592023001232;  // std dev = 0.854, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.3730532334120932;  // std dev = 0.253, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3341867249150627;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.012421648810109355;  // std dev = 2.846, 81.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18832650551845845;  // std dev = 0.889, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.026756874008403663;  // std dev = 2.337, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | | else return 0.10449479494425495;  // std dev = 4.543, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2720939863081692;  // std dev = 0.255, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.24591164038524538;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.24174814241302045;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5422029234754641;  // std dev = 1.149, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1750162860385698;  // std dev = 0.603, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26335635108841715;  // std dev = 0.088, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07880419366374436;  // std dev = 4.342, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1816667687588106;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21059504827825687;  // std dev = 0.082, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2925186324873449;  // std dev = 4.093, 106.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=82 */
%   | | else return -0.15123765214387344;  // std dev = 0.446, 201.000 (wgt'ed) examples reached here.  /* #neg=201 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2031941854299314;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.047213883045289236;  // std dev = 1.401, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18053060562442833;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13187223308099338;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21039325118673088;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.03494450964895123;  // std dev = 1.583, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.22151320179679349;  // std dev = 0.565, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.049043436294799375;  // std dev = 1.497, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.018508958583231965;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018066063433820955;  // std dev = 4.038, 170.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=47 */
%   | | | else return -0.049439188372595755;  // std dev = 1.480, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.07317317746347883;  // std dev = 1.198, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.16304505908449893;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18834546280935102;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01699003158409437;  // std dev = 2.641, 120.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.019543572649464196;  // std dev = 0.880, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.04139773526133234;  // std dev = 3.905, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return 0.053740664376801354;  // std dev = 1.379, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.178', 'seconds']
Parameter learned model CLL:-0.198008 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.927, 112, 31], 'false,false,true,false': [5.588, 102, 45], 'false,false,false,true': [1.789, 16, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.964, 1, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.899, 19, 76], 'false,false,true,false': [0.083, 196, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.028, 0, 11], 'true,false': [0.942, 1, 6], 'false,true,true': [4.401, 100, 34], 'false,true,false,true': [1.688, 3, 48], 'false,true,false,false': [0.0, 83, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.631, 12, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.074, 0, 10], 'true,false': [1.592, 4, 7], 'false,true,true,true': [0.117, 0, 3], 'false,true,true,false': [2.138, 6, 21], 'false,true,false': [5.294, 203, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.236, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.13, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.133, 0, 10], 'false,true': [5.816, 195, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.668, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.854, 1, 5], 'true,true,false': [0.253, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.03, 0, 2], 'false,true': [2.846, 62, 19], 'false,false,true': [0.889, 1, 8], 'false,false,false,true': [2.337, 50, 11], 'false,false,false,false': [4.543, 94, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.255, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.149, 2, 33], 'true,false': [0.603, 82, 0], 'false,true': [0.088, 0, 5], 'false,false,true': [4.342, 97, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.082, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [4.093, 24, 82], 'false,true,false': [0.446, 201, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.401, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.123, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.097, 0, 5], 'false,true,true': [1.583, 31, 13], 'false,true,false,true': [0.565, 1, 8], 'false,true,false,false': [1.497, 50, 11], 'false,false,true': [0.901, 1, 5], 'false,false,false,true': [4.038, 123, 47], 'false,false,false,false': [1.48, 17, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.198, 2, 7], 'true,true,true,false': [0.116, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.078, 0, 3], 'false,true': [2.641, 88, 32], 'false,false,true': [0.88, 1, 5], 'false,false,false,true': [3.905, 102, 47], 'false,false,false,false': [1.379, 9, 4]}]
{'': [-2.0898315757650005e-16, 0.19912627252734183], 'false': [-2.5376526277146434e-16, 0.19146722164412178], 'false,false': [0.19338882282996472, 0.15999999999999986], 'false,false,true': [0.16978825370433875, 0.21241149521033012], 'false,false,false': [0.15999999999999986, nan], 'true': [-1.4802973661668753e-16, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05246913580246929, 0.19748156502206465], 'false': [-6.344131569286608e-17, 0.19356115324978254], 'false,false': [0.1925633348425213, 0.2130177514792899], 'false,false,false': [0.2040816326530612, 0.22222222222222218], 'false,false,true': [0.15998405264432136, 3.495825721124427e-05], 'true': [0.0, 0.06632653061224504], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.05394024321977023, 0.16236533745261342], 'false': [0.16067589617597006, 0.18880418785413913], 'false,false': [0.18880418785413913, nan], 'false,false,true': [0.0, 0.16634798852150165], 'false,true': [0.1445481018707252, 0.1734556205486302], 'false,true,false': [0.05584147559608338, -1.070094481566416e-17], 'true': [7.136484490337254e-05, 0.1267874609393218]}
{'': [0.15315768744114186, 0.1349582773663562], 'true': [0.0005483838406774577, 0.23035158786662902], 'false': [0.13151122357948264, 0.19715196985595626], 'false,false': [0.0, 0.195755615490427], 'false,false,false': [0.24000000000000005, 0.15288198149965074], 'false,true': [0.1528982261885553, 0.10736895361931408], 'false,true,true': [0.004550644435036351, 0.16921977279797829], 'false,false,true': [nan, 0.0]}
{'': [0.0021972673981488174, 0.12577658641099754], 'false': [0.1221337923532962, 0.1925816247403586], 'false,false': [0.0, 0.19872969550536923], 'false,false,false': [0.19872969550536923, nan], 'true': [0.0024099992924162855, 0.0017726606659963506], 'true,true': [0.0024099992924162855, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06382712190297908, 0.12222627390658831], 'false': [0.09997428124823542, 0.1297191513348706], 'false,false': [0.0878357747595973, 0.13092283502266783], 'false,false,false': [0.08951835513230802, 0.14333614964778407], 'true': [0.07165233020378008, 0.0004508788745462289], 'true,true': [0.12163549975025344, 0.007109543924462441], 'true,false': [nan, 0.0004508788745462289]}
{'': [0.11181029777636897, 0.12770427688593866], 'false': [0.0015336953692089428, 0.1309422636535883], 'false,false': [0.1309422636535883, nan], 'true': [0.043086830356611386, 0.004432810443142923], 'true,true': [0.004091487674330874, 0.041278808085023135], 'true,true,false': [0.0, 0.0376901698880668], 'true,true,true': [0.0043214088169095145, 0.0]}
{'': [0.0005491650012447283, 0.10170533695988983], 'false': [0.0997346639056819, 0.14187993759820952], 'false,false': [0.0, 0.15105593218534616], 'false,false,false': [0.15105593218534616, nan], 'false,true': [0.15805101217781492, 0.0009889712208760919], 'false,true,true': [nan, 0.1580510121778151], 'true': [0.0, 0.0005212340581450472], 'false,false,true': [0.0, nan]}
{'': [0.0021056542276695414, 0.08070457897177306], 'false': [0.0500593134753412, 0.09842451934496695], 'false,false': [0.13527703282868095, 0.09726496478691762], 'false,false,false': [0.09589842539425641, 0.10427149442370173], 'false,true': [0.05695248622696736, 0.04479210045451769], 'false,true,false': [0.03545702277345089, 0.03675786342992838], 'true': [0.0016850148147198071, 0.00261543971276101], 'true,false': [0.0, 0.0019000298023335472]}
{'': [0.09588670556831004, 0.08730006063993427], 'true': [0.11001245853811412, 0.002008382026901826], 'true,true': [0.11001245853811412, nan], 'true,true,true': [0.15952664000435474, 0.002261753172051397], 'false': [0.05812317686319932, 0.10671171231667131], 'false,false': [0.12915633729677253, 0.10586179141764764], 'false,false,false': [0.10233098228131551, 0.14619017368361728]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 15.592
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5618526388032159;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return -0.03768439823382102;  // std dev = 2.993, 96.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=10 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18029658610622287;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7414893607713331;  // std dev = 0.023, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7101968007723035;  // std dev = 2.910, 86.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=76 */
%   | | | else return -0.1518220542524177;  // std dev = 0.205, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.09817157680185377;  // std dev = 1.697, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1652457771008338;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5813673835734255;  // std dev = 0.028, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5567263917824388;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.1040340673234648;  // std dev = 3.630, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | | else return 0.049970559016001566;  // std dev = 1.855, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6121267039473318;  // std dev = 2.101, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.13705213882491016;  // std dev = 0.126, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.7930943807245554;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2633003083928483;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.1920866624440143;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4185414917251939;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3182166288276098;  // std dev = 0.346, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( phenotype(F, H), interaction(F, F) )
%   | | | then return -0.025643354250714553;  // std dev = 1.651, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.07209422130799059;  // std dev = 5.054, 210.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=62 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return 0.33948768118298905;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.14568268337329296;  // std dev = 1.892, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4897707635786138;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.04906345392561399;  // std dev = 1.119, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.05992410864155065;  // std dev = 1.140, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.2184185162469489;  // std dev = 0.335, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2525734303495996;  // std dev = 0.280, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5474398225103217;  // std dev = 0.464, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.1652073332260406;  // std dev = 0.805, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.13590772452921374;  // std dev = 2.279, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.0653162738134391;  // std dev = 4.072, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3703551735202101;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.16391033149156536;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.07234256615465447;  // std dev = 0.965, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33151896845961387;  // std dev = 0.101, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( complex(D, H), interaction(G, D) )
%   | | | then return -0.018072931439705932;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.18956716700269638;  // std dev = 0.286, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(D, I), interaction(J, D) )
%   | | | then return 0.06060539052814028;  // std dev = 2.778, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return -0.0064646181863322605;  // std dev = 1.649, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | else if ( interaction(K, A), enzyme(A, L) )
%   | | then if ( enzyme(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4997977397985808;  // std dev = 0.393, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.16427438979443296;  // std dev = 0.448, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.031247371979134925;  // std dev = 1.276, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.039106632357209646;  // std dev = 3.392, 121.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26546580598403885;  // std dev = 0.093, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.13194513567049315;  // std dev = 1.071, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.48524706840877;  // std dev = 0.856, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1473110950440028;  // std dev = 0.075, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.13630497864951774;  // std dev = 0.911, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4424411087205588;  // std dev = 1.468, 32.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=28 */
%   | | | else return -0.16704964826631244;  // std dev = 0.356, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.010192138866644263;  // std dev = 2.043, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.07257037424663047;  // std dev = 1.400, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.14882782911370707;  // std dev = 1.102, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.006585371123746936;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.2548991161801425;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.16163419079533284;  // std dev = 1.417, 18.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=14 */
%   | | | else return 0.2993815820844664;  // std dev = 2.744, 80.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=68 */
%   | | else return -0.133771125343424;  // std dev = 0.033, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.1827190233153888;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.013013927190929872;  // std dev = 0.947, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13993190885990858;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20816185640994203;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.19400489276834365;  // std dev = 0.688, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.2021784962000603;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H), interaction(I, G) )
%   | | then return 0.009180412143137437;  // std dev = 0.183, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else return -0.04122154943663121;  // std dev = 0.167, 78.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=17 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return 0.03934588190868902;  // std dev = 1.953, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return -0.04840863957075179;  // std dev = 1.447, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.027548077200500416;  // std dev = 0.994, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05560694455764083;  // std dev = 2.512, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.10858354213355041;  // std dev = 0.250, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.16688060092046597;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.3333022726542405;  // std dev = 0.197, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.05520526635454127;  // std dev = 1.541, 24.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=16 */
%   | | else return -0.012935090036720708;  // std dev = 0.229, 213.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=52 */
%   | else if ( interaction(A, H) )
%   | | then if ( phenotype(A, I), phenotype(H, I) )
%   | | | then return 0.2569348119896088;  // std dev = 0.913, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.01842307834874506;  // std dev = 0.788, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.18797695862438935;  // std dev = 0.413, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.2483209188819763;  // std dev = 0.476, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.129', 'seconds']
Refined model CLL: -0.179443


******************************************
Best model found
******************************************
Results 

CLL : -0.159078 

AUC ROC : 0.992095 

AUC PR : 0.487581 

Precision : 0.331343 

Recall : 0.837736 

F1 : 0.474866 

Total Learning Time : 15.592 

Total Inference Time : 23.342135667800903 

Total revision time: 61.675588710784915
Best scored revision CLL: -0.179443


Results 

CLL : -0.159078 

AUC ROC : 0.992095 

AUC PR : 0.487581 

Precision : 0.331343 

Recall : 0.837736 

F1 : 0.474866 

Total Learning Time : 71.76167379188539 

Total Inference Time : 23.342135667800903 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.315
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.1297538733711163;  // std dev = 5.661, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.558260211045385;  // std dev = 1.262, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7313730497173964;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.804995123001409;  // std dev = 1.388, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15789698683178446;  // std dev = 0.012, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09890284030448647;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1771301841647537;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.33490627096467157;  // std dev = 1.211, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.6046239971372583;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.057044582621614666;  // std dev = 2.097, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6351110507592723;  // std dev = 1.681, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.13845962982616153;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5524261025068926;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1270580734901987;  // std dev = 3.664, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06900412674075829;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4544019516303323;  // std dev = 0.089, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5101583293389491;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39540863867070175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41703455474861845;  // std dev = 0.656, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.04287914781779354;  // std dev = 4.397, 212.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41533634111149653;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.582591267919724;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.007076776344371439;  // std dev = 2.019, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.131118377212034;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3718217360457091;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3535376019788192;  // std dev = 0.111, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.07180209232932086;  // std dev = 4.315, 187.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31923613632513415;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4380274744712106;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.08103861391135167;  // std dev = 3.636, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.059642289131944914;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26219866928695196;  // std dev = 0.053, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.41945448367505556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31125607282291207;  // std dev = 0.081, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.30294870896652315;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3482801574719292;  // std dev = 0.093, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05119459086595464;  // std dev = 1.016, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29517787272950446;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.052834962661693755;  // std dev = 2.832, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | | else return 0.06568971083238687;  // std dev = 4.757, 155.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24653159757216034;  // std dev = 0.160, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23089310736811108;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21012857569104915;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6523753915386813;  // std dev = 0.703, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18450933121024576;  // std dev = 0.479, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.07430392805368062;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0497304873646577;  // std dev = 3.484, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17607633101033596;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2116767663622212;  // std dev = 0.077, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4590962107594795;  // std dev = 0.768, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14206724187820371;  // std dev = 0.207, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19263366873971072;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.12322021473223962;  // std dev = 2.840, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15691826788479618;  // std dev = 0.047, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07754534489310139;  // std dev = 0.286, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.18197852172934323;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08196723172507903;  // std dev = 0.425, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2109890927901027;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0058487700222418625;  // std dev = 1.195, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19467413630249336;  // std dev = 0.036, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024253009827428406;  // std dev = 2.768, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | | else return 0.04064476649785303;  // std dev = 2.979, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14569628605515156;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14589038038495092;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.11589299801201558;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14935343559691366;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03152153699168536;  // std dev = 1.564, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.165994613781026;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.006118154375029022;  // std dev = 2.797, 136.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=36 */
%   | | | else return 0.010960398754886365;  // std dev = 3.028, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.194', 'seconds']
Parameter learned model CLL:-0.178056 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.661, 118, 44], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [1.262, 2, 9], 'false,true,true': [0.041, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [1.388, 2, 52], 'false,false,true,false': [0.012, 133, 0], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [3.144, 29, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [1.211, 2, 6], 'true,false': [0.092, 0, 8], 'false,true,true': [2.097, 27, 8], 'false,true,false,true': [1.681, 3, 48], 'false,true,false,false': [0.0, 106, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.664, 43, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.089, 0, 9], 'true,false': [0.055, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.656, 1, 3], 'false,true,false': [4.397, 160, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.019, 21, 5], 'false,false,false,false': [3.144, 29, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.111, 0, 9], 'false,true': [4.315, 131, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.636, 43, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.053, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.081, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.093, 0, 3], 'false,true': [1.016, 17, 3], 'false,false,true': [0.059, 0, 6], 'false,false,false,true': [2.832, 58, 23], 'false,false,false,false': [4.757, 109, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.16, 0, 12], 'true,true,true,false': [0.044, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.703, 0, 36], 'true,false': [0.479, 83, 0], 'false,true': [0.927, 1, 5], 'false,false,true': [3.484, 87, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.039, 0, 5], 'true,false': [0.077, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.768, 0, 56], 'false,true,false': [0.207, 139, 0], 'false,false,true,true': [0.039, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.84, 29, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.047, 0, 9], 'true,false,true': [0.286, 1, 1], 'true,false,false': [0.04, 0, 4], 'false,true,true': [0.425, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.195, 33, 14], 'false,false,true': [0.036, 0, 5], 'false,false,false,true': [2.768, 86, 36], 'false,false,false,false': [2.979, 39, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.004, 0, 5], 'true,true,true,false': [0.029, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.039, 0, 4], 'false,true': [1.564, 57, 17], 'false,false,true': [0.032, 0, 5], 'false,false,false,true': [2.797, 100, 36], 'false,false,false,false': [3.028, 44, 20]}]
{'': [0.06222222222222188, 0.20770380918476392], 'false': [0.12244897959183662, 0.20118983234180773], 'false,false': [0.19619513232011984, 0.21484374999999956], 'false,false,false': [0.21445847890352004, 0.22222222222222224], 'false,false,true': [0.18750000000000014, 0.19783569577808338], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.0, 0.18750000000000006], 'true': [-2.9605947323337506e-16, 0.1388888888888887]}
{'': [0.105079675889802, 0.2088173259777244], 'false': [0.0005664054911391029, 0.2049592477218416], 'false,false': [0.20073139869213003, 0.21667511798484673], 'false,false,false': [0.1938401985841395, 0.22469008264462795], 'false,false,true': [0.03569769866819033, 1.1689235655177266e-06], 'true': [0.0, 0.1447213848587302], 'false,true': [0.00042480411835421616, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.11035250058027676, 0.16278658612731883], 'false': [0.14540101198945224, 0.21132732759403833], 'false,false': [0.21257029252789225, 0.18750000000000003], 'false,false,true': [0.0, 0.2131172685286075], 'false,false,false': [0.18750000000000003, nan], 'false,true': [0.1256464220272495, 0.1492376550370177], 'false,true,false': [0.055394762204152584, -7.96008961051999e-17], 'true': [0.18326293752631517, 0.0010682377283831035]}
{'': [0.0014949992655591668, 0.12163647258713427], 'false': [0.09416579737615148, 0.20322673319364684], 'false,false': [0.006993552635406408, 0.2039526252903778], 'false,false,false': [0.15685407211194946, 0.22469008264462761], 'false,true': [0.0862119947437185, 0.09120190331956009], 'false,true,true': [0.0, 0.1076714573804064], 'false,false,true': [0.0, 0.0], 'true': [0.0008790855166882001, 0.0006051466637644332]}
{'': [0.0010066122070224884, 0.12857432062382554], 'false': [0.09955709974664785, 0.20816640716633672], 'false,false': [0.003527845504633864, 0.2117400699573472], 'false,false,false': [0.21327619981943208, 0.18750000000000003], 'false,false,true': [0.0, 0.0], 'true': [0.0001463135816611949, 0.0013651596168587786], 'true,true': [0.0001463135816611949, nan]}
{'': [0.003402612881534444, 0.12320207380845966], 'false': [0.05162360193052985, 0.12804985302995336], 'false,false': [0.0005896236849548172, 0.1299339386355121], 'false,false,false': [0.09904513131616034, 0.1460191162020727], 'true': [0.0034220572573453773, 0.002579716008261853], 'true,true': [0.0004596299680173684, 0.0], 'true,false': [0.0016469465432478597, 0.0028544895081163237], 'true,false,true': [0.00325938693937447, 0.0]}
{'': [0.13984363517438633, 0.10077759663704895], 'true': [0.045230687648171605, 0.0027593876139967457], 'false': [0.14316395458195874, 0.09868188318825678], 'false,false': [0.09868188318825678, nan], 'true,true': [0.0019859208127573596, 0.018518808431098512], 'true,true,false': [0.0, 0.01374721312431563], 'true,true,true': [0.00212045559193715, 0.0009690872440824699]}
{'': [0.0008273208549698692, 0.09553956131078398], 'false': [0.07722839392569034, 0.1583433924065006], 'false,false': [0.0007423041056028243, 0.16458713978631706], 'false,false,false': [0.16458713978631706, nan], 'false,true': [0.01054505162088848, 0.00030767756252523724], 'false,true,true': [nan, 0.01054505162088848], 'true': [0.0003072917459795932, 0.0006635862736472591], 'false,false,true': [0.0007423041056028243, nan]}
{'': [0.012617442277283612, 0.07450583574548851], 'false': [0.028399309084431917, 0.08969335521872662], 'false,false': [0.0002638893478159321, 0.09143123589507841], 'false,false,false': [0.06282221167618676, 0.1504077734394546], 'false,true': [0.0129001239269463, 0.030771572507562458], 'false,true,false': [0.0, 0.03036334594019932], 'true': [0.00024209341732814305, 0.028914973540964686], 'true,false': [0.0410316363901389, 0.00040576300082277583]}
{'': [0.00029375106823965283, 0.07047054254487473], 'false': [0.033060853779971235, 0.08348295158710935], 'false,false': [0.00020729398913806873, 0.08495344253166459], 'false,false,false': [0.057504015285023295, 0.14326753124594607], 'true': [0.00023048753083317885, 0.0003866345204579409], 'true,true': [0.00010959346098012371, 0.0], 'true,true,true': [3.162730445088746e-06, 0.00028695446649132833], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.999
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.16481560176617832;  // std dev = 3.993, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.037096303520565005;  // std dev = 3.736, 95.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=17 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.17336632640386004;  // std dev = 4.456, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7598060694725448;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8395904333840739;  // std dev = 0.101, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15867882334289277;  // std dev = 0.165, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.08570796378859227;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.18705931513994412;  // std dev = 2.904, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5753897189581847;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.04237980771774738;  // std dev = 1.362, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.21457513216574145;  // std dev = 1.421, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.666227530154563;  // std dev = 1.018, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13760152105462656;  // std dev = 0.120, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5453859756592717;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12248534977843502;  // std dev = 3.676, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else return 0.15693258922529094;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4265111156821929;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5454948530440533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5897137793019526;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.420374615705843;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.05129338358634627;  // std dev = 4.130, 188.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4101510501105263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5767777719927007;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2703038642054703;  // std dev = 1.935, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.08415153118111411;  // std dev = 3.026, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.32711422649050587;  // std dev = 0.026, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.487241606180182;  // std dev = 0.724, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.13607645256875497;  // std dev = 0.142, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.007661422758901102;  // std dev = 1.334, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.08316977359918953;  // std dev = 2.967, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return -0.12534281872593267;  // std dev = 0.624, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.4335901680125551;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1079347127607726;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.4409989546331264;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.27020627601812464;  // std dev = 0.031, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.28708607955150306;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11757120671324658;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.026010376250154458;  // std dev = 0.553, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.14374200565927864;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.061728702997118384;  // std dev = 0.491, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2603357404051994;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.04294695778623414;  // std dev = 3.768, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
%   | | | else return 0.017745409572419466;  // std dev = 3.782, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4840805321114707;  // std dev = 0.230, 52.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=51 */
%   | else return -0.1889880499141928;  // std dev = 0.077, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( enzyme(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( phenotype(A, H), location(F, I) )
%   | | | then return 0.3099066700989793;  // std dev = 0.528, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -2.8098335742261375E-4;  // std dev = 1.579, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else return 0.0022152947720991915;  // std dev = 0.251, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4453015082437353;  // std dev = 0.302, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.13251403845450413;  // std dev = 0.079, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.05362353520140137;  // std dev = 1.383, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.09795187404622448;  // std dev = 1.183, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.13600501063851583;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.020116912616886196;  // std dev = 0.870, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.17106675599683036;  // std dev = 0.062, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.5137772061810839;  // std dev = 0.324, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.37063952454839255;  // std dev = 0.684, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else return -0.12968725242916687;  // std dev = 0.031, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.19070574343826135;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, J) )
%   | | | then return 0.008855710036758953;  // std dev = 3.070, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.34447448526377683;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.11407376739381954;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.030689049195856022;  // std dev = 0.728, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.14716324570863115;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07107776985703387;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19215113478481666;  // std dev = 0.053, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.046148017593490354;  // std dev = 1.621, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1663075646250739;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.03468612477553067;  // std dev = 2.014, 80.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=27 */
%   | | | else return 0.01801134791722453;  // std dev = 3.446, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.11975441726051347;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1270380667643745;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.34081453751806395;  // std dev = 0.217, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08907708602587362;  // std dev = 0.046, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return 0.02860728832618567;  // std dev = 0.686, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.03306139175995819;  // std dev = 0.707, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.14461316373210673;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M) )
%   | | | then return 0.034032968171916686;  // std dev = 3.773, 158.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=54 */
%   | | | else return -0.08877365050406799;  // std dev = 1.033, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '19.106', 'seconds']
Refined model CLL: -0.172832


******************************************
Best model found
******************************************
Results 

CLL : -0.191951 

AUC ROC : 0.983898 

AUC PR : 0.237623 

Precision : 0.130322 

Recall : 0.906137 

F1 : 0.227871 

Total Learning Time : 6.999 

Total Inference Time : 7.706188917160034 

Total revision time: 26.276548971176148
Best scored revision CLL: -0.172832


Results 

CLL : -0.191951 

AUC ROC : 0.983898 

AUC PR : 0.237623 

Precision : 0.130322 

Recall : 0.906137 

F1 : 0.227871 

Total Learning Time : 36.36263405227661 

Total Inference Time : 7.706188917160034 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.538
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.08621911053810886;  // std dev = 3.168, 57.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=13 */
%   | | | else return 0.15360348055405723;  // std dev = 5.242, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8217240738390358;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15880340179568955;  // std dev = 0.044, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09842737949935167;  // std dev = 1.927, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1833343777487834;  // std dev = 2.142, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5588443971225469;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5825147748355338;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04374093735152035;  // std dev = 2.783, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6192365473102558;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.14121925998134782;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6424608127305252;  // std dev = 0.213, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07730985101385587;  // std dev = 2.517, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06604950054324403;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41561741621618253;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2509421841689066;  // std dev = 1.274, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5445407963868806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6008573164308113;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.061971458974652095;  // std dev = 4.359, 171.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39649685083911757;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5362034818249767;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.10488715312827494;  // std dev = 1.885, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.08794295078825982;  // std dev = 2.187, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3351149360927951;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37394542107561035;  // std dev = 0.091, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04991160805438357;  // std dev = 4.488, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30649011052056374;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.35496702463436536;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12039101668460171;  // std dev = 2.441, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return -3.8624218096296073E-4;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25021725647019777;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.32037891510750377;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24544225171992284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3130355931402838;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.016628626653779528;  // std dev = 1.197, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07035575054017595;  // std dev = 1.269, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3015235953371265;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -7.108294474783075E-4;  // std dev = 2.329, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.049707577644193625;  // std dev = 4.615, 162.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.18005451777937378;  // std dev = 1.031, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.25592077060474305;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23053547303398292;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5780994406256158;  // std dev = 1.057, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17207650954143386;  // std dev = 0.440, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26083948828042747;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0958236547569958;  // std dev = 3.235, 89.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17983424847451623;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11161921297290182;  // std dev = 0.977, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41116708907116667;  // std dev = 1.773, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14379130029132717;  // std dev = 0.414, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16459439256079278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2339621848730417;  // std dev = 0.054, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.021674834646730673;  // std dev = 2.585, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1662110346037319;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20958707537260945;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21051786878047035;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.10536966142955399;  // std dev = 0.401, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23847396729564893;  // std dev = 0.155, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.04045291102124138;  // std dev = 1.938, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1955944128027913;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021213658009537242;  // std dev = 2.747, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.0672884963969976;  // std dev = 2.419, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14372272160686672;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14744531725159465;  // std dev = 0.033, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1310826626054563;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12131048973403265;  // std dev = 0.778, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1811897133817454;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.029791956991691685;  // std dev = 1.852, 107.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1666370454748102;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.019493206344925823;  // std dev = 2.763, 107.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=31 */
%   | | | else return 0.04725510645495991;  // std dev = 2.423, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.183', 'seconds']
Parameter learned model CLL:-0.177473 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.168, 44, 13], 'false,false,true,false': [5.242, 93, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [0.993, 1, 52], 'false,false,true,false': [0.044, 115, 0], 'false,false,false,true': [1.927, 14, 5], 'false,false,false,false': [2.142, 13, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.061, 0, 4], 'false,true,true': [2.783, 50, 14], 'false,true,false,true': [1.673, 3, 42], 'false,true,false,false': [0.0, 78, 0], 'false,false,true,true': [0.213, 0, 3], 'false,false,true,false': [2.517, 25, 9], 'false,false,false,true': [1.481, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.004, 0, 6], 'true,false': [1.274, 2, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.172, 0, 6], 'false,true,false': [4.359, 122, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.885, 12, 5], 'false,false,false,false': [2.187, 17, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.051, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.091, 0, 6], 'false,true': [4.488, 141, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.069, 0, 2], 'false,false,false,true': [2.441, 18, 9], 'false,false,false,false': [1.518, 10, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.009, 0, 5], 'true,true,false': [0.094, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.076, 0, 3], 'true,false,false': [1.197, 2, 4], 'false,true': [1.269, 27, 5], 'false,false,true': [0.059, 0, 5], 'false,false,false,true': [2.329, 51, 13], 'false,false,false,false': [4.615, 115, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [1.031, 1, 13], 'true,true,true,false': [0.089, 0, 3], 'true,true,false,true': [0.04, 0, 3], 'true,true,false,false': [1.057, 1, 33], 'true,false': [0.44, 100, 0], 'false,true': [0.004, 0, 3], 'false,false,true': [3.235, 58, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.977, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.773, 3, 56], 'false,true,false': [0.414, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.054, 0, 2], 'false,false,false,true': [2.585, 42, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.048, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.096, 0, 5], 'false,true,true': [0.401, 16, 1], 'false,true,false,true': [0.155, 0, 6], 'false,true,false,false': [1.938, 49, 17], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.747, 80, 31], 'false,false,false,false': [2.419, 25, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 8], 'true,true,true,false': [0.033, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.778, 1, 2], 'true,false': [0.058, 0, 3], 'false,true': [1.852, 83, 24], 'false,false,true': [0.003, 0, 3], 'false,false,false,true': [2.763, 76, 31], 'false,false,false,false': [2.423, 26, 12]}]
{'': [0.05859374999999978, 0.20983104559454538], 'false': [-2.5376526277146434e-16, 0.20083175803402775], 'false,false': [0.19943450631281395, 0.20701963117192096], 'false,false,false': [0.19463667820069216, 0.24489795918367335], 'false,false,true': [0.1760541705140038, 0.2081611570247939], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.2170463370903824], 'false': [-6.344131569286608e-17, 0.21373773483717454], 'false,false': [0.2135051220964305, 0.2146802871736685], 'false,false,false': [0.1954203180402685, 0.22946508429442738], 'false,false,true': [0.018609251135516397, 1.7120532933899846e-05], 'true': [0.0, 0.00044937956321764653], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.0005709962416524069, 0.15702351596402161], 'false': [0.1466055322500392, 0.19759057847430972], 'false,false': [0.19627404839516713, 0.19950713516073784], 'false,false,false': [0.19950713516073784, nan], 'false,false,true': [0.015170860656168536, 0.18635680011777656], 'false,true': [0.12105948109511513, 0.15692142414060797], 'false,true,false': [0.06219614697786548, -6.832141690000964e-17], 'true': [0.000294131801192098, 0.0009214964801300685]}
{'': [0.10163248944394486, 0.13361201383971416], 'false': [0.11756853518808874, 0.19748438039305508], 'false,false': [0.0043373206092042205, 0.20335539116905296], 'false,false,false': [0.2090510024261177, 0.19920195591367362], 'false,true': [0.00461908123441671, 0.11111049761993658], 'true': [2.2074591887003927e-06, 0.14749615386724294], 'false,true,true': [0.0, 0.004935849473982771], 'false,false,true': [0.0, 0.0]}
{'': [0.0010879414008610143, 0.12004922983335081], 'false': [0.10224777793261813, 0.19961747375167607], 'false,false': [0.0020888988462194704, 0.20980000201003532], 'false,false,false': [0.2207244726102568, 0.17726439319238854], 'false,false,true': [0.0, 0.002350011201996932], 'true': [0.00029376184537518074, 0.0013745267956892053], 'true,true': [0.00029376184537518074, nan]}
{'': [0.10119800516874682, 0.11083669878386636], 'false': [0.05030394529627693, 0.11770829379593287], 'false,false': [0.0006943783217046695, 0.11876450181056053], 'false,false,false': [0.0847667857821343, 0.13147583539227753], 'true': [0.002278769144850548, 0.16778190360363465], 'true,false': [0.002319297618370228, 0.2389613082062537], 'true,false,true': [0.0, 0.001950181873401254], 'true,true': [1.4881341738448573e-05, 0.0029752540191596197]}
{'': [0.1120096870518672, 0.11459377730933662], 'false': [4.645612014371932e-06, 0.11756839018058406], 'false,false': [0.11756839018058406, nan], 'true': [0.07440103662921552, 0.0019395979674524488], 'true,true': [0.06384362899152218, 0.03924662403342025], 'true,true,true': [0.07594463033418546, 0.0026323107777986208], 'true,true,false': [0.0005308130658111532, 0.032868072711850174]}
{'': [0.0604815731025234, 0.08562934761121081], 'false': [0.07649404674101008, 0.1200123926132042], 'false,false': [0.002024918413180865, 0.12372183352907318], 'false,false,false': [0.12372183352907318, nan], 'false,true': [0.05329032704437988, 0.0010900732342150363], 'true': [0.0, 0.0794787747029096], 'false,true,true': [nan, 0.053290327044379755], 'false,false,true': [0.0, 0.0014334140830128614]}
{'': [0.0011718767541671685, 0.07619516271846562], 'false': [0.050270331170981494, 0.08965741006962394], 'false,false': [3.0968918504764575e-06, 0.09094775943196629], 'false,false,false': [0.06799721944666964, 0.15820721133853324], 'false,true': [0.00944565913673181, 0.05842489294315353], 'false,true,false': [0.003985384552217114, 0.05689058887321094], 'true': [0.00023045616546650273, 0.0015225530784285235], 'true,false': [0.0, 0.001826919298052876]}
{'': [0.04692291104256956, 0.06759282300979354], 'false': [0.03206548749149618, 0.09179780502396487], 'false,false': [2.413634095338457e-06, 0.09330046981792263], 'false,false,false': [0.07134409695889884, 0.15455625290184757], 'true': [0.05515398424576582, 0.0011365266298704092], 'true,true': [0.00018352602220201298, 0.16323801811504426], 'true,true,false': [0.0, 0.2017251149830929], 'true,true,true': [8.901904442806113e-05, 0.0005504677586304837]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.805
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.2273797043302806;  // std dev = 3.891, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
%   | | | else return 0.11455919150976768;  // std dev = 5.454, 156.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7831726769707374;  // std dev = 1.675, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15893660555573244;  // std dev = 0.171, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.05765259498506493;  // std dev = 1.979, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.22821619347072206;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), location(A, G) )
%   | | | then return 0.015721487440926104;  // std dev = 1.462, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.06831832894834199;  // std dev = 2.311, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6918037888009931;  // std dev = 0.256, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.140974834347879;  // std dev = 0.057, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.13423118497118094;  // std dev = 1.909, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.5025330875393109;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.03734660388098925;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.058423636077577466;  // std dev = 1.934, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.551480956139863;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.46970185537612297;  // std dev = 0.837, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.0017070422477040415;  // std dev = 2.569, 89.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | | else return 0.09191600834837038;  // std dev = 3.359, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5220223596653297;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.016911602323803385;  // std dev = 2.197, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.15822659792065336;  // std dev = 1.963, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return -0.01262148617318389;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3207118471601496;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32071184716014955;  // std dev = 1.05e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3925266729933714;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06991347554935828;  // std dev = 3.890, 139.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=43 */
%   | | | else return -0.01555597727770655;  // std dev = 1.941, 47.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=9 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3932011851565302;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.014296975827852151;  // std dev = 2.312, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.13960872886701267;  // std dev = 1.790, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25517224256948945;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.09883929387851786;  // std dev = 0.702, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2779739867344099;  // std dev = 0.023, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.031395025625212535;  // std dev = 1.151, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.09325683676022638;  // std dev = 0.115, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else return 0.05981343730745809;  // std dev = 0.293, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25517224256948934;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.03683148625312026;  // std dev = 3.371, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | | | else return 0.08417402657692988;  // std dev = 3.648, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2514576219691295;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.24334479116555366;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6042002938073142;  // std dev = 0.748, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16936898603824857;  // std dev = 0.079, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253576;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.523344866978754;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17519946194877478;  // std dev = 0.097, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.21295037049338805;  // std dev = 1.120, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | else return 0.08025829535823577;  // std dev = 2.463, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.028898970379987166;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.1900016899095824;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5760848660132951;  // std dev = 0.239, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3776948017815319;  // std dev = 1.080, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | else return -0.14477141697618925;  // std dev = 0.034, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.20480831826775925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.044034503757748346;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.0216397257378794;  // std dev = 1.945, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.07932807106939972;  // std dev = 1.494, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16905075609248202;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.21638395058226234;  // std dev = 0.571, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.2120037954552414;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( complex(A, H), location(A, I) )
%   | | then return -0.05039921531609767;  // std dev = 0.130, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0752045166647849;  // std dev = 0.735, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return -0.009644857947411349;  // std dev = 1.237, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.15108123022914555;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.0186875369527778;  // std dev = 2.130, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.035583762634630284;  // std dev = 2.943, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14877239056029476;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.18363173997931334;  // std dev = 0.789, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.16754615966708178;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2053399682893994;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.08332188177168126;  // std dev = 0.172, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return 0.0025283251009771894;  // std dev = 0.189, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.2672922999388758;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return -0.013500187033266874;  // std dev = 2.700, 113.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=31 */
%   | | | else return 0.048437703814744416;  // std dev = 2.391, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.443', 'seconds']
Refined model CLL: -0.177651


******************************************
Best model found
******************************************
Results 

CLL : -0.187576 

AUC ROC : 0.983087 

AUC PR : 0.221309 

Precision : 0.143782 

Recall : 0.784452 

F1 : 0.243021 

Total Learning Time : 6.805 

Total Inference Time : 8.486349821090698 

Total revision time: 27.8694630317688
Best scored revision CLL: -0.177473


Results 

CLL : -0.187576 

AUC ROC : 0.983087 

AUC PR : 0.221309 

Precision : 0.143782 

Recall : 0.784452 

F1 : 0.243021 

Total Learning Time : 37.955548112869266 

Total Inference Time : 8.486349821090698 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.773
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11799145478455035;  // std dev = 4.942, 127.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=33 */
%   | | | else return 0.14614893509951105;  // std dev = 5.063, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6194734122109544;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7036496034371682;  // std dev = 3.082, 80.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=69 */
%   | | | else return -0.1586682549072492;  // std dev = 0.022, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11700725320291722;  // std dev = 1.474, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.18141435609293352;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4633397818906506;  // std dev = 0.938, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5799035947890409;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07651949304995048;  // std dev = 4.435, 126.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6195510757700877;  // std dev = 1.898, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14033391872629328;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.44463356325371556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.15667148161692115;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.010244818559374853;  // std dev = 1.425, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4433720395333099;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46001008504471375;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5196320989528561;  // std dev = 1.633, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.06964616617171294;  // std dev = 4.951, 208.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5528352233930974;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.11832433434755256;  // std dev = 1.432, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.07170905817891593;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.22441463563046682;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33727450930455327;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.05913771700669591;  // std dev = 5.483, 251.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4156388684108405;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1130702154445032;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.0974493574989629;  // std dev = 1.196, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28515900590819443;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3579185755056903;  // std dev = 0.174, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30462137913538867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3194411453061414;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.030524002382689253;  // std dev = 2.279, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.021422510979889814;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08286726193403811;  // std dev = 2.864, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.07482359918575092;  // std dev = 4.184, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2578669609206597;  // std dev = 0.178, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25430498717818806;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5326357818807678;  // std dev = 1.321, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18077487655465863;  // std dev = 0.592, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2639649534923202;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06339358540880681;  // std dev = 4.061, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19411118511581085;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1990502118752831;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3670949390770651;  // std dev = 3.104, 84.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=71 */
%   | | else return -0.15388950260411988;  // std dev = 0.237, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20914491022365478;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004040318512816079;  // std dev = 1.495, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17868183879975705;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.7993690594674985;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.1673434774255508;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02601409133031607;  // std dev = 1.468, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3527015839059402;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.00881607599691021;  // std dev = 1.745, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18419348956936346;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05332578411872663;  // std dev = 3.448, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
%   | | | else return 0.033593390609284055;  // std dev = 1.484, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1416741144043891;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.24149730507244005;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049739995920325124;  // std dev = 0.332, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.01052460280834554;  // std dev = 2.266, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.08965504458256779;  // std dev = 0.858, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.007415067238832694;  // std dev = 3.531, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | | | else return 0.01775751520738879;  // std dev = 1.475, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.559', 'seconds']
Parameter learned model CLL:-0.195629 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.942, 94, 33], 'false,false,true,false': [5.063, 89, 36], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.949, 1, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.082, 11, 69], 'false,false,true,false': [0.022, 137, 0], 'false,false,false,true': [1.474, 8, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.938, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.435, 92, 34], 'false,true,false,true': [1.898, 4, 37], 'false,true,false,false': [0.0, 75, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.425, 12, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.024, 0, 5], 'true,false': [0.026, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.633, 3, 14], 'false,true,false': [4.951, 151, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.432, 7, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.931, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.024, 0, 4], 'false,true': [5.483, 180, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.196, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 4], 'true,true,false': [0.174, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.279, 30, 12], 'false,false,true': [0.855, 1, 3], 'false,false,false,true': [2.864, 43, 20], 'false,false,false,false': [4.184, 91, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.178, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.321, 3, 33], 'true,false': [0.592, 88, 0], 'false,true': [0.02, 0, 3], 'false,false,true': [4.061, 84, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.011, 0, 3], 'true,false': [0.046, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.104, 13, 71], 'false,true,false': [0.237, 153, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.495, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.104, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.028, 0, 3], 'false,true,true': [1.468, 37, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.745, 42, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.448, 75, 40], 'false,false,false,false': [1.484, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.01, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.332, 1, 3], 'false,true': [2.266, 68, 29], 'false,false,true': [0.858, 1, 3], 'false,false,false,true': [3.531, 100, 40], 'false,false,false,false': [1.475, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.20179463787257826], 'false': [1.4802973661668753e-16, 0.19819280463354993], 'false,false': [0.198837868480726, 0.18749999999999983], 'false,false,true': [0.19232438464877055, 0.20505600000000118], 'false,false,false': [0.20408163265306126, 0.17283950617283952], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888906, 0.2172934636276606], 'false': [0.0, 0.21606675985695878], 'false,false': [0.2168340196648548, 0.20341505137302637], 'false,false,true': [0.11869947378921779, 3.531688035903036e-06], 'false,false,false': [0.1973969069090339, 0.2222222222222222], 'true': [0.0, 0.09000000000000004], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07579092229392541, 0.1611173882457059], 'false': [0.16008234164689128, 0.16777581572219538], 'false,false': [0.23474979337254293, 0.1353556688236345], 'false,false,true': [0.0, 0.22222222222222224], 'false,true': [0.15609014462587573, 0.16302558958520985], 'false,true,false': [0.08790786974594662, -2.3684757858670008e-17], 'false,false,false': [0.1353556688236345, nan], 'true': [0.09765778243921457, 0.0]}
{'': [0.0001854447638321281, 0.1390417619278144], 'false': [0.13493796706383746, 0.19968515547651544], 'false,false': [0.0, 0.20057829444497494], 'false,false,false': [0.20518875965945696, 0.1875], 'false,true': [0.15691841134846082, 0.11784244500035265], 'false,true,true': [nan, 0.15691841134846082], 'true': [0.00011830398725933832, 0.00011556606623090253], 'false,false,true': [nan, 0.0]}
{'': [0.07505523464426264, 0.12443342629165094], 'false': [0.11975773389322054, 0.20391638112689098], 'false,false': [0.0, 0.21269450742983265], 'false,false,false': [0.22222222222222224, 0.20441527419543173], 'true': [0.1082647924224368, 0.00014455169742708107], 'true,true': [0.1082647924224368, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003931383875875196, 0.13160412711198957], 'false': [0.12366752114813236, 0.13291406162413097], 'false,false': [0.18271935251288185, 0.13182937988336169], 'false,false,false': [0.13016537061365163, 0.13260266288389966], 'true': [0.004759442395620638, 5.4906367338944384e-05], 'true,true': [0.0002367989675614024, 0.006024688263395639], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11606825638606241, 0.13080258406358386], 'false': [0.0001349004720138288, 0.1330136106341889], 'false,false': [0.1330136106341889, nan], 'true': [0.05134054434912115, 0.0039860649076102865], 'true,true': [0.002869454070372232, 0.04843976065562207], 'true,true,false': [nan, 0.04843976065562187], 'true,true,true': [0.003155246054051064, 0.0]}
{'': [0.0002111304410370945, 0.10465571990856297], 'false': [0.10298434627448685, 0.12644377088048997], 'false,false': [0.0, 0.13154453455909793], 'false,false,false': [0.13154453455909793, nan], 'false,true': [0.11467079609943884, 0.00036706532301977664], 'false,true,true': [nan, 0.1146707960994389], 'true': [3.841450307763098e-05, 0.000269246012681669], 'false,false,true': [0.0, nan]}
{'': [0.07360964330814908, 0.0821062684213161], 'false': [0.049629624481271006, 0.10718055765084032], 'false,false': [8.118645991630573e-05, 0.109269162321032], 'false,false,false': [0.10338907944346046, 0.15722273266956988], 'true': [0.0013618216532819208, 0.1754270552549342], 'true,false': [0.0, 0.0002694580933634884], 'false,true': [0.044886211320734636, 0.05269313599511632], 'false,true,false': [0.0, 0.05161528595253601]}
{'': [0.012351021717553637, 0.08029542050042625], 'false': [0.0529239320452834, 0.09698581624929493], 'false,false': [0.18422395585280382, 0.09449254917324056], 'false,false,false': [0.0890623312070616, 0.14507796886490534], 'true': [0.0011029371118527719, 0.027579278022072273], 'true,true': [0.0011029371118527719, nan], 'true,true,true': [1.4915882009414183e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 19.278
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5185262935900793;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=70 */
%   | | | else return -0.14185106490048785;  // std dev = 0.000, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6389966401851012;  // std dev = 3.160, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.14107354461179555;  // std dev = 0.406, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.025912889465878886;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.263760433456875;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5672015985364102;  // std dev = 0.030, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return 0.04661170560216918;  // std dev = 2.874, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | | | else return 0.12275988488108623;  // std dev = 2.718, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5913900772626655;  // std dev = 1.536, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.1292800382703605;  // std dev = 0.296, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.22173901932889942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.1069649765412233;  // std dev = 1.090, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06562038363059663;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.029326816091017588;  // std dev = 1.084, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.428688827391528;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.42534349938076627;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.024321021894194172;  // std dev = 1.827, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.13062595824924272;  // std dev = 0.837, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.13635220554246955;  // std dev = 2.751, 59.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=22 */
%   | | | else return 0.0660265883964263;  // std dev = 3.774, 138.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5625959841881352;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.05548050450073018;  // std dev = 0.835, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.13480527106343376;  // std dev = 1.291, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3254916136707523;  // std dev = 0.025, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33074329000554525;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.33123012719420625;  // std dev = 1.940, 21.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | else return -0.03650336058364811;  // std dev = 2.574, 109.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=17 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.14452783072177972;  // std dev = 1.598, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.06306710625174758;  // std dev = 3.352, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4228971449990119;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.04814408687770333;  // std dev = 0.842, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.25981693442727977;  // std dev = 1.115, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2476683816351802;  // std dev = 0.213, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), enzyme(F, G) )
%   | | then if ( complex(D, H) )
%   | | | then return 0.15227075388167494;  // std dev = 2.735, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.06057170823096483;  // std dev = 2.162, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.17065320657637406;  // std dev = 1.015, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.03483845542376379;  // std dev = 1.473, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(A, M) )
%   | | | then return -0.12956984350142625;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.0801003665886076;  // std dev = 0.805, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, N), enzyme(N, P) )
%   | | | then return 0.17647923076544317;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05073618754174795;  // std dev = 2.717, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2573645868111125;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27260277035708413;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.33891435229263267;  // std dev = 1.197, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return 0.5403770690905622;  // std dev = 0.335, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.14816893382765442;  // std dev = 0.060, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.24674680041002273;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.03099832936077845;  // std dev = 3.331, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.16892911242406766;  // std dev = 0.864, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else return 0.1809785945653367;  // std dev = 0.720, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18343777556370025;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.18669229071489182;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.3887142071040963;  // std dev = 1.236, 28.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=26 */
%   | | | else return 0.30012579789124094;  // std dev = 2.515, 54.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=45 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1089543834483713;  // std dev = 0.097, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -0.14566345760484345;  // std dev = 0.454, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.22199815710972737;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.08531362753728532;  // std dev = 1.230, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.1491341214520996;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15968130782803708;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8503136869734833;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.2286431463818299;  // std dev = 0.107, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.11831121208383207;  // std dev = 1.473, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return -0.00610202513373145;  // std dev = 1.064, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else return 0.0043721601709108;  // std dev = 0.206, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1751874073082594;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.004112238432535946;  // std dev = 3.303, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return 0.14646302926319235;  // std dev = 1.108, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15371974616277154;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), complex(A, H) )
%   | | | then return 0.3277671712433341;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.034363870374857476;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, I), interaction(A, I) )
%   | | | then return -0.08103603520863184;  // std dev = 1.078, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.03214236230758466;  // std dev = 1.411, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | else if ( enzyme(A, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.07581942450573807;  // std dev = 1.485, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return 0.020885270700185588;  // std dev = 1.265, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.019528785316437865;  // std dev = 2.254, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.027368961327716664;  // std dev = 1.768, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '55.447', 'seconds']
Refined model CLL: -0.18341


******************************************
Best model found
******************************************
Results 

CLL : -0.183017 

AUC ROC : 0.988691 

AUC PR : 0.343765 

Precision : 0.194466 

Recall : 0.897163 

F1 : 0.319646 

Total Learning Time : 19.278 

Total Inference Time : 21.39276909828186 

Total revision time: 62.24477613067627
Best scored revision CLL: -0.18341


Results 

CLL : -0.183017 

AUC ROC : 0.988691 

AUC PR : 0.343765 

Precision : 0.194466 

Recall : 0.897163 

F1 : 0.319646 

Total Learning Time : 62.34488737678528 

Total Inference Time : 21.39276909828186 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.097
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11434728220694913;  // std dev = 4.802, 121.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=31 */
%   | | | else return 0.16427138407910327;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5473839334745776;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7366491176039534;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6841512468256289;  // std dev = 3.438, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15995238642042306;  // std dev = 0.044, 171.000 (wgt'ed) examples reached here.  /* #neg=171 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13018172355004123;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.011134104502422177;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5897894949605708;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.433282375640069;  // std dev = 0.953, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09003455542046564;  // std dev = 4.369, 122.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6528401800647763;  // std dev = 1.686, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | | else return -0.14543071758967674;  // std dev = 0.301, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8429994451499969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1700467369976788;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.3738433511071927;  // std dev = 0.985, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.4359363692101058;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4803507806016846;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4434327025872823;  // std dev = 2.199, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else return 0.02068074374021553;  // std dev = 5.142, 262.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.513079744125623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.0865654420674168;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.44543510201379394;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3700541966362631;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11734944974028777;  // std dev = 1.543, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.04660014646300284;  // std dev = 5.933, 294.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3868081959823789;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.01935353194894227;  // std dev = 1.713, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.32059480976012894;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2918382983038777;  // std dev = 0.907, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3227646072304656;  // std dev = 0.032, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.013550053842896693;  // std dev = 2.916, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.31800808094306127;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.009148318546986542;  // std dev = 2.269, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.08854744178389808;  // std dev = 4.523, 155.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.29321420420157435;  // std dev = 0.406, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.23679685276163198;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.044697283651388225;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5050723569678939;  // std dev = 1.577, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18776828146441038;  // std dev = 0.962, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2316777312653226;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08651829957200984;  // std dev = 4.323, 136.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19620696318832098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15195597100161362;  // std dev = 0.823, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37641990292115884;  // std dev = 3.295, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.14931834358852628;  // std dev = 0.325, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19668894487069655;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.037480786203775845;  // std dev = 1.481, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18781008210229538;  // std dev = 0.231, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07215952645498201;  // std dev = 0.490, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2318690040352088;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06222678908061319;  // std dev = 2.091, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.23382818962397042;  // std dev = 0.468, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.0539968636373118;  // std dev = 1.489, 71.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17047147196172024;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.021645690339675658;  // std dev = 3.768, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | | else return -0.004756270411724137;  // std dev = 1.444, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0073381532884820855;  // std dev = 0.947, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.19692615401041388;  // std dev = 0.203, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.6531943968792316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.0015427078224813928;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01257135150924524;  // std dev = 2.619, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14770897416323256;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01684986385869135;  // std dev = 3.906, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.1259667885878557;  // std dev = 1.279, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.514', 'seconds']
Parameter learned model CLL:-0.196352 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.802, 90, 31], 'false,false,true,false': [5.588, 102, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.894, 1, 4], 'true,false': [0.049, 0, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [1.0, 2, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.438, 14, 76], 'false,false,true,false': [0.044, 171, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.291, 10, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.113, 0, 11], 'true,false': [0.953, 1, 6], 'false,true,true': [4.369, 88, 34], 'false,true,false,true': [1.686, 3, 48], 'false,true,false,false': [0.301, 99, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.506, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.985, 1, 10], 'true,false': [0.062, 0, 7], 'false,true,true,true': [0.211, 0, 3], 'false,true,true,false': [2.199, 7, 21], 'false,true,false': [5.142, 204, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.772, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.076, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.543, 3, 10], 'false,true': [5.933, 212, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.713, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.044, 0, 5], 'true,true,false': [0.907, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.032, 0, 2], 'false,true': [2.916, 55, 19], 'false,false,true': [0.095, 0, 8], 'false,false,false,true': [2.269, 43, 11], 'false,false,false,false': [4.523, 105, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.406, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.85, 1, 3], 'true,true,false,false': [1.577, 3, 33], 'true,false': [0.962, 91, 0], 'false,true': [0.023, 0, 5], 'false,false,true': [4.323, 89, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.823, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.295, 12, 82], 'false,true,false': [0.325, 187, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.481, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.231, 0, 9], 'true,false,true': [0.49, 1, 2], 'true,false,false': [0.117, 0, 5], 'false,true,true': [2.091, 50, 13], 'false,true,false,true': [0.468, 1, 8], 'false,true,false,false': [1.489, 60, 11], 'false,false,true': [0.018, 0, 5], 'false,false,false,true': [3.768, 117, 47], 'false,false,false,false': [1.444, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.947, 1, 7], 'true,true,true,false': [0.203, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.677, 1, 3], 'false,true': [2.619, 86, 32], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [3.906, 106, 47], 'false,false,false,false': [1.279, 6, 4]}]
{'': [0.09418282548476423, 0.2095865660537788], 'false': [-2.5376526277146434e-16, 0.20234080539575588], 'false,false': [0.20316328803742514, 0.18749999999999983], 'false,false,true': [0.19056075404685593, 0.21241149521033018], 'false,false,false': [0.18749999999999983, nan], 'true': [0.1224489795918365, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.051763980262908404, 0.2071059393526056], 'false': [0.17283950617283964, 0.20391405247682362], 'false,false': [0.20626593324107673, 0.1662049861495846], 'false,false,true': [0.13133250028171406, 1.1153319062054493e-05], 'false,true': [0.0, 0.24000000000000005], 'false,true,false': [0.25000000000000006, 0.0], 'false,false,false': [0.20408163265306117, 0.13888888888888884], 'true': [0.16, 0.00018437803484175127]}
{'': [0.05703281144351043, 0.1633588462192474], 'false': [0.16013329492871958, 0.22352429830031728], 'false,false': [0.22352429830031728, nan], 'false,false,true': [0.0, 0.20610591010409662], 'false,true': [0.1564485301087379, 0.1625506586041804], 'false,true,false': [0.05574087948831108, 0.000913493294423076], 'true': [0.0011706066143647947, 0.1298474282651349]}
{'': [0.05498350988715845, 0.1283485464377722], 'false': [0.12412316552361417, 0.21701106026203124], 'false,false': [0.0, 0.22946966689825574], 'false,false,false': [0.2040816326530612, 0.19855721048935662], 'false,true': [0.1575863946395291, 0.1009339648554926], 'false,true,true': [0.014907426769831774, 0.172741529057965], 'true': [0.08812453087379285, 0.0005485975186462053], 'false,false,true': [nan, 0.0]}
{'': [0.13386796140275317, 0.12244646517615922], 'true': [0.0008302666626356052, 0.18315275199957773], 'false': [0.11972529870715146, 0.16268647142236126], 'false,false': [0.0, 0.16304211665854262], 'false,false,false': [0.16304211665854262, nan], 'true,true': [0.0008302666626356052, nan], 'false,false,true': [nan, 0.0]}
{'': [0.04872975568538562, 0.12095518899434883], 'false': [0.11492018005150649, 0.12212363998491199], 'false,false': [0.0011353984667302058, 0.12436312211969007], 'false,false,false': [0.09535338647238173, 0.13200370656282728], 'true': [0.0551040487041105, 0.0005207080779042056], 'true,true': [0.00038343237431761603, 0.08218871121862922], 'true,false': [nan, 0.0005207080779042056]}
{'': [0.12115388467836102, 0.13324862031195625], 'false': [0.00010637766379398839, 0.1373963478804], 'false,false': [0.1373963478804, nan], 'true': [0.07980872869993386, 0.010176286933558546], 'true,true': [0.01049899872236941, 0.09933881642589956], 'true,true,false': [0.18081133246416975, 0.06909179383075184], 'true,true,true': [0.010999999624058768, 0.0]}
{'': [0.037937498294464016, 0.10182816620431531], 'false': [0.10055114466857576, 0.11821031368811417], 'false,false': [0.0, 0.121891476340007], 'false,false,false': [0.121891476340007, nan], 'false,true': [0.11552303817857641, 0.0005637206990477237], 'false,true,true': [nan, 0.11552303817857612], 'true': [0.0, 0.04834163900822972], 'false,false,true': [0.0, nan]}
{'': [0.02950750507370332, 0.07394289199563546], 'false': [0.05265335409374057, 0.08867464972692259], 'false,false': [6.747203933403778e-05, 0.09051830719616268], 'false,false,false': [0.0865783197376821, 0.13026807631687182], 'false,true': [0.06943090821257776, 0.038714463158820524], 'false,true,false': [0.024298524691531622, 0.031221968746042807], 'true': [0.0059446344738714706, 0.05342518979555749], 'true,false': [0.0801163505842312, 0.0027479880653439315]}
{'': [0.10722654684478501, 0.0840821372413753], 'true': [0.1049454466278958, 0.11447416649731618], 'true,true': [0.07575859533669094, 0.0], 'false': [0.05812324971987654, 0.10166125282405761], 'false,false': [5.3573939001760885e-05, 0.10431921640188499], 'false,false,false': [0.09972256752616941, 0.16347190126082664], 'true,true,true': [0.11203492846761327, 0.006850945437705452], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 11.894
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.10546076305650105;  // std dev = 4.161, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return 0.20784218663325585;  // std dev = 6.088, 163.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7319269719460497;  // std dev = 0.016, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6983469409127486;  // std dev = 3.221, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.162237701231363;  // std dev = 0.153, 190.000 (wgt'ed) examples reached here.  /* #neg=190 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12259120672608294;  // std dev = 1.693, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.15517981862502905;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5682304964490421;  // std dev = 0.019, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5590827125519778;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.009386848512994685;  // std dev = 2.694, 67.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=12 */
%   | | | else return 0.19100063147401478;  // std dev = 3.150, 54.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.503859222904954;  // std dev = 3.128, 60.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=48 */
%   | | | else return -0.14309358218338125;  // std dev = 0.053, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.7371629042990984;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21299150343892034;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.17324970884775426;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42163720100208624;  // std dev = 0.015, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.18653515956913744;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4367863179235509;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A) )
%   | then if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6479249846745826;  // std dev = 0.183, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.15684289988461636;  // std dev = 0.209, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.06623966473477584;  // std dev = 0.358, 231.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=66 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3740724225437827;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.019933896223181435;  // std dev = 1.139, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.19033233193733387;  // std dev = 1.075, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.31702230991587665;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.40846704713963516;  // std dev = 0.119, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.33265726808385643;  // std dev = 0.017, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.47109842154954196;  // std dev = 0.219, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.1043754627194935;  // std dev = 3.345, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.02737625379433018;  // std dev = 4.496, 193.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.29134561962744443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11103699544312079;  // std dev = 1.031, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.027131082762273852;  // std dev = 1.173, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2523185017994451;  // std dev = 0.218, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.47021055817974483;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17860097361934593;  // std dev = 0.147, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.14790142536078313;  // std dev = 1.958, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.04284356413434635;  // std dev = 1.859, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.041054249263138574;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27338638705080837;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.025880270170646473;  // std dev = 4.249, 153.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=42 */
%   | | | else return 0.06998833539378226;  // std dev = 2.784, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2541791606205382;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( enzyme(A, E), interaction(F, A) )
%   | | | then return 0.13154426712764944;  // std dev = 1.532, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.5500248184154005;  // std dev = 1.035, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.18082137418635072;  // std dev = 0.063, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0698109079348514;  // std dev = 0.860, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.46585989163448255;  // std dev = 1.318, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return -0.16508658971109888;  // std dev = 0.142, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.06534167409392706;  // std dev = 3.230, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | | else return 0.15805364672392308;  // std dev = 0.932, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.007789603595217409;  // std dev = 0.722, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0.1565495744533108;  // std dev = 0.034, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.21066686506497811;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.1561129835655974;  // std dev = 1.964, 27.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=19 */
%   | | | else return 0.4359356619643389;  // std dev = 2.039, 68.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | else return -0.14351046930359357;  // std dev = 0.025, 180.000 (wgt'ed) examples reached here.  /* #neg=180 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.1562101893332578;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.06227414740675332;  // std dev = 0.971, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.10968925299144501;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.23594699694440455;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1685983154163171;  // std dev = 0.030, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return -0.046036792747297314;  // std dev = 1.928, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.006574943286075744;  // std dev = 1.741, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.12006961216128871;  // std dev = 0.793, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.13120096283166988;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.18137735530176846;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.02129558324844951;  // std dev = 3.461, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
%   | | | else return -0.08561245939084058;  // std dev = 1.483, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.10192736416694727;  // std dev = 0.235, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1287419691765568;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11599211440096113;  // std dev = 0.201, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.0296810790254894;  // std dev = 2.796, 117.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | else return 0.10496276269378768;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15598377671422425;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.08089564260497897;  // std dev = 2.584, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return -0.00847252675807023;  // std dev = 2.217, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.173', 'seconds']
Refined model CLL: -0.194702


******************************************
Best model found
******************************************
Results 

CLL : -0.172934 

AUC ROC : 0.990362 

AUC PR : 0.341354 

Precision : 0.277926 

Recall : 0.788679 

F1 : 0.411013 

Total Learning Time : 11.894 

Total Inference Time : 40.06520223617554 

Total revision time: 75.11329919433594
Best scored revision CLL: -0.194702


Results 

CLL : -0.172934 

AUC ROC : 0.990362 

AUC PR : 0.341354 

Precision : 0.277926 

Recall : 0.788679 

F1 : 0.411013 

Total Learning Time : 75.21341044044495 

Total Inference Time : 40.06520223617554 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.386
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951237;  // std dev = 2.449, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.13314893509951134;  // std dev = 5.648, 160.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15502393509951232;  // std dev = 3.655, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8227875200382645;  // std dev = 0.991, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.158443831898314;  // std dev = 0.012, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.16761492681591708;  // std dev = 1.821, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.19535375180958725;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08826547827455272;  // std dev = 2.036, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6895599737877904;  // std dev = 0.245, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1387997394888206;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5498490269177946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12468330683721898;  // std dev = 3.652, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11480037576820996;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2508469174916433;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5026251628799421;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5876501887245623;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.052983846263925556;  // std dev = 4.204, 196.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4134337574802792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5188354363899828;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.08476273470677081;  // std dev = 1.872, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.11608921134437444;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33564729916703684;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.333158057165889;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.07262643089187011;  // std dev = 4.148, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.31794713067974634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3909173011390269;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07921834986554802;  // std dev = 3.628, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return -0.08784875309247682;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25257897732458806;  // std dev = 0.000576, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3559943594373953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.302089674811627;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2850632481773422;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3403880020491303;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07308469155719372;  // std dev = 0.943, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26919238641100857;  // std dev = 0.040, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.035318261443847934;  // std dev = 2.773, 86.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | | else return 0.05139476210493903;  // std dev = 4.772, 156.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23698444083476666;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2182405958170605;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20540436332831657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6408894189762466;  // std dev = 0.769, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19085313045982288;  // std dev = 0.549, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22252678601569253;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0613362714573366;  // std dev = 3.324, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17154499960701255;  // std dev = 0.000388, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.09198410772650825;  // std dev = 0.878, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4131588468849941;  // std dev = 1.352, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.14137263474587136;  // std dev = 0.221, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18335038973936146;  // std dev = 0.022, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.017171700385876072;  // std dev = 3.146, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1570952703648867;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.17432467254413286;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1672082460981196;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08545232259427703;  // std dev = 0.397, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18441204778707931;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.0032304823321356504;  // std dev = 1.198, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1729033443363182;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020368067025709206;  // std dev = 2.793, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.08096937925497275;  // std dev = 2.948, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14004818286299342;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14186524772573852;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1298976389486367;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14564796569530913;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02322421871471056;  // std dev = 1.505, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14957473150694683;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.025057438288627016;  // std dev = 2.699, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | | else return 0.03642828875392345;  // std dev = 3.005, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.126', 'seconds']
Parameter learned model CLL:-0.178379 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.707, 1, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.449, 24, 8], 'false,false,true,false': [5.648, 116, 44], 'false,false,false,true': [3.655, 45, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.077, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.991, 1, 52], 'false,false,true,false': [0.012, 124, 0], 'false,false,false,true': [1.821, 10, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.036, 22, 8], 'false,true,false,true': [0.245, 0, 48], 'false,true,false,false': [0.0, 107, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.652, 43, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [0.913, 1, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.12, 0, 3], 'false,true,false': [4.204, 144, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.872, 12, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.041, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.053, 0, 9], 'false,true': [4.148, 124, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.628, 43, 19], 'false,false,false,false': [0.913, 5, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.000576, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.069, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.046, 0, 3], 'false,true': [0.943, 19, 3], 'false,false,true': [0.04, 0, 6], 'false,false,false,true': [2.773, 63, 23], 'false,false,false,false': [4.772, 110, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.118, 0, 12], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.769, 0, 36], 'true,false': [0.549, 106, 0], 'false,true': [0.031, 0, 5], 'false,false,true': [3.324, 78, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000388, 0, 5], 'true,false': [0.878, 1, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.352, 2, 56], 'false,true,false': [0.221, 132, 0], 'false,false,true,true': [0.022, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.146, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.04, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.01, 0, 4], 'false,true,true': [0.397, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.198, 34, 14], 'false,false,true': [0.026, 0, 5], 'false,false,false,true': [2.793, 84, 36], 'false,false,false,false': [2.948, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.029, 0, 5], 'true,true,true,false': [0.02, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.009, 0, 4], 'false,true': [1.505, 51, 17], 'false,false,true': [0.023, 0, 5], 'false,false,false,true': [2.699, 81, 36], 'false,false,false,false': [3.005, 41, 20]}]
{'': [-2.5376526277146434e-16, 0.20770380918476392], 'false': [0.12244897959183662, 0.20118983234180773], 'false,false': [0.1974826388888897, 0.2112029384756653], 'false,false,false': [0.2087402343749995, 0.25], 'false,false,true': [0.18750000000000014, 0.1993750000000009], 'false,true': [0.25, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.21597646789429828], 'false': [0.0011067675655841065, 0.21289673514167853], 'false,false': [0.2075232560421894, 0.2274833978251084], 'false,false,false': [0.22101281131151237, 0.22959183673469336], 'false,false,true': [0.018532196220686695, 1.1663520363969226e-06], 'false,true': [0.001494136213538555, 0.0], 'true': [0.0, -9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [-1.2688263138573217e-16, 0.16334791893928233], 'false': [0.14574190199789067, 0.21173313223792775], 'false,false': [0.2112292271829761, 0.22222222222222218], 'false,false,false': [0.22222222222222218, nan], 'false,false,true': [0.0, 0.21175760503496457], 'false,true': [0.1381118554433783, 0.14707795480852648], 'false,true,false': [0.0012538086819197474, -5.810513026075585e-17], 'true': [0.0, -1.1102230246251565e-16]}
{'': [0.06222222222222236, 0.12360298570817999], 'false': [0.09362332295728304, 0.21353052426660496], 'false,false': [0.0027773784792460565, 0.21626660128237649], 'false,false,false': [0.206112885302025, 0.21975425330812848], 'false,true': [0.004971840351411738, 0.09016073855989622], 'true': [1.2335811384723962e-16, 0.13888888888888887], 'false,true,true': [0.0, 0.004821806713579384], 'false,false,true': [0.0, 0.0]}
{'': [0.0003200908067363236, 0.12610941608543935], 'false': [0.09561139456576763, 0.20453288684493046], 'false,false': [0.0013311614442141073, 0.20810729535156175], 'false,false,false': [0.21234307873709246, 0.13888888888888892], 'false,false,true': [0.0, 0.0], 'true': [0.00033460158997506985, 0.00030981628701392476], 'true,true': [0.00033460158997506985, nan]}
{'': [0.0019732110925914886, 0.11842017740242904], 'false': [0.040421261055645946, 0.1240830616248663], 'false,false': [0.00026825349517277847, 0.12594421170198353], 'false,false,false': [0.08943902525941291, 0.145977018522173], 'true': [0.0013096074748066844, 0.001565620267249395], 'true,false': [0.0012634316562338405, 0.0007163553700706241], 'true,true': [5.5207626202073236e-08, 0.0], 'true,false,true': [0.00238191371050131, 0.0]}
{'': [0.12809115102357463, 0.09388172848101439], 'true': [0.04654042550479595, 0.0028400976842031496], 'false': [0.000195451572456784, 0.09689907899184638], 'false,false': [0.09689907899184638, nan], 'true,true': [0.0010833078026091316, 0.020950610066580267], 'true,true,false': [0.0, 0.016406970546705788], 'true,true,true': [0.0011611319616218752, 0.0003152213690631178]}
{'': [0.05283554870917494, 0.09245204141061762], 'false': [0.0750891584602981, 0.13824361982866923], 'false,false': [0.0002426816024146891, 0.1414194105336785], 'false,false,false': [0.1414194105336785, nan], 'false,true': [0.03150570608831492, 0.0003694658222856636], 'true': [3.004562447728176e-08, 0.07714332953534306], 'false,true,true': [nan, 0.031505706088314954], 'false,false,true': [0.0002426816024146891, nan]}
{'': [0.00015575056452842216, 0.07627336949856194], 'false': [0.02746016007485782, 0.09287479322267504], 'false,false': [0.0001330549124820335, 0.09502957513743443], 'false,false,false': [0.06502382378395503, 0.15797837022660532], 'false,true': [0.011266058220455075, 0.02998144468740952], 'false,true,false': [0.0, 0.02991760116295675], 'true': [0.0001798311579792754, 2.6850648788351306e-05], 'true,false': [0.0, 2.3434605913134898e-05]}
{'': [0.0001179384966664738, 0.07493679567995125], 'false': [0.03330863213693513, 0.08957147438758177], 'false,false': [0.00010508567454527718, 0.09168705292818607], 'false,false,false': [0.06226737053336283, 0.1480299814866258], 'true': [0.0001418000565625438, 2.2431742278037486e-05], 'true,true': [0.00015378387184142306, 0.0], 'true,true,true': [0.00016322834114634865, 0.0001359795117194043], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.388
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(H, J), enzyme(A, K) )
%   | | | then return -0.09837280403092258;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.13279682242345464;  // std dev = 5.319, 142.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=39 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.18037115732173442;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.817457791590037;  // std dev = 1.000, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15971210245353792;  // std dev = 0.216, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.09400319557724218;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.24099393631798277;  // std dev = 2.778, 32.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13135811297905164;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.077940907045486;  // std dev = 2.044, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6807409808830212;  // std dev = 0.322, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14292519272452486;  // std dev = 0.201, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18836591458419127;  // std dev = 0.519, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.14090515342001736;  // std dev = 3.598, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.32136539242209805;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.38737415964874955;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.41145168234966883;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return -0.013813682054138932;  // std dev = 1.861, 59.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | | else return 0.09190891415839485;  // std dev = 3.669, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5085021149394409;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5203568657166893;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return -0.04204812389739823;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.08917539971751098;  // std dev = 3.432, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, F) )
%   | | then if ( phenotype(E, G), location(A, H) )
%   | | | then return 0.017693615169915817;  // std dev = 2.021, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return -0.06056973082066567;  // std dev = 0.903, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.07801436754615393;  // std dev = 2.265, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | | | else return 0.07888030279475192;  // std dev = 2.706, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.383553983792995;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39200683447960105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.025406851720956972;  // std dev = 1.804, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.1457492119370061;  // std dev = 3.150, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.26839088226615937;  // std dev = 0.032, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31302483961825667;  // std dev = 0.049, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.05851511049504424;  // std dev = 0.609, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0297980100572883;  // std dev = 0.510, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.11994583244588583;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.049714247169217185;  // std dev = 0.515, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.031531515499265486;  // std dev = 3.382, 106.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=28 */
%   | | | else return 0.06854664210451464;  // std dev = 4.225, 127.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2349135239760578;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.2730156140256837;  // std dev = 0.683, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6367888578874644;  // std dev = 0.770, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18298189394130218;  // std dev = 0.066, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.44190185095109075;  // std dev = 0.996, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.15173076615779385;  // std dev = 0.046, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.0913985484220474;  // std dev = 1.620, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.02831230864710016;  // std dev = 1.541, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17157318027168078;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18291972743713217;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5607945506547366;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3785372573256652;  // std dev = 0.513, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.10152073481531265;  // std dev = 0.119, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.14440974283640148;  // std dev = 0.196, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.199032751066474;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13089949748727883;  // std dev = 1.863, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06470899325244556;  // std dev = 2.209, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15475513484937237;  // std dev = 0.017, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.16944270302266368;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.08256497188197587;  // std dev = 0.008, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.020130401430186566;  // std dev = 0.354, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.10258419967347097;  // std dev = 0.300, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03498810047428762;  // std dev = 1.336, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1519917784133854;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.0297453402877462;  // std dev = 2.116, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return 8.22917373515713E-4;  // std dev = 3.281, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.1386121096289764;  // std dev = 0.017, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1786963113742194;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.1465997266640828;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, H) )
%   | | | then return -0.029640205784268573;  // std dev = 0.761, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return 0.05762762175631869;  // std dev = 0.823, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else return -0.05769474588833692;  // std dev = 0.126, 35.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1334196188773481;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A) )
%   | | | then return -0.003989273141069766;  // std dev = 2.536, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | | | else return 0.09992768489056357;  // std dev = 2.797, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.135', 'seconds']
Refined model CLL: -0.178582


******************************************
Best model found
******************************************
Results 

CLL : -0.196727 

AUC ROC : 0.98251 

AUC PR : 0.237387 

Precision : 0.135168 

Recall : 0.797834 

F1 : 0.231172 

Total Learning Time : 7.388 

Total Inference Time : 7.349503993988037 

Total revision time: 26.461406778335572
Best scored revision CLL: -0.178379


Results 

CLL : -0.196727 

AUC ROC : 0.98251 

AUC PR : 0.237387 

Precision : 0.135168 

Recall : 0.797834 

F1 : 0.231172 

Total Learning Time : 26.56151802444458 

Total Inference Time : 7.349503993988037 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.409
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.05217878584578103;  // std dev = 3.237, 67.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.15814893509951236;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8228169199096868;  // std dev = 0.981, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15685568798024496;  // std dev = 0.080, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06505938205570617;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.09704591404223836;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462844;  // std dev = 1.49e-08, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06186708938967219;  // std dev = 2.744, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6868492655761057;  // std dev = 0.195, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14172976485334826;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.676762573116504;  // std dev = 0.193, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10214371010352176;  // std dev = 2.500, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1585149439586965;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 2.11e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5400417093647708;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4879364906721025;  // std dev = 0.691, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.05460175039740535;  // std dev = 4.231, 182.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.43736291959942525;  // std dev = 0.069, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.6272024682867621;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.13792374947884356;  // std dev = 1.849, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.10751299300252437;  // std dev = 2.171, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014955;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.012621486173183693;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.0658466600972792;  // std dev = 4.365, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.29074926634397513;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1086828616758146;  // std dev = 0.781, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.17830469037419225;  // std dev = 2.314, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.21088964436006868;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26883133609793797;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3002682598419769;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.23460350695260124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2893819229873384;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2117075950671286;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06484947745994064;  // std dev = 1.289, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15680104354506572;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0960846418031855;  // std dev = 2.070, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.06785668822414938;  // std dev = 4.441, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2492063603403264;  // std dev = 0.224, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.29910290049090815;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.28266035200614975;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.532126427782313;  // std dev = 1.417, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18218603920723364;  // std dev = 0.523, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2901445881231698;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.09800164969356832;  // std dev = 3.122, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16948917373275607;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.20679675180345883;  // std dev = 0.104, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39388162516488745;  // std dev = 1.781, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.1462844148733938;  // std dev = 0.260, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1523608216221194;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.04980252595539488;  // std dev = 0.826, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.04988717440040708;  // std dev = 2.402, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14581074760156382;  // std dev = 0.039, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1996099352223436;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.24697771284963882;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09048602453040624;  // std dev = 0.282, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.19745188759272672;  // std dev = 0.443, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.03277346558593038;  // std dev = 1.684, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19914873819929102;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09821095984058832;  // std dev = 2.408, 71.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=31 */
%   | | | else return 0.10469112797295249;  // std dev = 2.252, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12610751565420897;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16123023795134614;  // std dev = 0.735, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.15320353371908924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1629141051247519;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.23779412812036996;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.032666347933963315;  // std dev = 1.867, 106.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16927530914251723;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.022387275656834425;  // std dev = 2.774, 85.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=31 */
%   | | | else return -0.011063887878867966;  // std dev = 2.452, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.185', 'seconds']
Parameter learned model CLL:-0.191476 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.237, 54, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.51, 21, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.095, 2, 3], 'false,false,true,true': [0.981, 1, 52], 'false,false,true,false': [0.08, 148, 0], 'false,false,false,true': [1.966, 17, 5], 'false,false,false,false': [2.277, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [1.49e-08, 0, 4], 'false,true,true': [2.744, 47, 14], 'false,true,false,true': [0.195, 0, 42], 'false,true,false,false': [0.0, 75, 0], 'false,false,true,true': [0.193, 0, 3], 'false,false,true,false': [2.5, 23, 9], 'false,false,false,true': [1.415, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [1.49e-08, 0, 6], 'true,false': [2.11e-08, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.691, 1, 6], 'false,true,false': [4.231, 133, 49], 'false,false,true,true': [0.069, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.849, 10, 5], 'false,false,false,false': [2.171, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.49e-08, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.414, 3, 6], 'false,true': [4.365, 126, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.781, 1, 2], 'false,false,false,true': [2.314, 14, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.061, 0, 5], 'true,true,false': [0.11, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.084, 0, 3], 'true,false,false': [0.861, 1, 4], 'false,true': [1.289, 27, 5], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.07, 25, 13], 'false,false,false,false': [4.441, 99, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.224, 0, 13], 'true,true,true,false': [0.142, 0, 3], 'true,true,false,true': [0.018, 0, 3], 'true,true,false,false': [1.417, 2, 33], 'true,false': [0.523, 101, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.122, 53, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.104, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.781, 3, 56], 'false,true,false': [0.26, 145, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.826, 1, 2], 'false,false,false,true': [2.402, 25, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.039, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.122, 0, 5], 'false,true,true': [0.282, 16, 1], 'false,true,false,true': [0.443, 1, 6], 'false,true,false,false': [1.684, 54, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.408, 40, 31], 'false,false,false,false': [2.252, 18, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.01, 0, 8], 'true,true,true,false': [0.735, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.009, 0, 2], 'true,false': [0.057, 0, 3], 'false,true': [1.867, 82, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.774, 54, 31], 'false,false,false,false': [2.452, 29, 12]}]
{'': [-2.3684757858670006e-16, 0.20581424406497334], 'false': [-2.5376526277146434e-16, 0.19659628557305403], 'false,false': [0.19365370880522478, 0.20999999999999946], 'false,false,false': [0.21000000000000008, 0.20999999999999988], 'false,false,true': [0.15638226776564884, 0.20907872501602515], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0, 0.19475214125798], 'false': [0.17283950617283964, 0.18999597472613558], 'false,false': [0.19116354582086104, 0.18492294877134488], 'false,false,true': [0.01817068069919366, 4.3065662586959564e-05], 'false,false,false': [0.17561983471074377, 0.19204389574759972], 'false,true': [0.0, 0.20408163265306128], 'false,true,false': [0.0, 0.24000000000000005], 'true': [0.0, -2.4223047810003414e-16]}
{'': [-2.9605947323337506e-16, 0.16049083799498634], 'false': [0.14834216357838798, 0.20894926147632545], 'false,false': [0.20543753420589958, 0.22256567406544672], 'false,false,false': [0.22256567406544672, nan], 'false,false,true': [0.012379947378259834, 0.19523495402267663], 'false,true': [0.12343911703290225, 0.15830792138063268], 'false,true,false': [0.0009088370629083356, -5.921189464667501e-17], 'true': [-2.0185873175002846e-16, 5.551115123125783e-17]}
{'': [8.881784197001253e-17, 0.12391237868948932], 'false': [0.10454742358443406, 0.2091138524278182], 'false,false': [0.009612234453533172, 0.2142354433511863], 'false,false,false': [0.22781851845569936, 0.20501185790800888], 'false,true': [0.05994995082673271, 0.0983618081147912], 'false,true,true': [0.0, 0.06817486028938953], 'false,false,true': [0.0024053335983624524, 0.0], 'true': [3.700743415417188e-17, 4.9343245538895844e-17]}
{'': [0.13888888888888887, 0.12573782870095668], 'true': [2.4671622769447922e-17, 0.2222222222222222], 'false': [0.10471012136173449, 0.22689522808262794], 'false,false': [0.1587148292005961, 0.23586766304159687], 'false,false,false': [0.23286822619336117, 0.24490892480280868], 'false,false,true': [0.0, 0.20333272834026392], 'true,true': [2.4671622769447922e-17, nan]}
{'': [0.04613528794145895, 0.1221099788203269], 'false': [0.0519275293556739, 0.13105792224605645], 'false,false': [0.1388888888888889, 0.13058441574617538], 'false,false,false': [0.11273491884078671, 0.13506561510707152], 'true': [0.002223293336323373, 0.08439716024982147], 'true,false': [0.0023180798883011, 0.1482411333960178], 'true,false,true': [0.0, 0.0023406044685827334], 'true,true': [0.0007462833440756489, 0.004067301547681035]}
{'': [0.10810470505684784, 0.11328562535437418], 'false': [-1.850371707708594e-17, 0.1160584747253135], 'false,false': [0.1160584747253135, nan], 'true': [0.05523546514471856, 0.0027117525005604754], 'true,true': [0.004769923070312571, 0.057387858690608744], 'true,true,false': [0.00011202758051061708, 0.057384058566863926], 'true,true,true': [0.0038629140303480226, 0.0066774429926393375]}
{'': [0.0009996984356664073, 0.08984235616473031], 'false': [0.07586315318278594, 0.1583685311900141], 'false,false': [0.17838765612903584, 0.1559686321225303], 'false,false,true': [0.0, 0.2276327033961111], 'false,false,false': [0.1559686321225303, nan], 'false,true': [0.05377126225215404, 0.00046510223809594217], 'false,true,true': [nan, 0.05377126225215404], 'true': [0.0, 0.000992063704478014]}
{'': [0.0031831105338124763, 0.07668918951569503], 'false': [0.037201703070395796, 0.10479940859459803], 'false,false': [0.0, 0.10762946704392816], 'false,false,false': [0.08169531790924559, 0.16897743379359423], 'false,true': [0.004676355483641427, 0.04319138492159786], 'false,true,false': [0.02801067629288967, 0.039931331008252705], 'true': [0.00014870882093143966, 0.00280311634919847], 'true,false': [0.0, 0.002989788559480011]}
{'': [0.048309005743398595, 0.07415578763485879], 'false': [0.032866311745407155, 0.10705133214348851], 'false,false': [-4.625929269271485e-18, 0.10902128270350227], 'false,false,false': [0.09051990034200387, 0.14662293942052765], 'true': [0.05356289085550225, 0.00107979381177765], 'true,true': [0.06547220775055901, 5.090714626920789e-05], 'true,true,true': [1.2328176700729387e-05, 0.17998607959811805], 'true,true,false': [0.0, 4.492898706232387e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.271
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.033155412726574685;  // std dev = 2.111, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return 0.09952824544433986;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13780995204866345;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.23814893509951232;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7480325422264149;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7511779808938117;  // std dev = 2.129, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.15764801685071977;  // std dev = 0.129, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.10569349474065619;  // std dev = 2.413, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.2868492034357938;  // std dev = 1.497, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5660455205926314;  // std dev = 0.027, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.13302616650536334;  // std dev = 0.035, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.12184092413839225;  // std dev = 2.639, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6787797023743577;  // std dev = 0.969, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14030032129137202;  // std dev = 0.092, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8079431241075721;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18979653949726952;  // std dev = 0.065, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5709461601887591;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.13239181872425582;  // std dev = 2.476, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3678870851195173;  // std dev = 0.226, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5179866349124391;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4989241959911039;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.13239267498578192;  // std dev = 1.978, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.044396785637751006;  // std dev = 3.762, 146.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=37 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4102747298085123;  // std dev = 0.005, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.031739175000454534;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.11554021668034634;  // std dev = 2.001, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.029473704165504256;  // std dev = 2.000, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33784429336316274;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20848407172122949;  // std dev = 0.328, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12413862449165393;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.03991167559580236;  // std dev = 1.190, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.13986629225788283;  // std dev = 1.798, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return 0.06204935627024591;  // std dev = 3.838, 143.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=44 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.3692650393308556;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.053272137313613334;  // std dev = 2.315, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.2578855873580829;  // std dev = 1.352, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26446237151042923;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.29984532358964866;  // std dev = 0.099, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24451038068953634;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3168296871824045;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.037976014195525654;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11090205493797359;  // std dev = 0.007, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.2927552213411782;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), location(A, J) )
%   | | | then return 0.04047128102637533;  // std dev = 4.227, 179.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=50 */
%   | | | else return 0.13592708279364657;  // std dev = 2.739, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26186086492891836;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2218566699720367;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5807073707459676;  // std dev = 0.632, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16833885437793414;  // std dev = 0.074, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2505678443353864;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6374785036754607;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.18644719369943455;  // std dev = 7.45e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.018514373024013667;  // std dev = 2.409, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.07250321952036486;  // std dev = 1.725, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.18440446776049063;  // std dev = 0.021, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1278167083649165;  // std dev = 0.767, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.4334847404741722;  // std dev = 1.099, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.15297990818906418;  // std dev = 0.450, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | | else return -0.12477150667144421;  // std dev = 0.202, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.16321763530190703;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.25333735937304164;  // std dev = 0.091, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.05737075538857893;  // std dev = 1.625, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.030044151058086582;  // std dev = 1.704, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15592851630692298;  // std dev = 0.025, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2419328939835118;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G), location(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.012214699519357042;  // std dev = 0.606, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.10264113660992713;  // std dev = 0.722, 30.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.016180254319435105;  // std dev = 1.317, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | | else return 0.07055992247264378;  // std dev = 0.488, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17818933967561204;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.15750259994763038;  // std dev = 1.679, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.03991388867998129;  // std dev = 2.770, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13656873720200824;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.19836275472959294;  // std dev = 0.055, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20405349967464093;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10292428380409895;  // std dev = 0.665, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.018770160401253625;  // std dev = 1.609, 85.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=22 */
%   | | else return 0.1035397334743042;  // std dev = 0.438, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1536566377011944;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.021498037489101087;  // std dev = 1.703, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.03225168489024056;  // std dev = 2.863, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '5.227', 'seconds']
Refined model CLL: -0.181783


******************************************
Best model found
******************************************
Results 

CLL : -0.193724 

AUC ROC : 0.985142 

AUC PR : 0.208987 

Precision : 0.158991 

Recall : 0.890459 

F1 : 0.269807 

Total Learning Time : 8.271 

Total Inference Time : 8.882155895233154 

Total revision time: 30.01451771736145
Best scored revision CLL: -0.181783


Results 

CLL : -0.193724 

AUC ROC : 0.985142 

AUC PR : 0.208987 

Precision : 0.158991 

Recall : 0.890459 

F1 : 0.269807 

Total Learning Time : 30.11462896347046 

Total Inference Time : 8.882155895233154 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.126
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1839916317287257;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16116697601393806;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
%   | | | else return 0.17182351692525408;  // std dev = 5.925, 157.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14971999850557055;  // std dev = 4.806, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.13478884258821427;  // std dev = 5.924, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.23830854667122947;  // std dev = 2.771, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.10180182376431934;  // std dev = 7.074, 232.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10203692574340045;  // std dev = 7.595, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07858389188675434;  // std dev = 7.627, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7232932604351852;  // std dev = 0.073, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27710127317388084;  // std dev = 0.109, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0015503312095090736;  // std dev = 3.839, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | | else return 0.07675423127596534;  // std dev = 4.594, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05873129115179197;  // std dev = 3.706, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.03872181979834913;  // std dev = 5.988, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06240878301403124;  // std dev = 6.880, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.013916771090665742;  // std dev = 7.075, 274.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.803', 'seconds']
Parameter learned model CLL:-0.330341 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.784, 70, 34], 'false,false,false,false': [5.925, 104, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 68, 35], 'false,false,false,false': [5.924, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.771, 17, 14], 'false,false,false,false': [7.074, 159, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.595, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.627, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.073, 0, 35], 'true,false': [0.109, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.839, 56, 20], 'false,false,false,false': [4.594, 62, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.706, 62, 35], 'false,false,false,false': [5.988, 115, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.88, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.075, 187, 87]}]
{'': [nan, 0.21966923368261668], 'false': [nan, 0.2196692336826167], 'false,false': [nan, 0.21966923368261668], 'false,false,false': [nan, 0.2196692336826167]}
{'': [nan, 0.22222222222222243], 'false': [nan, 0.22222222222222351], 'false,false': [nan, 0.22222222222222243], 'false,false,false': [0.22004437869822574, 0.22361961945718042]}
{'': [nan, 0.2213087059168636], 'false': [nan, 0.2213087059168636], 'false,false': [nan, 0.22130870591686413], 'false,false,false': [0.22423241793585721, 0.21933925543028784]}
{'': [nan, 0.22137745290022165], 'false': [nan, 0.22137745290022165], 'false,false': [nan, 0.2213774529002214], 'false,false,false': [0.24765868886576478, 0.2156693229176743]}
{'': [nan, 0.22273205566904014], 'false': [nan, 0.22273205566904014], 'false,false': [nan, 0.2227320556690404], 'false,false,false': [nan, 0.2227320556690404]}
{'': [nan, 0.22202122441426814], 'false': [nan, 0.22202122441426814], 'false,false': [nan, 0.22202122441426766], 'false,false,false': [nan, 0.22202122441426814]}
{'': [0.215168390764953, 0.21224055573018816], 'true': [0.0001538148302541588, 0.00015565676868250117], 'false': [nan, 0.21224055573018816], 'false,false': [nan, 0.21224055573018816], 'false,false,false': [0.1939058171745148, 0.22453598913535436], 'true,true': [nan, 0.0001538148302541588], 'true,true,false': [nan, 0.0001538148302541588]}
{'': [nan, 0.18792443554026678], 'false': [nan, 0.18792443554026678], 'false,false': [nan, 0.187924435540267], 'false,false,false': [0.1415868878649962, 0.21469195011014996]}
{'': [nan, 0.19400480759840605], 'false': [nan, 0.1940048075984055], 'false,false': [nan, 0.1940048075984055], 'false,false,false': [nan, 0.1940048075984055]}
{'': [nan, 0.18270178847083596], 'false': [nan, 0.18270178847083596], 'false,false': [nan, 0.1827017884708353], 'false,false,false': [nan, 0.1827017884708353]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.766
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(E, A), interaction(E, E) )
%   | | | then return 0.22549587387502257;  // std dev = 3.375, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.147622619310039;  // std dev = 6.251, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.7373228684706171;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4813730497173962;  // std dev = 0.825, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return -0.07772414733473126;  // std dev = 0.951, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.1252293958230001;  // std dev = 3.447, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.10899737176083779;  // std dev = 3.300, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.19956907741965924;  // std dev = 5.209, 118.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.7367362441392551;  // std dev = 0.124, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return 0.06057442506569103;  // std dev = 0.435, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1815121060403543;  // std dev = 0.181, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.3725397381080505;  // std dev = 1.804, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.09718981759434006;  // std dev = 4.786, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.6125626660089916;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.0157766817780622;  // std dev = 0.376, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.054328322553751404;  // std dev = 1.226, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.20427619541245406;  // std dev = 3.653, 56.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=22 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( enzyme(A, D), recursion_proteinclass(C, B) )
%   | then return 0.4386698385986372;  // std dev = 0.079, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.015807615044008145;  // std dev = 0.383, 59.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=14 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.5411748199615339;  // std dev = 0.262, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(F, E), phenotype(F, G) )
%   | | | then return -0.05720278014636897;  // std dev = 0.913, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.08527645579849026;  // std dev = 3.509, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( enzyme(I, J), interaction(H, I) )
%   | | | then return 0.10833239000159672;  // std dev = 3.458, 55.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | else return 0.2685129221444159;  // std dev = 3.218, 43.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=21 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.15778198359571505;  // std dev = 1.368, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.013698299621463534;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5271173295165942;  // std dev = 0.254, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | else if ( interaction(C, A) )
%   | | then return -0.13931876410418084;  // std dev = 0.269, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return -0.00811144266264154;  // std dev = 0.415, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( enzyme(E, G) )
%   | | then return 0.11338151573758629;  // std dev = 0.903, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(H, E), phenotype(H, F) )
%   | | | then return 0.7551041008495998;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.35325566067524083;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K), phenotype(A, L) )
%   | | | then return 0.32845070165541107;  // std dev = 1.054, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0688550778204181;  // std dev = 5.473, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | else return 0.16420726971670557;  // std dev = 1.091, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.3921385290378152;  // std dev = 0.276, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, F), phenotype(F, D) )
%   | | then return -0.10960003699295764;  // std dev = 0.285, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else if ( interaction(G, C), phenotype(G, H) )
%   | | | then return 0.08622393541780858;  // std dev = 4.587, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
%   | | | else return -0.009363004846150573;  // std dev = 1.322, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2836246921707419;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.1443045141416213;  // std dev = 0.140, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.01953731659048984;  // std dev = 2.625, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.0385057624078908;  // std dev = 3.238, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return -0.048412943128007035;  // std dev = 1.261, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.28554054877726104;  // std dev = 0.283, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6536578929353656;  // std dev = 0.158, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.2351781944606993;  // std dev = 0.081, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6353415580066332;  // std dev = 0.193, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.24783107224848627;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(J, J), location(J, I) )
%   | | | then return -0.046957060804709634;  // std dev = 1.773, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.04607192718024625;  // std dev = 4.406, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.018013987217212663;  // std dev = 0.781, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.7283146870977486;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.30261337115206227;  // std dev = 0.494, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.6169252286108786;  // std dev = 0.447, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.43074759179190225;  // std dev = 2.575, 57.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=49 */
%   | | | else return -0.1956163234937531;  // std dev = 0.905, 28.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=1 */
%   | else return -0.2250501092473807;  // std dev = 0.068, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(A, A) )
%   | | then return -0.04338831146818175;  // std dev = 0.261, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.11342865881329849;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return -0.19415164419884492;  // std dev = 0.749, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.21051200832824368;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.1309072709399169;  // std dev = 0.289, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else return -0.017271508028131998;  // std dev = 0.308, 160.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.02114839511201781;  // std dev = 0.293, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.18744321581386492;  // std dev = 1.833, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.050435143765988774;  // std dev = 1.344, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.08165588261100135;  // std dev = 1.934, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then return 0.08456659815078711;  // std dev = 0.829, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, M) )
%   | | | then return -0.07470952317003683;  // std dev = 1.068, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.02662185042159604;  // std dev = 0.699, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D) )
%   | then return -0.0028921913193304017;  // std dev = 0.262, 120.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=38 */
%   | else return -0.23687028970114657;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, F), interaction(H, J) )
%   | | | then return 0.0939807148637185;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.46724769241941994;  // std dev = 1.228, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return -0.1989354993082899;  // std dev = 0.158, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( phenotype(A, K) )
%   | | then if ( phenotype(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.3466166096527584;  // std dev = 1.141, 13.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | else return -0.1995749235194863;  // std dev = 0.168, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.07547548870031719;  // std dev = 2.193, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | | else return -0.02849946605937346;  // std dev = 1.123, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '30.743', 'seconds']
Refined model CLL: -0.226789


******************************************
Best model found
******************************************
Results 

CLL : -0.208211 

AUC ROC : 0.97435 

AUC PR : 0.348826 

Precision : 0.348837 

Recall : 0.585106 

F1 : 0.437086 

Total Learning Time : 29.766 

Total Inference Time : 25.770923852920532 

Total revision time: 63.00079564285278
Best scored revision CLL: -0.226789


Results 

CLL : -0.208211 

AUC ROC : 0.97435 

AUC PR : 0.348826 

Precision : 0.348837 

Recall : 0.585106 

F1 : 0.437086 

Total Learning Time : 63.08908466529846 

Total Inference Time : 25.770923852920532 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.363
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17425835759191413;  // std dev = 8.434, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15597380059581728;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.17049111145861556;  // std dev = 6.872, 212.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1618957111825324;  // std dev = 5.161, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.15766551661805897;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.06622663593752365;  // std dev = 2.941, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.13964290015004124;  // std dev = 7.710, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10409554614937011;  // std dev = 8.278, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06552631928491573;  // std dev = 8.399, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.732912933950958;  // std dev = 0.050, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26735280654478033;  // std dev = 0.070, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.019287343671435395;  // std dev = 3.868, 73.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=21 */
%   | | | else return 0.07875601238099879;  // std dev = 5.225, 120.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07801996871940706;  // std dev = 3.979, 109.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=41 */
%   | | | else return 0.04110777360109389;  // std dev = 6.530, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012791740713324166;  // std dev = 7.811, 340.000 (wgt'ed) examples reached here.  /* #neg=236 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032405460588989445;  // std dev = 7.673, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.564', 'seconds']
Parameter learned model CLL:-0.32907 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.434, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [6.872, 141, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.161, 76, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.941, 31, 12], 'false,false,false,false': [7.71, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.278, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.399, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.05, 0, 41], 'true,false': [0.07, 83, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.868, 52, 21], 'false,false,false,false': [5.225, 78, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.979, 68, 41], 'false,false,false,false': [6.53, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.811, 236, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.673, 211, 104]}]
{'': [nan, 0.21618425550392367], 'false': [nan, 0.21618425550392242], 'false,false': [nan, 0.21618425550392367], 'false,false,false': [nan, 0.21618425550392242]}
{'': [nan, 0.22115394305870148], 'false': [nan, 0.22115394305870548], 'false,false': [nan, 0.22115394305870148], 'false,false,false': [0.21773965500989678, 0.22274385902456506]}
{'': [nan, 0.2268538243783821], 'false': [nan, 0.2268538243783821], 'false,false': [nan, 0.22685382437838386], 'false,false,false': [0.22761901208691346, 0.22635491578065603]}
{'': [nan, 0.22537851438356984], 'false': [nan, 0.22537851438356984], 'false,false': [nan, 0.22537851438357145], 'false,false,false': [0.20118983234180646, 0.2286140401686539]}
{'': [nan, 0.22465663666737054], 'false': [nan, 0.22465663666737054], 'false,false': [nan, 0.2246566366673723], 'false,false,false': [nan, 0.2246566366673723]}
{'': [nan, 0.21840842878700464], 'false': [nan, 0.21840842878700464], 'false,false': [nan, 0.2184084287870057], 'false,false,false': [nan, 0.2184084287870051]}
{'': [0.22149554508224173, 0.21978975088618424], 'true': [6.0269719632192915e-05, 5.831906362830087e-05], 'false': [nan, 0.21978975088618424], 'false,false': [nan, 0.21978975088618424], 'false,false,false': [0.2049164946519045, 0.22750000000000073], 'true,true': [nan, 6.0269719632192915e-05], 'true,true,false': [nan, 6.0269719632192915e-05]}
{'': [nan, 0.19265244962898234], 'false': [nan, 0.19265244962898234], 'false,false': [nan, 0.19265244962898234], 'false,false,false': [0.1452698959414087, 0.21864955060378133]}
{'': [nan, 0.17944800464776378], 'false': [nan, 0.17944800464776325], 'false,false': [nan, 0.17944800464776325], 'false,false,false': [nan, 0.17944800464776325]}
{'': [nan, 0.18689868908178092], 'false': [nan, 0.18689868908178092], 'false,false': [nan, 0.18689868908178064], 'false,false,false': [nan, 0.18689868908178064]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 47.955
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( location(A, D), phenotype(A, E) )
%   | then if ( location(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, E) )
%   | | | then return 0.745245709293061;  // std dev = 2.492, 62.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=55 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return -0.14185106490048766;  // std dev = 7.88e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.11740819435877163;  // std dev = 2.277, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.21231560176617903;  // std dev = 3.313, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | | | else return 0.09814893509951234;  // std dev = 2.135, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7579270144643511;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E) )
%   | | | then return 0.7663673869755627;  // std dev = 0.181, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.008285479302874663;  // std dev = 0.830, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.14395425716830917;  // std dev = 0.208, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.08871074653727139;  // std dev = 2.873, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.15257414795288834;  // std dev = 5.047, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.39212108904294746;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(A, E) )
%   | then return 0.5577725031772004;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, A) )
%   | | then return 0.5906556972491541;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6748684668119206;  // std dev = 0.146, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.17635210298348186;  // std dev = 1.059, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5796762774094246;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.48317970425492973;  // std dev = 1.453, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | | else return -0.05581344327843189;  // std dev = 2.806, 117.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=11 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.05629066156141013;  // std dev = 3.084, 62.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=15 */
%   | | | else return 0.16278882139462414;  // std dev = 4.328, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), enzyme(C, E) )
%   | then return 0.26354797665316154;  // std dev = 0.705, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.45378016442439245;  // std dev = 0.091, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11798114890269613;  // std dev = 0.085, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(F, G), phenotype(F, H) )
%   | | | then return -0.00850785370827186;  // std dev = 1.291, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.09580870092289073;  // std dev = 1.970, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.08973635190705878;  // std dev = 3.365, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return -0.15623719699734734;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.19968033030556792;  // std dev = 2.903, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.09975440319216583;  // std dev = 3.937, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.3013810018586079;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, D) )
%   | | then if ( phenotype(D, E) )
%   | | | then return 0.39596978765057056;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5211846063337937;  // std dev = 0.044, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3324369525429833;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G) )
%   | | then return 0.4297389070200275;  // std dev = 0.270, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.011696583497365872;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12083668242456491;  // std dev = 0.099, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.026100523671131075;  // std dev = 3.169, 89.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=23 */
%   | | | else return 0.0852161368125718;  // std dev = 5.486, 182.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=57 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.29536166507785655;  // std dev = 0.082, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.04647406602908377;  // std dev = 0.363, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( complex(A, G), recursion_proteinclass(E, B) )
%   | | then return 0.3602198793723052;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.018176863212248234;  // std dev = 2.861, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   | | | else return -0.06816375741032762;  // std dev = 1.807, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6542659164554683;  // std dev = 0.243, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1872831503109703;  // std dev = 0.088, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.08752806974585244;  // std dev = 4.509, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return -0.017264732214744435;  // std dev = 1.974, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.36625759923679135;  // std dev = 0.246, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else return -0.1531138291175584;  // std dev = 0.041, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), complex(G, I) )
%   | | | then return -0.32024536608255105;  // std dev = 0.289, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.5212956883139032;  // std dev = 2.133, 54.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=49 */
%   | | else return -0.20280770753341004;  // std dev = 0.064, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return 0.4041976746787978;  // std dev = 0.683, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.01997742309816351;  // std dev = 0.658, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.009472571452062262;  // std dev = 1.255, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return -0.03597148631029465;  // std dev = 2.196, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.1160341777462172;  // std dev = 0.233, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.006780093832395625;  // std dev = 0.257, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.2529242051456721;  // std dev = 0.172, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(E, H), enzyme(A, I) )
%   | | | then return 0.12681582611864065;  // std dev = 1.281, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.002638454495719397;  // std dev = 2.406, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(A, J) )
%   | | | then return 0.02498524656041655;  // std dev = 0.740, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.13610706006831777;  // std dev = 3.138, 63.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.08161804348378224;  // std dev = 0.603, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024541000183481352;  // std dev = 1.397, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( interaction(F, A), phenotype(D, E) )
%   | | | then return 0.3005390477591765;  // std dev = 2.353, 65.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=59 */
%   | | | else return -0.1909522340639963;  // std dev = 1.088, 42.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=1 */
%   | | else if ( phenotype(D, G), interaction(H, D) )
%   | | | then return 0.10139673884139434;  // std dev = 1.498, 25.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | else return 0.4879203789952106;  // std dev = 1.264, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then return -0.10783706110663158;  // std dev = 0.177, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | else return -0.1848035134933189;  // std dev = 0.051, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(J, A), complex(J, K) )
%   | then return 0.18447150208549531;  // std dev = 1.038, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then return 0.08067967218316775;  // std dev = 0.832, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.13204688247076088;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12284727238180583;  // std dev = 0.285, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.05523134990327802;  // std dev = 0.208, 135.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=19 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(E, G), phenotype(A, F) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.31631648774938964;  // std dev = 0.620, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.1352187584053595;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.054859323260341056;  // std dev = 1.665, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | else return -0.007740620715358725;  // std dev = 2.829, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else if ( complex(A, J) )
%   | | then return 0.012334148583478189;  // std dev = 0.218, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.18938664411065118;  // std dev = 0.675, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.3609139613975092;  // std dev = 0.715, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '3.996', 'seconds']
Refined model CLL: -0.19963


******************************************
Best model found
******************************************
Results 

CLL : -0.210479 

AUC ROC : 0.971295 

AUC PR : 0.392283 

Precision : 0.392573 

Recall : 0.558491 

F1 : 0.461059 

Total Learning Time : 47.955 

Total Inference Time : 47.277719020843506 

Total revision time: 103.81508604812622
Best scored revision CLL: -0.19963


Results 

CLL : -0.210479 

AUC ROC : 0.971295 

AUC PR : 0.392283 

Precision : 0.392573 

Recall : 0.558491 

F1 : 0.461059 

Total Learning Time : 103.9033750705719 

Total Inference Time : 47.277719020843506 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.338
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20795882103107147;  // std dev = 7.734, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1556894136584086;  // std dev = 5.065, 117.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=38 */
%   | | | else return 0.1466925625562944;  // std dev = 6.078, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10385461142720466;  // std dev = 5.568, 149.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=44 */
%   | | | else return 0.11461491371691988;  // std dev = 5.773, 157.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.07696767904283161;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.14902174851805575;  // std dev = 6.608, 190.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10110376380505544;  // std dev = 7.837, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08005434278386195;  // std dev = 7.854, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7399045725795571;  // std dev = 0.040, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.25977984071275545;  // std dev = 0.057, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0978164012222449;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.0430940632435577;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03141984891424321;  // std dev = 4.348, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | | else return 0.045883652751028924;  // std dev = 5.682, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03707888708230078;  // std dev = 7.135, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04248205757151566;  // std dev = 7.028, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.955', 'seconds']
Parameter learned model CLL:-0.323379 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.734, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.065, 79, 38], 'false,false,false,false': [6.078, 117, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.568, 105, 44], 'false,false,false,false': [5.773, 109, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [6.608, 122, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.837, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.854, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.04, 0, 44], 'true,false': [0.057, 91, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.974, 24, 14], 'false,false,false,false': [4.837, 75, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.348, 98, 44], 'false,false,false,false': [5.682, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.135, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.028, 179, 92]}]
{'': [nan, 0.22744292963611001], 'false': [nan, 0.2274429296361095], 'false,false': [nan, 0.22744292963611001], 'false,false,false': [nan, 0.2274429296361095]}
{'': [nan, 0.21739969135802867], 'false': [nan, 0.21739969135802356], 'false,false': [nan, 0.21739969135802867], 'false,false,false': [0.21930016801811553, 0.21606648199445866]}
{'': [nan, 0.21025219718312627], 'false': [nan, 0.21025219718312627], 'false,false': [nan, 0.21025219718312826], 'false,false,false': [0.20808115413593373, 0.21225623529804769]}
{'': [nan, 0.22304897236458995], 'false': [nan, 0.22304897236458995], 'false,false': [nan, 0.2230489723645897], 'false,false,false': [0.2040816326530613, 0.22984288975818637]}
{'': [nan, 0.2217494968317649], 'false': [nan, 0.2217494968317649], 'false,false': [nan, 0.22174949683176645], 'false,false,false': [nan, 0.22174949683176645]}
{'': [nan, 0.22109146622904957], 'false': [nan, 0.22109146622904957], 'false,false': [nan, 0.2210914662290492], 'false,false,false': [nan, 0.22109146622905024]}
{'': [0.21959586998904054, 0.2198705937495749], 'false': [nan, 0.2198705937495749], 'false,false': [nan, 0.2198705937495749], 'false,false,false': [0.23268698060941864, 0.21462839828297176], 'true': [3.6601151499999155e-05, 3.615297413521564e-05], 'true,true': [nan, 3.6601151499999155e-05], 'true,true,false': [nan, 3.6601151499999155e-05]}
{'': [nan, 0.1771579575539444], 'false': [nan, 0.1771579575539444], 'false,false': [nan, 0.17715795755394373], 'false,false,false': [0.13311306902886857, 0.21960192951087532]}
{'': [nan, 0.18245608692393797], 'false': [nan, 0.1824560869239373], 'false,false': [nan, 0.1824560869239373], 'false,false,false': [nan, 0.1824560869239373]}
{'': [nan, 0.18226745955677556], 'false': [nan, 0.18226745955677556], 'false,false': [nan, 0.1822674595567744], 'false,false,false': [nan, 0.1822674595567744]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.759
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, E), interaction(A, F) )
%   | | | then return 0.10405057444377466;  // std dev = 3.363, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | | else return 0.1914822684328453;  // std dev = 6.164, 171.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=57 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then return -0.14021983633036497;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(D, D) )
%   | | | then return -0.04021983633036499;  // std dev = 0.934, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.2992279564367214;  // std dev = 1.233, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.19626428373379337;  // std dev = 4.235, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.11515886551172426;  // std dev = 5.430, 146.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.15347604410800098;  // std dev = 0.070, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( complex(A, F), complex(D, F) )
%   | | | then return 0.3170546981823823;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.07494138043721142;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12109825168967968;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.2221217768883449;  // std dev = 2.945, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.12200757856968163;  // std dev = 6.153, 180.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=57 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( complex(C, D) )
%   | then return 0.026506311838262124;  // std dev = 0.345, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else return 0.16196420427634722;  // std dev = 0.465, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.4892188442150103;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, E), complex(E, I) )
%   | | | then return 0.15226604522487683;  // std dev = 3.443, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.07447882477761202;  // std dev = 4.145, 88.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=26 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.775476707419519;  // std dev = 0.017, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22452329258048098;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.16687858899924388;  // std dev = 1.793, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.28372675097005934;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), interaction(E, F) )
%   | then return -0.019279339284783467;  // std dev = 0.338, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(C, C) )
%   | | then return -0.1269473693110775;  // std dev = 0.215, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.03437649843438831;  // std dev = 2.884, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.12353284086058684;  // std dev = 2.924, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4735833371343904;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.05785508562561891;  // std dev = 2.041, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.10200558578334538;  // std dev = 1.844, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.38718119471199786;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09302785156467895;  // std dev = 4.581, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.35380974424206924;  // std dev = 0.053, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(D, F), phenotype(D, G) )
%   | | then if ( interaction(A, E), interaction(D, H) )
%   | | | then return -0.022659713910145984;  // std dev = 1.207, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.2758995801879093;  // std dev = 2.066, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
%   | | else if ( complex(E, I) )
%   | | | then return -0.07166525475340647;  // std dev = 2.087, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.09221688322670435;  // std dev = 0.935, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7235515462280987;  // std dev = 0.502, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.2345300104689926;  // std dev = 0.163, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.09416491387362542;  // std dev = 3.045, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.15791152284988483;  // std dev = 3.450, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5371375262729096;  // std dev = 0.184, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.20683347965540105;  // std dev = 0.388, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( location(A, G) )
%   | | then if ( phenotype(E, H), interaction(E, I) )
%   | | | then return -0.018398651436313928;  // std dev = 1.862, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.12499818712275725;  // std dev = 1.947, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return 0.0909406152567035;  // std dev = 0.311, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7422759700362056;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2571572321703946;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.11033696762629239;  // std dev = 1.889, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.0030057062006440065;  // std dev = 3.586, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22699087681554714;  // std dev = 0.068, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.07654708018494058;  // std dev = 0.687, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.06661365020850805;  // std dev = 1.827, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(G, A), phenotype(A, H) )
%   | | | then return -0.11075370539473113;  // std dev = 1.132, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | | else return -0.02092948835705285;  // std dev = 3.980, 106.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=26 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5024372260099002;  // std dev = 0.373, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20907578049013584;  // std dev = 0.141, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.04011109623636372;  // std dev = 1.899, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return 0.08656742814164822;  // std dev = 3.319, 56.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1904914602953624;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, F), location(D, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.1030801008911918;  // std dev = 0.874, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.021041707188031205;  // std dev = 2.064, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(J, D), interaction(K, J) )
%   | | | then return 0.2502268635882825;  // std dev = 1.836, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.020314352266939624;  // std dev = 2.201, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( interaction(N, L) )
%   | | | then return -0.08650562747668195;  // std dev = 0.796, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return -0.021271508245827686;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, P), location(A, Q) )
%   | | | then return 0.03361344722997581;  // std dev = 2.364, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | | else return -0.014089358460693072;  // std dev = 3.968, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2769259840956048;  // std dev = 0.228, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.021919242037019726;  // std dev = 0.338, 167.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=44 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(A, F), phenotype(E, G) )
%   | | then return 0.36480996333478194;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.0430886429981274;  // std dev = 1.027, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.19983308794088855;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, I) )
%   | | | then return 0.008735959787761899;  // std dev = 0.802, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07499663181900089;  // std dev = 1.592, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03977928272225474;  // std dev = 1.078, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.13989351865634947;  // std dev = 2.561, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.032', 'seconds']
Refined model CLL: -0.267512


******************************************
Best model found
******************************************
Results 

CLL : -0.261012 

AUC ROC : 0.89787 

AUC PR : 0.214535 

Precision : 0.259594 

Recall : 0.415162 

F1 : 0.319444 

Total Learning Time : 13.759 

Total Inference Time : 6.118206024169922 

Total revision time: 27.748014089584352
Best scored revision CLL: -0.267512


Results 

CLL : -0.261012 

AUC ROC : 0.89787 

AUC PR : 0.214535 

Precision : 0.259594 

Recall : 0.415162 

F1 : 0.319444 

Total Learning Time : 27.83630311203003 

Total Inference Time : 6.118206024169922 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.168
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20916934326277806;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18970729752927928;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
%   | | | else return 0.16794224088050402;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09966146332759779;  // std dev = 4.442, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.10361109663412588;  // std dev = 6.377, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10750948634475858;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.14981223455370762;  // std dev = 7.012, 213.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10152445297409386;  // std dev = 7.540, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08243119088464279;  // std dev = 7.543, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.695751619616848;  // std dev = 0.984, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2694035538174452;  // std dev = 0.015, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.05145707343043607;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.06440693747976405;  // std dev = 5.088, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.044812679485776954;  // std dev = 3.433, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.02991710299577868;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.050459657747997794;  // std dev = 7.036, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03149620387288985;  // std dev = 7.108, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.531', 'seconds']
Parameter learned model CLL:-0.345299 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 50, 28], 'false,false,false,false': [6.2, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.442, 67, 28], 'false,false,false,false': [6.377, 136, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [7.012, 136, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.543, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.984, 1, 28], 'true,false': [0.015, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [5.088, 77, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.433, 56, 28], 'false,false,false,false': [6.302, 126, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.036, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.108, 166, 86]}]
{'': [nan, 0.22780508121616078], 'false': [nan, 0.2278050812161605], 'false,false': [nan, 0.22780508121616078], 'false,false,false': [nan, 0.2278050812161605]}
{'': [nan, 0.225663999999998], 'false': [nan, 0.2256639999999984], 'false,false': [nan, 0.225663999999998], 'false,false,false': [0.2301117685733073, 0.2234991887506734]}
{'': [nan, 0.20899181863374988], 'false': [nan, 0.20899181863374988], 'false,false': [nan, 0.2089918186337505], 'false,false,false': [0.20773020646355952, 0.20960449051054902]}
{'': [nan, 0.2295374865384482], 'false': [nan, 0.2295374865384482], 'false,false': [nan, 0.22953748653844785], 'false,false,false': [0.2181122448979593, 0.23083148490916594]}
{'': [nan, 0.22384895849972444], 'false': [nan, 0.22384895849972444], 'false,false': [nan, 0.22384895849972425], 'false,false,false': [nan, 0.22384895849972425]}
{'': [nan, 0.22400947548288946], 'false': [nan, 0.22400947548288946], 'false,false': [nan, 0.22400947548288963], 'false,false,false': [nan, 0.22400947548288952]}
{'': [0.2155077238279065, 0.22224297393083722], 'false': [nan, 0.22224297393083722], 'false,false': [nan, 0.22224297393083722], 'false,false,false': [0.2202734839476817, 0.2231718192627834], 'true': [0.033383623944287864, 3.914179118987467e-06], 'true,true': [nan, 0.033383623944287864], 'true,true,false': [nan, 0.033383623944287864]}
{'': [nan, 0.1922113811818601], 'false': [nan, 0.1922113811818601], 'false,false': [nan, 0.1922113811818602], 'false,false,false': [0.1402966074403386, 0.2158420600637929]}
{'': [nan, 0.19799399990693886], 'false': [nan, 0.19799399990693892], 'false,false': [nan, 0.19799399990693892], 'false,false,false': [nan, 0.19799399990693892]}
{'': [nan, 0.2004899818801238], 'false': [nan, 0.2004899818801238], 'false,false': [nan, 0.20048998188012446], 'false,false,false': [nan, 0.20048998188012446]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.995
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), phenotype(A, E) )
%   | then if ( enzyme(D, C) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return 0.07554023944733841;  // std dev = 0.412, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.006297083247660433;  // std dev = 0.355, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.21529179224236947;  // std dev = 2.535, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.15639454913459871;  // std dev = 4.885, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7192490893790167;  // std dev = 0.230, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), complex(F, E) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return -0.15153130254309782;  // std dev = 0.101, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.06304981805538093;  // std dev = 2.817, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(G, A), phenotype(D, H) )
%   | | | then return 0.14847864417530363;  // std dev = 1.442, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.45217370020445047;  // std dev = 1.102, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), enzyme(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.13285728516138356;  // std dev = 1.189, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.04018649866443794;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.15641398931920478;  // std dev = 4.493, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return 0.23002933598602673;  // std dev = 3.367, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, E) )
%   | then if ( interaction(E, E), phenotype(C, D) )
%   | | then return 0.6400216507760869;  // std dev = 0.172, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16004407563601997;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(C, C) )
%   | | then return 0.5916459613936141;  // std dev = 0.158, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6979376979323504;  // std dev = 0.165, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13897366321396748;  // std dev = 0.077, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.7750004149207208;  // std dev = 0.973, 26.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | | | else return -0.1822231327682534;  // std dev = 0.116, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.018315326977839514;  // std dev = 2.675, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | | else return 0.1069011297405863;  // std dev = 4.869, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.16939013787522436;  // std dev = 0.558, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.470192219536806;  // std dev = 0.150, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5168058872390437;  // std dev = 0.178, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.673261079445418;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.13564763785629;  // std dev = 0.066, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(J, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5656222265332512;  // std dev = 0.066, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03337993351811706;  // std dev = 4.615, 141.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=34 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.18385718475207155;  // std dev = 2.805, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.10521360608444247;  // std dev = 3.319, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.15000228830637063;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return 0.3614120466563542;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5347587113661422;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(F, G), interaction(H, A) )
%   | | then return 0.053269533034402516;  // std dev = 0.887, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.44692206543320995;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6625731340152103;  // std dev = 0.137, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.15546580381103767;  // std dev = 0.074, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.02134563569393276;  // std dev = 2.293, 48.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=7 */
%   | | | else return 0.05606341251705094;  // std dev = 5.211, 144.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=41 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3288255520367365;  // std dev = 0.086, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(C, E), enzyme(A, F) )
%   | | then if ( interaction(C, G), phenotype(G, E) )
%   | | | then return 0.2840393096508411;  // std dev = 0.961, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.03629103725615259;  // std dev = 1.201, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else return -0.02447905162584982;  // std dev = 0.335, 86.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=16 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return 0.01833535151144426;  // std dev = 0.289, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6907069073683498;  // std dev = 0.579, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21006258223597027;  // std dev = 0.140, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.02389446495604445;  // std dev = 1.575, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.13323043942561325;  // std dev = 3.422, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.23814938934982915;  // std dev = 0.065, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), location(A, G) )
%   | | | then return 0.5190241674128416;  // std dev = 0.502, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return 0.6674482426696153;  // std dev = 0.274, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.1635596985447629;  // std dev = 0.293, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.31249208051982297;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6277087087403647;  // std dev = 0.279, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20256430884572343;  // std dev = 0.313, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.16626041076064774;  // std dev = 2.483, 31.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=14 */
%   | | | else return 0.06258004450396264;  // std dev = 3.891, 93.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=30 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23065085362079377;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( complex(A, E), interaction(F, D) )
%   | | then if ( interaction(A, F), phenotype(D, G) )
%   | | | then return -0.08738086063106122;  // std dev = 0.361, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.0027514720312494293;  // std dev = 1.835, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5489551085025113;  // std dev = 1.500, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | else return -0.21139066199723405;  // std dev = 0.573, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.43000262661045;  // std dev = 0.394, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.16380226052038574;  // std dev = 0.277, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.08786116153319536;  // std dev = 1.193, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.4092979310836627;  // std dev = 1.044, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), interaction(F, E) )
%   | then return 0.015884636631505192;  // std dev = 0.262, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | else return -0.06327374602683011;  // std dev = 0.220, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.3233993932049675;  // std dev = 0.184, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, A), enzyme(G, J) )
%   | | | then return -0.29965786619829915;  // std dev = 0.547, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.016549333725724667;  // std dev = 2.637, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( complex(K, M), phenotype(L, N) )
%   | | | then return 0.0856955946351684;  // std dev = 1.674, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return -0.012839546606557223;  // std dev = 1.630, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, P) )
%   | | | then return 0.058986494594184584;  // std dev = 1.325, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.2094011976356054;  // std dev = 1.440, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( phenotype(D, E) )
%   | | then return 0.16068310631188173;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.26324356062546916;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.1735465742170987;  // std dev = 0.084, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.04234214812471146;  // std dev = 0.508, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.0692227352664264;  // std dev = 0.149, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.010318517862431197;  // std dev = 1.466, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.08080063010220134;  // std dev = 1.998, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0018823890000579505;  // std dev = 3.627, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | | else return 0.1282614531906502;  // std dev = 0.917, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.637', 'seconds']
Refined model CLL: -0.214496


******************************************
Best model found
******************************************
Results 

CLL : -0.228035 

AUC ROC : 0.977652 

AUC PR : 0.268422 

Precision : 0.308257 

Recall : 0.59364 

F1 : 0.405797 

Total Learning Time : 14.995 

Total Inference Time : 7.250665903091431 

Total revision time: 29.82963384437561
Best scored revision CLL: -0.214496


Results 

CLL : -0.228035 

AUC ROC : 0.977652 

AUC PR : 0.268422 

Precision : 0.308257 

Recall : 0.59364 

F1 : 0.405797 

Total Learning Time : 29.91792286682129 

Total Inference Time : 7.250665903091431 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.058
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.12864073837819945;  // std dev = 4.907, 122.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=33 */
%   | | | else return 0.168493762685718;  // std dev = 4.983, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.058148935099512175;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7951850376804652;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.21837106042470464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6607512315242418;  // std dev = 3.503, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16084679045323724;  // std dev = 0.033, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.34950152763657716;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.35092203251355425;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462843;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.30536643674628444;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11575090802003664;  // std dev = 4.291, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6962087421480024;  // std dev = 0.989, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14278447762574403;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2974007224504298;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.11384200706781963;  // std dev = 1.336, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44221403177154067;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.42780543733048937;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6337793054540974;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.04170499380547768;  // std dev = 5.081, 229.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5905301342671092;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.3673634077477036;  // std dev = 1.069, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.11528684906267089;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.1926940699600752;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.011243921896152143;  // std dev = 1.204, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.048633487761805184;  // std dev = 5.594, 249.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4441409517596028;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.04490992945720916;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07708068470813065;  // std dev = 1.289, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2994495449150632;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.37404390689696143;  // std dev = 0.292, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2781838397968962;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.33882972078789053;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.025825363244494977;  // std dev = 2.276, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.09259020793912551;  // std dev = 0.898, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07359013896449791;  // std dev = 2.890, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.06481682093250415;  // std dev = 4.165, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2674395905648886;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.26750006294225037;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5531809158455175;  // std dev = 1.080, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18709117357008595;  // std dev = 0.608, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0721209294409148;  // std dev = 0.897, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06660159074605436;  // std dev = 4.084, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17799832444474387;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2353367821880024;  // std dev = 0.193, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3976071393717545;  // std dev = 2.709, 81.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=71 */
%   | | else return -0.14973171974757787;  // std dev = 0.249, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.21842924949604936;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03474261603637913;  // std dev = 1.438, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17244888870938463;  // std dev = 0.196, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.6177044422807982;  // std dev = 0.296, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.19999151867767695;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07678040782459965;  // std dev = 1.828, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.32904261299185544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.029248665468052822;  // std dev = 1.667, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2666761446505912;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02619816608839742;  // std dev = 3.476, 134.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=40 */
%   | | | else return -0.06607547303756559;  // std dev = 1.487, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12615644827285227;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.31627085108926867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1699223449047921;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.020209485322537458;  // std dev = 2.454, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.028153385239101658;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.004812547549608035;  // std dev = 3.567, 144.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=40 */
%   | | | else return 0.10209466316327562;  // std dev = 1.295, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.057', 'seconds']
Parameter learned model CLL:-0.192203 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 1, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.907, 89, 33], 'false,false,true,false': [4.983, 80, 36], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.265, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.019, 0, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.503, 15, 69], 'false,false,true,false': [0.033, 155, 0], 'false,false,false,true': [1.224, 3, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [2.98e-08, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.291, 80, 34], 'false,true,false,true': [0.989, 1, 37], 'false,true,false,false': [0.0, 70, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.336, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.068, 0, 5], 'true,false': [0.056, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.966, 1, 14], 'false,true,false': [5.081, 172, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.069, 2, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.935, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.204, 2, 4], 'false,true': [5.594, 178, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.289, 8, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.08, 0, 4], 'true,true,false': [0.292, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.276, 46, 12], 'false,false,true': [0.898, 1, 3], 'false,false,false,true': [2.89, 45, 20], 'false,false,false,false': [4.165, 97, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.295, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.08, 1, 33], 'true,false': [0.608, 96, 0], 'false,true': [0.897, 1, 3], 'false,false,true': [4.084, 81, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.002, 0, 3], 'true,false': [0.193, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.709, 10, 71], 'false,true,false': [0.249, 142, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.438, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.196, 0, 8], 'true,false,true': [0.296, 2, 0], 'true,false,false': [0.02, 0, 3], 'false,true,true': [1.828, 38, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.667, 34, 17], 'false,false,true': [0.04, 0, 3], 'false,false,false,true': [3.476, 94, 40], 'false,false,false,false': [1.487, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.017, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.018, 0, 3], 'false,true': [2.454, 82, 29], 'false,false,true': [0.853, 1, 3], 'false,false,false,true': [3.567, 104, 40], 'false,false,false,false': [1.295, 6, 4]}]
{'': [-1.6148698540002277e-16, 0.2054677673524269], 'false': [0.24999999999999992, 0.20336416902602744], 'false,true': [0.0, 0.23999999999999994], 'false,true,false': [0.25, 0.22222222222222224], 'false,false': [0.20586469882070507, 0.16620498614958432], 'false,false,true': [0.1973259876377331, 0.21403091557669557], 'false,false,false': [0.17283950617283952, 0.16000000000000003], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [2.4223047810003414e-16, 0.2104689602877019], 'false': [0.1910268503731702, 0.20819172863875401], 'false,false': [0.20520871834871232, 0.24964676550022968], 'false,false,false': [0.24952851620844654, 0.25], 'false,false,true': [0.14607769563450257, 7.231494646934181e-06], 'false,true': [0.00018376779583695324, 0.25], 'false,true,false': [0.0, 0.0], 'true': [0.0, -9.868649107779169e-17]}
{'': [0.0763888888888888, 0.16891940611964193], 'false': [0.1657681189758664, 0.22145900835440246], 'false,false': [0.24999999999999994, 0.19840679948845394], 'false,false,true': [nan, 0.24999999999999994], 'false,false,false': [0.19840679948845394, nan], 'false,true': [0.16149244756903466, 0.16959096494232004], 'false,true,false': [0.02575765554805234, -7.2957513046796e-17], 'true': [1.1102230246251565e-16, 0.1875]}
{'': [0.0007563373292900961, 0.13502670660244873], 'false': [0.1298550104976588, 0.22420511617050876], 'false,false': [0.0, 0.24101626790605163], 'false,false,false': [0.22846422352691595, 0.22222222222222224], 'false,true': [0.06221186969374545, 0.11273545662705389], 'false,true,true': [nan, 0.06221186969374551], 'true': [0.0009151681684409052, 0.0005296112085885577], 'false,false,true': [nan, 0.0]}
{'': [0.17393591117467072, 0.13015056106339043], 'true': [0.10918187744502708, 0.241460819252813], 'false': [0.1256733301747809, 0.1854665865916032], 'false,false': [0.0, 0.1820409161804072], 'false,false,false': [0.20408163265306117, 0.1661862556816726], 'true,true': [0.10918187744502708, nan], 'false,false,true': [nan, 0.0]}
{'': [0.009790899296986904, 0.1211124983422518], 'false': [0.0893523681963798, 0.12808027905254307], 'false,false': [0.20156842063312713, 0.12662019412720418], 'false,false,false': [0.1285222304882459, 0.12569966151371506], 'true': [0.011571647750555117, 0.0009194807202934641], 'true,true': [0.0016144827438788062, 0.01706434916056878], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11398608628964846, 0.13985236836174958], 'false': [0.20111862140110737, 0.13782606286357446], 'false,false': [0.13782606286357446, nan], 'true': [0.042924669499949726, 0.003848118037981333], 'true,true': [0.007894331763963076, 0.03430035636998424], 'true,true,false': [nan, 0.03430035636998424], 'true,true,true': [0.00868376460791318, 0.0]}
{'': [0.0040452092751845, 0.10480064616335982], 'false': [0.10247436190533, 0.13290919089324837], 'false,false': [0.0, 0.13776380402589178], 'false,false,false': [0.13776380402589178, nan], 'false,true': [0.09058956674193056, 0.00043772602803149633], 'false,true,true': [nan, 0.0905895667419304], 'true': [9.907021949010868e-07, 0.0046651461301350575], 'false,false,true': [0.0, nan]}
{'': [0.09265861658254687, 0.08295985337363755], 'true': [0.004789877227302036, 0.17803526529061756], 'true,false': [0.04370616945447864, 0.000137322020921829], 'false': [0.06459854102488531, 0.09431311431652771], 'false,false': [0.0005390070969134945, 0.09494060549561605], 'false,false,false': [0.0901741942591382, 0.1229177517765861], 'false,true': [0.06819720644949302, 0.05514411700298047], 'false,true,false': [0.0, 0.054496981680426874]}
{'': [0.003009233832930462, 0.0792029154752723], 'false': [0.05425684712921201, 0.09634836302002292], 'false,false': [0.1820326783845771, 0.09408372928797122], 'false,false,false': [0.08835743214035453, 0.1676931313134502], 'true': [0.0039886980642313274, 0.00010637368613282405], 'true,true': [0.0039886980642313274, nan], 'true,true,true': [4.057630362689595e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 13.637
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.05094197399139688;  // std dev = 0.953, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 2.335, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.1833023093326405;  // std dev = 5.981, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6853299642901143;  // std dev = 3.193, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16555256744619076;  // std dev = 0.111, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.26505815010257205;  // std dev = 1.300, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.0010058639980948063;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.45315456217379574;  // std dev = 0.318, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5820641463621515;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.04860144919265601;  // std dev = 3.048, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | | | else return 0.11553841499265773;  // std dev = 3.075, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6147533528320672;  // std dev = 1.897, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.14466964509134536;  // std dev = 0.040, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.47751040465810873;  // std dev = 0.794, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.044800279656785236;  // std dev = 1.049, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.16753345609862566;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.429950467286318;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.4591717096510119;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2176639923253205;  // std dev = 0.871, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(H, B) )
%   | | | then return 0.703175432100949;  // std dev = 0.042, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.05840682004917423;  // std dev = 4.958, 198.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=55 */
%   | | else return 0.22570351790998966;  // std dev = 0.353, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5442780500484319;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.23337701915699882;  // std dev = 0.965, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.04502943893795354;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.32924439172955183;  // std dev = 0.031, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.009307538716152353;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.3599560541919444;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return -0.0412313818264664;  // std dev = 0.273, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.1301714237983588;  // std dev = 2.499, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   | | | else return 0.07185028994863607;  // std dev = 4.173, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4093384942348627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.031906411208976825;  // std dev = 1.428, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.07704852461560996;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3139453305540848;  // std dev = 0.075, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3216613030452941;  // std dev = 0.006, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5568213229781205;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.15090461310518546;  // std dev = 0.051, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.011344514379748092;  // std dev = 3.066, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.49760836891643934;  // std dev = 0.274, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14535199115172143;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05503894754325062;  // std dev = 2.869, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
%   | | | else return 0.12796734472576043;  // std dev = 2.535, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43404626228428506;  // std dev = 0.192, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.16983212829650945;  // std dev = 0.070, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), interaction(F, H) )
%   | | | then return 0.001054445918449659;  // std dev = 0.590, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4689934159579754;  // std dev = 1.174, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.18672080105764632;  // std dev = 0.047, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5020236826927039;  // std dev = 0.282, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17139715825848506;  // std dev = 0.391, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.17314191242368335;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.08444511075756668;  // std dev = 2.155, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.08000134421061067;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.1778543970283135;  // std dev = 0.774, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2104572187142725;  // std dev = 0.209, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.24744192344770674;  // std dev = 2.802, 62.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=48 */
%   | | | else return 0.45193010504513614;  // std dev = 0.398, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.146023032808858;  // std dev = 0.029, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.17773826111086688;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.1423467292058579;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.044281782696106026;  // std dev = 1.153, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16904181081085257;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16014773145917208;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.03827499444701533;  // std dev = 0.810, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.03172163842520871;  // std dev = 0.812, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return -0.08474406959920291;  // std dev = 0.477, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.006392422679549132;  // std dev = 1.813, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2127749707276105;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return -0.006612552558174007;  // std dev = 3.154, 141.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=38 */
%   | | | else return 0.1491864175279796;  // std dev = 1.390, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13907731380292748;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.221771556107912;  // std dev = 0.597, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else return 0.004265315665138367;  // std dev = 0.470, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.0992518039316887;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else return -0.003965981443430059;  // std dev = 0.209, 106.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=29 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3621190345668385;  // std dev = 0.564, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.15442530964114115;  // std dev = 0.620, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.09524530298194187;  // std dev = 2.422, 55.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=25 */
%   | | | else return -0.007910845741575715;  // std dev = 0.981, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.437', 'seconds']
Refined model CLL: -0.182132


******************************************
Best model found
******************************************
Results 

CLL : -0.196678 

AUC ROC : 0.991516 

AUC PR : 0.393901 

Precision : 0.23849 

Recall : 0.91844 

F1 : 0.378655 

Total Learning Time : 13.637 

Total Inference Time : 20.982540130615234 

Total revision time: 55.69161302566528
Best scored revision CLL: -0.182132


Results 

CLL : -0.196678 

AUC ROC : 0.991516 

AUC PR : 0.393901 

Precision : 0.23849 

Recall : 0.91844 

F1 : 0.378655 

Total Learning Time : 55.74479109764099 

Total Inference Time : 20.982540130615234 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.948
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11224729575524883;  // std dev = 4.809, 122.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=31 */
%   | | | else return 0.18423589162125065;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6694190766481094;  // std dev = 0.970, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6736467220780527;  // std dev = 3.533, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.1612199793422311;  // std dev = 0.063, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09226581259110073;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17559914592443404;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5050139710311208;  // std dev = 0.961, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.44668732690515905;  // std dev = 0.929, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.060719602336261363;  // std dev = 4.427, 141.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6184999767493202;  // std dev = 2.123, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14467593779613694;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8175126098993586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16322135251988204;  // std dev = 1.506, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46497199948415674;  // std dev = 0.052, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.17368701220129718;  // std dev = 1.455, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4978092604519264;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5281715755754759;  // std dev = 1.868, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.02718003223249784;  // std dev = 5.212, 244.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5070191729658027;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.13862428105932353;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.25996879575442017;  // std dev = 0.940, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3707059661717243;  // std dev = 0.109, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2380081060016743;  // std dev = 1.230, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.08410426206903457;  // std dev = 5.659, 255.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3825023096839919;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.18450334560669213;  // std dev = 1.472, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26835163606037266;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3844430080161661;  // std dev = 0.215, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3362297595384397;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.003813503742946358;  // std dev = 2.782, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.23427223200182182;  // std dev = 0.909, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.027589237532857178;  // std dev = 2.311, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | | | else return 0.06135106078005068;  // std dev = 4.733, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2175446868555332;  // std dev = 0.896, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.23188948792479103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26219624989219203;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5134370746053545;  // std dev = 1.307, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18121352494907783;  // std dev = 0.736, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3074385496467791;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.061514528157873775;  // std dev = 4.423, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17616519521800245;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.23004819991345854;  // std dev = 0.088, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37725907756725163;  // std dev = 3.139, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14585631604117597;  // std dev = 0.312, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19316690870297548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.009000882823196074;  // std dev = 1.343, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.0797662296249922;  // std dev = 0.942, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16043068642988578;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2082523071650705;  // std dev = 0.092, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06150553541500267;  // std dev = 1.982, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21060294666171944;  // std dev = 0.462, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.04274133906396573;  // std dev = 1.381, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2063142893486373;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.052309661959579916;  // std dev = 3.604, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
%   | | | else return 0.007211783759893859;  // std dev = 1.342, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.02710149709729838;  // std dev = 0.939, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.17009325334201342;  // std dev = 0.111, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.03440493044968207;  // std dev = 0.788, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.028224760518167132;  // std dev = 2.590, 129.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.011931387521705491;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.018734568518184506;  // std dev = 3.825, 158.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=47 */
%   | | | else return -0.049587770806725696;  // std dev = 1.470, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.341', 'seconds']
Parameter learned model CLL:-0.200712 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.809, 91, 31], 'false,false,true,false': [5.507, 93, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.97, 1, 13], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.533, 15, 76], 'false,false,true,false': [0.063, 168, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.961, 1, 11], 'true,false': [0.929, 1, 6], 'false,true,true': [4.427, 107, 34], 'false,true,false,true': [2.123, 5, 48], 'false,true,false,false': [0.0, 87, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.506, 7, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.052, 0, 10], 'true,false': [1.455, 3, 7], 'false,true,true,true': [0.052, 0, 3], 'false,true,true,false': [1.868, 4, 21], 'false,true,false': [5.212, 186, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.94, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.109, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.23, 2, 10], 'false,true': [5.659, 173, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.472, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.047, 0, 5], 'true,true,false': [0.215, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.055, 0, 2], 'false,true': [2.782, 60, 19], 'false,false,true': [0.909, 1, 8], 'false,false,false,true': [2.311, 48, 11], 'false,false,false,false': [4.733, 107, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.896, 1, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [1.307, 2, 33], 'true,false': [0.736, 101, 0], 'false,true': [0.072, 0, 5], 'false,false,true': [4.423, 105, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.088, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.139, 13, 82], 'false,true,false': [0.312, 169, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.343, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.942, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.092, 0, 5], 'false,true,true': [1.982, 46, 13], 'false,true,false,true': [0.462, 1, 8], 'false,true,false,false': [1.381, 51, 11], 'false,false,true': [0.055, 0, 5], 'false,false,false,true': [3.604, 102, 47], 'false,false,false,false': [1.342, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.939, 1, 7], 'true,true,true,false': [0.111, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.788, 1, 3], 'false,true': [2.59, 97, 32], 'false,false,true': [0.893, 1, 5], 'false,false,false,true': [3.825, 111, 47], 'false,false,false,false': [1.47, 11, 4]}]
{'': [0.09418282548476423, 0.21291313413827165], 'false': [0.10937499999999978, 0.20628099173553827], 'false,false': [0.2068639053254441, 0.1955555555555554], 'false,false,true': [0.18953238376780557, 0.2197542533081297], 'false,false,false': [0.1955555555555554, nan], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05305628988235542, 0.21068750679944395], 'false': [0.0007884305269265646, 0.20690885032413805], 'false,false': [0.20706079756700096, 0.2040816326530613], 'false,false,true': [0.1371737791361334, 2.3527537095880375e-05], 'false,false,false': [0.18749999999999994, 0.22222222222222218], 'true': [0.0, 0.0672672284389508], 'false,true': [0.0009658273954848973, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.09484331937694333, 0.15902070605804586], 'false': [0.15579915845171508, 0.22168374233792706], 'false,false': [0.22168374233792706, nan], 'false,false,true': [0.0, 0.2061620556995918], 'false,true': [0.13901610039300688, 0.16920179969504054], 'false,true,false': [0.08500486114370157, -5.614921044081252e-17], 'true': [0.07693949421492134, 0.12338696113695284]}
{'': [0.12727302569103616, 0.13932942791514108], 'false': [0.13559995158777474, 0.213292569659303], 'false,false': [0.0, 0.22532104885408746], 'false,false,false': [0.22222222222222218, 0.22113459405393238], 'false,true': [0.12486504499898336, 0.1113288133247667], 'true': [0.00027464275883257725, 0.21184793671505195], 'false,true,true': [0.0009038675314645047, 0.1396416144901219], 'false,false,true': [nan, 0.0]}
{'': [0.08440618551957342, 0.12967928564516154], 'false': [0.1255818995395786, 0.22026003636063085], 'false,false': [0.0, 0.24081301475646585], 'false,false,false': [0.24081301475646585, nan], 'true': [0.0017060248992565466, 0.1261605219521633], 'true,true': [0.0017060248992565466, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005915808265379963, 0.12196728820612023], 'false': [0.09793487827142865, 0.12996567218961008], 'false,false': [0.09180738995079991, 0.12999984959411778], 'false,false,false': [0.09048792430915231, 0.14268757537829638], 'true': [0.006535796816381104, 0.001535997070010578], 'true,true': [0.00043278703523487173, 0.005113069719271662], 'true,false': [nan, 0.001535997070010578]}
{'': [0.10577498146570899, 0.12653012269233876], 'false': [0.0010427749902865656, 0.12873192513299003], 'false,false': [0.12873192513299003, nan], 'true': [0.06498675607728353, 0.005362927204107977], 'true,true': [0.0472061363900344, 0.049529888131763775], 'true,true,false': [0.0, 0.04879199511428501], 'true,true,true': [0.05014441560160467, 0.0]}
{'': [0.0009728713173561538, 0.10227393634699021], 'false': [0.10072897347012501, 0.13101886489010922], 'false,false': [0.0, 0.13867458732040017], 'false,false,false': [0.13867458732040017, nan], 'false,true': [0.1037218012601809, 0.0005741793204286568], 'false,true,true': [nan, 0.10372180126018084], 'true': [0.0, 0.0005890685274904106], 'false,false,true': [0.0, nan]}
{'': [0.05602973032727553, 0.07450379882092362], 'false': [0.05106011061664699, 0.08943057937351193], 'false,false': [0.0006090199433431087, 0.09142811735372981], 'false,false,false': [0.08715788685521712, 0.13850091750083954], 'true': [0.08864990974650486, 0.0016740236606378625], 'false,true': [0.06660838069026044, 0.036964892194174176], 'false,true,false': [0.023713830987592794, 0.03075251863299858], 'true,false': [0.0, 0.0016902310078244832]}
{'': [0.09057485682735916, 0.07949835884249297], 'true': [0.06880476469768876, 0.15504359070918425], 'false': [0.05201666549879979, 0.0985993418452762], 'false,false': [0.13281184177377722, 0.0974127552391051], 'false,false,false': [0.09257936142073693, 0.14406129626832023], 'true,true': [0.06880476469768876, nan], 'true,true,true': [0.11010951178745035, 0.0020479729471791913]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 12.938
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.07243464938522666;  // std dev = 3.433, 70.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=15 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.1366299477577397;  // std dev = 3.984, 79.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=22 */
%   | | | else return 0.22567030262087923;  // std dev = 5.215, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109542;  // std dev = 1.49e-08, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2505511758931249;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6800246113668534;  // std dev = 3.437, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16128007500770195;  // std dev = 0.148, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.33530022241275376;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04910073691859877;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.06401370561134932;  // std dev = 3.967, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | | else return 0.010755361273318595;  // std dev = 2.030, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.539596168627549;  // std dev = 2.849, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.1438735697635494;  // std dev = 0.069, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.2657247266880835;  // std dev = 1.273, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.18369682192403927;  // std dev = 0.957, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.2160854393055046;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.41751358415830986;  // std dev = 1.05e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5418277113006681;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5573164929184804;  // std dev = 1.617, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( interaction(A, H), location(A, I) )
%   | | | then return -0.0743138780993137;  // std dev = 2.320, 100.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=10 */
%   | | | else return 0.10838332505122616;  // std dev = 4.430, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5019007576144738;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.015736965288822787;  // std dev = 1.210, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10161437847077792;  // std dev = 1.084, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.17928815283985033;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, E), location(E, F) )
%   | | then return -0.012621486173183668;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else return 0.3207118471601497;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( phenotype(A, H), location(A, I) )
%   | | then return 0.059549807401475884;  // std dev = 0.350, 176.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=51 */
%   | | else return 0.03885074439756496;  // std dev = 0.338, 112.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=31 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37888166547708524;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.4892937035566766;  // std dev = 0.803, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.1831252065629484;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3025333521359985;  // std dev = 0.266, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D) )
%   | then if ( interaction(E, A), phenotype(E, F) )
%   | | then if ( enzyme(E, G), interaction(H, E) )
%   | | | then return 0.12476243764234067;  // std dev = 1.613, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.007562972176634168;  // std dev = 2.360, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | else if ( complex(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.5190722797478304;  // std dev = 0.484, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.17153537374367028;  // std dev = 0.305, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.041490900343066274;  // std dev = 3.267, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.11680042928874967;  // std dev = 3.348, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.12827702741174946;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 5.095612453844822E-4;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30351036203372345;  // std dev = 0.478, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.13270338589231218;  // std dev = 0.521, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.507231545217669;  // std dev = 0.192, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1565376042534836;  // std dev = 0.086, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2180066665023376;  // std dev = 0.089, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4222966488035726;  // std dev = 2.478, 46.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=39 */
%   | | | else return -0.1662260921868222;  // std dev = 0.115, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.07084102956715779;  // std dev = 1.276, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.06123774925145442;  // std dev = 1.155, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.026923758243121498;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then return -0.10935234404176324;  // std dev = 0.845, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.19212838346733935;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.2865151015950857;  // std dev = 0.223, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3098555368262027;  // std dev = 3.265, 98.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=82 */
%   | | else return -0.13607575740043418;  // std dev = 0.027, 175.000 (wgt'ed) examples reached here.  /* #neg=175 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2605697606531707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.04619303971707287;  // std dev = 1.006, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.15143261599895957;  // std dev = 0.609, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.244637489792522;  // std dev = 0.222, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 3.223913121466637E-4;  // std dev = 0.794, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.2271627724010232;  // std dev = 0.093, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( interaction(A, K), enzyme(K, I) )
%   | | | then return -0.13206228446513943;  // std dev = 0.889, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return -0.020125722991283377;  // std dev = 0.862, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else return -0.002860587342313607;  // std dev = 0.206, 107.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=27 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15655449595971144;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), location(A, N) )
%   | | | then return 0.05907458665107097;  // std dev = 2.726, 89.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=32 */
%   | | | else return -0.004399853151147508;  // std dev = 2.076, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15214140113766522;  // std dev = 0.141, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return -0.044668559675257596;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, E), enzyme(A, G) )
%   | | then if ( interaction(E, H), enzyme(H, G) )
%   | | | then return -0.11177857257436953;  // std dev = 0.657, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.21906486248548207;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.004336289087856724;  // std dev = 0.228, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.39264957865612976;  // std dev = 0.178, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.12041198438001481;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, L) )
%   | | | then return 0.020453601060678155;  // std dev = 3.228, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return -0.056895199671257286;  // std dev = 1.232, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.340', 'seconds']
Refined model CLL: -0.192574


******************************************
Best model found
******************************************
Results 

CLL : -0.168873 

AUC ROC : 0.990129 

AUC PR : 0.346218 

Precision : 0.280151 

Recall : 0.841509 

F1 : 0.420358 

Total Learning Time : 12.938 

Total Inference Time : 18.63935923576355 

Total revision time: 54.84027012443543
Best scored revision CLL: -0.192574


Results 

CLL : -0.168873 

AUC ROC : 0.990129 

AUC PR : 0.346218 

Precision : 0.280151 

Recall : 0.841509 

F1 : 0.420358 

Total Learning Time : 54.893448196411136 

Total Inference Time : 18.63935923576355 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.297
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.19148226843284463;  // std dev = 5.416, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21000078695136415;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8158771577322126;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16455893823323986;  // std dev = 0.051, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.03916511725442174;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.1247336394062333;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.036317911256061285;  // std dev = 2.119, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6786699259864873;  // std dev = 0.233, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.1451601321266761;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6282305288604311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20229185584541645;  // std dev = 3.448, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.07769129873299055;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.13179929844402424;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3805133151414999;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4063891851058603;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.05902738759642881;  // std dev = 4.156, 185.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4741238120356046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49725203595861256;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.18368419145447218;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.0736552390189674;  // std dev = 3.254, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3467673379275187;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16258047513048507;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.046282985879973336;  // std dev = 4.261, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.35945713265531154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.37560526239828684;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.12377995979792496;  // std dev = 3.493, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.7871744586734978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2683106126607564;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3631767193341464;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3584974463934617;  // std dev = 0.109, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.30755914411166474;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3139018347342875;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07386704568415031;  // std dev = 1.025, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.31723842758266546;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05491123703468567;  // std dev = 2.697, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   | | | else return 0.02488447330681135;  // std dev = 4.859, 166.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24680397914092386;  // std dev = 0.144, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2233846071964869;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.20441119279460773;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.6348627387082951;  // std dev = 0.718, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.2066368467251159;  // std dev = 0.872, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.258432496136612;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0920475978899872;  // std dev = 3.206, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17710658899886159;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2138711316358718;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43816859112148737;  // std dev = 0.756, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14360157393939502;  // std dev = 0.222, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1870417691331112;  // std dev = 0.011, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.005780077270293083;  // std dev = 3.109, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1636556096130599;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1286396257325484;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.16730671257479404;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.06055065267673804;  // std dev = 0.432, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20786124485885493;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.0330192517290802;  // std dev = 1.370, 65.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1787369149838966;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00536441107473995;  // std dev = 2.726, 130.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=36 */
%   | | | else return 0.03116909455317772;  // std dev = 3.050, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13407674107275233;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1553035807613773;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.14567175634911966;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1377868435703749;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.022728266032600055;  // std dev = 1.528, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15404749979437654;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03355106977988784;  // std dev = 2.616, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.049762641514863364;  // std dev = 2.950, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.561', 'seconds']
Parameter learned model CLL:-0.179995 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.416, 88, 44], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.992, 1, 52], 'false,false,true,false': [0.051, 146, 0], 'false,false,false,true': [1.99, 19, 5], 'false,false,false,false': [3.254, 36, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.119, 31, 8], 'false,true,false,true': [0.233, 0, 48], 'false,true,false,false': [0.0, 113, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.448, 31, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.195, 2, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.632, 1, 3], 'false,true,false': [4.156, 133, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.752, 8, 5], 'false,false,false,false': [3.254, 36, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.071, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [1.27, 2, 9], 'false,true': [4.261, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.493, 34, 19], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.044, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.109, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.061, 0, 3], 'false,true': [1.025, 22, 3], 'false,false,true': [0.076, 0, 6], 'false,false,false,true': [2.697, 55, 23], 'false,false,false,false': [4.859, 120, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.144, 0, 12], 'true,true,true,false': [0.012, 0, 2], 'true,true,false,true': [0.609, 1, 1], 'true,true,false,false': [0.718, 0, 36], 'true,false': [0.872, 111, 0], 'false,true': [0.059, 0, 5], 'false,false,true': [3.206, 64, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.03, 0, 5], 'true,false': [0.076, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.756, 0, 56], 'false,true,false': [0.222, 133, 0], 'false,false,true,true': [0.011, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.109, 50, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.063, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.008, 0, 4], 'false,true,true': [0.432, 9, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.37, 51, 14], 'false,false,true': [0.045, 0, 5], 'false,false,false,true': [2.726, 94, 36], 'false,false,false,false': [3.05, 42, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.027, 0, 5], 'true,true,true,false': [0.04, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.528, 55, 17], 'false,false,true': [0.04, 0, 5], 'false,false,false,true': [2.616, 73, 36], 'false,false,false,false': [2.95, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.2255428981738443], 'false': [0.12244897959183662, 0.22016528925619977], 'false,false': [0.21724566223794706, 0.22776238842720795], 'false,false,false': [0.22805212620027385, 0.22222222222222224], 'false,false,true': [0.19146722164412083, 0.22222222222222315], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [2.5376526277146434e-16, 0.19810822116470458], 'false': [0.0008585132404309951, 0.19355653538345483], 'false,false': [0.19279075456766873, 0.1955879544756521], 'false,false,false': [0.1650569461995705, 0.20761245674740494], 'false,false,true': [0.01858335689249202, 1.7804575638807807e-05], 'false,true': [0.0009658273954848973, 0.0], 'true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.1600809925010786], 'false': [0.13769615640801208, 0.2300421248245361], 'false,false': [0.23205505084189218, 0.18749999999999994], 'false,false,true': [0.0, 0.23311623154781938], 'false,false,false': [0.18749999999999994, nan], 'false,true': [0.11515202532352872, 0.14235504176558608], 'false,true,false': [0.0011307098007416656, -1.0610981120311231e-16], 'true': [0.0, -1.1102230246251565e-16]}
{'': [0.10937500000000011, 0.12656609871935068], 'false': [0.09602000285850583, 0.21332728797987466], 'false,false': [0.0001337286854582176, 0.21538798420521282], 'false,false,false': [0.23624471264786548, 0.20761245674740492], 'true': [1.2335811384723962e-16, 0.2040816326530612], 'false,true': [0.08004971856403584, 0.09337027202392732], 'false,true,true': [0.0, 0.09992823607576226], 'false,false,true': [0.0, 0.0]}
{'': [0.10833388050517886, 0.12281882489636858], 'false': [0.09125166924609392, 0.22749262931451514], 'false,false': [6.519052354900245e-05, 0.23400241847967249], 'false,false,false': [0.2302677017632394, 0.0], 'true': [0.00101833289869262, 0.14651217473832184], 'true,true': [0.00101833289869262, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.002491581385577019, 0.11911195327857288], 'false': [0.04199936604424967, 0.12561808633329374], 'false,false': [0.0009528964555668243, 0.1267648112429784], 'false,false,false': [0.09324267706035458, 0.14222795701337543], 'true': [0.0013815206288173407, 0.002678503574134128], 'true,false': [0.0036152394219370054, 0.001220481591183357], 'true,false,true': [0.0059331235241981695, 0.0], 'true,true': [0.00032612003904400333, 0.0]}
{'': [0.13361454411868254, 0.09919103012018635], 'true': [0.06684304442657553, 0.0068553504959199445], 'false': [0.0006958408901020175, 0.10279750699290297], 'false,false': [0.10279750699290297, nan], 'true,true': [0.0015659593108260214, 0.058431312894648486], 'true,true,false': [0.18536158616699425, 0.01430696093564052], 'true,true,true': [0.001736584156037178, 7.209568332591093e-05]}
{'': [0.0007869469930517546, 0.09083046806862646], 'false': [0.07385795512548243, 0.1351497446365983], 'false,false': [5.5380880627231566e-05, 0.13809692246391653], 'false,false,false': [0.13809692246391653, nan], 'false,true': [0.010219493699122102, 0.00036968197721500457], 'false,true,true': [nan, 0.010219493699122102], 'true': [0.00017654276326973807, 0.0006433348842887426], 'false,false,true': [5.5380880627231566e-05, nan]}
{'': [0.00037935838467244895, 0.07012361338513283], 'false': [0.028393984037975387, 0.08578064423089499], 'false,false': [0.0004039047752810554, 0.08731267407250319], 'false,false,false': [0.057166054739017, 0.1500724701198042], 'false,true': [0.018702968496268176, 0.029683831825592533], 'false,true,false': [0.0, 0.02886513829904621], 'true': [0.00044389733515899795, 0.000252474872493974], 'true,false': [0.0, 1.6564869644318525e-05]}
{'': [0.0002881834824154423, 0.07450083971287763], 'false': [0.032439563907105604, 0.09085160046566455], 'false,false': [0.00031726190582069547, 0.09317865671245873], 'false,false,false': [0.06280559461542033, 0.15008752854344845], 'true': [0.0003212693163264918, 0.00018777600061546662], 'true,true': [0.0003989440725360137, 0.0], 'true,true,true': [0.00014600904097435697, 0.0005388907564929888], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
4;false,false,false;interaction(A, H), interaction(H, I).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.591
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H), interaction(A, I) )
%   | | then if ( phenotype(I, J), phenotype(A, J) )
%   | | | then return -0.016851064900487777;  // std dev = 1.620, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.11346808403568258;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.14165408973868834;  // std dev = 6.278, 194.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=55 */
%   | | | else return 0.001006077956655051;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), complex(A, F) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.7302664973147038;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7518526675222027;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8224754129358721;  // std dev = 0.992, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15699655227332873;  // std dev = 0.074, 143.000 (wgt'ed) examples reached here.  /* #neg=143 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.29102443692974955;  // std dev = 2.230, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.18819798443427335;  // std dev = 2.688, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5608249882835774;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.601240654059083;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1582796911552476;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.19584121386202613;  // std dev = 1.835, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6118851916835768;  // std dev = 1.921, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13759897233688767;  // std dev = 0.063, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10070041527841554;  // std dev = 3.715, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | else return 0.0673258565050715;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44000781537965405;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.40383585628375773;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5931925553785607;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), enzyme(A, H) )
%   | | | then return -0.01544640392098095;  // std dev = 1.667, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | | else return 0.10379145186994951;  // std dev = 3.799, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5303818341247813;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.07460665417560731;  // std dev = 2.538, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.239023315048004;  // std dev = 2.471, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3366199078288402;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, A), interaction(F, E) )
%   | | then if ( complex(F, G), complex(A, G) )
%   | | | then return -0.04814988895526735;  // std dev = 1.094, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.06592514428138944;  // std dev = 3.592, 130.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=39 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2407383128319644;  // std dev = 0.702, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.06274682446626584;  // std dev = 1.770, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39922277519547156;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.04502587143864878;  // std dev = 3.704, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.01709584902628781;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.27503333672043173;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2947513338627689;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return -0.017424785368519356;  // std dev = 0.602, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.04518666233689314;  // std dev = 0.426, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return -0.05984513163846085;  // std dev = 0.517, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.12683054435092536;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2796606148065936;  // std dev = 0.069, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.08359510787375589;  // std dev = 3.400, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
%   | | | else return 0.04001198761518005;  // std dev = 4.322, 149.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23103488846341522;  // std dev = 0.041, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5047660839131869;  // std dev = 0.314, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.7466701721639419;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.19184083863330043;  // std dev = 0.059, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21614254758898893;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), enzyme(H, I) )
%   | | | then return -0.0015671865726155588;  // std dev = 1.923, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | | else return 0.3112158565124094;  // std dev = 0.575, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.03038887264353071;  // std dev = 1.621, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.06327254527269342;  // std dev = 2.149, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16284948961001044;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18450631013249297;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.36383924574123927;  // std dev = 0.349, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.502481174931325;  // std dev = 0.213, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12377355545808551;  // std dev = 0.367, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return -0.16768782430745288;  // std dev = 0.255, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.188473509654833;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.08309459939365277;  // std dev = 1.940, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.010766453658083189;  // std dev = 2.265, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.1916848897786424;  // std dev = 0.814, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.14810661220282542;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.18135194695471332;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( interaction(H, A), interaction(H, G) )
%   | | then return -0.07189954448857235;  // std dev = 0.097, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.22774029624837594;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.023118218845960957;  // std dev = 1.576, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15592055560843332;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03393796784896863;  // std dev = 3.787, 163.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=54 */
%   | | | else return -0.03756570142143054;  // std dev = 1.025, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13978217288303796;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1565072679642267;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return -0.029335794697912084;  // std dev = 0.812, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | | | else return 0.07160262761038377;  // std dev = 0.808, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.022313577393505105;  // std dev = 0.906, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return -0.10101494717164289;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.13648361703810646;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.02630237799293034;  // std dev = 2.597, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   | | | else return 0.01741509792387485;  // std dev = 3.063, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '49.452', 'seconds']
Refined model CLL: -0.176043


******************************************
Best model found
******************************************
Results 

CLL : -0.202703 

AUC ROC : 0.980722 

AUC PR : 0.17528 

Precision : 0.129113 

Recall : 0.935018 

F1 : 0.226894 

Total Learning Time : 7.591 

Total Inference Time : 7.48521089553833 

Total revision time: 26.664413917541506
Best scored revision CLL: -0.176043


Results 

CLL : -0.202703 

AUC ROC : 0.980722 

AUC PR : 0.17528 

Precision : 0.129113 

Recall : 0.935018 

F1 : 0.226894 

Total Learning Time : 26.717591989517214 

Total Inference Time : 7.48521089553833 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1034319539674369;  // std dev = 3.132, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.13872447466785714;  // std dev = 5.297, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6570729698253385;  // std dev = 0.951, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.2194734122109545;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8415783572103434;  // std dev = 0.015, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15799801802354543;  // std dev = 0.026, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09435920987424024;  // std dev = 1.918, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.3686217177745123;  // std dev = 1.798, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5089541000440746;  // std dev = 0.981, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.384553885322739;  // std dev = 0.911, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06686889410244076;  // std dev = 2.731, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6870612699600857;  // std dev = 0.192, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.1395210648315625;  // std dev = 0.000, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6280130607282693;  // std dev = 0.178, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03825103207677786;  // std dev = 2.544, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.009415689637961768;  // std dev = 1.530, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46469220039319276;  // std dev = 0.026, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4816229164890999;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6582507729099398;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4805631251175521;  // std dev = 0.697, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.05407863875949019;  // std dev = 4.186, 183.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39995912871279937;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.54590204510043;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.07516199998780677;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.06561308633415057;  // std dev = 2.171, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3558413676813027;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22725791514673002;  // std dev = 0.904, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04313452884284662;  // std dev = 4.413, 206.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30883006688106407;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11489509294352024;  // std dev = 0.952, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07796835141586453;  // std dev = 2.474, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.152420474783406;  // std dev = 1.354, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2795424600330689;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.35298155944384585;  // std dev = 0.166, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2470469262067172;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3111734989961338;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4050271092610711;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.08354974584006564;  // std dev = 1.280, 44.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.036630115757359576;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.01797188513598789;  // std dev = 2.243, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.033624519796373965;  // std dev = 4.549, 175.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26014438145136787;  // std dev = 0.223, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26570084620637463;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3228905409983344;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.591614380644566;  // std dev = 0.733, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18300504131006393;  // std dev = 0.949, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2919293049315718;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.056386207410026985;  // std dev = 3.305, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17772313554657893;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21924368324454527;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43688887421310235;  // std dev = 1.244, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13752376033007138;  // std dev = 0.224, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1642180856527523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.24472694164158326;  // std dev = 0.058, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004137721067141637;  // std dev = 2.496, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15302813804758805;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2505105214072284;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1960438088944903;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09393664999538738;  // std dev = 0.306, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24460674340139396;  // std dev = 0.160, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.022717435878890985;  // std dev = 1.502, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1983100498960365;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05958037296646371;  // std dev = 2.563, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | | else return 0.10204179272157182;  // std dev = 2.265, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13321573805202175;  // std dev = 0.006, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.13831572645672624;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.15081241743760931;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20534969474261555;  // std dev = 0.002, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16026350461280933;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.018539436974800948;  // std dev = 1.735, 91.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.07989982447701385;  // std dev = 0.861, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01781231111399247;  // std dev = 2.729, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | | else return -0.00876269503272874;  // std dev = 2.448, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.585', 'seconds']
Parameter learned model CLL:-0.179632 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.132, 40, 13], 'false,false,true,false': [5.297, 100, 39], 'false,false,false,true': [2.426, 17, 9], 'false,false,false,false': [1.369, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.951, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [1.0, 2, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [0.015, 0, 52], 'false,false,true,false': [0.026, 138, 0], 'false,false,false,true': [1.918, 14, 5], 'false,false,false,false': [1.798, 6, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.981, 1, 11], 'true,false': [0.911, 1, 4], 'false,true,true': [2.731, 43, 14], 'false,true,false,true': [0.192, 0, 42], 'false,true,false,false': [0.0, 79, 0], 'false,false,true,true': [0.178, 0, 3], 'false,false,true,false': [2.544, 27, 9], 'false,false,false,true': [1.53, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.026, 0, 6], 'true,false': [0.057, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.697, 1, 6], 'false,true,false': [4.186, 134, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.919, 14, 5], 'false,false,false,false': [2.171, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.904, 1, 6], 'false,true': [4.413, 150, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.952, 2, 2], 'false,false,false,true': [2.474, 20, 9], 'false,false,false,false': [1.354, 5, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.041, 0, 5], 'true,true,false': [0.166, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.064, 0, 3], 'true,false,false': [0.119, 0, 4], 'false,true': [1.28, 39, 5], 'false,false,true': [1.168, 2, 5], 'false,false,false,true': [2.243, 43, 13], 'false,false,false,false': [4.549, 128, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.223, 0, 13], 'true,true,true,false': [0.1, 0, 3], 'true,true,false,true': [0.021, 0, 3], 'true,true,false,false': [0.733, 0, 33], 'true,false': [0.949, 110, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [3.305, 73, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.108, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.244, 1, 56], 'false,true,false': [0.224, 137, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.058, 0, 2], 'false,false,false,true': [2.496, 31, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.078, 0, 5], 'false,true,true': [0.306, 19, 1], 'false,true,false,true': [0.16, 0, 6], 'false,true,false,false': [1.502, 55, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [2.563, 59, 31], 'false,false,false,false': [2.265, 19, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.006, 0, 8], 'true,true,true,false': [0.019, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.002, 0, 2], 'true,false': [0.054, 0, 3], 'false,true': [1.735, 67, 24], 'false,false,true': [0.861, 1, 3], 'false,false,false,true': [2.729, 72, 31], 'false,false,false,false': [2.448, 31, 12]}]
{'': [0.10380622837370206, 0.21186612389250162], 'false': [-2.5376526277146434e-16, 0.2029916203304892], 'false,false': [0.1974826388888897, 0.22837370242214483], 'false,false,false': [0.22633136094674564, 0.2343749999999999], 'false,false,true': [0.1851192595229614, 0.20185290616427776], 'true': [0.1224489795918365, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05805827251214618, 0.20858127998623618], 'false': [0.17283950617283964, 0.20473455223181317], 'false,false': [0.19861747212747446, 0.23409018711182306], 'false,false,false': [0.19359004526079313, 0.248620872701268], 'false,false,true': [4.1011164681000655e-06, 4.9122663674548965e-06], 'false,true': [0.0, 0.20408163265306128], 'false,true,false': [0.25000000000000006, 0.0], 'true': [0.0, 0.0753720124773809]}
{'': [0.10857583823351416, 0.15856867994391893], 'false': [0.14876088356700878, 0.18966754591928697], 'false,false': [0.19150733384736546, 0.18001876822810697], 'false,false,true': [0.010555063951959672, 0.17983136271512704], 'false,false,false': [0.18001876822810697, nan], 'false,true': [0.13080592270864017, 0.15514268767593836], 'false,true,false': [0.0008774546293358028, -6.74565888379842e-17], 'true': [0.08017174760537238, 0.16582183450149146]}
{'': [0.00032713085599542777, 0.1203800041808096], 'false': [0.10248993908260413, 0.19591072179673455], 'false,false': [0.0047331855208282425, 0.2000066635230811], 'false,false,false': [0.19390578060086494, 0.20500527444059644], 'false,true': [0.06419140669206558, 0.09573162223246989], 'false,true,true': [0.0, 0.06941499512582583], 'false,false,true': [0.0, 0.0], 'true': [0.00011233925194113296, 0.000355665599690506]}
{'': [0.05514295864015209, 0.11544792712460125], 'false': [0.09454916395887052, 0.2168662426868917], 'false,false': [0.209938351389171, 0.21596558033373964], 'false,false,false': [0.21111979153653582, 0.22918695819538404], 'false,false,true': [0.0, 0.22651433702278984], 'true': [7.762027787857247e-05, 0.11664104217075581], 'true,true': [7.762027787857247e-05, nan]}
{'': [0.005766104057334284, 0.10362104220078293], 'false': [0.03723253644599594, 0.11388172743200377], 'false,false': [0.19476717462440313, 0.11142929320503343], 'false,false,false': [0.08986951421866655, 0.1182690273359893], 'true': [0.004914304775081826, 0.005693301847435342], 'true,false': [0.0017825149305483456, 0.0035667043000863208], 'true,true': [0.0003281518723136312, 0.00918707961994584], 'true,false,true': [0.0, 0.0013486322396353463]}
{'': [0.11116736982822101, 0.10358963422310989], 'true': [0.035512524796948365, 0.008189335497288801], 'false': [0.0001442689143886048, 0.10501810568407377], 'false,false': [0.10501810568407377, nan], 'true,true': [0.0037255067398044434, 0.020444624199597448], 'true,true,false': [0.00014055724755577628, 0.016272739968447168], 'true,true,true': [0.0038145308332233363, 0.0033146502991065565]}
{'': [0.0011132373546682618, 0.08853963624061906], 'false': [0.07669249222210389, 0.1383634987390821], 'false,false': [0.0025457049427955645, 0.14485935546752587], 'false,false,false': [0.14485935546752587, nan], 'false,true': [0.02713859443138548, 0.0003657720046003803], 'false,true,true': [nan, 0.027138594431385357], 'false,false,true': [0.0, 0.0016579987833165721], 'true': [0.0, 0.0010583293698802115]}
{'': [0.0012023451353975097, 0.06838241808829626], 'false': [0.029643767491963607, 0.09506149761656511], 'false,false': [8.466237519689131e-05, 0.09702082957663237], 'false,false,false': [0.0729798486729702, 0.16547617207016016], 'false,true': [0.004677218885980416, 0.034326253160174944], 'false,true,false': [0.004247438735766246, 0.03133572742673121], 'true': [5.229553839295742e-05, 0.0014230143476724837], 'true,false': [0.0, 0.0012131800885494203]}
{'': [0.0007686239956198083, 0.07171001559513077], 'false': [0.03306712411123011, 0.09489559872712458], 'false,false': [0.18540629694963573, 0.09220040401815847], 'false,false,false': [0.07231186670506819, 0.13934215732003485], 'true': [0.0006825760341364104, 0.0009864960951801265], 'true,true': [4.2176499399579345e-05, 0.0006617795350981152], 'true,true,false': [0.0, 1.2310973661125435e-06], 'true,true,true': [4.2716036885957764e-06, 0.00017298817686102475]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 8.503
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.2281489350995112;  // std dev = 4.828, 100.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7480325422264149;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7455373280601681;  // std dev = 2.134, 57.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=52 */
%   | | | else return -0.16196801121496043;  // std dev = 0.151, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.19435182204981133;  // std dev = 1.796, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.0778300711584951;  // std dev = 2.301, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(D, E) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.595413001170085;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.038850944768142694;  // std dev = 1.294, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   | | | else return 0.11809764733317571;  // std dev = 2.327, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6291916778478909;  // std dev = 1.675, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1452547682814119;  // std dev = 0.057, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( phenotype(A, K) )
%   | | | then return 0.37232713009546436;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.05798524418714674;  // std dev = 2.305, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else return 0.47731704568312855;  // std dev = 1.160, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.08094498226580449;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.4150871327389309;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3392822488400193;  // std dev = 0.285, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6183399600661488;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10501817119400747;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.09531159527756553;  // std dev = 4.113, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5309257460964426;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.06767523749822944;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.23141218037262762;  // std dev = 1.406, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35130831507464805;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3465944362959572;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11727475733707048;  // std dev = 0.489, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.1215660227366509;  // std dev = 1.233, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.055275270336879616;  // std dev = 3.077, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.10173383570093539;  // std dev = 2.813, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3996636566649326;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.01743302978135316;  // std dev = 1.914, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.09145042281047154;  // std dev = 2.194, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.27774348106512337;  // std dev = 0.047, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.22692203361129262;  // std dev = 0.307, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(G, G), location(A, H) )
%   | | then return -0.06944582562914822;  // std dev = 0.187, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4187311607285602;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.023499518869077207;  // std dev = 2.504, 87.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=17 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( location(A, L), location(J, L) )
%   | | | then return -0.04385426255096775;  // std dev = 1.765, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.39240838486823154;  // std dev = 0.863, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.39282072858733996;  // std dev = 0.863, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08956078488384035;  // std dev = 3.664, 100.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2562236566181835;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.010974766585598345;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5387267013949845;  // std dev = 1.237, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.185193244818639;  // std dev = 0.086, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26770839497671733;  // std dev = 0.048, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.061761956510883516;  // std dev = 2.115, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return -0.061646628837644914;  // std dev = 1.829, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.017080030741225275;  // std dev = 1.176, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.21023125483545588;  // std dev = 1.103, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1730869228935294;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), phenotype(A, F) )
%   | | then return -0.09256848050942634;  // std dev = 0.803, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.20857807781564175;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.5803371884711714;  // std dev = 0.155, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.3641241225655398;  // std dev = 1.615, 51.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=48 */
%   | | else return -0.1500794273742711;  // std dev = 0.043, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2159542872797998;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.09986066571546653;  // std dev = 1.942, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.6438992633128994;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16153753249027067;  // std dev = 0.022, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20766846434500275;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.19546668062223427;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3050517789205437;  // std dev = 0.978, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( enzyme(A, J) )
%   | | then return 0.019467772271611422;  // std dev = 0.194, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else return -0.04098269717541562;  // std dev = 0.179, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.05679662377288702;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.11575858019435376;  // std dev = 1.170, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.02980709321979287;  // std dev = 3.488, 137.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=37 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14090309080162194;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(C, E), interaction(D, C) )
%   | | | then return -0.3472481774267068;  // std dev = 0.655, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.11816666574113173;  // std dev = 0.742, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2154676898986354;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), location(A, G) )
%   | then return -0.0024842013345537754;  // std dev = 0.229, 203.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=56 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.07674802761190119;  // std dev = 1.885, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.17270464209889766;  // std dev = 1.023, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.19112263492857975;  // std dev = 0.711, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08625251842262417;  // std dev = 1.147, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.089', 'seconds']
Refined model CLL: -0.191584


******************************************
Best model found
******************************************
Results 

CLL : -0.189603 

AUC ROC : 0.983126 

AUC PR : 0.216203 

Precision : 0.145098 

Recall : 0.784452 

F1 : 0.244898 

Total Learning Time : 8.503 

Total Inference Time : 8.162156105041504 

Total revision time: 29.09286999320984
Best scored revision CLL: -0.179632


Results 

CLL : -0.189603 

AUC ROC : 0.983126 

AUC PR : 0.216203 

Precision : 0.145098 

Recall : 0.784452 

F1 : 0.244898 

Total Learning Time : 29.146048065185546 

Total Inference Time : 8.162156105041504 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.799
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14762261931003723;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return 0.16066994350287242;  // std dev = 5.011, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.28881117365523334;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7117344589091593;  // std dev = 2.955, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16172340957671874;  // std dev = 0.011, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.3306449156013224;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3444674378357556;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4709530352510403;  // std dev = 0.892, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09574263962092969;  // std dev = 4.286, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6401149283214901;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14172287554771387;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17051229368733742;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1018054880207103;  // std dev = 1.315, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4631109936752072;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.10254522226080799;  // std dev = 1.409, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5664889535298548;  // std dev = 1.317, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else return 0.05638442370983458;  // std dev = 4.953, 216.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5301065767695449;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.002296881769905964;  // std dev = 1.501, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.10986681073232481;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.41122884107467195;  // std dev = 0.008, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15137270525731727;  // std dev = 0.828, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.07816342354352067;  // std dev = 5.322, 224.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3990237656483615;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.13854058269902256;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.1698728275231924;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.30551167793992406;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.38441253729027;  // std dev = 0.183, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3181363935595968;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.06797000873776814;  // std dev = 0.340, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.010193186027154163;  // std dev = 2.223, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.07269596190897773;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.02207158193407494;  // std dev = 2.994, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | | else return 0.10296829410710419;  // std dev = 3.989, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2735252881166184;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2938977402085975;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5745714439693923;  // std dev = 0.382, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.18521787643882978;  // std dev = 0.579, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2958606876265219;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05221710914641895;  // std dev = 3.991, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.01570743855089185;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.021393739862142158;  // std dev = 1.198, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.37391206737975924;  // std dev = 2.833, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.15818207546038265;  // std dev = 0.246, 128.000 (wgt'ed) examples reached here.  /* #neg=128 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.23677800464986676;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -8.511967657186366E-5;  // std dev = 1.374, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.12011045762401468;  // std dev = 0.741, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.2039733671631417;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.008973172327623173;  // std dev = 1.381, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3234323607910736;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.011479724949655904;  // std dev = 1.597, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.0014411387128484832;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03301265764454482;  // std dev = 3.474, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | | | else return 0.04828681133513371;  // std dev = 1.311, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.18098320723278344;  // std dev = 0.018, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2386903289407477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.004997063056434534;  // std dev = 0.583, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.005428288636901936;  // std dev = 2.275, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.001173577641677942;  // std dev = 0.819, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.00923620749178212;  // std dev = 3.440, 141.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=40 */
%   | | | else return -0.011895143120080168;  // std dev = 1.374, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.969', 'seconds']
Parameter learned model CLL:-0.199422 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.842, 81, 33], 'false,false,true,false': [5.011, 83, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.816, 1, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.609, 1, 1], 'false,false,true,true': [2.955, 10, 69], 'false,false,true,false': [0.011, 155, 0], 'false,false,false,true': [1.225, 3, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.892, 1, 8], 'true,false': [0.0, 0, 3], 'false,true,true': [4.286, 85, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [0.0, 84, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.315, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.107, 0, 5], 'true,false': [1.409, 3, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.317, 2, 14], 'false,true,false': [4.953, 159, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.501, 9, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.008, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.828, 1, 4], 'false,true': [5.322, 153, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.092, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.031, 0, 4], 'true,true,false': [0.183, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.34, 1, 1], 'false,true': [2.223, 40, 12], 'false,false,true': [0.828, 1, 3], 'false,false,false,true': [2.994, 61, 20], 'false,false,false,false': [3.989, 73, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.187, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.382, 0, 33], 'true,false': [0.579, 103, 0], 'false,true': [0.056, 0, 3], 'false,false,true': [3.991, 89, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.762, 1, 3], 'true,false': [1.198, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.833, 11, 71], 'false,true,false': [0.246, 128, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.374, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.741, 1, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.046, 0, 3], 'false,true,true': [1.381, 25, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.597, 42, 17], 'false,false,true': [0.819, 1, 3], 'false,false,false,true': [3.474, 84, 40], 'false,false,false,false': [1.311, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.018, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.583, 1, 3], 'false,true': [2.275, 71, 29], 'false,false,true': [0.819, 1, 3], 'false,false,false,true': [3.44, 101, 40], 'false,false,false,false': [1.374, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.2120610957887778], 'false': [1.4802973661668753e-16, 0.208688611276358], 'false,false': [0.20844001547274796, 0.21301775147928975], 'false,false,false': [0.24000000000000005, 0.18750000000000003], 'false,false,true': [0.20567867036011217, 0.2110020478779759], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.07638888888888891, 0.21156859620127566], 'false': [0.13910247278836857, 0.21060797686362437], 'false,false': [0.20792281225346262, 0.25010747244301834], 'false,false,false': [0.25009553106046073, 0.25], 'false,false,true': [0.11051238525946017, 7.791243597127061e-07], 'false,true': [0.0, 0.18546996371782487], 'false,true,false': [nan, 0.18546996371782487], 'true': [0.22222222222222232, -9.868649107779169e-17]}
{'': [0.06758004327455085, 0.1582517338931263], 'false': [0.15521875137247182, 0.21039200989343912], 'false,false': [0.24000000000000005, 0.19225718894915106], 'false,false,true': [nan, 0.24000000000000005], 'false,false,false': [0.19225718894915106, nan], 'false,true': [0.15438622109736358, 0.15591131004998812], 'false,true,false': [0.06923869396982311, -8.987519723156029e-17], 'true': [0.08832531877806857, 0.0]}
{'': [0.17257220625113762, 0.1344683468462798], 'true': [0.0023046741474998635, 0.22073396695788278], 'false': [0.12991218794650278, 0.19931286391084127], 'false,false': [0.0, 0.1965794290989655], 'false,false,false': [0.18785447289475532, 0.2222222222222222], 'false,true': [0.10833492766500097, 0.11356521860271004], 'false,true,true': [nan, 0.10833492766500114], 'false,false,true': [nan, 0.0]}
{'': [0.07356964417880828, 0.13139551608883332], 'false': [0.1264633157128287, 0.22262258307232247], 'false,false': [0.0, 0.23943616927681824], 'false,false,false': [0.24000000000000005, 0.23838148377077562], 'true': [8.85351767933505e-06, 0.137165044499931], 'true,true': [8.85351767933505e-06, nan], 'false,false,true': [nan, 0.0]}
{'': [0.024454310832192183, 0.12382440480312842], 'false': [0.09503655688980558, 0.1300333561986739], 'false,false': [0.1714135168318881, 0.12918430937551276], 'false,false,false': [0.11069384822168793, 0.13960387619960307], 'true': [0.005345959969048063, 0.052380317840171414], 'true,false': [0.0, 0.05770940339531604], 'true,true': [0.0002331463349417584, 0.006669390606900638], 'true,false,true': [nan, 0.0]}
{'': [0.10693958244375773, 0.12200805538975701], 'false': [0.0010579074346970807, 0.12347170877064247], 'false,false': [0.12347170877064247, nan], 'true': [0.02089516454898188, 0.003251897832258092], 'true,true': [0.003205994770137338, 0.0044122748994804], 'true,true,false': [nan, 0.0044122748994804], 'true,true,true': [0.0034888636285837714, 0.0]}
{'': [0.14427386283615376, 0.1079981449066838], 'true': [0.1452431681294089, 0.1434928557360986], 'false': [0.10589796953745258, 0.13849498136613783], 'false,false': [0.0, 0.14514100292367663], 'false,false,false': [0.14514100292367663, nan], 'false,true': [0.097891175721035, 0.00047407182003579573], 'false,true,true': [nan, 0.09789117572103528], 'false,false,true': [0.0, nan]}
{'': [0.04729815644416397, 0.08115424340848015], 'false': [0.04760008192845123, 0.10404855293128046], 'false,false': [0.1676607910913035, 0.10212707327916105], 'false,false,false': [0.09730002988962992, 0.1563267267829704], 'false,true': [0.05298851970918225, 0.04412025777060813], 'true': [0.06106620354862223, 0.0007192744335134024], 'false,true,false': [0.0, 0.04324615129963084], 'true,false': [nan, 0.0007192744335134024]}
{'': [0.036081504249958325, 0.07590424343081903], 'false': [0.05174094994648959, 0.0911353222373468], 'false,false': [0.16764769212392533, 0.0891461042240628], 'false,false,false': [0.08394808078366736, 0.14511582660259595], 'true': [0.00040565729475563334, 0.08505848522659316], 'true,true': [0.00040565729475563334, nan], 'true,true,true': [4.734434988635873e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 11.155
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1572143556602586;  // std dev = 4.736, 107.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=32 */
%   | | | else return 0.21467067422994648;  // std dev = 5.136, 115.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7639911963452851;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( complex(A, H), complex(G, H) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7181431921827796;  // std dev = 2.816, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16348957317083088;  // std dev = 0.140, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17124695753443117;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.058930932069857;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5806763749819243;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.13078640545838316;  // std dev = 3.828, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.0347865671819619;  // std dev = 1.627, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6319322884138938;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14590881507148004;  // std dev = 0.031, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8132911461975757;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.18670885380242433;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.059421539200397944;  // std dev = 0.664, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.038113798141821635;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4315708950474278;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.44175353066748785;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5425101865144282;  // std dev = 1.634, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.15461294163101882;  // std dev = 0.407, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.057374500745909655;  // std dev = 1.122, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.09075678105492864;  // std dev = 3.892, 118.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=38 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5699872644961471;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.046862251221971955;  // std dev = 1.254, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.08944533633964903;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.35327388590824144;  // std dev = 0.053, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.30874520709356545;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.34590774678936603;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1063936891566433;  // std dev = 4.25e-05, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.048960677670086154;  // std dev = 3.083, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | else return 0.11565650366380255;  // std dev = 3.781, 107.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=40 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.4284475146475094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.1827406755446721;  // std dev = 1.067, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.006307871709905821;  // std dev = 0.905, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.04785716574843735;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3107688389060151;  // std dev = 0.151, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2963978164696709;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.03837218282695873;  // std dev = 0.518, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2821778402961825;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( location(A, J), enzyme(H, K) )
%   | | | then return 0.003443474705103299;  // std dev = 2.579, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.05351566136874336;  // std dev = 4.203, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07356737244828236;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.25387189610047506;  // std dev = 0.721, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2526147717895755;  // std dev = 0.048, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( phenotype(A, E), interaction(F, A) )
%   | | | then return 0.449827974397985;  // std dev = 0.809, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5784712883369738;  // std dev = 0.335, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.16081232900791317;  // std dev = 0.046, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.021633387816340444;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), location(H, I) )
%   | | then if ( complex(H, J), interaction(K, H) )
%   | | | then return 0.03277728145636832;  // std dev = 2.525, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.10487911418937057;  // std dev = 2.470, 53.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.041486182824353575;  // std dev = 0.478, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10149517205780148;  // std dev = 0.589, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.1847620705823214;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23250367706953398;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.22925866060465808;  // std dev = 1.746, 30.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=23 */
%   | | | else return 0.4188492658881636;  // std dev = 1.665, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.12954469456356563;  // std dev = 0.246, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | | else return -0.1714879927522975;  // std dev = 0.222, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.282746585559448;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.06445058314207662;  // std dev = 1.013, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.005350007792878826;  // std dev = 0.497, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1768272084111584;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(F, F) )
%   | | | then return -0.039630376581632605;  // std dev = 1.217, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.07858200118790591;  // std dev = 0.981, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.3726535500082354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.0089431781991177;  // std dev = 1.513, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.35714194413216016;  // std dev = 1.089, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.16895961535398907;  // std dev = 0.539, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.058545678354288304;  // std dev = 0.982, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.01985411339090731;  // std dev = 1.991, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.13561997108486512;  // std dev = 0.015, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.20207926228012418;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.1761057933762307;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return -0.07046539030034463;  // std dev = 0.001, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else return -0.0993065847150312;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.22320736395404206;  // std dev = 0.842, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.07086004769406587;  // std dev = 1.667, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.10844303278729765;  // std dev = 1.266, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.010362922453375731;  // std dev = 2.935, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.246', 'seconds']
Refined model CLL: -0.185986


******************************************
Best model found
******************************************
Results 

CLL : -0.179453 

AUC ROC : 0.988747 

AUC PR : 0.269191 

Precision : 0.186704 

Recall : 0.93617 

F1 : 0.311321 

Total Learning Time : 11.155 

Total Inference Time : 15.719761848449707 

Total revision time: 47.44862699890137
Best scored revision CLL: -0.185986


Results 

CLL : -0.179453 

AUC ROC : 0.988747 

AUC PR : 0.269191 

Precision : 0.186704 

Recall : 0.93617 

F1 : 0.311321 

Total Learning Time : 57.55941820526123 

Total Inference Time : 15.719761848449707 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.322
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7152917922423694;  // std dev = 1.309, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10614893509951116;  // std dev = 4.828, 125.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=31 */
%   | | | else return 0.1818899422937562;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7473839334745775;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6047470930533699;  // std dev = 1.303, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6746289054475708;  // std dev = 3.523, 91.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=76 */
%   | | | else return -0.16071771979824587;  // std dev = 0.073, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12798009830538642;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.24226581259110072;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5115886585457651;  // std dev = 0.935, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.4699884324552491;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.06774179316023311;  // std dev = 4.414, 136.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5995558606255349;  // std dev = 2.302, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.14444794018016402;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8073556579292263;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.016356276520644964;  // std dev = 1.674, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4749126211616078;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.18200499196157788;  // std dev = 1.439, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4507324770549234;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6048325578234695;  // std dev = 1.334, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.015971709899633677;  // std dev = 5.187, 278.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.6422120391110097;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5513239361182796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.053984406434532575;  // std dev = 1.261, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.06861089501499193;  // std dev = 1.109, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.17463769969736864;  // std dev = 1.203, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39321476577719966;  // std dev = 0.104, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.06162667114787602;  // std dev = 5.762, 284.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41452199963545744;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06210699833021458;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3035086084932866;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.40367201596891067;  // std dev = 0.229, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.34050930826953474;  // std dev = 0.031, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.010331960309188827;  // std dev = 2.848, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.29828212140206806;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.018677397286203146;  // std dev = 2.264, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | | else return 0.11152755271113639;  // std dev = 4.444, 145.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.28832385126514876;  // std dev = 0.240, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.2496773428522231;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.12115814306742359;  // std dev = 0.990, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4886431609826395;  // std dev = 1.625, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.17830567112060744;  // std dev = 0.767, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.24032751694770244;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.04092591410710668;  // std dev = 4.544, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.03673147200651945;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.1746681157981829;  // std dev = 0.731, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3732616421828685;  // std dev = 3.293, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.14668917718266414;  // std dev = 0.476, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20586853899365942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05977862118176526;  // std dev = 1.386, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.20831165049396116;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.1651322865940541;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.08231742302942985;  // std dev = 0.658, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07255378717633032;  // std dev = 1.991, 66.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16650519358588123;  // std dev = 0.658, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.03360348662616609;  // std dev = 1.344, 61.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.00884860476777453;  // std dev = 0.900, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04291905102064549;  // std dev = 3.701, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return 0.008372103366445187;  // std dev = 1.489, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.0673476828444957;  // std dev = 0.783, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.06853680144622039;  // std dev = 0.655, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.4071686870208882;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19956508925415253;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.00912339498353069;  // std dev = 2.508, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17175750309038018;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.026976246012162856;  // std dev = 3.971, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | | else return 0.020045381776840517;  // std dev = 1.432, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.078', 'seconds']
Parameter learned model CLL:-0.195944 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.309, 2, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.828, 94, 31], 'false,false,true,false': [5.516, 94, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.303, 2, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.523, 15, 76], 'false,false,true,false': [0.073, 204, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.095, 3, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.935, 1, 11], 'true,false': [0.921, 1, 6], 'false,true,true': [4.414, 102, 34], 'false,true,false,true': [2.302, 6, 48], 'false,true,false,false': [0.0, 106, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.674, 15, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.071, 0, 10], 'true,false': [1.439, 3, 7], 'false,true,true,true': [0.108, 0, 3], 'false,true,true,false': [1.334, 2, 21], 'false,true,false': [5.187, 220, 58], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.261, 6, 2], 'false,false,false,false': [1.109, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.203, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.104, 0, 10], 'false,true': [5.762, 202, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.647, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [0.229, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.031, 0, 2], 'false,true': [2.848, 61, 19], 'false,false,true': [0.07, 0, 8], 'false,false,false,true': [2.264, 51, 11], 'false,false,false,false': [4.444, 95, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.24, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.99, 2, 3], 'true,true,false,false': [1.625, 3, 33], 'true,false': [0.767, 105, 0], 'false,true': [0.061, 0, 5], 'false,false,true': [4.544, 117, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.709, 1, 4], 'true,false': [0.731, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.293, 13, 82], 'false,true,false': [0.476, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.386, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.082, 0, 9], 'true,false,true': [0.708, 1, 2], 'true,false,false': [0.658, 1, 5], 'false,true,true': [1.991, 53, 13], 'false,true,false,true': [0.658, 2, 8], 'false,true,false,false': [1.344, 50, 11], 'false,false,true': [0.9, 1, 5], 'false,false,false,true': [3.701, 110, 47], 'false,false,false,false': [1.489, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.783, 1, 7], 'true,true,true,false': [0.655, 1, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.073, 0, 3], 'false,true': [2.508, 81, 32], 'false,false,true': [0.047, 0, 5], 'false,false,false,true': [3.971, 99, 47], 'false,false,false,false': [1.432, 10, 4]}]
{'': [0.09418282548476423, 0.21166071690547264], 'false': [-2.5376526277146434e-16, 0.20451946917434366], 'false,false': [0.20500459136822805, 0.1955555555555554], 'false,false,true': [0.18649600000000122, 0.21893276745510173], 'false,false,false': [0.1955555555555554, nan], 'true': [0.1224489795918365, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09278758830618321, 0.1964773102580872], 'false': [-6.344131569286608e-17, 0.19240345267181833], 'false,false': [0.1909487950658172, 0.2222222222222223], 'false,false,false': [0.2040816326530612, 0.24], 'false,false,true': [0.13640265051347206, 2.5865284907157424e-05], 'true': [0.0, 0.11324773082039048], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.09106158283242309, 0.15225172881213916], 'false': [0.15099626150783757, 0.16982066291224357], 'false,false': [0.16982066291224357, nan], 'false,false,true': [0.0, 0.14747459146976588], 'false,true': [0.1432375946343195, 0.15689545679503936], 'false,true,false': [0.09815408069702698, -4.1895208476421005e-17], 'true': [0.07284640683898287, 0.12119460167752627]}
{'': [0.125307226276108, 0.12483400888311176], 'true': [0.0005071241086522793, 0.20720988882177246], 'false': [0.12011061121238752, 0.2090415015671371], 'false,false': [0.35613203104163266, 0.18810120215346454], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.19887790339240935, 0.1756708739430619], 'false,true': [0.07134043155114043, 0.09677894450218175], 'false,true,true': [0.003858779304141654, 0.0774023667813372]}
{'': [0.08866046914476369, 0.12011277784581803], 'false': [0.11688658866460672, 0.17689811889622173], 'false,false': [0.0, 0.18092905600107562], 'false,false,false': [0.18092905600107562, nan], 'true': [0.16082314019108812, 0.0010833597112506865], 'true,true': [0.16082314019108812, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005429375229402178, 0.11729230344505066], 'false': [0.10136149971190604, 0.1209614467914782], 'false,false': [0.0006078552518877373, 0.12371644035787142], 'false,false,false': [0.08270615047040822, 0.13617406596744794], 'true': [0.00604317639839166, 0.00047632847889581], 'true,true': [8.362459931765542e-06, 0.0058127407382443], 'true,false': [nan, 0.00047632847889581]}
{'': [0.10822774503196163, 0.12331654321789488], 'false': [0.0007331331592382306, 0.12587748138151658], 'false,false': [0.12587748138151658, nan], 'true': [0.09652002294722634, 0.005598188686260859], 'true,true': [0.0036877982493691147, 0.12812168195625326], 'true,true,false': [0.19591706392356545, 0.07335716516824038], 'true,true,true': [0.003840304427711831, 0.0]}
{'': [0.058289851620791235, 0.10275938561494911], 'false': [0.10087407613923434, 0.13864474878462268], 'false,false': [0.0, 0.14778528202562818], 'false,false,false': [0.14778528202562818, nan], 'false,true': [0.11411168447219572, 0.0012454142872667675], 'false,true,true': [nan, 0.1141116844721956], 'true': [0.10063285010641507, 0.03816037381940085], 'false,false,true': [0.0, nan]}
{'': [0.06994712196641717, 0.07613096033073201], 'false': [0.04892042947444689, 0.09461925280693152], 'false,false': [0.13512649531702003, 0.09316485909838806], 'false,false,false': [0.08724603107126244, 0.15844450885801095], 'true': [0.0007489309968734844, 0.11741388643683844], 'true,false': [0.1672313532830656, 0.07209470008280934], 'false,true': [0.0600688707557332, 0.036385806549557136], 'false,true,false': [0.04326562133245937, 0.029618040751231787]}
{'': [0.06968531349132524, 0.08749124250825012], 'false': [0.05564240996772367, 0.10865579161705845], 'false,false': [0.00044098801131830514, 0.11139697133428586], 'false,false,false': [0.10802480560640658, 0.14652000884432387], 'true': [0.07830811324407756, 0.0017726225835286342], 'true,true': [0.06942285835401117, 0.0], 'true,true,true': [0.07654188726911056, 0.061286071173223856], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 17.48
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.04751144225897825;  // std dev = 3.009, 106.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=10 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12005369700427426;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.1914822684328448;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.6616444265040309;  // std dev = 0.249, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6887198388857165;  // std dev = 3.065, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.1539086690399696;  // std dev = 0.300, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.2390206488617362;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.03805145592337163;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5960655482029833;  // std dev = 0.024, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.28388259765262064;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.11515999850383897;  // std dev = 3.429, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return -0.04217899728395022;  // std dev = 1.893, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5788012977826255;  // std dev = 2.463, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13436059825531876;  // std dev = 0.126, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.5605862159156784;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26718606271145134;  // std dev = 0.882, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.170613437375389;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4697218414469965;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.45485488677832403;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), enzyme(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5853673300887752;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.12275064699962171;  // std dev = 0.054, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.026378845266587913;  // std dev = 2.834, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.06630940159036548;  // std dev = 4.693, 196.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=55 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.48879977141076225;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.05983671549787534;  // std dev = 1.361, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.0058231210721307785;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.33884588034400204;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.017008615374206577;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2708943604550163;  // std dev = 0.304, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.45054337933696137;  // std dev = 0.220, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return 0.03958769376178219;  // std dev = 3.189, 101.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=27 */
%   | | | else return 0.09487166260601823;  // std dev = 4.352, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.36967573089793404;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.4501679562185868;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10402943802525905;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2695522876758803;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, F), phenotype(A, G) )
%   | | | then return -0.05797886061001674;  // std dev = 0.971, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.34916931622915953;  // std dev = 0.215, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2746079691468344;  // std dev = 0.019, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.005594301371869494;  // std dev = 0.287, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.1863928454260274;  // std dev = 0.990, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3214562200638767;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K), complex(A, L) )
%   | | | then return -0.0467884100643294;  // std dev = 2.333, 79.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=12 */
%   | | | else return 0.07556743407853596;  // std dev = 4.511, 149.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2101007578231165;  // std dev = 0.197, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.07985657719695921;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5301845712567131;  // std dev = 0.869, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.15264663167580494;  // std dev = 0.077, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.25791851318390363;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return -2.1929474652797082E-4;  // std dev = 2.736, 58.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=15 */
%   | | | else return -0.13067919581089502;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.07890838216250579;  // std dev = 2.801, 62.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=22 */
%   | | | else return 6.22060435096978E-4;  // std dev = 1.915, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.18596022540078197;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.25447495327851;  // std dev = 0.135, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.01836019950145812;  // std dev = 0.375, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H), location(A, I) )
%   | | | then return 0.22838172786117075;  // std dev = 1.996, 33.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=26 */
%   | | | else return 0.411738529178618;  // std dev = 2.432, 63.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=56 */
%   | | else return -0.1479846579142594;  // std dev = 0.038, 177.000 (wgt'ed) examples reached here.  /* #neg=177 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.1997284139249782;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.1847120015465562;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.07938225664779529;  // std dev = 0.648, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09550257059463219;  // std dev = 0.279, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.19802899053596107;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), interaction(G, E) )
%   | | then return -0.012371471228984651;  // std dev = 0.209, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.023009918441954345;  // std dev = 0.295, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.11612471617713556;  // std dev = 1.444, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | else if ( enzyme(A, J) )
%   | | then if ( complex(A, K), interaction(A, L) )
%   | | | then return -0.14153463963746785;  // std dev = 0.440, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.018464818187611934;  // std dev = 2.625, 87.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=23 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.015168221290650555;  // std dev = 3.318, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
%   | | | else return 0.09916271197302466;  // std dev = 1.104, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1753109821744076;  // std dev = 0.036, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.046621549230393966;  // std dev = 0.697, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.21314297005416397;  // std dev = 1.099, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | | else return -0.045312256089234934;  // std dev = 1.742, 87.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=13 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.019447188029086425;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.06356003590087941;  // std dev = 0.382, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18916332190504614;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.017228857983267905;  // std dev = 1.930, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.026629882615425367;  // std dev = 3.474, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '59.621', 'seconds']
Refined model CLL: -0.194349


******************************************
Best model found
******************************************
Results 

CLL : -0.168159 

AUC ROC : 0.989287 

AUC PR : 0.326816 

Precision : 0.27157 

Recall : 0.724528 

F1 : 0.395062 

Total Learning Time : 17.48 

Total Inference Time : 261.40077805519104 

Total revision time: 302.4295100708008
Best scored revision CLL: -0.194349


Results 

CLL : -0.168159 

AUC ROC : 0.989287 

AUC PR : 0.326816 

Precision : 0.27157 

Recall : 0.724528 

F1 : 0.395062 

Total Learning Time : 312.54030127716067 

Total Inference Time : 261.40077805519104 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.36
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.12808758540625984;  // std dev = 5.668, 163.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.806318851474125;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1563284535056865;  // std dev = 0.048, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.02859494499552949;  // std dev = 1.998, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.18951948008312877;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.44425532563517334;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05950733309321738;  // std dev = 2.119, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6947934017903094;  // std dev = 0.223, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13844796922811942;  // std dev = 6.99e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1405117205601146;  // std dev = 3.627, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.8042790112935488;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43567588068333063;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4284109620733224;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3840446278040047;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5977212656655765;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.06698556042396253;  // std dev = 4.231, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.520455060104597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 8.337464164194496E-4;  // std dev = 1.975, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.058954021735370066;  // std dev = 3.291, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.31739779945584107;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33910308352646973;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06432300006704289;  // std dev = 4.270, 185.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3920772031149977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06050805562637379;  // std dev = 3.690, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | | | else return 0.14751716165661888;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26097987047923793;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.05610766471291895;  // std dev = 0.533, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.022622651278149664;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2537336374356963;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3403712041980147;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06573939192725564;  // std dev = 0.951, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26675133263886014;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07333953376807692;  // std dev = 2.712, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.06491319808264487;  // std dev = 4.717, 154.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25426004510620986;  // std dev = 0.251, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.248081573485454;  // std dev = 0.016, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22038778710045548;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6200937618486261;  // std dev = 1.099, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.20028425057672644;  // std dev = 0.917, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.05145918186337611;  // std dev = 0.909, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05325757464725955;  // std dev = 3.380, 117.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17294295849825758;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19435238565532512;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44657507477061736;  // std dev = 0.753, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14207137342669984;  // std dev = 0.211, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20476258578329853;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.017842262485694548;  // std dev = 3.143, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15952367659609776;  // std dev = 0.070, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12325187755050904;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.19853553220954784;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07156165117887195;  // std dev = 0.404, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18359571370273975;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.025173925502879325;  // std dev = 1.254, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1785081491674941;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.010522394330367037;  // std dev = 2.743, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | | | else return 0.03830921155674462;  // std dev = 3.100, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12603022263874106;  // std dev = 0.000832, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16336553974637938;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13653608275833085;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.026549531376537504;  // std dev = 0.612, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02828743147901777;  // std dev = 1.539, 70.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15381961624675328;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01630502461459167;  // std dev = 2.711, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.06077860611485472;  // std dev = 3.017, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.772', 'seconds']
Parameter learned model CLL:-0.17448 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [5.668, 119, 44], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.98e-08, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [1.39, 2, 52], 'false,false,true,false': [0.048, 151, 0], 'false,false,false,true': [1.998, 20, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.943, 1, 8], 'false,true,true': [2.119, 28, 8], 'false,true,false,true': [0.223, 0, 48], 'false,true,false,false': [6.99e-08, 100, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.627, 39, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.039, 0, 9], 'true,false': [0.03, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.135, 0, 3], 'false,true,false': [4.231, 131, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.975, 18, 5], 'false,false,false,false': [3.291, 39, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.022, 0, 9], 'false,true': [4.27, 129, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.69, 49, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.021, 0, 6], 'true,true,false': [0.533, 1, 1], 'true,false,true,true': [0.804, 1, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.114, 0, 3], 'false,true': [0.951, 19, 3], 'false,false,true': [0.019, 0, 6], 'false,false,false,true': [2.712, 48, 23], 'false,false,false,false': [4.717, 108, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.251, 0, 12], 'true,true,true,false': [0.016, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.099, 1, 36], 'true,false': [0.917, 104, 0], 'false,true': [0.909, 1, 5], 'false,false,true': [3.38, 81, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.014, 0, 5], 'true,false': [0.053, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.753, 0, 56], 'false,true,false': [0.211, 155, 0], 'false,false,true,true': [0.014, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.143, 54, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.07, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.087, 0, 4], 'false,true,true': [0.404, 11, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.254, 50, 14], 'false,false,true': [0.014, 0, 5], 'false,false,false,true': [2.743, 93, 36], 'false,false,false,false': [3.1, 45, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.000832, 0, 5], 'true,true,true,false': [0.037, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.612, 1, 4], 'false,true': [1.539, 53, 17], 'false,false,true': [0.012, 0, 5], 'false,false,false,true': [2.711, 87, 36], 'false,false,false,false': [3.017, 38, 20]}]
{'': [-2.5376526277146434e-16, 0.20588438523514116], 'false': [-1.4802973661668753e-16, 0.1988173892928927], 'false,false': [0.18931588340273733, 0.22592152199762144], 'false,false,false': [0.22417091836734643, 0.25], 'false,false,true': [0.15419501133786864, 0.19707177537732035], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [1.9032394707859825e-16, 0.19807225955753854], 'false': [0.12244897959183687, 0.19444234563747612], 'false,false': [0.1892426961063778, 0.2095690129208699], 'false,false,false': [0.15969691291793406, 0.2295918367346936], 'false,false,true': [0.035791653993367326, 1.5564189371674258e-05], 'false,true': [0.0, 0.22222222222222224], 'false,true,false': [nan, 0.22222222222222224], 'true': [0.0, 9.868649107779169e-17]}
{'': [0.062222222222222, 0.16747650215324653], 'false': [0.14786490651787398, 0.22539823192446062], 'false,false': [0.22208182119967876, 0.0], 'false,false,true': [0.0, 0.2229775126050483], 'false,true': [0.12468824442714682, 0.15248016261978223], 'false,true,false': [0.0010315043096424208, 4.884981308350689e-17], 'true': [0.0, 0.0987654320987654], 'false,false,false': [0.0, nan]}
{'': [0.00018176455932025374, 0.12793563682794487], 'false': [0.1007777293200223, 0.19178905658368683], 'false,false': [0.0026492368674999878, 0.19207739985193426], 'false,false,false': [0.16965827373390024, 0.20061728395061756], 'false,true': [0.013118923524956805, 0.0978203766011824], 'false,true,true': [0.0, 0.006077471641319517], 'false,false,true': [0.0, 0.0], 'true': [0.00016493450753148528, 0.0001781292681338975]}
{'': [0.00014329834365142284, 0.12659238827620023], 'false': [0.09855741774817889, 0.19859319561165936], 'false,false': [0.0012732535076405427, 0.20183969017382888], 'false,false,false': [0.20020690805785393, 0.25], 'false,false,true': [0.0, 0.0], 'true': [5.949013926143109e-07, 5.432112072850042e-05], 'true,true': [5.949013926143109e-07, nan]}
{'': [0.07628350822215232, 0.12306033774628167], 'false': [0.041096678672205476, 0.1291987388167136], 'false,false': [5.893127339443952e-05, 0.131612016711649], 'false,false,false': [0.10361228445321019, 0.14449857874834263], 'true': [0.043401959041061484, 0.10879587952718292], 'true,false': [0.14757549550216098, 0.004330886821138635], 'true,false,true': [0.21541003984559207, 0.0], 'true,true': [7.429411686544578e-05, 0.14190548829198193]}
{'': [0.13613592679226286, 0.0996050267276831], 'true': [0.05240227451406209, 0.008089776894710073], 'false': [0.13776367111677898, 0.09764801540260425], 'false,false': [0.09764801540260425, nan], 'true,true': [0.004523075320865076, 0.03588282579969255], 'true,true,false': [0.0, 0.03264829331687696], 'true,true,true': [0.005249754321778988, 0.0001302811626085129]}
{'': [0.00031707491418855475, 0.08646112660801719], 'false': [0.0704564775237216, 0.13084065929447605], 'false,false': [9.925876057496896e-05, 0.13345475783758137], 'false,false,false': [0.13345475783758137, nan], 'false,true': [0.010133573240721441, 0.00028724203502525987], 'false,true,true': [nan, 0.010133573240721474], 'true': [3.968015524006274e-05, 0.00030748183817805617], 'false,false,true': [9.925876057496896e-05, nan]}
{'': [0.0013519202892809548, 0.06961517775117684], 'false': [0.02370856688708679, 0.08688271263790377], 'false,false': [3.833128004427921e-05, 0.08848835707357083], 'false,false,false': [0.05832739389159158, 0.1478328571229904], 'false,true': [0.013575761523993176, 0.0251233914334808], 'false,true,false': [0.0, 0.024587747044442394], 'true': [0.0005517738052176881, 0.002423281675836464], 'true,false': [0.0, 0.0018955763630313094]}
{'': [0.028102022416293886, 0.07486711839170355], 'false': [0.03382045703594377, 0.08925835638151211], 'false,false': [3.0103563108632714e-05, 0.09131478806651037], 'false,false,false': [0.0597606977330783, 0.15688712359770474], 'true': [0.0004015867281758706, 0.07502297184126257], 'true,true': [0.0004995405676706394, 0.0], 'true,true,true': [1.3841532122138568e-07, 0.0004606737985480604], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.318
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.034619523334806335;  // std dev = 1.572, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14276431971489548;  // std dev = 5.145, 130.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
%   | | | else return 0.1949910403626701;  // std dev = 4.607, 95.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8390253384212601;  // std dev = 0.034, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15765976326091907;  // std dev = 0.123, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07409660288040619;  // std dev = 3.259, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.20771729253557877;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3053664367462845;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.07440370793753054;  // std dev = 0.813, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.16718021608283298;  // std dev = 1.753, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6600876371591836;  // std dev = 1.023, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.13915305313619314;  // std dev = 0.082, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1622566882445152;  // std dev = 3.565, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.822139763680338;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.44397834945819986;  // std dev = 0.031, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.39228676918682925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6211868192012113;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.0025232030832855043;  // std dev = 2.022, 57.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=11 */
%   | | | else return 0.04562241162667011;  // std dev = 3.736, 160.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5150257154751441;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.12300811257578567;  // std dev = 2.450, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.043040620561664;  // std dev = 2.851, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3712245333430093;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2205989687640632;  // std dev = 0.302, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.43044891324705103;  // std dev = 0.208, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.038014038646579144;  // std dev = 3.694, 154.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=39 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.21966618800083423;  // std dev = 0.956, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07034409682122222;  // std dev = 1.679, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3544535497595563;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.022233808362598678;  // std dev = 2.599, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.179915645396621;  // std dev = 2.544, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2927235533803859;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return -0.03950538452857363;  // std dev = 0.877, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2894222521023091;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.290273734671828;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then return -0.07908742328396128;  // std dev = 0.109, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else return 0.05534837559956063;  // std dev = 0.610, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2780754974581909;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.01783081349362739;  // std dev = 3.658, 161.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=37 */
%   | | | else return 0.08280969969324767;  // std dev = 4.054, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5178645879521353;  // std dev = 0.209, 51.000 (wgt'ed) examples reached here.  /* #pos=51 */
%   | else return -0.18591758893883922;  // std dev = 0.067, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( enzyme(A, G), interaction(H, E) )
%   | | then if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5381348913883427;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1475877326905458;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.03701272653484801;  // std dev = 0.284, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.47860067324497946;  // std dev = 0.309, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.13725173358281337;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.0021816716697968205;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.062058001790397214;  // std dev = 1.737, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.14833776837410412;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.14619218967768616;  // std dev = 0.010, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20968124808931946;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.34184040520406167;  // std dev = 0.465, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.47606060134879846;  // std dev = 0.393, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else return -0.12962101232865592;  // std dev = 0.025, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.16459886988504416;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.03471225906259578;  // std dev = 1.514, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.06507246296233826;  // std dev = 2.768, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.14744804278767182;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.08238123050691115;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.01319573855319034;  // std dev = 0.746, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04698840327224455;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16359980519997724;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.009645851543097569;  // std dev = 1.399, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.010543533045054324;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 3.153584269319518E-4;  // std dev = 1.685, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.03674747725481432;  // std dev = 3.636, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13614515767545105;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.12611052303372758;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.286310339426439;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.09432253757114832;  // std dev = 0.060, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.014642777669871928;  // std dev = 1.049, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return -0.11658472371632281;  // std dev = 0.595, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.17603317976395844;  // std dev = 0.063, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.06793851249613196;  // std dev = 1.700, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 4.698597643912509E-4;  // std dev = 3.783, 184.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=51 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '57.749', 'seconds']
Refined model CLL: -0.170415


******************************************
Best model found
******************************************
Results 

CLL : -0.192231 

AUC ROC : 0.980869 

AUC PR : 0.222016 

Precision : 0.13515 

Recall : 0.913357 

F1 : 0.235458 

Total Learning Time : 7.318 

Total Inference Time : 7.66759181022644 

Total revision time: 26.520279672622678
Best scored revision CLL: -0.170415


Results 

CLL : -0.192231 

AUC ROC : 0.980869 

AUC PR : 0.222016 

Precision : 0.13515 

Recall : 0.913357 

F1 : 0.235458 

Total Learning Time : 36.63107087898254 

Total Inference Time : 7.66759181022644 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.507
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07126368919787303;  // std dev = 3.198, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.17014893509951173;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5656272583648005;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7849387012573277;  // std dev = 1.683, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15847329417490127;  // std dev = 0.075, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0734682123457869;  // std dev = 1.954, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.1861642859492772;  // std dev = 2.128, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5792908918819853;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3929620091023857;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07206750771086129;  // std dev = 2.749, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6661872461008823;  // std dev = 1.007, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1432782848435406;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6414878971953643;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17064810941833933;  // std dev = 2.345, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.009809470469493865;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.424273647296635;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.470033001381909;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5375069461817166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5980770038597015;  // std dev = 0.185, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03044779061484933;  // std dev = 4.423, 205.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.3967296804017657;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5129295027258346;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.2149364423931479;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.08751858956791848;  // std dev = 2.180, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32839804862321437;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11051759760818583;  // std dev = 1.263, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.06043442201896538;  // std dev = 4.422, 192.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3066474412219078;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.026683279578512797;  // std dev = 0.786, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04868438344951644;  // std dev = 2.518, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.20198315186636795;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26305315114321937;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.07928554169737739;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2455501942113938;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30223906975991943;  // std dev = 0.082, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.036599125572852255;  // std dev = 1.105, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.021890805815119284;  // std dev = 1.167, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.34667951763453403;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04738232487159632;  // std dev = 2.228, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.04419311355273098;  // std dev = 4.593, 165.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2620479138453694;  // std dev = 0.229, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.28936716183422817;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2807812040640878;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5193036672150664;  // std dev = 1.625, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18266514301694634;  // std dev = 0.622, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.021101157864836212;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07016770284130773;  // std dev = 3.294, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1631894370064806;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08549291503032529;  // std dev = 1.169, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4507154853424504;  // std dev = 1.139, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.1391612121384002;  // std dev = 0.208, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16011068981548748;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2720994581933677;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.032252530820087576;  // std dev = 2.471, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15918945818456426;  // std dev = 0.064, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.22449166270401466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.21673626213707137;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0959288186239409;  // std dev = 0.318, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.17518374991901162;  // std dev = 0.410, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.016617481699549158;  // std dev = 1.559, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.24773726976609567;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04163396264379739;  // std dev = 2.667, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return -0.025821314955293183;  // std dev = 2.562, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1394714189293788;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17681951106213514;  // std dev = 0.770, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1729033809073176;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1850688617897192;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.18538082089963606;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.017715611963541305;  // std dev = 1.727, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.2954560123389945;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04637268970535374;  // std dev = 2.743, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.03331318015778707;  // std dev = 2.457, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.740', 'seconds']
Parameter learned model CLL:-0.180227 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.198, 48, 13], 'false,false,true,false': [5.18, 86, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.301, 2, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [1.683, 3, 52], 'false,false,true,false': [0.075, 134, 0], 'false,false,false,true': [1.954, 16, 5], 'false,false,false,false': [2.128, 13, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.06, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.749, 43, 14], 'false,true,false,true': [1.007, 1, 42], 'false,true,false,false': [0.0, 74, 0], 'false,false,true,true': [0.211, 0, 3], 'false,false,true,false': [2.345, 16, 9], 'false,false,false,true': [1.537, 11, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.044, 0, 6], 'true,false': [0.069, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.185, 0, 6], 'false,true,false': [4.423, 156, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.73, 7, 5], 'false,false,false,false': [2.18, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.04, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [1.263, 2, 6], 'false,true': [4.422, 136, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.786, 1, 2], 'false,false,false,true': [2.518, 23, 9], 'false,false,false,false': [1.308, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.068, 0, 5], 'true,true,false': [0.802, 1, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.082, 0, 3], 'true,false,false': [1.105, 2, 4], 'false,true': [1.167, 18, 5], 'false,false,true': [0.037, 0, 5], 'false,false,false,true': [2.228, 36, 13], 'false,false,false,false': [4.593, 118, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.229, 0, 13], 'true,true,true,false': [0.12, 0, 3], 'true,true,false,true': [0.002, 0, 3], 'true,true,false,false': [1.625, 3, 33], 'true,false': [0.622, 105, 0], 'false,true': [0.856, 1, 3], 'false,false,true': [3.294, 70, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.169, 2, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.139, 1, 56], 'false,true,false': [0.208, 136, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.049, 0, 2], 'false,false,false,true': [2.471, 28, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.064, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.045, 0, 5], 'false,true,true': [0.318, 19, 1], 'false,true,false,true': [0.41, 1, 6], 'false,true,false,false': [1.559, 52, 17], 'false,false,true': [0.028, 0, 3], 'false,false,false,true': [2.667, 67, 31], 'false,false,false,false': [2.562, 39, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.053, 0, 8], 'true,true,true,false': [0.77, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.004, 0, 2], 'true,false': [0.038, 0, 3], 'false,true': [1.727, 73, 24], 'false,false,true': [1.225, 3, 3], 'false,false,false,true': [2.743, 55, 31], 'false,false,false,false': [2.457, 28, 12]}]
{'': [-2.3684757858670006e-16, 0.21237737812128452], 'false': [-2.5376526277146434e-16, 0.20353580246913708], 'false,false': [0.20141056769568813, 0.21301775147928945], 'false,false,false': [0.2021484375000001, 0.24489795918367335], 'false,false,true': [0.16769685568395537, 0.21465600000000049], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.10380622837370253, 0.20455704430207963], 'false': [-6.344131569286608e-17, 0.20010712151821772], 'false,false': [0.19864465486199115, 0.2067228472981221], 'false,false,false': [0.1818609825618105, 0.22632271978055396], 'false,false,true': [0.05149021090382617, 4.153560157821395e-05], 'true': [0.0, 0.13017751479289957], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.057683905937768565, 0.16474404874773077], 'false': [0.1531490307510423, 0.21234095788771018], 'false,false': [0.21922960542700035, 0.1688025481525566], 'false,false,true': [0.014833811899764848, 0.22000458931949204], 'false,false,false': [0.1688025481525566, nan], 'false,true': [0.13253558862592155, 0.16098071662099633], 'false,true,false': [0.02359551248860106, -3.600723323108616e-17], 'true': [0.00032707403059426747, 0.15999999999999998]}
{'': [0.0009479522043335465, 0.12087946993639159], 'false': [0.10243602295978703, 0.21418864913098232], 'false,false': [0.003000533046254509, 0.22498208667682], 'false,false,false': [0.249393189208565, 0.2066794675368645], 'false,true': [0.005358566909349248, 0.09543396715698375], 'false,true,true': [0.0, 0.005727556838938701], 'false,false,true': [0.0, 0.0], 'true': [0.0003158418254846455, 0.0005317917290456177]}
{'': [0.10569433856165532, 0.12098859179962339], 'false': [0.10185385573157639, 0.20617232273119335], 'false,false': [0.16908871164013756, 0.20993677315481668], 'false,false,false': [0.19816319862242968, 0.24447635644873372], 'false,false,true': [0.0, 0.20585663256901118], 'true': [0.00017381861089543142, 0.1992727459526948], 'true,true': [0.00017381861089543142, nan]}
{'': [0.11131425449573894, 0.11563403191414148], 'false': [0.059206665821095066, 0.12104390864352983], 'false,false': [0.0002745450351208323, 0.12178670076989709], 'false,false,false': [0.10126848221715778, 0.1278776610262688], 'true': [0.08033775345359107, 0.1382680134516539], 'true,false': [0.0022951989060670253, 0.2036221497350356], 'true,true': [0.0009126288210468015, 0.16085775131013835], 'true,false,true': [0.0, 0.002256858055350308]}
{'': [0.10969197606459827, 0.11043511520483713], 'false': [0.18324375815513014, 0.10745988932300421], 'true': [0.06337369000143674, 0.0036807952588612746], 'false,false': [0.10745988932300421, nan], 'true,true': [0.004276608443884111, 0.07171881645862231], 'true,true,false': [9.295554330435163e-07, 0.07331892507791841], 'true,true,true': [0.0040249601913799294, 0.004760681889810621]}
{'': [0.08152434609092594, 0.09133354192853636], 'false': [0.07936408164229274, 0.14495194321919871], 'false,false': [0.0036023259645002006, 0.15269177343266616], 'false,false,false': [0.15269177343266616, nan], 'true': [0.0, 0.10518834861929255], 'false,true': [0.02277286329190796, 0.0003186902885339718], 'false,true,true': [nan, 0.022772863291907988], 'false,false,true': [0.0, 0.0012229941991521304]}
{'': [0.0011997642874162773, 0.06924109592467126], 'false': [0.032101124233547766, 0.09200778034291744], 'false,false': [0.00025900201570124476, 0.09281831490040993], 'false,false,false': [0.07260157808348897, 0.12867340360284177], 'false,true': [0.005060286522248261, 0.03725784560625494], 'false,true,false': [0.024014234896517713, 0.035213058379717645], 'true': [0.000414088248742811, 0.0003454296356345347], 'true,false': [0.0, 0.0004044911897691739]}
{'': [0.05185413672862555, 0.08216806265053438], 'false': [0.03075820323593933, 0.11910420666243403], 'false,false': [0.2501963104745821, 0.10767855775699223], 'false,false,false': [0.0874895934811182, 0.15096842326831522], 'true': [0.06092455432781074, 0.00048340702008508224], 'true,true': [0.07402990300274684, 3.797154986337944e-05], 'true,true,true': [0.00035229454877755417, 0.19774719653219455], 'true,true,false': [0.0, 7.624349761703453e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 8.861
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return 0.09952824544433964;  // std dev = 3.991, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.24050187627598293;  // std dev = 2.834, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.14941107102184112;  // std dev = 4.611, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6520062622195435;  // std dev = 0.268, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7561337978940017;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.536363628241967;  // std dev = 0.859, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7682239792315604;  // std dev = 1.929, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.15559892756440052;  // std dev = 0.150, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.08209725655765511;  // std dev = 2.117, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.502817451135201;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4644820142512974;  // std dev = 0.316, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.24708225015560456;  // std dev = 1.592, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.017363726773353832;  // std dev = 2.004, 40.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6596785473996577;  // std dev = 1.378, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14350257820798487;  // std dev = 0.222, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4112915998686504;  // std dev = 0.834, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.01998149018152344;  // std dev = 2.188, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.2591036329015521;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3556940476608843;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4644784823496406;  // std dev = 0.028, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4846635665616743;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6082972187142296;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.1180608512273344;  // std dev = 0.068, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.08609111562943246;  // std dev = 4.224, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5320596056759017;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5972923522169425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.01910041840948512;  // std dev = 2.472, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.3405652833495277;  // std dev = 1.299, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33873885672472137;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2276537791226406;  // std dev = 0.361, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.04101601005525808;  // std dev = 0.194, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( complex(A, G), phenotype(A, H) )
%   | | | then return 0.04071204340420452;  // std dev = 1.664, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.07776186651607714;  // std dev = 3.811, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return 0.3731861843633574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10910876579847155;  // std dev = 0.808, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.03747228445124103;  // std dev = 2.408, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return -0.01719349701954587;  // std dev = 1.708, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.28242795836653223;  // std dev = 0.037, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.37610757786382987;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(H, A), enzyme(H, I) )
%   | | | then return -0.02124742885594253;  // std dev = 0.340, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.10556860566000602;  // std dev = 0.077, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return -0.045697833401368765;  // std dev = 0.613, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.1419735138950956;  // std dev = 0.785, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3286807049786485;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.020188538219833005;  // std dev = 3.336, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | | else return 0.05901422709642921;  // std dev = 3.798, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26193686704327857;  // std dev = 0.064, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.5611312327178217;  // std dev = 0.152, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.17661463364641297;  // std dev = 0.080, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.6339030893373848;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.18686205644677337;  // std dev = 0.055, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5152627186032908;  // std dev = 0.164, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.16844411192922398;  // std dev = 0.101, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return -0.04223010009932592;  // std dev = 1.375, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.019568570946698456;  // std dev = 1.824, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.025246554051941605;  // std dev = 0.871, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.17001254469189103;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.280046062560189;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.31642334365608243;  // std dev = 0.944, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.4590632576529844;  // std dev = 0.378, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.13241255381616254;  // std dev = 0.030, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23965658928236908;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07473530767673575;  // std dev = 1.766, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.10175994156347791;  // std dev = 1.774, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16472220952060457;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2032991524219182;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.22591964666546122;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( interaction(I, J), interaction(J, I) )
%   | | | then return -0.025862018087444504;  // std dev = 1.707, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | | else return 0.07062955846711547;  // std dev = 0.548, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else return 0.1974845500609237;  // std dev = 0.392, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.22719222297052066;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.011207359717204057;  // std dev = 1.931, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0.006434725101631551;  // std dev = 2.929, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15944595844943377;  // std dev = 0.030, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( enzyme(E, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.009791430599543946;  // std dev = 1.199, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.10323339431252135;  // std dev = 1.335, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.03644512108584646;  // std dev = 1.025, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.2831674932321025;  // std dev = 1.232, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.43457322218738315;  // std dev = 0.271, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.20959640369969723;  // std dev = 0.328, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.04416998471711758;  // std dev = 0.817, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.01104010180181181;  // std dev = 2.392, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.345', 'seconds']
Refined model CLL: -0.179128


******************************************
Best model found
******************************************
Results 

CLL : -0.196566 

AUC ROC : 0.982896 

AUC PR : 0.19726 

Precision : 0.15894 

Recall : 0.932862 

F1 : 0.271605 

Total Learning Time : 8.861 

Total Inference Time : 7.9723289012908936 

Total revision time: 29.438834875106814
Best scored revision CLL: -0.179128


Results 

CLL : -0.196566 

AUC ROC : 0.982896 

AUC PR : 0.19726 

Precision : 0.15894 

Recall : 0.932862 

F1 : 0.271605 

Total Learning Time : 39.54962608146668 

Total Inference Time : 7.9723289012908936 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.725
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.18167834686421683;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.1914822684328445;  // std dev = 4.899, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6553939205872611;  // std dev = 3.508, 84.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=69 */
%   | | | else return -0.16618823914573222;  // std dev = 0.009, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.014526224057926009;  // std dev = 1.561, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return -0.009061834383256976;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5600181218188023;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09598443402179638;  // std dev = 4.331, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6910488482761487;  // std dev = 0.996, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14495807121078383;  // std dev = 2.58e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.336765050975068;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.32161456928215937;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.039575274791744115;  // std dev = 1.404, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43558501554170315;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.277341238024098;  // std dev = 0.935, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6281783995773612;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.070429595543419;  // std dev = 4.918, 196.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5344872814109585;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.14531594499643688;  // std dev = 1.379, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.34410779124292623;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3383078707805411;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16782431041093887;  // std dev = 0.854, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0736014297092792;  // std dev = 5.287, 226.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.6533334325160816;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.4021971165151862;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.14276589440954157;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.14936004588476184;  // std dev = 1.139, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2603402279477523;  // std dev = 0.026, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.35686141257208737;  // std dev = 0.288, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27504880887311367;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3103430756179084;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.029882135935551182;  // std dev = 2.244, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.33744507611914676;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.044394744726200565;  // std dev = 2.921, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.05785934564299685;  // std dev = 4.113, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25020818299642034;  // std dev = 0.292, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.24808367535931808;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5769321655896918;  // std dev = 0.446, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.177291538714121;  // std dev = 0.334, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.02294727916026279;  // std dev = 0.844, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08694349774136788;  // std dev = 3.869, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17176934831441293;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20828382280887642;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3538085068839126;  // std dev = 3.062, 83.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=71 */
%   | | else return -0.16023103564998853;  // std dev = 0.245, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20473765390274923;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.019280360315870517;  // std dev = 1.412, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17544793027532368;  // std dev = 0.211, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.1661928384065744;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return 0.0031443190230247306;  // std dev = 1.297, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.16772632524328807;  // std dev = 0.695, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.006832577920638824;  // std dev = 1.657, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22394242310180046;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03268666852028344;  // std dev = 3.520, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.029472374746911865;  // std dev = 1.399, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.12665014711563108;  // std dev = 0.016, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3321232088439229;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14443235063536117;  // std dev = 0.014, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.018739570937945534;  // std dev = 2.266, 114.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.05888035835875666;  // std dev = 0.854, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.0030479345352065037;  // std dev = 3.569, 140.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=40 */
%   | | | else return 0.06163465132020285;  // std dev = 1.328, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.554', 'seconds']
Parameter learned model CLL:-0.201313 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.707, 1, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.725, 69, 33], 'false,false,true,false': [4.899, 72, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.247, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.067, 0, 9], 'false,true,true': [0.063, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.508, 15, 69], 'false,false,true,false': [0.009, 168, 0], 'false,false,false,true': [1.561, 14, 3], 'false,false,false,false': [0.926, 6, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.056, 0, 8], 'true,false': [0.05, 0, 3], 'false,true,true': [4.331, 85, 34], 'false,true,false,true': [0.996, 1, 37], 'false,true,false,false': [2.58e-08, 72, 0], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.404, 11, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.064, 0, 5], 'true,false': [0.935, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.966, 1, 14], 'false,true,false': [4.918, 139, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.379, 6, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.038, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.854, 1, 4], 'false,true': [5.287, 155, 71], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.139, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.026, 0, 4], 'true,true,false': [0.288, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.244, 45, 12], 'false,false,true': [0.027, 0, 3], 'false,false,false,true': [2.921, 50, 20], 'false,false,false,false': [4.113, 97, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.292, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.446, 0, 33], 'true,false': [0.334, 86, 0], 'false,true': [0.844, 1, 3], 'false,false,true': [3.869, 72, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.017, 0, 3], 'true,false': [0.121, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.062, 12, 71], 'false,true,false': [0.245, 159, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.412, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.211, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.016, 0, 3], 'false,true,true': [1.297, 25, 11], 'false,true,false,true': [0.695, 1, 1], 'false,true,false,false': [1.657, 42, 17], 'false,false,true': [0.021, 0, 3], 'false,false,false,true': [3.52, 77, 40], 'false,false,false,false': [1.399, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.016, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.014, 0, 3], 'false,true': [2.266, 85, 29], 'false,false,true': [0.854, 1, 3], 'false,false,false,true': [3.569, 100, 40], 'false,false,false,false': [1.328, 8, 4]}]
{'': [0.07638888888888877, 0.22222222222222227], 'false': [0.18750000000000006, 0.2196867028061238], 'false,false': [0.22061224489795933, 0.20408163265306106], 'false,false,true': [0.21885813148789068, 0.22222222222222338], 'false,false,false': [0.24000000000000005, 0.17283950617283952], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.25, 0.0], 'true': [-2.220446049250313e-16, 0.18750000000000006]}
{'': [0.00044937956321764653, 0.19670704164009561], 'false': [0.001770828104934526, 0.19427934089129037], 'false,false': [0.19883396651183452, 0.13732056908970733], 'false,false,true': [0.1465028245186067, 4.5577794088604746e-07], 'false,false,false': [0.14328188245250217, 0.12244897959183673], 'false,true': [0.0019921816180513696, 0.0], 'true': [0.0, 0.0005034715476789723], 'false,true,false': [nan, 0.0]}
{'': [0.0007104641423471104, 0.1640958297324937], 'false': [0.1627418946078581, 0.178949473330283], 'false,false': [0.26935419589920817, 0.1407122978944499], 'false,false,true': [0.0, 0.24999999999999997], 'false,true': [0.1576583508392449, 0.1670510692087527], 'false,true,false': [0.026102111833816534, 9.25185853854297e-18], 'false,false,false': [0.1407122978944499, nan], 'true': [0.0003915337968219412, 0.0008198849539215273]}
{'': [0.07934064427022715, 0.14415224923518236], 'false': [0.13957345414262085, 0.21504906422334877], 'false,false': [0.0, 0.2242132858199257], 'false,false,false': [0.21129777795754967, 0.25], 'false,true': [0.062188550919471494, 0.12338081116944821], 'true': [0.0008215940443140113, 0.12499189134461218], 'false,true,true': [nan, 0.06218855091947126], 'false,false,true': [nan, 0.0]}
{'': [0.06802488831408719, 0.1302880395371351], 'false': [0.12365993002116214, 0.24461079362517812], 'false,false': [0.27853618498456234, 0.22706617236239882], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.24, 0.2162682177399987], 'true': [0.00020296986061109555, 0.14602119827444784], 'true,true': [0.00020296986061109555, nan]}
{'': [0.009614766307386245, 0.11595849968752552], 'false': [0.08834151509982555, 0.12179993327737824], 'false,false': [0.00023615120557229918, 0.12240554351879723], 'false,false,false': [0.12192576889518737, 0.12258789455711033], 'true': [0.01159994133236639, 0.0003114213162631885], 'true,true': [0.00016460047174035597, 0.016607618873629472], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11108473930562333, 0.13530604433106624], 'false': [0.17827388819273854, 0.13363025378946075], 'false,false': [0.13363025378946075, nan], 'true': [0.026494243794006615, 0.0012947894987562305], 'true,true': [0.007729190169188897, 0.006030560888688229], 'true,true,true': [0.008501698864953222, 0.0], 'true,true,false': [nan, 0.006030560888688175]}
{'': [0.0016200923916956176, 0.10068076626017142], 'false': [0.09853602213839309, 0.13505429220655715], 'false,false': [0.0, 0.14240806684786372], 'false,false,false': [0.14240806684786372, nan], 'false,true': [0.11296744691550613, 0.00037601680737468177], 'false,true,true': [nan, 0.1129674469155061], 'true': [9.38827908021402e-05, 0.0018287918517742655], 'false,false,true': [0.0, nan]}
{'': [0.004086249486177599, 0.08474992690711763], 'false': [0.05124318259862137, 0.10867578928910243], 'false,false': [0.00014396989420366788, 0.11035250919351301], 'false,false,false': [0.10587528783522145, 0.15063820290212177], 'false,true': [0.04670533174649756, 0.053919721586291894], 'false,true,false': [0.24174190196107986, 0.04655382504135391], 'true': [0.00556468309663052, 8.146405794021612e-05], 'true,false': [nan, 8.146405794021612e-05]}
{'': [0.003410514742680279, 0.07573428387666839], 'false': [0.04503833505540678, 0.09800971274092926], 'false,false': [0.18213249373815232, 0.09570073599071359], 'false,false,false': [0.0909683904436731, 0.1470579000407566], 'true': [0.004648186099503113, 6.464652931756354e-05], 'true,true': [0.004648186099503113, nan], 'true,true,true': [3.481529814660219e-05, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 14.751
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.024204006076958388;  // std dev = 1.328, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.15444523139580865;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.5010060779566552;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.18209259707134237;  // std dev = 5.577, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7170223120082564;  // std dev = 2.813, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16465768648010598;  // std dev = 0.173, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.03566561307811747;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5600859729771919;  // std dev = 0.839, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4884530510602761;  // std dev = 0.267, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.002014454526090522;  // std dev = 2.189, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.1430897556785155;  // std dev = 3.616, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6235359312029799;  // std dev = 1.656, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.15173776348337448;  // std dev = 0.154, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return -0.22040147449082031;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.22817776706664405;  // std dev = 1.005, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.06384794197053399;  // std dev = 1.116, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.00772600233566334;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45395725452802693;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4422401744517633;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.05006933217080345;  // std dev = 1.463, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.04701071891073889;  // std dev = 1.650, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.02328641418145295;  // std dev = 2.036, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.12433012543986663;  // std dev = 4.509, 148.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=53 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5710718459412204;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.17674210975035168;  // std dev = 0.880, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.004985880070254891;  // std dev = 1.483, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32923247202076633;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.36258755975695095;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(F, H) )
%   | | | then return 0.05138499279786169;  // std dev = 4.308, 132.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=38 */
%   | | | else return 0.0015434964154329976;  // std dev = 1.991, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | else if ( interaction(A, I), location(I, J) )
%   | | | then return 0.011277342202038328;  // std dev = 1.179, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.12532803110017704;  // std dev = 2.557, 45.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4292660556259382;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04538295341747378;  // std dev = 1.389, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.0750119452193242;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.25834158683306996;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3260892603344655;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2951570927918323;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5356143048534802;  // std dev = 1.310, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.147892596444537;  // std dev = 0.206, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.14904365898282906;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.29394368740317656;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.010788927271091719;  // std dev = 3.209, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.09584558366306088;  // std dev = 3.760, 102.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48688849393994166;  // std dev = 0.159, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17387202590257442;  // std dev = 0.066, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5637684720683823;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return -0.18792007189072008;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.3732307688152678;  // std dev = 0.477, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.47254365586151803;  // std dev = 0.978, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.19159716261650758;  // std dev = 0.197, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return -0.04819939306520919;  // std dev = 2.016, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.011061173401242885;  // std dev = 1.971, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.14300179818250472;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, E) )
%   | | then return -0.0689158512901612;  // std dev = 0.758, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.14201284470088055;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, H) )
%   | | | then return 0.26190682700929013;  // std dev = 1.893, 26.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | else return 0.36491392466275235;  // std dev = 1.993, 58.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=53 */
%   | | else return -0.1438227540392827;  // std dev = 0.026, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.18299925967946196;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1335410457034205;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.05054973761959915;  // std dev = 1.054, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13597109288578366;  // std dev = 0.034, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.15052604723064802;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( phenotype(A, H), interaction(A, G) )
%   | | | then return -0.0412884121252984;  // std dev = 0.891, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.029314154882406407;  // std dev = 1.924, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.10124876649354823;  // std dev = 0.470, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.002207740843726357;  // std dev = 0.718, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.05925212499989799;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.014100868953606118;  // std dev = 3.142, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | else return -0.045904534956649326;  // std dev = 1.446, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.1209084771771782;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13227609588422115;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( complex(A, G), complex(E, G) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.0714248616305165;  // std dev = 0.887, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.17249651961197923;  // std dev = 0.218, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(E, I), phenotype(I, F) )
%   | | | then return 0.02221012598464922;  // std dev = 1.668, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.03974801836889462;  // std dev = 1.496, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(K, L) )
%   | | | then return 0.03053899318911701;  // std dev = 2.831, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
%   | | | else return -0.014946201356282744;  // std dev = 1.511, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else return 0.14450964646753683;  // std dev = 0.672, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '40.532', 'seconds']
Refined model CLL: -0.19175


******************************************
Best model found
******************************************
Results 

CLL : -0.193355 

AUC ROC : 0.985179 

AUC PR : 0.262205 

Precision : 0.171797 

Recall : 0.851064 

F1 : 0.285884 

Total Learning Time : 14.751 

Total Inference Time : 23.458006858825684 

Total revision time: 58.747055936813354
Best scored revision CLL: -0.19175


Results 

CLL : -0.193355 

AUC ROC : 0.985179 

AUC PR : 0.262205 

Precision : 0.171797 

Recall : 0.851064 

F1 : 0.285884 

Total Learning Time : 58.778722215652465 

Total Inference Time : 23.458006858825684 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.989
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11865313678018337;  // std dev = 4.788, 119.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=31 */
%   | | | else return 0.1706489350995115;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5670719622367217;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.7487648276114267;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5988115305880701;  // std dev = 4.273, 100.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=76 */
%   | | | else return -0.16027322792244553;  // std dev = 0.045, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06448803481332295;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.3422658125911007;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5194736718743056;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5988488348369887;  // std dev = 0.056, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08528600004087616;  // std dev = 4.414, 128.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6350031100952489;  // std dev = 2.123, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14311879245409628;  // std dev = 0.000, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7913229932839381;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.07549481202299994;  // std dev = 1.597, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.47879995410536624;  // std dev = 0.132, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4488633587368152;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4930301146835066;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5537154914630602;  // std dev = 1.688, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else return 0.019717449625087636;  // std dev = 5.317, 263.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.528918957566278;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.010567244361259746;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.08751584082659636;  // std dev = 1.075, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.39223761463880963;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16290077943903863;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.059672986797555616;  // std dev = 5.923, 285.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3981657065583589;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09210485229773215;  // std dev = 1.607, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3160361218949289;  // std dev = 0.006, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3705609062839893;  // std dev = 0.256, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return -0.02036378457571993;  // std dev = 0.815, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.02569026835600713;  // std dev = 2.742, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.28878573020719855;  // std dev = 0.049, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.0015940683419226238;  // std dev = 2.269, 54.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=11 */
%   | | | else return 0.06491369013719361;  // std dev = 4.813, 169.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2801890677101852;  // std dev = 0.245, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.31197206268131883;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2523252624508645;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.539145134718295;  // std dev = 1.106, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1797004121219619;  // std dev = 0.880, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2219130798121598;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0808665791344256;  // std dev = 4.434, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.2039223694236686;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.12608301274703834;  // std dev = 0.931, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.429427511270528;  // std dev = 2.644, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | | else return -0.14859879978342322;  // std dev = 0.296, 191.000 (wgt'ed) examples reached here.  /* #neg=191 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.24919918659636986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.05138213394264569;  // std dev = 1.478, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17654596280573825;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14890053432645478;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.214497304403911;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.007129925486341407;  // std dev = 1.561, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20576955413616263;  // std dev = 0.451, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.06497189545513157;  // std dev = 1.554, 78.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1676320173671881;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013275568186591567;  // std dev = 4.010, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | | else return 0.004992975796164617;  // std dev = 1.463, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14233493607667486;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.16063403209891736;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.09313314025217138;  // std dev = 0.791, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.010571673430545036;  // std dev = 2.274, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.14552776768729275;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.040528614109639025;  // std dev = 3.835, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
%   | | | else return 0.03480774914952627;  // std dev = 1.415, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.460', 'seconds']
Parameter learned model CLL:-0.199941 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.732, 4, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.788, 88, 31], 'false,false,true,false': [5.562, 99, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.894, 1, 4], 'true,false': [0.083, 0, 13], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [4.273, 24, 76], 'false,false,true,false': [0.045, 169, 0], 'false,false,false,true': [1.247, 7, 2], 'false,false,false,false': [1.0, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.962, 1, 11], 'true,false': [0.056, 0, 6], 'false,true,true': [4.414, 94, 34], 'false,true,false,true': [2.123, 5, 48], 'false,true,false,false': [0.0, 96, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.597, 11, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.132, 0, 10], 'true,false': [0.086, 0, 7], 'false,true,true,true': [0.05, 0, 3], 'false,true,true,false': [1.688, 4, 21], 'false,true,false': [5.317, 205, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [1.075, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.047, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.285, 2, 10], 'false,true': [5.923, 203, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.607, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.006, 0, 5], 'true,true,false': [0.256, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.815, 1, 2], 'false,true': [2.742, 55, 19], 'false,false,true': [0.049, 0, 8], 'false,false,false,true': [2.269, 43, 11], 'false,false,false,false': [4.813, 119, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.245, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.106, 2, 33], 'true,false': [0.88, 82, 0], 'false,true': [0.011, 0, 5], 'false,false,true': [4.434, 101, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.931, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.644, 8, 82], 'false,true,false': [0.296, 191, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.478, 20, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.096, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.074, 0, 5], 'false,true,true': [1.561, 35, 13], 'false,true,false,true': [0.451, 1, 8], 'false,true,false,false': [1.554, 67, 11], 'false,false,true': [0.009, 0, 5], 'false,false,false,true': [4.01, 117, 47], 'false,false,false,false': [1.463, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.02, 0, 7], 'true,true,true,false': [0.085, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.791, 2, 3], 'false,true': [2.274, 86, 32], 'false,false,true': [0.008, 0, 5], 'false,false,false,true': [3.835, 97, 47], 'false,false,false,false': [1.415, 10, 4]}]
{'': [0.15419501133786812, 0.21166071690547264], 'false': [0.10937499999999978, 0.20495833548988254], 'false,false': [0.20546776735242697, 0.1955555555555554], 'false,false,true': [0.19264176258738913, 0.21484375000000108], 'false,false,false': [0.1955555555555554, nan], 'true': [0.18749999999999967, 0.0], 'false,true': [0.22222222222222224, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.05145456767727927, 0.20699853570190052], 'false': [0.0007884305269265011, 0.20298509387765645], 'false,false': [0.20246398949302055, 0.21301775147929], 'false,false,false': [0.17283950617283944, 0.25], 'false,false,true': [0.18260212041742946, 1.2236230734136056e-05], 'true': [0.16, 0.0005362418851017326], 'false,true': [0.0009658273954848973, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.0530058221849004, 0.16334541684181741], 'false': [0.1618330376573571, 0.18945316074368895], 'false,false': [0.18945316074368895, nan], 'false,false,true': [0.0, 0.17005774739197602], 'false,true': [0.15221242893360493, 0.1690162754993425], 'false,true,false': [0.08505510586879526, -1.295260195396016e-16], 'true': [0.07715127472394116, 0.0005146394432508453]}
{'': [0.0016754883542626905, 0.13316436213593083], 'false': [0.13116189469782152, 0.16339281394331384], 'false,false': [0.0, 0.15895240463827115], 'false,false,false': [0.1388888888888888, 0.19266590840372336], 'false,true': [0.10215011704662068, 0.10747720608494325], 'false,true,true': [0.0008482759933122752, 0.1139117613707095], 'true': [0.0017397016454822722, 0.0010565787621152265], 'false,false,true': [nan, 0.0]}
{'': [0.09932259098832702, 0.12641275268708632], 'false': [0.12311304631522352, 0.19077560087976392], 'false,false': [0.0, 0.1987597009219453], 'false,false,false': [0.1987597009219453, nan], 'true': [0.0003186523495101338, 0.137697641798367], 'true,true': [0.0003186523495101338, nan], 'false,false,true': [nan, 0.0]}
{'': [0.06354601363297183, 0.11965091577414932], 'false': [0.10156932812366969, 0.12519212174671399], 'false,false': [0.00030548656609215297, 0.1276907475746404], 'false,false,false': [0.09536918199663208, 0.13704746848540986], 'true': [0.005378573053072607, 0.2213665641915538], 'true,false': [nan, 0.22136656419155376], 'true,true': [7.474000403229209e-06, 0.007300748359553053]}
{'': [0.1154021488551938, 0.12912042010881247], 'false': [2.4816793671778026e-05, 0.13283162356997397], 'false,false': [0.13283162356997397, nan], 'true': [0.03945317098923892, 0.00943551435892692], 'true,true': [0.0038260548458704385, 0.03818483132649558], 'true,true,false': [9.25185853854297e-18, 0.034963161148174035], 'true,true,true': [0.004017990245845038, 0.0]}
{'': [0.04924598794238918, 0.09777711064301131], 'false': [0.09792568912900038, 0.0908178997589833], 'false,true': [0.07766687997596008, 0.00045999010696075613], 'false,false': [0.0, 0.09098801370532848], 'false,false,false': [0.09098801370532848, nan], 'false,true,true': [nan, 0.07766687997596024], 'true': [0.0, 0.061969833445458415], 'false,false,true': [0.0, nan]}
{'': [0.0013930965427752587, 0.07548617612647443], 'false': [0.0420143200580902, 0.09912836122100455], 'false,false': [1.6167064213634674e-05, 0.10123137666400156], 'false,false,false': [0.0980521248594517, 0.13375620422052784], 'false,true': [0.05074609824759203, 0.03688031383928424], 'false,true,false': [0.022582755456366913, 0.030947177025257417], 'true': [0.0010274597796695966, 0.0016556377052318366], 'true,false': [0.0, 0.001088482431726112]}
{'': [0.04718783234505509, 0.07875704496953717], 'false': [0.04382373221454125, 0.1028293878763418], 'false,false': [1.2827803437973074e-05, 0.105741618514108], 'false,false,false': [0.1021206731561501, 0.14295579958993979], 'true': [0.0006742057300314588, 0.12515541010244902], 'true,true': [0.0006742057300314588, nan], 'true,true,true': [5.932131880958298e-05, 0.0012112633067170586]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.454
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, I), location(A, J) )
%   | | | then return 0.008148935099512315;  // std dev = 2.258, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.09678529873587581;  // std dev = 3.999, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | | else if ( location(A, K), phenotype(A, L) )
%   | | | then return 0.2806841463671167;  // std dev = 4.162, 71.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=30 */
%   | | | else return 0.16895974591032312;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.25980807866759864;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6100122940520396;  // std dev = 0.338, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6786650289480557;  // std dev = 3.436, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.16186216615039004;  // std dev = 0.158, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.16600983383710782;  // std dev = 1.166, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.07066522613906286;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4951625316552995;  // std dev = 0.263, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5646243638497299;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G), complex(A, H) )
%   | | | then return 0.029747284815093672;  // std dev = 2.168, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.0708498959098475;  // std dev = 3.787, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.587164763856757;  // std dev = 2.453, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.14223991563177785;  // std dev = 0.112, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( recursion_proteinclass(J, B) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.14846769771980187;  // std dev = 1.156, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5258813529109709;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18522593343219818;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42342239824774364;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.377592596711668;  // std dev = 0.245, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5346210890726134;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5428490005949775;  // std dev = 1.798, 25.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=21 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.13626424096598497;  // std dev = 0.247, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return 0.06177897220720186;  // std dev = 4.966, 206.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=58 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4516409958940856;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.15701492001520267;  // std dev = 1.507, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.1980025528425953;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36804610493822004;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.26327284862262434;  // std dev = 0.217, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F) )
%   | | then if ( complex(A, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31810137618528317;  // std dev = 0.671, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.030841370153623173;  // std dev = 3.529, 125.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.11116037087650706;  // std dev = 3.829, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
%   | | | else return 0.02201307382518359;  // std dev = 1.842, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3439628913228244;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 8.432802450901805E-4;  // std dev = 1.216, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.04560457530190561;  // std dev = 1.108, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3276311317214375;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( enzyme(A, F), interaction(E, A) )
%   | | | then return -0.07047866656568061;  // std dev = 0.711, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.046217220895821566;  // std dev = 1.752, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.4205875298992033;  // std dev = 0.636, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12698189143031713;  // std dev = 1.458, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.06510747712642335;  // std dev = 0.798, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.27310251475024283;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.05459488259367929;  // std dev = 4.185, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
%   | | | else return 0.13591145344641478;  // std dev = 2.610, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2616123795416028;  // std dev = 0.071, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2527421162172812;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5323413835645754;  // std dev = 1.268, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.1723544842866029;  // std dev = 0.086, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22453084073954083;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.021267041907250973;  // std dev = 2.587, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | | else return -0.16957851127420995;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.08671263168828615;  // std dev = 3.244, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
%   | | | else return 0.18228073334026282;  // std dev = 0.845, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1606368943422386;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.19941570953514537;  // std dev = 0.073, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), interaction(A, H) )
%   | | | then return 0.2656942894520219;  // std dev = 1.781, 40.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=33 */
%   | | | else return 0.4074737946885683;  // std dev = 2.507, 56.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=49 */
%   | | else return -0.1559567492331346;  // std dev = 0.563, 159.000 (wgt'ed) examples reached here.  /* #neg=159 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return -0.329047254702698;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.15247841456287348;  // std dev = 0.958, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.01163040054287373;  // std dev = 0.738, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18077279177531672;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.18072630715830054;  // std dev = 0.844, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10295463397132487;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then if ( enzyme(H, I), enzyme(A, I) )
%   | | | then return -0.12425464136075841;  // std dev = 0.685, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return -0.033051693048247725;  // std dev = 2.056, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | else return -0.0011281687910301825;  // std dev = 0.208, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.006474842368275983;  // std dev = 0.908, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.015732819274664602;  // std dev = 3.248, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return -0.019088412724763196;  // std dev = 2.243, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16656222846203023;  // std dev = 0.047, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.04448772238945109;  // std dev = 0.810, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.0021954065044024564;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.19964027743183665;  // std dev = 0.503, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return -0.027248085013240084;  // std dev = 1.361, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.02707615391854571;  // std dev = 1.933, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.16018247746599176;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.06264458588573589;  // std dev = 2.350, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.04110082661035378;  // std dev = 3.169, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.156', 'seconds']
Refined model CLL: -0.203014


******************************************
Best model found
******************************************
Results 

CLL : -0.175273 

AUC ROC : 0.988675 

AUC PR : 0.291419 

Precision : 0.25853 

Recall : 0.743396 

F1 : 0.383642 

Total Learning Time : 13.454 

Total Inference Time : 36.64732098579407 

Total revision time: 73.29575602340698
Best scored revision CLL: -0.199941


Results 

CLL : -0.175273 

AUC ROC : 0.988675 

AUC PR : 0.291419 

Precision : 0.25853 

Recall : 0.743396 

F1 : 0.383642 

Total Learning Time : 73.32742230224609 

Total Inference Time : 36.64732098579407 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 51.419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.1297538733711163;  // std dev = 5.661, 162.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.21663950113724814;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8405996523318471;  // std dev = 0.017, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15942119438577879;  // std dev = 0.026, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0387477474845774;  // std dev = 1.989, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.14217992018274295;  // std dev = 3.211, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4125092938891416;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.04715937686739868;  // std dev = 2.070, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6845373620895567;  // std dev = 0.270, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13827790947524787;  // std dev = 8.16e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.18200192049210445;  // std dev = 0.528, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.20068993556633263;  // std dev = 3.442, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.16108414853958328;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.33155205729414355;  // std dev = 0.928, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.43857129386206034;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38647360597981395;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3005821175848292;  // std dev = 0.781, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.042609054279403154;  // std dev = 4.254, 202.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5100925620122683;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5054217167705631;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.05738949382525791;  // std dev = 1.922, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.10173636277931966;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3625970484093203;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3353788928259175;  // std dev = 0.032, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06735628218781702;  // std dev = 4.207, 183.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.384683268383451;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3813707841123136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.056185370582179046;  // std dev = 3.663, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.2943414833965653;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28062434594486896;  // std dev = 0.029, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36074662634071497;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3296286391008812;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27065538305699754;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.31426542885793673;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.048397319951942665;  // std dev = 1.036, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.11832275662912232;  // std dev = 0.940, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05903287687591033;  // std dev = 2.693, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.044718364632458686;  // std dev = 4.795, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24133366991417862;  // std dev = 0.097, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.23474702224192084;  // std dev = 0.000592, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2463374289635859;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6421085066380964;  // std dev = 0.719, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.19312919472313067;  // std dev = 0.782, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2399499438410996;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07294969339501027;  // std dev = 3.264, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18977085908905925;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19348793582557408;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43937237208309377;  // std dev = 0.737, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.13976401009127107;  // std dev = 0.216, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19521952502334394;  // std dev = 0.000518, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05023068028845738;  // std dev = 3.024, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.06526292086461938;  // std dev = 0.918, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12887291960857195;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1644682399512123;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.042330180170610084;  // std dev = 0.418, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.047270262433655744;  // std dev = 0.349, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.03234968736978411;  // std dev = 1.249, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16992704652266624;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.029943605861904598;  // std dev = 2.638, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return -1.9508328354757336E-4;  // std dev = 3.120, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15436876495865048;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1545601584999365;  // std dev = 0.012, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1446849166703722;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13560592859718948;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01976458651129048;  // std dev = 1.366, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14729307748761294;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.029922077445818075;  // std dev = 2.603, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
%   | | | else return 0.029106879249974214;  // std dev = 3.040, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.744', 'seconds']
Parameter learned model CLL:-0.177153 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.332, 17, 8], 'false,false,true,false': [5.661, 118, 44], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.98e-08, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.017, 0, 52], 'false,false,true,false': [0.026, 121, 0], 'false,false,false,true': [1.989, 19, 5], 'false,false,false,false': [3.211, 33, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.07, 26, 8], 'false,true,false,true': [0.27, 0, 48], 'false,true,false,false': [8.16e-08, 113, 0], 'false,false,true,true': [0.528, 1, 1], 'false,false,true,false': [3.442, 31, 20], 'false,false,false,true': [0.816, 2, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.928, 1, 9], 'true,false': [0.038, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.781, 2, 3], 'false,true,false': [4.254, 150, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.922, 14, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.027, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.032, 0, 9], 'false,true': [4.207, 127, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.663, 46, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.029, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.044, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.057, 0, 3], 'false,true': [1.036, 15, 3], 'false,false,true': [0.94, 1, 6], 'false,false,false,true': [2.693, 54, 23], 'false,false,false,false': [4.795, 113, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.097, 0, 12], 'true,true,true,false': [0.000592, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.719, 0, 36], 'true,false': [0.782, 105, 0], 'false,true': [0.024, 0, 5], 'false,false,true': [3.264, 73, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.019, 0, 5], 'true,false': [0.034, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.737, 0, 56], 'false,true,false': [0.216, 133, 0], 'false,false,true,true': [0.000518, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.024, 41, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.918, 1, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.015, 0, 4], 'false,true,true': [0.418, 5, 1], 'false,true,false,true': [0.349, 2, 2], 'false,true,false,false': [1.249, 56, 14], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [2.638, 78, 36], 'false,false,false,false': [3.12, 52, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.014, 0, 5], 'true,true,true,false': [0.012, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.027, 0, 4], 'false,true': [1.366, 57, 17], 'false,false,true': [0.017, 0, 5], 'false,false,false,true': [2.603, 75, 36], 'false,false,false,false': [3.04, 44, 20]}]
{'': [-2.5376526277146434e-16, 0.21512556249092815], 'false': [-1.4802973661668753e-16, 0.20850480109739508], 'false,false': [0.20074923503674763, 0.22959183673469347], 'false,false,false': [0.22997508009967915, 0.22222222222222224], 'false,false,true': [0.2176000000000001, 0.19783569577808352], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.21074496103003998], 'false': [7.401486830834377e-17, 0.20763722747721025], 'false,false': [0.2102453102220287, 0.200580002306023], 'false,false,true': [5.59923610068744e-06, 5.693454264748777e-06], 'false,false,false': [0.16492036401869492, 0.21484374999999956], 'false,true': [0.0, 0.0], 'true': [0.0, 9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [0.062222222222222, 0.16140312186566963], 'false': [0.13983991516702454, 0.22851597606126542], 'false,false': [0.22879115904430591, 0.22222222222222218], 'false,false,true': [0.13940106199771787, 0.2322834741062305], 'false,false,false': [0.22222222222222218, nan], 'false,true': [0.12608082400779075, 0.14212050091273182], 'false,true,false': [0.001516829814003214, 5.894989511284018e-17], 'true': [0.12244897959183675, -5.551115123125783e-17]}
{'': [0.06003306057494046, 0.12163422115274454], 'false': [0.09206010186978977, 0.21149321245849836], 'false,false': [5.454198817922418e-06, 0.2127603087784053], 'false,false,false': [0.1944358215825654, 0.21975425330812887], 'false,true': [0.10268173899153538, 0.08960592718316127], 'false,true,true': [0.0, 0.12198852882672488], 'true': [0.08608407615122822, 0.0002956180919782447], 'false,false,true': [0.0, 0.0]}
{'': [0.00029415976397373367, 0.12670492130799793], 'false': [0.09672495299670368, 0.2061973308914189], 'false,false': [2.743138011629398e-06, 0.20938923718206026], 'false,false,false': [0.20644659065007048, 0.24999999999999997], 'true': [0.00014587568501862603, 0.0001119583816367885], 'true,true': [0.00014587568501862603, nan], 'false,false,true': [0.0, 0.0]}
{'': [0.0011478427948328682, 0.12418520020676135], 'false': [0.059596863395226435, 0.1282830095869008], 'false,false': [0.12621547810365902, 0.12820744885299887], 'false,false,false': [0.09419658650453785, 0.14461126335807978], 'true': [0.0009027471926551987, 0.001293187386833832], 'true,false': [0.001353625797033603, 0.0010986194514664427], 'true,false,true': [0.0009683291298584334, 0.0], 'true,true': [0.00013612222726479736, 0.0]}
{'': [0.13141648317449428, 0.09460345414756306], 'true': [0.043768173868506344, 0.005825985206572143], 'false': [0.00011760690683786379, 0.09771446190053888], 'false,false': [0.09771446190053888, nan], 'true,true': [0.0006705197191387054, 0.018103924128383166], 'true,true,false': [0.0, 0.014373439398277387], 'true,true,true': [0.0007760461210672143, 1.7508394609122568e-07]}
{'': [0.00011344496726957618, 0.09133887933165004], 'false': [0.07304978595342818, 0.14580935613584498], 'false,false': [1.3391750391944512e-07, 0.14992262875036727], 'false,false,false': [0.14992262875036727, nan], 'false,true': [0.009689794543789678, 0.0003502106560874099], 'false,true,true': [nan, 0.009689794543789645], 'true': [7.470443534288718e-05, 0.00013003296376906052], 'false,false,true': [1.3391750391944512e-07, nan]}
{'': [0.058118037168248336, 0.06963637801300104], 'false': [0.02351427472625088, 0.08817570994281304], 'false,false': [7.018710205227707e-05, 0.08994210311749558], 'false,false,false': [0.06102911203116163, 0.1351642807971571], 'true': [0.08422725354474021, 0.00024635217309651735], 'false,true': [0.029110708994679074, 0.02304520674956528], 'false,true,false': [0.03043589872285313, 0.022280214661154117], 'true,false': [0.0, 5.4534850311604294e-05]}
{'': [0.00014608157370114245, 0.0712304923385052], 'false': [0.025200213033691434, 0.08934623602131385], 'false,false': [5.5607642219571154e-05, 0.09151278505223526], 'false,false,false': [0.061042174432491304, 0.14435982883248832], 'true': [5.009204478459983e-05, 0.00018244678324233835], 'true,true': [4.358062828350995e-05, 0.0], 'true,true,true': [4.091148079447826e-05, 4.8006312752109835e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 57.093
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.14386322081379807;  // std dev = 2.070, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2909847559950335;  // std dev = 4.056, 67.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=29 */
%   | | | else return 0.15179972875030454;  // std dev = 5.112, 126.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=37 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.830422906701271;  // std dev = 0.071, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16250883447986916;  // std dev = 0.213, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.07737198164484453;  // std dev = 3.247, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | | else return 0.3001861251024866;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.488699770079618;  // std dev = 0.249, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11778197286220464;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.15661572160744708;  // std dev = 1.866, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6703619338642933;  // std dev = 0.260, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14435006914928641;  // std dev = 0.144, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.4071572259573255;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.14893129864923096;  // std dev = 2.067, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( location(A, I) )
%   | | | then return 0.05094933373284509;  // std dev = 2.687, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.2071572259573255;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43381023169310673;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.26714356502644004;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3898401280059779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.27659245007385624;  // std dev = 0.770, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.030788146440894417;  // std dev = 1.894, 58.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=9 */
%   | | | else return 0.0607713157049771;  // std dev = 3.735, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5305528851627719;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.037218426076870495;  // std dev = 1.774, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.13622892279451376;  // std dev = 3.240, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34695330539616387;  // std dev = 0.042, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3444249019950568;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F), phenotype(A, G) )
%   | | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5192735633886681;  // std dev = 0.222, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14020262645672102;  // std dev = 0.115, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.03428369837119441;  // std dev = 0.830, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.04741682972272875;  // std dev = 3.392, 127.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=36 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3994219797205564;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.0019532983146391663;  // std dev = 1.747, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.12418575199005903;  // std dev = 3.223, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26002837729695133;  // std dev = 0.000596, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.06164280523563892;  // std dev = 0.603, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.29146526780702225;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3308880314735097;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10554518964407232;  // std dev = 0.014, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( enzyme(A, I), interaction(H, H) )
%   | | | then return 0.10195986280113398;  // std dev = 1.559, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.01194909745973333;  // std dev = 1.877, 43.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=9 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.20273619043683572;  // std dev = 2.424, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.07422136187542691;  // std dev = 3.839, 138.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2417953311987169;  // std dev = 0.044, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2625787717239465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5870035856014348;  // std dev = 1.135, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.18862829362261296;  // std dev = 0.079, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2655713379878747;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3831790587009148;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1491088588427545;  // std dev = 0.062, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.02048257677318582;  // std dev = 2.609, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return 0.07902268885054743;  // std dev = 1.324, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1753901414415512;  // std dev = 0.000401, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.20750557971444256;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.2503409847297622;  // std dev = 1.171, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | | else return 0.442416137326177;  // std dev = 0.495, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.09913822617522768;  // std dev = 0.122, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return -0.14599936353071777;  // std dev = 0.255, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20419871153810193;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.10574874648199921;  // std dev = 1.430, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.011072690712120638;  // std dev = 2.778, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15644549440366592;  // std dev = 0.007, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18015444805322134;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), interaction(I, I) )
%   | | | then return -0.07513980870858529;  // std dev = 0.019, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.05574914264743695;  // std dev = 0.587, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07714981793444195;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.030766764316652668;  // std dev = 1.083, 47.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=10 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.18395885195930112;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.0045572651037851806;  // std dev = 2.293, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.04890714409041553;  // std dev = 3.138, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.13845125701432445;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1559482846174229;  // std dev = 0.070, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(A, A), complex(A, H) )
%   | | | then return -0.20265756280262942;  // std dev = 0.626, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.033813435226904075;  // std dev = 0.782, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07841899838807218;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.045887664552557265;  // std dev = 0.930, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15795248254026015;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.08073462733405379;  // std dev = 1.523, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
%   | | | else return 0.0018609432502427318;  // std dev = 3.577, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.168', 'seconds']
Refined model CLL: -0.175244


******************************************
Best model found
******************************************
Results 

CLL : -0.193313 

AUC ROC : 0.985536 

AUC PR : 0.253074 

Precision : 0.151276 

Recall : 0.898917 

F1 : 0.25897 

Total Learning Time : 57.093 

Total Inference Time : 11.713283061981201 

Total revision time: 132.01606122207642
Best scored revision CLL: -0.175244


Results 

CLL : -0.193313 

AUC ROC : 0.985536 

AUC PR : 0.253074 

Precision : 0.151276 

Recall : 0.898917 

F1 : 0.25897 

Total Learning Time : 132.04772750091553 

Total Inference Time : 11.713283061981201 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 52.711
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.22607346340139842;  // std dev = 4.965, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.08891816586874314;  // std dev = 2.631, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7306312329571312;  // std dev = 2.316, 58.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=52 */
%   | | | else return -0.16554293701837874;  // std dev = 0.124, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12170657153749113;  // std dev = 1.894, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.11929620359780499;  // std dev = 2.245, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5588443971225469;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3885860069349682;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.03366306098916334;  // std dev = 2.870, 72.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6229059672047604;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1493803337777527;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6472000179897625;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10335947334820478;  // std dev = 2.479, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.051131374391318984;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41561741621618253;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4528064236800813;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.547039129566147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6119175865338463;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.03441968466833134;  // std dev = 4.469, 206.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39536337828074175;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5297194709463271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.04702705114397491;  // std dev = 1.957, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.025876810830759295;  // std dev = 2.306, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3152434045783404;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.3647160187928015;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05651560833936637;  // std dev = 4.527, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30572423310775354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3522341048076124;  // std dev = 0.066, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10747607701721504;  // std dev = 2.483, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.060686492737516626;  // std dev = 1.476, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2535695931359522;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2969011546260634;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24491668980438897;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.03552212951434164;  // std dev = 0.891, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.10531033775977783;  // std dev = 1.004, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.050364740062585414;  // std dev = 1.222, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29356568806862543;  // std dev = 0.053, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.17328491427228015;  // std dev = 1.999, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.05895034075083807;  // std dev = 4.632, 163.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2557464767301384;  // std dev = 0.240, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23868087398668023;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23156882154284775;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5598012067702005;  // std dev = 1.353, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.16661655740769943;  // std dev = 0.303, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.0032238245258461584;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05695907149471465;  // std dev = 3.415, 103.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17127135049408226;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2001212702930428;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4073008954675917;  // std dev = 1.933, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.14459725848853847;  // std dev = 0.246, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.16665699632921094;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2142174624168245;  // std dev = 0.048, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.07578088744428832;  // std dev = 2.441, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15717797230643898;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.20184726593574664;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.08559018329392493;  // std dev = 0.567, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09537281208680402;  // std dev = 0.288, 30.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2472252704327352;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03386958395731227;  // std dev = 1.672, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21441151313165618;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.05433295116506946;  // std dev = 2.789, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.06359327720356621;  // std dev = 2.420, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1303624759111044;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1721433388237822;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12732624543360893;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.02330352172047127;  // std dev = 0.521, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.04702038876154682;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.013056582879131801;  // std dev = 1.742, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1805335334414154;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.038762403557672014;  // std dev = 2.790, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return 0.050312733360925545;  // std dev = 2.414, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.196', 'seconds']
Parameter learned model CLL:-0.18488 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [4.965, 67, 39], 'false,false,false,true': [2.631, 30, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [2.316, 6, 52], 'false,false,true,false': [0.124, 156, 0], 'false,false,false,true': [1.894, 13, 5], 'false,false,false,false': [2.245, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.869, 1, 4], 'false,true,true': [2.87, 58, 14], 'false,true,false,true': [1.673, 3, 42], 'false,true,false,false': [0.0, 95, 0], 'false,false,true,true': [0.225, 0, 3], 'false,false,true,false': [2.479, 23, 9], 'false,false,false,true': [1.5, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.123, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.198, 0, 6], 'false,true,false': [4.469, 157, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.957, 16, 5], 'false,false,false,false': [2.306, 25, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.016, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.079, 0, 6], 'false,true': [4.527, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.066, 0, 2], 'false,false,false,true': [2.483, 21, 9], 'false,false,false,false': [1.476, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.01, 0, 5], 'true,true,false': [0.124, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.891, 1, 3], 'true,false,false': [1.004, 1, 4], 'false,true': [1.222, 26, 5], 'false,false,true': [0.053, 0, 5], 'false,false,false,true': [1.999, 17, 13], 'false,false,false,false': [4.632, 116, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.24, 0, 13], 'true,true,true,false': [0.071, 0, 3], 'true,true,false,true': [0.039, 0, 3], 'true,true,false,false': [1.353, 2, 33], 'true,false': [0.303, 87, 0], 'false,true': [0.857, 1, 3], 'false,false,true': [3.415, 72, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.12, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.933, 4, 56], 'false,true,false': [0.246, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.048, 0, 2], 'false,false,false,true': [2.441, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.087, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.567, 1, 5], 'false,true,true': [0.288, 29, 1], 'false,true,false,true': [0.182, 0, 6], 'false,true,false,false': [1.672, 59, 17], 'false,false,true': [0.023, 0, 3], 'false,false,false,true': [2.789, 60, 31], 'false,false,false,false': [2.42, 26, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.03, 0, 8], 'true,true,true,false': [0.831, 1, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.521, 1, 2], 'true,false': [0.792, 1, 3], 'false,true': [1.742, 64, 24], 'false,false,true': [0.02, 0, 3], 'false,false,false,true': [2.79, 63, 31], 'false,false,false,false': [2.414, 26, 12]}]
{'': [0.05859374999999978, 0.21701622795551911], 'false': [-2.5376526277146434e-16, 0.208504801097395], 'false,false': [0.2123183391003467, 0.19281663516067998], 'false,false,true': [0.16186523437499947, 0.23255606977572155], 'false,false,false': [0.17751479289940844, 0.24489795918367335], 'true': [-1.4802973661668753e-16, 0.18750000000000006], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.0003624995143289548, 0.19234773286912882], 'false': [-6.344131569286608e-17, 0.1868972179861102], 'false,false': [0.1838167258408254, 0.20069128214471832], 'false,false,false': [0.19933703599025387, 0.20166390733581976], 'false,false,true': [0.09249818372887678, 9.82471519678372e-05], 'true': [0.0, 0.00044937956321764653], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.0536709218225227, 0.1501261123658418], 'false': [0.13890974357548175, 0.19883132297243206], 'false,false': [0.20022737392670414, 0.1874840210514205], 'false,false,true': [0.016866813288004916, 0.19206635180120848], 'false,false,false': [0.1874840210514205, nan], 'false,true': [0.11436276442834825, 0.15009053180398016], 'false,true,false': [0.06223058963151607, -1.4023869784738819e-16], 'true': [0.0002941318011920576, 0.15117066526182987]}
{'': [0.0013400241990223567, 0.1183611137452713], 'false': [0.10424103382670234, 0.17206115306856565], 'false,false': [0.004011457696969645, 0.17274761266927646], 'false,false,false': [0.18244846200468962, 0.16620418527458275], 'false,true': [0.00609337599521252, 0.09696491011567791], 'false,true,true': [0.0, 0.006507622349865534], 'false,false,true': [0.0, 0.0], 'true': [2.2074591887003927e-06, 0.0016786931151182324]}
{'': [0.0010167165118565376, 0.11989480763215023], 'false': [0.10299014943899255, 0.19388223546616012], 'false,false': [0.001922816147144309, 0.20394137879277946], 'false,false,false': [0.2055241963189896, 0.19802270235758945], 'false,false,true': [0.0, 0.002163168165537341], 'true': [2.6698424236427777e-05, 0.0010332199089587528], 'true,true': [2.6698424236427777e-05, nan]}
{'': [0.11113820128821092, 0.12217808444902677], 'false': [0.04815031399118633, 0.13138941541111315], 'false,false': [0.0005557165721255308, 0.13359149188127925], 'false,false,false': [0.13323807605768956, 0.13162455928724232], 'true': [0.0023608279082459466, 0.1840049321323573], 'true,false': [0.16581772516639903, 0.2018026746914768], 'true,false,true': [0.0, 0.1985029400821863], 'true,true': [2.1940724581681615e-05, 0.0050854580761209855]}
{'': [0.11252567796640175, 0.11594095776965094], 'false': [0.18374965590155476, 0.11319966721267982], 'false,false': [0.11319966721267982, nan], 'true': [0.05711570808642463, 0.0010541048653828658], 'true,true': [0.003943218415408178, 0.056051381060489854], 'true,true,false': [0.0004969472218173862, 0.052307676619019514], 'true,true,true': [0.004415326671005005, 0.0016607877019281143]}
{'': [0.0011186354171578428, 0.09457446715494838], 'false': [0.08321918928180476, 0.14640376579339], 'false,false': [0.0012836508324704555, 0.1567611087032143], 'false,false,false': [0.1567611087032143, nan], 'false,true': [0.06224588821619325, 0.0004357577864234989], 'false,true,true': [nan, 0.06224588821619322], 'false,false,true': [0.0, 0.0011714769372153377], 'true': [0.0, 0.0013034604998462137]}
{'': [0.020780037188966635, 0.07281431762443401], 'false': [0.031251797772078115, 0.10385606570780359], 'false,false': [0.00017651199301329154, 0.10570450795632129], 'false,false,false': [0.08547013950074929, 0.15410000269695423], 'false,true': [0.002773222631170589, 0.03986659062529815], 'false,true,false': [0.0055264084009306975, 0.03679612224072635], 'true': [0.000755897232804889, 0.04760785718076462], 'true,false': [0.0, 0.0536116844350272]}
{'': [0.09646173027582038, 0.07572061196456639], 'true': [0.07883058602535614, 0.15674689239234238], 'true,true': [0.08102018368380098, 0.0719858666360321], 'true,true,true': [0.0001108072438734467, 0.23022596234900106], 'false': [0.034477895289160426, 0.10126713535101353], 'false,false': [0.0001356169973995384, 0.10313963884794344], 'false,false,false': [0.08278919426937383, 0.15338520810380105], 'true,true,false': [0.0, 0.09030882382648635]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.661
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.06153876560798695;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.19801821614526297;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.636140078877621;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7561337978940017;  // std dev = 0.052, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5061337978940017;  // std dev = 0.910, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.797279961236813;  // std dev = 1.391, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.1573489197886055;  // std dev = 0.184, 129.000 (wgt'ed) examples reached here.  /* #neg=129 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.24503261106968707;  // std dev = 1.552, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.0504831102716593;  // std dev = 2.511, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4141181788941086;  // std dev = 0.362, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else if ( enzyme(A, E) )
%   | | then return -0.17416198226350138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.32583801773649856;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), interaction(G, A) )
%   | | then return 0.043999615866960565;  // std dev = 0.338, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6675497168959468;  // std dev = 1.001, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14227443836985137;  // std dev = 0.068, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.6200556543803893;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.02186358695866638;  // std dev = 2.370, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return 0.37756184020815176;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.48146272397304024;  // std dev = 0.039, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5353702349239851;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39131771609848776;  // std dev = 0.990, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.12075938188321488;  // std dev = 0.075, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.07523300225205512;  // std dev = 4.195, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.42795790623204155;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5537074036995884;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.21270537367528586;  // std dev = 1.518, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.04508850470551584;  // std dev = 2.461, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3652584472164651;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then if ( interaction(E, F), complex(F, G) )
%   | | | then return -0.07952819668018603;  // std dev = 0.613, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | | else return 0.04367457962375849;  // std dev = 1.214, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.1270115934730652;  // std dev = 1.580, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return 0.07263676415594936;  // std dev = 3.712, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.3045686244354566;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3839099080806401;  // std dev = 0.046, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.0239006756574253;  // std dev = 2.209, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.27330504943356865;  // std dev = 1.740, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2815060661024583;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3368991405288846;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.045439009589289654;  // std dev = 0.498, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.10094319696119135;  // std dev = 0.018, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, I) )
%   | | | then return -0.05775253939616827;  // std dev = 0.661, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.10903708297631146;  // std dev = 0.764, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.3149778215794524;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.040419927964320645;  // std dev = 3.970, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
%   | | | else return 0.12119944858703047;  // std dev = 2.898, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4480777665670646;  // std dev = 0.225, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | else return -0.18789186778570457;  // std dev = 0.108, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return 0.3667374495787701;  // std dev = 0.668, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23044634275535095;  // std dev = 0.818, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03150887727712132;  // std dev = 1.496, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.12153120558264166;  // std dev = 0.838, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.1279210225947077;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.15273418130440602;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.042662961535250836;  // std dev = 2.375, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.14578555477186272;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.11877134372871356;  // std dev = 0.831, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.10413932584616221;  // std dev = 0.250, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.4022526462013084;  // std dev = 0.222, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14117303718768526;  // std dev = 0.041, 127.000 (wgt'ed) examples reached here.  /* #neg=127 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.12839986261068093;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.12646503386344302;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.002579849104654172;  // std dev = 2.135, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.2608926832917197;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13261198195810597;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1607712651057751;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.18849123799789125;  // std dev = 0.077, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.26847792246518315;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0339265235395288;  // std dev = 1.536, 82.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=16 */
%   | | else return 0.1225160194056748;  // std dev = 0.485, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24808140886935795;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.01985761576626646;  // std dev = 2.766, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return 0.04248065481375479;  // std dev = 2.467, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.12384752045075129;  // std dev = 0.015, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.12625059241472647;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( enzyme(A, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.03504173487905909;  // std dev = 0.738, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.006829928273144817;  // std dev = 0.837, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return -0.08082220658277488;  // std dev = 0.892, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return -0.009146710140004389;  // std dev = 1.265, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.20486060225834288;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L), complex(A, M) )
%   | | | then return 0.0954330540241458;  // std dev = 1.624, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.01358802835519232;  // std dev = 3.234, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '44.363', 'seconds']
Refined model CLL: -0.186741


******************************************
Best model found
******************************************
Results 

CLL : -0.195828 

AUC ROC : 0.983138 

AUC PR : 0.207517 

Precision : 0.146261 

Recall : 0.780919 

F1 : 0.246377 

Total Learning Time : 7.661 

Total Inference Time : 7.8721349239349365 

Total revision time: 76.43672682952881
Best scored revision CLL: -0.18488


Results 

CLL : -0.195828 

AUC ROC : 0.983138 

AUC PR : 0.207517 

Precision : 0.146261 

Recall : 0.780919 

F1 : 0.246377 

Total Learning Time : 76.46839310836792 

Total Inference Time : 7.8721349239349365 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.314
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20338703033760755;  // std dev = 7.547, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15229918541871681;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | | else return 0.17794969719575468;  // std dev = 5.886, 153.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16390142835312302;  // std dev = 4.743, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.1579909914260885;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12398337497740607;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.08170910646490273;  // std dev = 7.140, 242.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14112517549019887;  // std dev = 7.369, 231.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07440964400181482;  // std dev = 7.602, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6934533241767094;  // std dev = 0.988, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.27892280412021714;  // std dev = 0.014, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.06788899376608364;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.03150000128524169;  // std dev = 4.707, 104.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05316751751392073;  // std dev = 3.759, 99.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=35 */
%   | | | else return 0.02812501357620419;  // std dev = 5.983, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04049003907001366;  // std dev = 6.977, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014957296396175166;  // std dev = 7.071, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.045', 'seconds']
Parameter learned model CLL:-0.332602 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 72, 34], 'false,false,false,false': [5.886, 100, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.743, 63, 35], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [7.14, 169, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.369, 144, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.602, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.988, 1, 35], 'true,false': [0.014, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [4.707, 72, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.759, 64, 35], 'false,false,false,false': [5.983, 115, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.977, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.071, 188, 87]}]
{'': [nan, 0.22604875283446801], 'false': [nan, 0.22604875283446793], 'false,false': [nan, 0.22604875283446801], 'false,false,false': [nan, 0.22604875283446793]}
{'': [nan, 0.22307359759097356], 'false': [nan, 0.22307359759097228], 'false,false': [nan, 0.22307359759097356], 'false,false,false': [0.21787112851548468, 0.226408646247171]}
{'': [nan, 0.22858955361703132], 'false': [nan, 0.22858955361703132], 'false,false': [nan, 0.22858955361703226], 'false,false,false': [0.22957240546548155, 0.227924829808167]}
{'': [nan, 0.21293875865120568], 'false': [nan, 0.21293875865120568], 'false,false': [nan, 0.21293875865120562], 'false,false,false': [0.22486615110053568, 0.21065909160250143]}
{'': [nan, 0.23508608257961075], 'false': [nan, 0.23508608257961075], 'false,false': [nan, 0.2350860825796105], 'false,false,false': [nan, 0.2350860825796105]}
{'': [nan, 0.22313758546740395], 'false': [nan, 0.22313758546740395], 'false,false': [nan, 0.22313758546740384], 'false,false,false': [nan, 0.22313758546740428]}
{'': [0.22444650988508033, 0.2173253496763175], 'true': [0.027117272621756092, 2.780575951260056e-06], 'false': [nan, 0.2173253496763175], 'false,false': [nan, 0.2173253496763175], 'false,false,false': [0.2240735420856078, 0.2130177514792904], 'true,true': [nan, 0.027117272621756092], 'true,true,false': [nan, 0.027117272621756092]}
{'': [nan, 0.1878317131303277], 'false': [nan, 0.1878317131303277], 'false,false': [nan, 0.18783171313032715], 'false,false,false': [0.14270950224581677, 0.2143474037945097]}
{'': [nan, 0.18722805027982958], 'false': [nan, 0.18722805027983136], 'false,false': [nan, 0.18722805027983136], 'false,false,false': [nan, 0.18722805027983136]}
{'': [nan, 0.18181891255834362], 'false': [nan, 0.18181891255834362], 'false,false': [nan, 0.1818189125583428], 'false,false,false': [nan, 0.1818189125583428]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 44.062
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, C) )
%   | | | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, H), location(H, D) )
%   | | | then return 0.007085105312278315;  // std dev = 3.452, 94.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=14 */
%   | | | else return 0.18354576049633656;  // std dev = 5.259, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   else if ( enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.7755839254023056;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, G), interaction(G, A) )
%   | | | then return -0.14271572056253115;  // std dev = 5.27e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.2301055414977364;  // std dev = 2.257, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7443356231566909;  // std dev = 0.068, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( interaction(I, K), enzyme(A, L) )
%   | | | then return 0.1804050685164066;  // std dev = 1.587, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.059048558491014376;  // std dev = 3.181, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.4284020233682056;  // std dev = 1.098, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.16916154246079884;  // std dev = 5.295, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.6947414065236605;  // std dev = 0.246, 41.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=39 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return 0.679663850012797;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19137433576283236;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.17282810167165047;  // std dev = 0.281, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5826846418781821;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5863904634516143;  // std dev = 0.866, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.09977971250872876;  // std dev = 4.624, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06895170818051435;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.5581749925176801;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(D, F) )
%   | | then return 0.20445521713350065;  // std dev = 0.473, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.40353182921130304;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6126958717627732;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.6282032247132978;  // std dev = 2.329, 74.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=68 */
%   | | | else return -0.11009431794053111;  // std dev = 1.578, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else return -0.17432199857276803;  // std dev = 0.544, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.08722643739120806;  // std dev = 0.838, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.37353634596223984;  // std dev = 0.756, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(C, G) )
%   | | | then return 0.3313803237742696;  // std dev = 0.152, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.10936649272269217;  // std dev = 0.566, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.3732502434030532;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4837586088670225;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, C) )
%   | | then return -0.13729475471105243;  // std dev = 0.272, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( location(A, H), location(C, I) )
%   | | | then return 0.09593631794067214;  // std dev = 4.730, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
%   | | | else return 0.02041063668135219;  // std dev = 1.493, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( phenotype(A, J) )
%   | then return 0.38088497182671843;  // std dev = 0.571, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.1952319257188419;  // std dev = 0.855, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(C, C) )
%   | then return 0.28384901808484136;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return -0.032506980498494056;  // std dev = 0.239, 57.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=12 */
%   | | else if ( complex(D, F), interaction(C, C) )
%   | | | then return 0.1958233887009329;  // std dev = 1.767, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
%   | | | else return 0.07747602922500908;  // std dev = 4.124, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4647644544925143;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15702073171697073;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return 0.022762793466269027;  // std dev = 0.733, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.03937239381380243;  // std dev = 1.313, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.1867984219537988;  // std dev = 0.804, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42578349486290373;  // std dev = 0.176, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.16179496055142903;  // std dev = 0.056, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.02389283192970637;  // std dev = 1.174, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | | | else return -0.12813298601397016;  // std dev = 0.219, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, H), interaction(E, E) )
%   | | | then return -0.026329945688411;  // std dev = 1.133, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.07336847143703994;  // std dev = 3.792, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | else if ( interaction(A, I) )
%   | | then return -0.1497737484746105;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -0.09183410339797891;  // std dev = 0.581, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.033994985364993;  // std dev = 0.716, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), location(A, F) )
%   | then return 0.0011634081481291696;  // std dev = 0.276, 143.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=43 */
%   | else if ( complex(A, D) )
%   | | then return -0.016504921184460425;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.05428050019114682;  // std dev = 0.579, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3464697331807346;  // std dev = 0.692, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( location(A, H) )
%   | then if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( interaction(A, K), location(I, H) )
%   | | | then return 0.10164586241256642;  // std dev = 0.969, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.0133285484705133;  // std dev = 1.598, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | else if ( interaction(L, A), location(L, H) )
%   | | | then return 0.05873615854174097;  // std dev = 2.180, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.16615600944725342;  // std dev = 1.431, 16.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=9 */
%   | else return 0.4057845351009284;  // std dev = 0.782, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.21042917991749427;  // std dev = 0.224, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return 0.46853078822489147;  // std dev = 1.456, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.18897069395023341;  // std dev = 0.325, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.33518690773565435;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), location(H, C) )
%   | | then return -0.12362993263211741;  // std dev = 0.272, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   | | else return -0.20279150707707463;  // std dev = 0.287, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return -0.028754471192395797;  // std dev = 0.588, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return -0.16743293086638403;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.1653325381266142;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.18013595357106343;  // std dev = 0.120, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(C, F), enzyme(C, G) )
%   | | then return -0.08005808031514827;  // std dev = 0.113, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else return 0.026629186380554937;  // std dev = 0.255, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J), enzyme(I, J) )
%   | | | then return 0.37867463686943076;  // std dev = 0.362, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.10360563058113839;  // std dev = 2.804, 82.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=50 */
%   | | else return -0.152373482595073;  // std dev = 0.050, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return -0.1268180632527497;  // std dev = 0.201, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.02563927685703349;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.042494219332991544;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '5.705', 'seconds']
Refined model CLL: -0.182642


******************************************
Best model found
******************************************
Results 

CLL : -0.192483 

AUC ROC : 0.992654 

AUC PR : 0.518084 

Precision : 0.324427 

Recall : 0.904255 

F1 : 0.477528 

Total Learning Time : 44.062 

Total Inference Time : 36.562658071517944 

Total revision time: 88.33266313171387
Best scored revision CLL: -0.182642


Results 

CLL : -0.192483 

AUC ROC : 0.992654 

AUC PR : 0.518084 

Precision : 0.324427 

Recall : 0.904255 

F1 : 0.477528 

Total Learning Time : 88.42196519470215 

Total Inference Time : 36.562658071517944 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.528
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.219260046210624;  // std dev = 8.151, 288.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.24703080693922855;  // std dev = 4.384, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
%   | | | else return 0.13403031799480514;  // std dev = 7.026, 233.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11463152174277416;  // std dev = 5.319, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.15207665984939311;  // std dev = 6.404, 181.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12484236431706701;  // std dev = 2.787, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.13156722860874998;  // std dev = 7.736, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10026936466370215;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06555347427248859;  // std dev = 8.377, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7316567354507697;  // std dev = 0.061, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27033262776806427;  // std dev = 0.099, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0636327860108744;  // std dev = 3.678, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
%   | | | else return 0.058641156314099885;  // std dev = 5.312, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06252453771538584;  // std dev = 4.049, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.09248484706276872;  // std dev = 6.242, 165.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016315488214667946;  // std dev = 7.758, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03821213082136026;  // std dev = 7.582, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.951', 'seconds']
Parameter learned model CLL:-0.34655 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.151, 184, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 46, 33], 'false,false,false,false': [7.026, 162, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.319, 91, 41], 'false,false,false,false': [6.404, 118, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.787, 22, 12], 'false,false,false,false': [7.736, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.377, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.061, 0, 41], 'true,false': [0.099, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.678, 38, 21], 'false,false,false,false': [5.312, 86, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.049, 73, 41], 'false,false,false,false': [6.242, 102, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.582, 192, 104]}]
{'': [nan, 0.23070987654321223], 'false': [nan, 0.23070987654321037], 'false,false': [nan, 0.23070987654321223], 'false,false,false': [nan, 0.23070987654321037]}
{'': [nan, 0.2222222222222203], 'false': [nan, 0.22222222222222102], 'false,false': [nan, 0.2222222222222203], 'false,false,false': [0.24323025156225, 0.2118661238924992]}
{'': [nan, 0.2217695421459275], 'false': [nan, 0.2217695421459275], 'false,false': [nan, 0.22176954214593], 'false,false,false': [0.21431460169416475, 0.22661497715945247]}
{'': [nan, 0.22686206406334491], 'false': [nan, 0.22686206406334491], 'false,false': [nan, 0.22686206406334442], 'false,false,false': [0.2283737024221454, 0.2266622236032321]}
{'': [nan, 0.22508802217999416], 'false': [nan, 0.22508802217999416], 'false,false': [nan, 0.2250880221799939], 'false,false,false': [nan, 0.2250880221799939]}
{'': [nan, 0.22064707978465625], 'false': [nan, 0.22064707978465625], 'false,false': [nan, 0.2206470797846561], 'false,false,false': [nan, 0.22064707978465622]}
{'': [0.2132993765520754, 0.22323625656129498], 'false': [nan, 0.22323625656129498], 'false,false': [nan, 0.22323625656129498], 'false,false,false': [0.22924446997989067, 0.22045898437500108], 'true': [9.19111727610508e-05, 0.00010533391749938368], 'true,true': [nan, 9.19111727610508e-05], 'true,true,false': [nan, 9.19111727610508e-05]}
{'': [nan, 0.1986405094190391], 'false': [nan, 0.1986405094190391], 'false,false': [nan, 0.19864050941903874], 'false,false,false': [0.14379656736625973, 0.23616591804658166]}
{'': [nan, 0.18866674916076212], 'false': [nan, 0.18866674916076107], 'false,false': [nan, 0.18866674916076107], 'false,false,false': [nan, 0.18866674916076107]}
{'': [nan, 0.1941927504695885], 'false': [nan, 0.1941927504695885], 'false,false': [nan, 0.19419275046958853], 'false,false,false': [nan, 0.19419275046958853]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 40.951
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7993254056877476;  // std dev = 0.235, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.8081489350995122;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.14185106490048768;  // std dev = 4.71e-08, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | | else return 0.11211718906776634;  // std dev = 3.455, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1418510649004877;  // std dev = 2.58e-08, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.22400259363609637;  // std dev = 4.362, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6061911912464265;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.0964533734866121;  // std dev = 0.418, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(A, G), enzyme(A, H) )
%   | | then if ( interaction(A, I), interaction(G, I) )
%   | | | then return 0.11744271825032322;  // std dev = 1.402, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.5106121926241345;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7687759694834403;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.11906361201213887;  // std dev = 4.242, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7311911912464263;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return -0.0039515995941490694;  // std dev = 1.219, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.26180439799119365;  // std dev = 3.078, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, D) )
%   | | then return 0.6376250458111427;  // std dev = 0.204, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( phenotype(C, F), phenotype(A, G) )
%   | | | then return -0.18873428021607722;  // std dev = 0.075, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.5741505496465662;  // std dev = 1.153, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14327179128164907;  // std dev = 0.217, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(H, C), interaction(H, A) )
%   | | | then return 0.042265282767422675;  // std dev = 3.656, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | | else return 0.12400388040080196;  // std dev = 5.193, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.8120823481150579;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.19750951772068803;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.08529885919362812;  // std dev = 0.590, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.6067458128899628;  // std dev = 2.144, 68.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=63 */
%   | | | else return -0.1702371661663614;  // std dev = 0.168, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.1959113267426061;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return -0.1732708059030831;  // std dev = 0.055, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( enzyme(A, G), location(A, H) )
%   | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.6699148090997683;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.20169899308691921;  // std dev = 0.258, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5225929297503493;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.02555486909791563;  // std dev = 2.311, 45.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=8 */
%   | | | else return 0.12711434023009904;  // std dev = 3.045, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.28685879578497425;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.0820242586698473;  // std dev = 0.853, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.5466768703700802;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return -0.03820297812484277;  // std dev = 0.252, 53.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5561722321269147;  // std dev = 0.810, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.16809877849115867;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.29224396521618906;  // std dev = 0.259, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return -0.026178263155092415;  // std dev = 1.739, 43.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=8 */
%   | | | else return 0.07477037178240233;  // std dev = 5.193, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3442617195285005;  // std dev = 0.121, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.46469401567261653;  // std dev = 0.116, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.13601392831320394;  // std dev = 0.262, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G), interaction(A, H) )
%   | | then return 0.08514626759914241;  // std dev = 0.568, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3834842461560653;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.40927402881146085;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.015093191794457622;  // std dev = 3.131, 89.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=18 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.008163540334788092;  // std dev = 2.188, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.07941623498507588;  // std dev = 3.595, 76.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.20350705791255974;  // std dev = 0.125, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3851558336047946;  // std dev = 0.098, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.11798159827920036;  // std dev = 0.253, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), interaction(H, G) )
%   | | | then return 0.5607673402251424;  // std dev = 0.810, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | | else return 0.052842290378987224;  // std dev = 0.818, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.17635761034443326;  // std dev = 0.303, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, A) )
%   | | then return -0.051404474872406444;  // std dev = 0.272, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.10490295603486333;  // std dev = 1.406, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03973283458700465;  // std dev = 3.300, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1812169568350537;  // std dev = 0.233, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(A, D) )
%   | | | then return -0.03434378536987298;  // std dev = 0.998, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.08457013952867587;  // std dev = 2.020, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return 0.03811676512406883;  // std dev = 0.948, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return -0.07183815378307927;  // std dev = 1.751, 39.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=6 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2017274733414468;  // std dev = 2.988, 83.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=52 */
%   | | | else return -0.150480738459271;  // std dev = 0.468, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( phenotype(A, K) )
%   | | | then return -0.0014844025189525156;  // std dev = 0.737, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.506508383114934;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.16783889504682412;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return -0.023645819148424597;  // std dev = 0.246, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | | else if ( location(A, H) )
%   | | | then return 0.025479061435395314;  // std dev = 3.287, 114.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=37 */
%   | | | else return 0.32965862621771747;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, I), interaction(J, A) )
%   | then return 0.17992887315319567;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, L), location(A, M) )
%   | | | then return -0.020864987489331098;  // std dev = 1.073, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.11765017038441844;  // std dev = 1.287, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( complex(A, N), enzyme(A, P) )
%   | | | then return -0.1506514318706392;  // std dev = 0.538, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.041564176967712245;  // std dev = 1.766, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then return 0.011700252023842395;  // std dev = 0.306, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.1418999760964838;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.24328919552298273;  // std dev = 0.087, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.3315829683663297;  // std dev = 2.397, 83.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=76 */
%   | | | else return -0.13060266153430714;  // std dev = 1.303, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else return -0.13784763097962396;  // std dev = 0.061, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( phenotype(K, L) )
%   | | | then return -0.1618286623242398;  // std dev = 1.464, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.017752991327324625;  // std dev = 0.616, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.06930659962376924;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '54.456', 'seconds']
Refined model CLL: -0.181627


******************************************
Best model found
******************************************
Results 

CLL : -0.180811 

AUC ROC : 0.991841 

AUC PR : 0.626272 

Precision : 0.455752 

Recall : 0.777358 

F1 : 0.574616 

Total Learning Time : 40.951 

Total Inference Time : 45.52000117301941 

Total revision time: 95.33993211174011
Best scored revision CLL: -0.181627


Results 

CLL : -0.180811 

AUC ROC : 0.991841 

AUC PR : 0.626272 

Precision : 0.455752 

Recall : 0.777358 

F1 : 0.574616 

Total Learning Time : 95.42923417472839 

Total Inference Time : 45.52000117301941 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.248
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.180955952643372;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16509803266796402;  // std dev = 5.044, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | | | else return 0.15231030888279973;  // std dev = 6.070, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12585445157350494;  // std dev = 5.492, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.19000507316042045;  // std dev = 5.464, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10631425541498447;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
%   | | | else return 0.12956012471701417;  // std dev = 6.676, 197.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0722996580499693;  // std dev = 7.982, 299.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10081847366838093;  // std dev = 7.739, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7396016153856771;  // std dev = 0.007, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26038575391540536;  // std dev = 0.009, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.0917955971095062;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.08009276028420725;  // std dev = 4.686, 96.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.032712430478812775;  // std dev = 4.341, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.07761061481513284;  // std dev = 5.501, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04680631459751315;  // std dev = 7.002, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.004789313408453848;  // std dev = 7.184, 296.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.547', 'seconds']
Parameter learned model CLL:-0.329465 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.044, 77, 38], 'false,false,false,false': [6.07, 116, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.492, 96, 44], 'false,false,false,false': [5.464, 79, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.052, 52, 24], 'false,false,false,false': [6.676, 129, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.982, 207, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.739, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 44], 'true,false': [0.009, 87, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.974, 24, 14], 'false,false,false,false': [4.686, 62, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.341, 97, 44], 'false,false,false,false': [5.501, 82, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.002, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.184, 204, 92]}]
{'': [nan, 0.21860264696829915], 'false': [nan, 0.21860264696829887], 'false,false': [nan, 0.21860264696829915], 'false,false,false': [nan, 0.21860264696829887]}
{'': [nan, 0.21860264696830184], 'false': [nan, 0.21860264696829695], 'false,false': [nan, 0.21860264696830184], 'false,false,false': [0.22124763705103914, 0.21674740484428942]}
{'': [nan, 0.2258104944089933], 'false': [nan, 0.2258104944089933], 'false,false': [nan, 0.22581049440899226], 'false,false,false': [0.21546406972905738, 0.23505816554441897]}
{'': [nan, 0.22349241189527796], 'false': [nan, 0.22349241189527796], 'false,false': [nan, 0.2234924118952794], 'false,false,false': [0.21606648199446046, 0.22620680484744415]}
{'': [nan, 0.2130799770939078], 'false': [nan, 0.2130799770939078], 'false,false': [nan, 0.21307997709390725], 'false,false,false': [nan, 0.21307997709390725]}
{'': [nan, 0.22775035656840573], 'false': [nan, 0.22775035656840573], 'false,false': [nan, 0.22775035656840606], 'false,false,false': [nan, 0.2277503565684054]}
{'': [0.22305929376478653, 0.22988184388726132], 'false': [nan, 0.22988184388726132], 'false,false': [nan, 0.22988184388726132], 'false,false,false': [0.23268698060941803, 0.22873263888888853], 'true': [1.0062642066670109e-06, 1.0037914210181792e-06], 'true,true': [nan, 1.0062642066670109e-06], 'true,true,false': [nan, 1.0062642066670109e-06]}
{'': [nan, 0.18170623319932677], 'false': [nan, 0.18170623319932677], 'false,false': [nan, 0.18170623319932525], 'false,false,false': [0.13363928975905748, 0.2327915440446217]}
{'': [nan, 0.18502880883255493], 'false': [nan, 0.1850288088325557], 'false,false': [nan, 0.1850288088325557], 'false,false,false': [nan, 0.1850288088325557]}
{'': [nan, 0.17436535488620122], 'false': [nan, 0.17436535488620122], 'false,false': [nan, 0.174365354886202], 'false,false,false': [nan, 0.174365354886202]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.378
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(D, C), phenotype(A, E) )
%   | | then return -0.04185106490048778;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( phenotype(D, F), interaction(D, D) )
%   | | | then return 0.5248156017661789;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.24276431971489695;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), interaction(G, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.17729787126972513;  // std dev = 3.196, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return 0.23314893509951226;  // std dev = 0.484, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.14209955238346222;  // std dev = 0.451, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8078525129656747;  // std dev = 0.304, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.16944033730287514;  // std dev = 0.239, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7797146869849534;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8272729411243152;  // std dev = 0.117, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16055003702140963;  // std dev = 0.076, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.25046388225549265;  // std dev = 2.866, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.15757368942215616;  // std dev = 3.398, 53.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6167820827433385;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.09359394092057001;  // std dev = 0.749, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.14478430686683044;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.03237099043778796;  // std dev = 2.153, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.11270927005955066;  // std dev = 5.179, 154.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=48 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.25972148476571316;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.10582467341115878;  // std dev = 2.055, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.012271932196606137;  // std dev = 0.583, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.28859944732439247;  // std dev = 2.146, 22.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=11 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then return 0.49471504933270755;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.6844311966000346;  // std dev = 0.076, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.1758177230214732;  // std dev = 0.318, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( phenotype(H, I) )
%   | | then return 0.4561926560979752;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6732509740030777;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then if ( phenotype(J, L), interaction(J, M) )
%   | | | then return 0.08235950793074232;  // std dev = 1.929, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return -0.11240055348567693;  // std dev = 0.810, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( phenotype(A, N), interaction(A, P) )
%   | | | then return 0.3719245255564847;  // std dev = 1.147, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.15706625413376912;  // std dev = 4.273, 92.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.3474586067495122;  // std dev = 0.111, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), interaction(F, C) )
%   | | then return 0.019062064501508273;  // std dev = 0.321, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | else if ( phenotype(C, G), location(C, H) )
%   | | | then return 0.13191992951977535;  // std dev = 3.025, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.0697159516343104;  // std dev = 3.304, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   else if ( phenotype(A, I) )
%   | then return 0.05792858206513468;  // std dev = 0.338, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.588725881434307;  // std dev = 0.267, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22510955988291476;  // std dev = 0.199, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.027226317568096108;  // std dev = 1.583, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06684061680462763;  // std dev = 1.568, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.31688232859697635;  // std dev = 0.124, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(C, E), location(A, E) )
%   | | then if ( interaction(F, C), phenotype(F, D) )
%   | | | then return 0.11985164516759585;  // std dev = 2.155, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.009225189828624003;  // std dev = 1.904, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6318610886368344;  // std dev = 0.341, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.2163167447341105;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.344746267035572;  // std dev = 0.136, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then return -0.03695199352089871;  // std dev = 0.259, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.46097386322088124;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.035686228169184236;  // std dev = 4.142, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04848067013284268;  // std dev = 0.291, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.49167569133481775;  // std dev = 0.430, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1657944466524458;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.03170102241039269;  // std dev = 0.737, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.06986766777360844;  // std dev = 1.335, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7350686701594389;  // std dev = 0.084, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22680299437063026;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return -8.509213488539341E-4;  // std dev = 1.873, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.044530857703087234;  // std dev = 3.697, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.171217347643683;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(C, D) )
%   | | then return -0.11591934905203986;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(C, C) )
%   | | | then return -0.08435473302745503;  // std dev = 0.552, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.02725250153884832;  // std dev = 0.976, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.3172836525973559;  // std dev = 0.276, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, G), complex(F, H) )
%   | | | then return -0.0052131758043220105;  // std dev = 1.127, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.12554010611483515;  // std dev = 2.322, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.2426441872878263;  // std dev = 0.697, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.03059260811101606;  // std dev = 4.632, 161.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=50 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F), interaction(D, D) )
%   | | then return 0.004581768499243429;  // std dev = 0.269, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.15478454553023532;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3045742423079067;  // std dev = 0.122, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.27702204054622775;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.08988873808773916;  // std dev = 1.645, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return -0.007273661843811126;  // std dev = 3.054, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.020347205090754113;  // std dev = 2.434, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   | | | else return 0.0764233979336128;  // std dev = 3.477, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.17441385444104232;  // std dev = 0.074, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( enzyme(D, E), enzyme(A, E) )
%   | | then return -0.08542028000171943;  // std dev = 0.151, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | | else if ( enzyme(A, F), interaction(D, G) )
%   | | | then return 0.11910375669738976;  // std dev = 1.195, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | | else return -0.019197409132491586;  // std dev = 3.483, 97.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=24 */
%   else if ( interaction(H, A), location(H, I) )
%   | then if ( location(A, I) )
%   | | then if ( enzyme(A, J), interaction(K, H) )
%   | | | then return 0.04283758937840201;  // std dev = 1.410, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.020494774398014604;  // std dev = 2.908, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | | else if ( complex(H, L), phenotype(H, M) )
%   | | | then return 0.3227315653386177;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06691437688447374;  // std dev = 2.101, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | else return 0.2853551729049498;  // std dev = 0.571, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.702', 'seconds']
Refined model CLL: -0.239004


******************************************
Best model found
******************************************
Results 

CLL : -0.232824 

AUC ROC : 0.970842 

AUC PR : 0.28271 

Precision : 0.272016 

Recall : 0.501805 

F1 : 0.352792 

Total Learning Time : 15.378 

Total Inference Time : 6.731344938278198 

Total revision time: 29.895445896148683
Best scored revision CLL: -0.239004


Results 

CLL : -0.232824 

AUC ROC : 0.970842 

AUC PR : 0.28271 

Precision : 0.272016 

Recall : 0.501805 

F1 : 0.352792 

Total Learning Time : 29.984747959136964 

Total Inference Time : 6.731344938278198 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.134
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17549210853124703;  // std dev = 7.662, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.22430477411524968;  // std dev = 4.137, 72.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=28 */
%   | | | else return 0.15943823159507595;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15524516371861885;  // std dev = 4.277, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.1204457169897662;  // std dev = 6.322, 186.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10975917197535993;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.13596953751372115;  // std dev = 7.092, 222.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10712883381214477;  // std dev = 7.522, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10319330212812705;  // std dev = 7.430, 240.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7213234065841654;  // std dev = 0.019, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2788589621607641;  // std dev = 0.028, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08316249245258416;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.07283581973126474;  // std dev = 5.065, 114.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.051403194604415704;  // std dev = 3.331, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return 0.04041186638542467;  // std dev = 6.239, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031606201177906745;  // std dev = 7.075, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022626085685800226;  // std dev = 7.091, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.943', 'seconds']
Parameter learned model CLL:-0.346501 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.662, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.137, 44, 28], 'false,false,false,false': [6.262, 121, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.277, 53, 28], 'false,false,false,false': [6.322, 128, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [7.092, 145, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.522, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.43, 154, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 28], 'true,false': [0.028, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [5.065, 75, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.331, 51, 28], 'false,false,false,false': [6.239, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.075, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.091, 174, 86]}]
{'': [nan, 0.21663648370801125], 'false': [nan, 0.21663648370801117], 'false,false': [nan, 0.21663648370801125], 'false,false,false': [nan, 0.21663648370801117]}
{'': [nan, 0.2252345200869845], 'false': [nan, 0.22523452008698389], 'false,false': [nan, 0.2252345200869845], 'false,false,false': [0.23765432098765393, 0.21903186542242956]}
{'': [nan, 0.21844814680519517], 'false': [nan, 0.21844814680519517], 'false,false': [nan, 0.21844814680519528], 'false,false,false': [0.22585759219065918, 0.2148540703717158]}
{'': [nan, 0.22617709260064256], 'false': [nan, 0.22617709260064256], 'false,false': [nan, 0.22617709260064262], 'false,false,false': [0.22222222222222196, 0.22658359818846732]}
{'': [nan, 0.22541220700212636], 'false': [nan, 0.22541220700212636], 'false,false': [nan, 0.22541220700212664], 'false,false,false': [nan, 0.22541220700212664]}
{'': [nan, 0.22998952615819704], 'false': [nan, 0.22998952615819704], 'false,false': [nan, 0.22998952615819787], 'false,false,false': [nan, 0.22998952615819737]}
{'': [0.21967181504118166, 0.22722527262002676], 'false': [nan, 0.22722527262002676], 'false,false': [nan, 0.22722527262002676], 'false,false,false': [0.23187869822485224, 0.22506925207756207], 'true': [1.3249080011958267e-05, 1.3723449239697135e-05], 'true,true': [nan, 1.3249080011958267e-05], 'true,true,false': [nan, 1.3249080011958267e-05]}
{'': [nan, 0.1961692202082832], 'false': [nan, 0.1961692202082832], 'false,false': [nan, 0.19616922020828356], 'false,false,false': [0.1404640745939623, 0.22113580723922546]}
{'': [nan, 0.19327021408915834], 'false': [nan, 0.19327021408915898], 'false,false': [nan, 0.19327021408915898], 'false,false,false': [nan, 0.19327021408915898]}
{'': [nan, 0.1933837687679718], 'false': [nan, 0.1933837687679718], 'false,false': [nan, 0.19338376876797128], 'false,false,false': [nan, 0.19338376876797128]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.047
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, F), enzyme(C, G) )
%   | | | then return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.13592671287728988;  // std dev = 4.655, 108.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=30 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(K, A), location(A, L) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.14386322081379804;  // std dev = 2.390, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return 0.4295775065280837;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.174815601766179;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.7518590397330113;  // std dev = 0.169, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.31363190314393374;  // std dev = 0.954, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F) )
%   | | then return 0.784623035891774;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.49980106813092134;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, I), enzyme(I, J) )
%   | | | then return -0.06508468330567838;  // std dev = 2.095, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | | else return 0.15512602057634572;  // std dev = 2.150, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.3023686921276716;  // std dev = 2.023, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.11908657418574649;  // std dev = 5.576, 157.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(D, D), interaction(E, A) )
%   | then return 0.5333920764972087;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( complex(D, F), enzyme(D, C) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.16844822109289168;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.017725178867150675;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( complex(D, H), enzyme(D, I) )
%   | | | then return 0.41064923504738277;  // std dev = 0.731, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15585681602003876;  // std dev = 2.030, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.6084130494234535;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(K, A), complex(A, L) )
%   | | then return -0.021965089266535277;  // std dev = 0.345, 68.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=10 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.6144353410404321;  // std dev = 0.119, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.08695181882658523;  // std dev = 5.554, 162.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then if ( interaction(E, G), enzyme(A, H) )
%   | | then return 0.19459398812512047;  // std dev = 1.089, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.030307090658484158;  // std dev = 0.337, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( interaction(A, I), phenotype(C, J) )
%   | | then return 0.7166948561659341;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K), complex(C, K) )
%   | | | then return 0.16068196263193105;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.3590653028640374;  // std dev = 1.658, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | then return 0.4727227049478477;  // std dev = 0.094, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, A) )
%   | | then return -0.18385555684450244;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4993212622267745;  // std dev = 0.262, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.08347728527301515;  // std dev = 5.998, 179.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=51 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29139703014759005;  // std dev = 0.220, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(D, E) )
%   | | then if ( phenotype(D, F) )
%   | | | then return -0.0723689206499752;  // std dev = 1.238, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.14644211219148187;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(G, A), interaction(H, G) )
%   | | | then return 0.21430098784525212;  // std dev = 1.033, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.056075931930479446;  // std dev = 2.060, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( enzyme(A, I), interaction(A, J) )
%   | | then if ( enzyme(J, K), complex(A, L) )
%   | | | then return 0.5294029060170051;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.12826840234576872;  // std dev = 1.786, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.018451333882819863;  // std dev = 1.774, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.10229929274854742;  // std dev = 5.423, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then return 0.02927441422431999;  // std dev = 0.400, 152.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=50 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7677145625189778;  // std dev = 0.069, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.21478478138153043;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(I, E), interaction(I, A) )
%   | | | then return 0.2851591181889781;  // std dev = 0.997, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08498504766074504;  // std dev = 2.032, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6727795896969079;  // std dev = 0.294, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2039773214520736;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.049317420680399744;  // std dev = 2.798, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | | else return 0.01578602999988383;  // std dev = 2.123, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5550492087064035;  // std dev = 0.207, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.22201671968645958;  // std dev = 0.077, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, G), complex(F, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.0031797551367406026;  // std dev = 2.101, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return -0.09513798968384778;  // std dev = 1.811, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( phenotype(E, J), recursion_proteinclass(F, B) )
%   | | | then return 0.4562958490385379;  // std dev = 0.307, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.022926271542305567;  // std dev = 3.396, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.508243072683156;  // std dev = 1.944, 25.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=20 */
%   | | | else return -0.2298300474869518;  // std dev = 0.209, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else return 0.42092617460283416;  // std dev = 0.796, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then return 0.24091113881068432;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.17825191102228508;  // std dev = 0.082, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, F), interaction(G, F) )
%   | | then return -0.11953537085482636;  // std dev = 0.055, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5711987219290829;  // std dev = 0.444, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.058824734024794434;  // std dev = 3.186, 81.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(I, K), phenotype(I, L) )
%   | | | then return 0.41500013687453824;  // std dev = 0.699, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09100224514197754;  // std dev = 1.368, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.012144180563514352;  // std dev = 3.510, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else return 0.0602736430018758;  // std dev = 2.985, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( complex(A, E), location(A, F) )
%   | then return -0.15890401634657278;  // std dev = 0.325, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( phenotype(D, G), phenotype(A, G) )
%   | | then if ( enzyme(D, H) )
%   | | | then return -0.1431440757992204;  // std dev = 0.694, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.046178681178959284;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.08062778606452632;  // std dev = 1.339, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.06317494853553787;  // std dev = 1.238, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.1755620215219079;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, L), complex(A, M) )
%   | | then return -0.017689388844108554;  // std dev = 0.305, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | else if ( phenotype(A, N) )
%   | | | then return 0.03451864825289109;  // std dev = 3.987, 101.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=31 */
%   | | | else return 0.10567507936394178;  // std dev = 3.120, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.15904567638685768;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.3167133898357854;  // std dev = 0.268, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return -0.031270858241904134;  // std dev = 0.366, 120.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=27 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( interaction(F, F), phenotype(A, G) )
%   | | | then return -0.035465500614710765;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.07326021146102492;  // std dev = 2.921, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.616622965766998;  // std dev = 0.289, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.24470006444316414;  // std dev = 0.202, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then return 0.16823801672994568;  // std dev = 1.060, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.40895979022253753;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.989', 'seconds']
Refined model CLL: -0.269007


******************************************
Best model found
******************************************
Results 

CLL : -0.274103 

AUC ROC : 0.896183 

AUC PR : 0.167971 

Precision : 0.193262 

Recall : 0.385159 

F1 : 0.257379 

Total Learning Time : 16.047 

Total Inference Time : 6.92801308631897 

Total revision time: 30.309079891204835
Best scored revision CLL: -0.269007


Results 

CLL : -0.274103 

AUC ROC : 0.896183 

AUC PR : 0.167971 

Precision : 0.193262 

Recall : 0.385159 

F1 : 0.257379 

Total Learning Time : 30.398381954193116 

Total Inference Time : 6.92801308631897 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.821
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.22178529873587477;  // std dev = 4.786, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6385128322212614;  // std dev = 0.921, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.707870482492433;  // std dev = 2.946, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16503753223861398;  // std dev = 0.067, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09884060818015539;  // std dev = 1.503, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.8444674378357556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5777418091004681;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.615025950106857;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.09351170058103107;  // std dev = 4.274, 123.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6745686103222213;  // std dev = 0.994, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14890031140968382;  // std dev = 7.74e-08, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.24039798685785727;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.09006851418545228;  // std dev = 1.308, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4450699352773485;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4406191136300657;  // std dev = 0.048, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6904094743681382;  // std dev = 0.147, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.05819674879228793;  // std dev = 4.833, 209.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5330291155068465;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.04105903670466837;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.014103865450374306;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.19885063804177516;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.36426102877367317;  // std dev = 0.052, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.0642314111202057;  // std dev = 5.284, 229.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40113936997342337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.1322818104221027;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.43377955031870624;  // std dev = 0.768, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2675486042320625;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16109155775896364;  // std dev = 0.788, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2862078888782209;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.30962792708027365;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.004465722936742317;  // std dev = 2.108, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.29795578034799836;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.028352211235278185;  // std dev = 3.042, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.056981409449718336;  // std dev = 4.126, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.26542299950002707;  // std dev = 0.230, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2475937186885916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.511917806954979;  // std dev = 1.307, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.18856759765468845;  // std dev = 0.560, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return -0.010854431379029;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0770287317093543;  // std dev = 3.850, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1819384010808214;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1038933887941841;  // std dev = 0.920, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3667046142999936;  // std dev = 2.884, 82.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=71 */
%   | | else return -0.1549357776701052;  // std dev = 0.258, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.20438970564022985;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.006070074802761906;  // std dev = 1.466, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19088127077330658;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.37160017432959924;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.17439136969797286;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04543042515305912;  // std dev = 1.449, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.0606534498278873;  // std dev = 0.360, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -0.02666996662788733;  // std dev = 1.894, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.027369932466130814;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.031105645307143222;  // std dev = 3.456, 119.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=40 */
%   | | | else return -0.09345140006819498;  // std dev = 1.561, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14781039277326755;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.27335581107083506;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15076501931852085;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.007381780469094524;  // std dev = 2.191, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.22782091810300586;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.021165950203672155;  // std dev = 3.400, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
%   | | | else return 0.027568714674750434;  // std dev = 1.446, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.674', 'seconds']
Parameter learned model CLL:-0.199431 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [4.786, 63, 36], 'false,false,false,true': [1.279, 9, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.921, 1, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.946, 10, 69], 'false,false,true,false': [0.067, 164, 0], 'false,false,false,true': [1.503, 9, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.066, 0, 8], 'true,false': [0.049, 0, 3], 'false,true,true': [4.274, 89, 34], 'false,true,false,true': [0.994, 1, 37], 'false,true,false,false': [7.74e-08, 71, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.308, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.081, 0, 5], 'true,false': [0.048, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.147, 0, 14], 'false,true,false': [4.833, 152, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.518, 10, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.931, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.052, 0, 4], 'false,true': [5.284, 158, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [0.768, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.029, 0, 4], 'true,true,false': [0.788, 2, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.108, 38, 12], 'false,false,true': [0.006, 0, 3], 'false,false,false,true': [3.042, 50, 20], 'false,false,false,false': [4.126, 91, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.23, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.307, 2, 33], 'true,false': [0.56, 71, 0], 'false,true': [0.868, 1, 3], 'false,false,true': [3.85, 77, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.01, 0, 3], 'true,false': [0.92, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.884, 11, 71], 'false,true,false': [0.258, 152, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.466, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.137, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.04, 0, 3], 'false,true,true': [1.449, 39, 11], 'false,true,false,true': [0.36, 1, 1], 'false,true,false,false': [1.894, 52, 17], 'false,false,true': [0.867, 1, 3], 'false,false,false,true': [3.456, 79, 40], 'false,false,false,false': [1.561, 18, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.038, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.035, 0, 3], 'false,true': [2.191, 72, 29], 'false,false,true': [0.005, 0, 3], 'false,false,false,true': [3.4, 87, 40], 'false,false,false,false': [1.446, 9, 4]}]
{'': [0.07638888888888877, 0.2183280666475152], 'false': [1.4802973661668753e-16, 0.21514487281033123], 'false,false': [0.21846886190933723, 0.16620498614958432], 'false,false,true': [0.20461247637051175, 0.2314049586776872], 'false,false,false': [0.14876033057851243, 0.18750000000000003], 'true': [-2.220446049250313e-16, 0.18750000000000006], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.07160363265592706, 0.20525058168506286], 'false': [0.0, 0.20350230325488042], 'false,false': [0.20290993689816314, 0.21324377691552587], 'false,false,false': [0.1882479863429278, 0.0], 'false,false,true': [0.10983314893631352, 2.75841890797497e-05], 'true': [0.0, 0.08483192326840117], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0008823159634449725, 0.1591575091200731], 'false': [0.15585587416061067, 0.21306293569802984], 'false,false': [0.24000000000000005, 0.19002684627686917], 'false,false,true': [nan, 0.24000000000000005], 'false,false,false': [0.19002684627686917, nan], 'false,true': [0.1485458002437129, 0.16304699816812696], 'false,true,false': [0.02598858322264491, 8.443949764754712e-17], 'true': [0.0005375405124639077, 0.0007907301329090158]}
{'': [0.000817788250946926, 0.13270285942957896], 'false': [0.1283703915873085, 0.18854439933398084], 'false,false': [0.0, 0.1857970696478701], 'false,false,false': [0.17725503122188224, 0.22222222222222224], 'false,true': [0.0015428148727418187, 0.11177318902569465], 'false,true,true': [nan, 0.001542814872742009], 'true': [0.0013244520650756765, 0.0003865639452324358], 'false,false,true': [nan, 0.0]}
{'': [0.07849457058214299, 0.12712641012222411], 'false': [0.12193897310243569, 0.2129889249335954], 'false,false': [0.0, 0.23381990888443108], 'false,false,false': [0.2222222222222222, 0.1964146907670089], 'true': [0.10827973928276065, 0.0006838349395216214], 'true,true': [0.10827973928276065, nan], 'false,false,true': [nan, 0.0]}
{'': [0.05133458827871096, 0.12185210360400565], 'false': [0.08890873675559144, 0.12928966073199133], 'false,false': [1.2149172049891188e-05, 0.1302884263340443], 'false,false,false': [0.13218474831799645, 0.12899877049829692], 'true': [0.05916221900819914, 0.00013712454734640667], 'true,true': [0.00020622522472346638, 0.08873023004257859], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12022440695738652, 0.12894826532416398], 'false': [0.18815712349924382, 0.12666871018376644], 'false,false': [0.12666871018376644, nan], 'true': [0.049516212160258116, 0.0044150641647168875], 'true,true': [0.0048244158660638685, 0.048841006588164454], 'true,true,false': [nan, 0.04884100658816425], 'true,true,true': [0.005277958975010888, 0.0]}
{'': [0.07164307351509339, 0.10109349537378755], 'false': [0.09775598906406228, 0.15654053741107485], 'false,false': [0.0, 0.16541830869877586], 'false,false,false': [0.16541830869877586, nan], 'false,true': [0.10139799232883642, 0.00043689388915259616], 'false,true,true': [nan, 0.10139799232883624], 'true': [3.6544478448673666e-05, 0.09398916054160295], 'false,false,true': [0.0, nan]}
{'': [0.02553618115192205, 0.08044724188743904], 'false': [0.04831006272279975, 0.10640150906499418], 'false,false': [0.18812492599352254, 0.1040410670580829], 'false,false,false': [0.10038741321298678, 0.11071025080858955], 'false,true': [0.0419874950632981, 0.05257650078332381], 'false,true,false': [0.06486366832963743, 0.05200555158918934], 'true': [0.002359322143835392, 0.05628639050388422], 'true,false': [0.0, 0.0005218291344425788]}
{'': [0.001529579852793551, 0.07621966818619015], 'false': [0.047521999580571635, 0.0963438765071013], 'false,false': [8.606164884285747e-06, 0.09751741563884513], 'false,false,false': [0.0910406730845298, 0.16075301960702884], 'true': [0.0019041977661102306, 0.0004125837142484277], 'true,true': [0.0019041977661102306, nan], 'true,true,true': [0.00020601951147277857, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.559
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.21814893509951236;  // std dev = 3.394, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | | else return 0.14762261931003903;  // std dev = 6.251, 190.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7570845216080491;  // std dev = 2.338, 75.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=69 */
%   | | | else return -0.16037249054548125;  // std dev = 0.124, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.08921210139999713;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.33921210139999713;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.44425532563517334;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.5553664367462844;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.09517944430723886;  // std dev = 3.018, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   | | | else return 0.14071307496720764;  // std dev = 2.794, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6826956754402534;  // std dev = 0.986, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14030610723688305;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( enzyme(A, I) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.07680708087045329;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2815669735164252;  // std dev = 1.136, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.038042339608454934;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4338596510308287;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.44021645481458577;  // std dev = 0.025, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.6823566994413083;  // std dev = 0.026, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.12124396836593768;  // std dev = 1.216, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.06269140971911304;  // std dev = 2.008, 62.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=8 */
%   | | | else return 0.10912953401702324;  // std dev = 4.241, 144.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=49 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.48520698833092657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.1700252111668721;  // std dev = 1.367, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.017940242160064856;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34067748318494095;  // std dev = 0.000645, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.32295161564939223;  // std dev = 0.022, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.30606233094612945;  // std dev = 3.766, 104.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=68 */
%   | | | else return -0.15132519763814542;  // std dev = 0.381, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return -0.10216957968713342;  // std dev = 0.735, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.04592721124171368;  // std dev = 0.792, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3671654826479481;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.010756029218343788;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20514030072926154;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.23375326998852713;  // std dev = 0.224, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.2775385956839816;  // std dev = 0.009, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.009625007294921118;  // std dev = 0.940, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.04911931593532411;  // std dev = 0.937, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.27120834147595396;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09078893963456341;  // std dev = 0.794, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.25842287087085075;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.05527616833133736;  // std dev = 3.391, 113.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | | | else return 0.02574447759814466;  // std dev = 3.135, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.442081222351362;  // std dev = 0.144, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.173847104075059;  // std dev = 0.084, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.20937364533770347;  // std dev = 1.140, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.14856465381506112;  // std dev = 0.115, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5575342144392599;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.224339027023825;  // std dev = 0.228, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.03530663299770791;  // std dev = 2.500, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.15236809051202907;  // std dev = 1.592, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   | | else return 0.06434551276748939;  // std dev = 0.650, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.15784305679985855;  // std dev = 0.000689, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.16779979206015933;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.18043695849206304;  // std dev = 2.126, 41.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=31 */
%   | | | else return 0.39957409086844314;  // std dev = 1.478, 43.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=40 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.12098098016774758;  // std dev = 0.276, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.1492505098017285;  // std dev = 0.219, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.16366855681298154;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.11103458566657184;  // std dev = 0.834, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.2942982914199937;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15355361358953445;  // std dev = 0.046, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.8625282143740761;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.16490661593429345;  // std dev = 0.076, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.20872937784902865;  // std dev = 0.276, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return -0.13189967731711974;  // std dev = 0.085, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I), enzyme(H, J) )
%   | | | then return -0.17538692676460718;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0011486481742072775;  // std dev = 1.678, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.019829419725224177;  // std dev = 3.054, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | | | else return 0.1898748714030314;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.11920363871679358;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.24490045298732432;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else return 0.040833199402886836;  // std dev = 0.363, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), location(H, I) )
%   | | then if ( complex(H, J), complex(A, J) )
%   | | | then return -0.061376259244477704;  // std dev = 0.728, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.023988295608545027;  // std dev = 1.846, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | else return 0.16479946930115613;  // std dev = 0.319, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16366776560548857;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.027600198694393535;  // std dev = 2.444, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
%   | | | else return 0.01598924783086193;  // std dev = 2.308, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '47.840', 'seconds']
Refined model CLL: -0.182751


******************************************
Best model found
******************************************
Results 

CLL : -0.19301 

AUC ROC : 0.98508 

AUC PR : 0.298926 

Precision : 0.188734 

Recall : 0.914894 

F1 : 0.312917 

Total Learning Time : 13.559 

Total Inference Time : 54.887999057769775 

Total revision time: 88.61092412948608
Best scored revision CLL: -0.182751


Results 

CLL : -0.19301 

AUC ROC : 0.98508 

AUC PR : 0.298926 

Precision : 0.188734 

Recall : 0.914894 

F1 : 0.312917 

Total Learning Time : 88.6652439880371 

Total Inference Time : 54.887999057769775 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.979
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6581489350995123;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13007875966091456;  // std dev = 4.751, 114.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=31 */
%   | | | else return 0.1581489350995115;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7580193346218546;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6092676323241611;  // std dev = 1.324, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7129568917846448;  // std dev = 3.098, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.1603995858335202;  // std dev = 0.027, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13018172355004123;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13018172355004123;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.38868244159700704;  // std dev = 1.515, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.6221358510946864;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08181835468630087;  // std dev = 4.368, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6133706316532634;  // std dev = 2.124, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.141577315447694;  // std dev = 0.000, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8265927621111702;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.13732390166409644;  // std dev = 1.540, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.48776145292536094;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.27859225005299265;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4744204144805373;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48158874258251644;  // std dev = 1.908, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.03757537686242541;  // std dev = 5.106, 235.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5212506284645685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.006018740514238513;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.4293185946244702;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.41660680106085124;  // std dev = 0.114, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.5910105889923098;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28969333628345767;  // std dev = 0.927, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.05565979827475064;  // std dev = 5.802, 281.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3926475493964354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.0021024614140444605;  // std dev = 1.673, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28890323438710286;  // std dev = 0.008, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.2582649209237696;  // std dev = 1.181, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.007797714906980595;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return -0.016438043444081733;  // std dev = 2.867, 88.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20333411999021467;  // std dev = 0.917, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.03521347653443742;  // std dev = 2.264, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | | | else return 0.06175134704034681;  // std dev = 4.636, 169.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3164820221773192;  // std dev = 0.413, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3022424586990039;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.04135478425797984;  // std dev = 0.741, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.44339979641118077;  // std dev = 2.018, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.1805848643268432;  // std dev = 0.850, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2777685328357693;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.08335237084827185;  // std dev = 4.336, 137.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18025744983492287;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11739019611847963;  // std dev = 1.172, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.380670794174119;  // std dev = 3.299, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.15441757027740932;  // std dev = 0.751, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.24252520855294657;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.001401044184014028;  // std dev = 1.447, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2048672621055056;  // std dev = 0.188, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13279245285795271;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.25721287675918497;  // std dev = 0.177, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.02045284804995866;  // std dev = 1.868, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.24092904637348692;  // std dev = 0.441, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.0209536897507541;  // std dev = 1.394, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.08464165909717956;  // std dev = 1.216, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04436055077827115;  // std dev = 3.684, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | | else return 0.09544257416145761;  // std dev = 1.347, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.029449745823348805;  // std dev = 0.950, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.1824712627216465;  // std dev = 0.167, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.7561240399552546;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.7040082616218969;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.22684946846455922;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.006282770330762959;  // std dev = 2.483, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22004516114512604;  // std dev = 0.041, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.00634610373545359;  // std dev = 4.000, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.024741449417196065;  // std dev = 1.411, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '25.069', 'seconds']
Parameter learned model CLL:-0.198069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.549, 3, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.751, 83, 31], 'false,false,true,false': [5.612, 105, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.324, 2, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.707, 1, 1], 'false,false,true,true': [3.098, 11, 76], 'false,false,true,false': [0.027, 200, 0], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [1.195, 5, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.515, 3, 11], 'true,false': [0.044, 0, 6], 'false,true,true': [4.368, 90, 34], 'false,true,false,true': [2.124, 5, 48], 'false,true,false,false': [0.0, 97, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.54, 8, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.03, 0, 10], 'true,false': [1.235, 2, 7], 'false,true,true,true': [0.174, 0, 3], 'false,true,true,false': [1.908, 6, 21], 'false,true,false': [5.106, 177, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.769, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'complex(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.114, 0, 7], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.927, 1, 10], 'false,true': [5.802, 199, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.673, 14, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.008, 0, 5], 'true,true,false': [1.181, 2, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.771, 1, 2], 'false,true': [2.867, 69, 19], 'false,false,true': [0.917, 1, 8], 'false,false,false,true': [2.264, 58, 11], 'false,false,false,false': [4.636, 119, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.413, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.741, 1, 3], 'true,true,false,false': [2.018, 6, 33], 'true,false': [0.85, 98, 0], 'false,true': [0.048, 0, 5], 'false,false,true': [4.336, 90, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.172, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.299, 12, 82], 'false,true,false': [0.751, 189, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.447, 13, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.188, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.177, 0, 5], 'false,true,true': [1.868, 35, 13], 'false,true,false,true': [0.441, 1, 8], 'false,true,false,false': [1.394, 40, 11], 'false,false,true': [1.216, 2, 5], 'false,false,false,true': [3.684, 99, 47], 'false,false,false,false': [1.347, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.95, 1, 7], 'true,true,true,false': [0.167, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.146, 0, 3], 'false,true': [2.483, 82, 32], 'false,false,true': [0.041, 0, 5], 'false,false,false,true': [4.0, 106, 47], 'false,false,false,false': [1.411, 9, 4]}]
{'': [0.12749999999999959, 0.211244521604002], 'false': [-2.5376526277146434e-16, 0.20408163265306234], 'false,false': [0.20500459136822805, 0.18749999999999983], 'false,false,true': [0.1979839950754091, 0.2100000000000011], 'false,false,false': [0.18749999999999983, nan], 'true': [0.15999999999999973, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09599871021674286, 0.19872934731269942], 'false': [0.17283950617283964, 0.19504899708302498], 'false,false': [0.19457733517260062, 0.2040816326530613], 'false,false,false': [0.20408163265306117, 0.20408163265306117], 'false,false,true': [0.11033918903942395, 3.5638666929704852e-06], 'false,true': [0.0, 0.24000000000000005], 'false,true,false': [0.22222222222222224, 0.25], 'true': [0.0, 0.11694003597212804]}
{'': [0.1263346916875331, 0.1608207221796842], 'false': [0.15786606490694055, 0.2162316179231543], 'false,false': [0.2162316179231543, nan], 'false,false,true': [0.0, 0.1977054146489038], 'false,true': [0.153895618408449, 0.16029774742577899], 'false,true,false': [0.08510752957496652, -7.55409480672787e-17], 'true': [0.1639925622346233, 0.0003159809933920658]}
{'': [0.09129414372590483, 0.13537083639944072], 'false': [0.1319773599152099, 0.19761487863684496], 'false,false': [0.0, 0.20036275508007956], 'false,false,false': [0.16, 0.1970723747138755], 'false,true': [0.12239478326190198, 0.11095404688365273], 'false,true,true': [0.010065571724675334, 0.13487066827326047], 'true': [9.034752712753225e-05, 0.16960445535774157], 'false,false,true': [nan, 0.0]}
{'': [0.09265626537429413, 0.12211684351348635], 'false': [0.11980685998307071, 0.1549989616104146], 'false,false': [0.0, 0.1554085639261168], 'false,false,false': [0.1554085639261168, nan], 'true': [0.11267329480238782, 0.07809803670373071], 'true,true': [0.001857879181964466, 0.0], 'false,false,true': [nan, 0.0], 'true,true,false': [0.0, nan]}
{'': [0.11386253988942215, 0.10922994688420468], 'true': [0.08733846303936843, 0.19837971483399583], 'true,false': [nan, 0.19837971483399583], 'false': [0.09339015741852953, 0.11404179270824649], 'false,false': [0.09333139724533678, 0.11377570476837999], 'false,false,false': [0.07430049430182181, 0.12716696129858276], 'true,true': [1.2159820353840888e-05, 0.12673889152611795]}
{'': [0.1135796079986061, 0.13372000027003159], 'false': [0.00046610422181063703, 0.13725237818848032], 'false,false': [0.13725237818848032, nan], 'true': [0.09280541072878974, 0.007364980416130855], 'true,true': [0.010684434319026007, 0.12114547152606761], 'true,true,false': [0.13736667903177863, 0.1044454610243647], 'true,true,true': [0.011384057117291105, 0.0]}
{'': [0.07292932002741215, 0.10488989937409492], 'false': [0.10396361468458812, 0.11938493362045485], 'false,false': [0.0, 0.1231775288500095], 'false,false,false': [0.1231775288500095, nan], 'false,true': [0.11578400485015442, 0.0029820811801608126], 'false,true,true': [nan, 0.11578400485015442], 'true': [0.0, 0.0915450773140524], 'false,false,true': [0.0, nan]}
{'': [0.0056080205943901465, 0.0857190637513943], 'false': [0.057337530693547405, 0.1037357465794645], 'false,false': [0.21124392366621428, 0.0981921174403893], 'false,false,false': [0.09297858273393794, 0.16496339093310947], 'false,true': [0.07268093947516087, 0.04439435474727158], 'false,true,false': [0.021635326566251445, 0.03812326871605201], 'true': [0.003917475955246854, 0.0076228761543577096], 'true,false': [0.0, 0.006249043220740125]}
{'': [0.12439117921879952, 0.08564343106291929], 'true': [0.1376604783504949, 0.007133678049659188], 'true,true': [0.07213122010653424, 0.000679013587822852], 'false': [0.054086881413275265, 0.10651668661218704], 'false,false': [0.0003425624400534233, 0.10839734412525985], 'false,false,false': [0.10455992833166079, 0.1532488877380948], 'true,true,true': [0.11271378903160897, 0.004640794129945433], 'true,true,false': [0.0, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
4;false;interaction(F, A).;true;true
4;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 13.543
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7277141524908164;  // std dev = 1.615, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.04093363370782712;  // std dev = 3.145, 109.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=11 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11455919150976876;  // std dev = 2.727, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.1914822684328446;  // std dev = 5.099, 117.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6893402414962921;  // std dev = 3.122, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.15333265952082123;  // std dev = 0.215, 185.000 (wgt'ed) examples reached here.  /* #neg=185 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.3187986974082611;  // std dev = 1.464, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.13694091077609252;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.09590680200106465;  // std dev = 3.621, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   | | | else return -0.028952336758105254;  // std dev = 1.852, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6276190973257343;  // std dev = 1.938, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.13946060510290822;  // std dev = 0.141, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.7738811159650262;  // std dev = 0.115, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1099382775425577;  // std dev = 1.019, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.1791473542981876;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 1.18e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2925135841583099;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.012312322641231256;  // std dev = 1.911, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.07664759589315298;  // std dev = 2.187, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.09634027872073664;  // std dev = 3.729, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.060400507208697864;  // std dev = 3.286, 98.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=28 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5280802660236333;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), phenotype(A, K) )
%   | | | then return 0.10163156511611023;  // std dev = 1.074, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.015439040859223633;  // std dev = 1.001, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33263436710108646;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3318395324383573;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.6078126381964276;  // std dev = 0.326, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.161274063124754;  // std dev = 0.333, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return -0.007257115793096241;  // std dev = 2.178, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.05407382086873505;  // std dev = 4.579, 196.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=54 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39756031575695494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.09933569610499444;  // std dev = 1.093, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.020855031388742746;  // std dev = 1.012, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2529429200931343;  // std dev = 0.000134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, F) )
%   | | | then return 0.026212338864000057;  // std dev = 1.070, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.41650082770355734;  // std dev = 0.227, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.29230973198259075;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), complex(A, H) )
%   | then return -0.006232783221228375;  // std dev = 0.292, 80.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=18 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.46643140482862855;  // std dev = 0.880, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return -0.14975992452464856;  // std dev = 0.452, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.03197355626272;  // std dev = 2.035, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.09595221970790592;  // std dev = 3.494, 98.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2762809514271094;  // std dev = 0.079, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), phenotype(A, F) )
%   | | | then return 0.3500032883456734;  // std dev = 1.782, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | | | else return 0.5359182678620507;  // std dev = 0.455, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.14267537397061736;  // std dev = 0.065, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22349052276750606;  // std dev = 0.057, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(H, J), interaction(H, I) )
%   | | | then return 0.049176671009135746;  // std dev = 3.304, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return -0.042130863442793626;  // std dev = 1.772, 51.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.012524239317601202;  // std dev = 0.480, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.15046757534302516;  // std dev = 1.010, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16626113226162698;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.1875012810551802;  // std dev = 0.022, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.06323585273065425;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3037908154496392;  // std dev = 0.097, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, H), phenotype(A, I) )
%   | | | then return 0.05245417300717341;  // std dev = 3.645, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
%   | | | else return -0.005873530150531429;  // std dev = 2.938, 113.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=28 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20072136853589673;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.027631744358086636;  // std dev = 0.806, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.0715253506262003;  // std dev = 0.915, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19370512664734246;  // std dev = 0.061, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( enzyme(A, D), interaction(A, E) )
%   | then if ( enzyme(E, D) )
%   | | then if ( interaction(E, F) )
%   | | | then return -0.04615997143473686;  // std dev = 0.412, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return -0.1126927736498701;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), interaction(E, G) )
%   | | | then return 0.060488404194041466;  // std dev = 0.619, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return -0.04081416369699064;  // std dev = 1.037, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.02355020634995605;  // std dev = 1.812, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   | | | else return 0.03043232436380631;  // std dev = 3.875, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.018980862998630874;  // std dev = 1.048, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.06259025605611031;  // std dev = 1.853, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.17099147561951214;  // std dev = 0.058, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.7903401455629636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.17081260609299415;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11940268217660475;  // std dev = 0.027, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.06148025433784182;  // std dev = 1.250, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.03362381240136957;  // std dev = 2.361, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.0033108991928975464;  // std dev = 0.884, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.13268550535784224;  // std dev = 1.367, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.01549367612399159;  // std dev = 3.770, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.789', 'seconds']
Refined model CLL: -0.199351


******************************************
Best model found
******************************************
Results 

CLL : -0.180123 

AUC ROC : 0.988347 

AUC PR : 0.344501 

Precision : 0.24472 

Recall : 0.743396 

F1 : 0.368224 

Total Learning Time : 13.543 

Total Inference Time : 17.606795072555542 

Total revision time: 54.76559798431396
Best scored revision CLL: -0.198069


Results 

CLL : -0.180123 

AUC ROC : 0.988347 

AUC PR : 0.344501 

Precision : 0.24472 

Recall : 0.743396 

F1 : 0.368224 

Total Learning Time : 54.81991784286499 

Total Inference Time : 17.606795072555542 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.254
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return 0.15746866299066775;  // std dev = 5.552, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16962434493557788;  // std dev = 3.617, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6194734122109545;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8400709360668704;  // std dev = 0.037, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15941709816917238;  // std dev = 0.065, 137.000 (wgt'ed) examples reached here.  /* #neg=137 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.07549438057662809;  // std dev = 1.953, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.16230804977740193;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5676350157676627;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5737693052783518;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08843940384787247;  // std dev = 2.052, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6590610200766002;  // std dev = 1.012, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14161404864365132;  // std dev = 0.000, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12899461661100192;  // std dev = 3.655, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08429205898109138;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.3258604033888964;  // std dev = 0.936, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.4383870977706614;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.39253153954753006;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5888070465362094;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0549134868836458;  // std dev = 4.203, 192.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5233288084546341;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.08582055495401625;  // std dev = 1.904, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.0923374534323719;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33712731270962537;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.346180368026818;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05525266137247333;  // std dev = 4.264, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3941392806984477;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.13879460764026727;  // std dev = 3.490, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.14275305296863477;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2691580029341747;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3665956538532934;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3108839482113914;  // std dev = 0.079, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26487709566471973;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32124856807628954;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09780452767671571;  // std dev = 0.993, 32.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2732926720617687;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.09058657121144609;  // std dev = 2.611, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.08235678152914747;  // std dev = 4.620, 142.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23841684124449825;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.22100734246594878;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2320583159567986;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6138175027379238;  // std dev = 1.083, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19659797475241134;  // std dev = 0.836, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.22059631865631008;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.028685314122255987;  // std dev = 3.403, 132.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1791852724252184;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.185452012178708;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44123957081297654;  // std dev = 0.785, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14239433962845247;  // std dev = 0.166, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1853798435481066;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.023244547007563204;  // std dev = 3.115, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15536220306785742;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.06946659118569523;  // std dev = 0.285, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.1712226064288913;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.052041170855603225;  // std dev = 0.392, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18878675343798623;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.012457349217462728;  // std dev = 1.215, 55.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15868313880990637;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.005600361622803475;  // std dev = 2.920, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   | | | else return 0.01417387726161664;  // std dev = 3.124, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13515196763053705;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14404415017644848;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13405691412198528;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14538389403714316;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.0282185915702528;  // std dev = 1.368, 77.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13863396521155485;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03819373730241145;  // std dev = 2.633, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | | else return 0.037556242782702205;  // std dev = 3.058, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.597', 'seconds']
Parameter learned model CLL:-0.176519 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.545, 34, 8], 'false,false,true,false': [5.552, 103, 44], 'false,false,false,true': [3.617, 42, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.949, 1, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.037, 0, 52], 'false,false,true,false': [0.065, 137, 0], 'false,false,false,true': [1.953, 16, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.03, 0, 6], 'true,false': [0.03, 0, 8], 'false,true,true': [2.052, 23, 8], 'false,true,false,true': [1.012, 1, 48], 'false,true,false,false': [0.0, 93, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.655, 43, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.936, 1, 9], 'true,false': [0.002, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.13, 0, 3], 'false,true,false': [4.203, 140, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.904, 13, 5], 'false,false,false,false': [3.24, 35, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.003, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.036, 0, 9], 'false,true': [4.264, 135, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.49, 34, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.017, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.079, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.056, 0, 3], 'false,true': [0.993, 29, 3], 'false,false,true': [0.027, 0, 6], 'false,false,false,true': [2.611, 44, 23], 'false,false,false,false': [4.62, 96, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 12], 'true,true,true,false': [0.029, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.083, 1, 36], 'true,false': [0.836, 91, 0], 'false,true': [0.021, 0, 5], 'false,false,true': [3.403, 96, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.002, 0, 5], 'true,false': [0.023, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.785, 0, 56], 'false,true,false': [0.166, 120, 0], 'false,false,true,true': [0.025, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.115, 48, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.025, 0, 9], 'true,false,true': [0.285, 1, 1], 'true,false,false': [0.008, 0, 4], 'false,true,true': [0.392, 7, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.215, 41, 14], 'false,false,true': [0.016, 0, 5], 'false,false,false,true': [2.92, 88, 36], 'false,false,false,false': [3.124, 49, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.023, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.009, 0, 4], 'false,true': [1.368, 60, 17], 'false,false,true': [0.015, 0, 5], 'false,false,false,true': [2.633, 73, 36], 'false,false,false,false': [3.058, 42, 20]}]
{'': [-2.5376526277146434e-16, 0.21000000000000063], 'false': [-1.4802973661668753e-16, 0.20311240622481383], 'false,false': [0.19943450631281395, 0.21301775147928947], 'false,false,false': [0.21445847890352004, 0.18750000000000003], 'false,false,true': [0.15419501133786864, 0.2097274283863214], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.06222222222222236, 0.20539250310154136], 'false': [7.401486830834377e-17, 0.20199534899526747], 'false,false': [0.19926024489044447, 0.20942938410477074], 'false,false,false': [0.18163861282018945, 0.21975425330812837], 'false,false,true': [2.6423217948426177e-05, 3.1210801619053466e-05], 'true': [0.0, 0.08999999999999994], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001382308449828784, 0.16663554896826285], 'false': [0.14949079209718244, 0.2102258313765505], 'false,false': [0.21149100031332718, 0.18750000000000006], 'false,false,true': [0.0, 0.2120074858025901], 'false,false,false': [0.18750000000000006, nan], 'false,true': [0.13579458030468042, 0.15209774475203416], 'false,true,false': [0.020910432224925345, -2.3875763970433474e-17], 'true': [0.00015051803120373167, 0.00011288852340274325]}
{'': [0.061158313771676805, 0.12449397142349065], 'false': [0.0950705595424049, 0.20588944668482848], 'false,false': [0.0027992154232203414, 0.20774112513003828], 'false,false,false': [0.20143524479746566, 0.21], 'false,true': [0.011439707296638735, 0.09201582869573627], 'true': [0.0875164446676818, 5.473473418504682e-07], 'false,true,true': [0.0, 0.005621924401269111], 'false,false,true': [0.0, 0.0]}
{'': [0.00011218046500202242, 0.12648717396560025], 'false': [0.09519146675462567, 0.2231551358912206], 'false,false': [0.0013478969990052825, 0.2294317604274984], 'false,false,false': [0.2298390080695028, 0.2222222222222222], 'false,false,true': [0.0, 0.0], 'true': [1.8792039947923555e-06, 0.00014418829670516232], 'true,true': [1.8792039947923555e-06, nan]}
{'': [0.0016497651073641587, 0.12285383111631418], 'false': [0.03079646485287913, 0.13197376324428203], 'false,false': [0.00012041774160694481, 0.13476955702759158], 'false,false,false': [0.10175360167440178, 0.15032579548488523], 'true': [0.0012031412336861288, 0.001913918160536321], 'true,false': [0.0020810546930777607, 0.0010548257344334584], 'true,false,true': [0.0031037941455299284, 0.0], 'true,true': [4.736537025726295e-05, 0.0]}
{'': [0.1376751441217307, 0.08580475599613392], 'true': [0.052150871137397505, 0.0076840802859304575], 'false': [8.772602904144611e-05, 0.0877074586786721], 'false,false': [0.0877074586786721, nan], 'true,true': [0.0009857074678036554, 0.03457229973247427], 'true,true,false': [0.0, 0.03167142103563102], 'true,true,true': [0.0010377739618814459, 0.00041351651957657887]}
{'': [4.823664903033257e-05, 0.09519385021525766], 'false': [0.07755252486053694, 0.1393788370897209], 'false,false': [0.0003179737534159191, 0.14271778092812828], 'false,false,false': [0.14271778092812828, nan], 'false,true': [0.010996901160649695, 0.00023000728775338653], 'false,true,true': [nan, 0.010996901160649664], 'false,false,true': [0.0003179737534159191, nan], 'true': [1.1951274843435832e-06, 6.034510368916705e-05]}
{'': [0.011589953457776688, 0.07662763426749114], 'false': [0.026508678664386425, 0.09294328111048103], 'false,false': [5.3023900774290536e-05, 0.09478144903873967], 'false,false,false': [0.06878041519162445, 0.14146071852819997], 'false,true': [0.019209391473710587, 0.027265354458329734], 'false,true,false': [0.0, 0.02683579772287644], 'true': [7.002367771785336e-05, 0.026383801804634247], 'true,false': [0.04049736880241154, 1.6588356294439804e-05]}
{'': [6.953779685316725e-05, 0.07294925544520797], 'false': [0.02428751686337101, 0.092788036313621], 'false,false': [4.245733350669301e-05, 0.0952119770530342], 'false,false,false': [0.06358978797097581, 0.15080556655070151], 'true': [7.21985506765832e-05, 1.9614852255468718e-05], 'true,true': [8.632387819822521e-05, 0.0], 'true,true,true': [6.891158368577122e-07, 0.00017962916311521868], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.86
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), complex(H, K) )
%   | | | then return 0.04862512557570285;  // std dev = 2.545, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.13634442382131537;  // std dev = 5.168, 133.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=37 */
%   | | | else return 0.23314893509951234;  // std dev = 4.108, 72.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7417903431046247;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8199405538011278;  // std dev = 0.990, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.15830921826871153;  // std dev = 0.118, 147.000 (wgt'ed) examples reached here.  /* #neg=147 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.4230635178999152;  // std dev = 1.701, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.17270159325717974;  // std dev = 2.919, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5820641463621515;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462846;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13288816726837643;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.10419723915032122;  // std dev = 2.007, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6888316116973688;  // std dev = 0.178, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14132395545041526;  // std dev = 0.151, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5498490269177946;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.12042038846809654;  // std dev = 3.620, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else return 0.09170769166686372;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.42650533514491096;  // std dev = 0.027, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5028072480268453;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40324829962073283;  // std dev = 0.639, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11558463375475377;  // std dev = 0.072, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.0751754974264779;  // std dev = 4.120, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4134337574802792;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.019899566556414228;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.03260688648313535;  // std dev = 1.801, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.07128631399603064;  // std dev = 3.350, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34326470454857744;  // std dev = 0.083, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.21817919182743423;  // std dev = 0.300, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), phenotype(G, H) )
%   | | | then return 0.04620196870886379;  // std dev = 2.726, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | | | else return -0.015703032028744925;  // std dev = 1.139, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.036643854243763964;  // std dev = 1.441, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.08562388829265968;  // std dev = 2.581, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4164389410165745;  // std dev = 0.098, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04273170689539175;  // std dev = 3.174, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return 0.16895905348301357;  // std dev = 1.897, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.28284139498317956;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.30221233477644616;  // std dev = 0.042, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.4025025571752257;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09975736308570439;  // std dev = 0.033, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.11986214085581959;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.08276717549156787;  // std dev = 0.723, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.27247522706367006;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.14371270261181698;  // std dev = 1.593, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.05304448497134384;  // std dev = 5.119, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2509988572440628;  // std dev = 0.054, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2226744272294977;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6353934579124156;  // std dev = 0.737, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.1862880146764499;  // std dev = 0.070, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2217570498183127;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.04317290329285067;  // std dev = 2.599, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return -0.038699958357204606;  // std dev = 1.608, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.038728957187501356;  // std dev = 1.363, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.15019244306484814;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16787779996428087;  // std dev = 0.023, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18982593866429806;  // std dev = 0.009, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.5472413097192934;  // std dev = 0.226, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.4222041167569375;  // std dev = 0.599, 49.000 (wgt'ed) examples reached here.  /* #pos=49 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11749591093542204;  // std dev = 0.174, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | | else return -0.15972833647687146;  // std dev = 0.124, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20858067789036028;  // std dev = 0.083, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, J), enzyme(A, K) )
%   | | | then return 0.13274996493551303;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.022036763407409597;  // std dev = 2.856, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15305104698713073;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.1947866939383643;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return -0.07845391792823472;  // std dev = 0.037, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.012374101313955882;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.2115324902684516;  // std dev = 0.036, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.022152497493676475;  // std dev = 1.218, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.15882026212448172;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), interaction(A, L) )
%   | | | then return -0.014048477239413106;  // std dev = 3.011, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | | else return 0.033934992694817985;  // std dev = 2.755, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1347155595120609;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09893705005226175;  // std dev = 0.870, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.13794756962444865;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.1588049318817288;  // std dev = 0.048, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.03769435280112056;  // std dev = 0.131, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return 0.03924842779573194;  // std dev = 0.216, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13873337288584206;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, J) )
%   | | | then return 0.026345683856479733;  // std dev = 3.906, 171.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=54 */
%   | | | else return -0.06839961294468122;  // std dev = 0.995, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '35.880', 'seconds']
Refined model CLL: -0.176054


******************************************
Best model found
******************************************
Results 

CLL : -0.192292 

AUC ROC : 0.983004 

AUC PR : 0.209482 

Precision : 0.137872 

Recall : 0.870036 

F1 : 0.238025 

Total Learning Time : 6.86 

Total Inference Time : 7.556509256362915 

Total revision time: 25.893324293136597
Best scored revision CLL: -0.176054


Results 

CLL : -0.192292 

AUC ROC : 0.983004 

AUC PR : 0.209482 

Precision : 0.137872 

Recall : 0.870036 

F1 : 0.238025 

Total Learning Time : 25.947644151687623 

Total Inference Time : 7.556509256362915 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.556
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.036231126880334294;  // std dev = 3.269, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | | else return 0.15585885876363392;  // std dev = 5.233, 131.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10139217834275562;  // std dev = 2.610, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8230520598782878;  // std dev = 0.996, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.1557184669200533;  // std dev = 0.086, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.20141479720713734;  // std dev = 1.792, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.08568852216359815;  // std dev = 2.301, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.058814578766168205;  // std dev = 2.778, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6633695664303935;  // std dev = 1.000, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.1418681555662996;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6748807669011546;  // std dev = 0.203, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14758064837755522;  // std dev = 2.394, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3171621069723627;  // std dev = 1.232, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.23569540234012806;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5407998495584271;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5953043153755707;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.0672331568375905;  // std dev = 4.183, 175.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.08259144978259332;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5186905380627254;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.11950543959208314;  // std dev = 1.827, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.09976926085125996;  // std dev = 2.187, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3388579139226704;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21285069020215389;  // std dev = 0.920, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.04137515218233259;  // std dev = 4.424, 210.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.4497301072814377;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38007152895106033;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.055612552078228475;  // std dev = 2.537, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.003248529628362982;  // std dev = 1.492, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2566324803071445;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3239516922597305;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3426535464659216;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3403830511253532;  // std dev = 0.130, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.33069520644923744;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.05647201098762405;  // std dev = 1.227, 30.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1473225126615873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.025545478862853545;  // std dev = 2.284, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.07232890916063074;  // std dev = 4.428, 150.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24807716791265155;  // std dev = 0.181, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2443834828808941;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.276279233909827;  // std dev = 0.017, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5497572260978331;  // std dev = 1.557, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17590401148118773;  // std dev = 0.477, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2831565829404288;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07841235298919329;  // std dev = 3.312, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return -0.012877709084437371;  // std dev = 0.813, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.20782300266545495;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4195759785552714;  // std dev = 1.513, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1387319236505689;  // std dev = 0.236, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.22469224858049575;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.19092644359185912;  // std dev = 0.010, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.05586943565950505;  // std dev = 2.418, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17178324771364684;  // std dev = 0.067, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19619986884243623;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.19803226104900404;  // std dev = 1.336, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.11229414648381347;  // std dev = 0.401, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2391709845541515;  // std dev = 0.174, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.02670902388102199;  // std dev = 1.638, 72.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19468714206149462;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030784463371399867;  // std dev = 2.765, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | | else return -0.026818333543041934;  // std dev = 2.556, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1407594188096942;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.18079196010274307;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.18575186220563178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.005911074344622735;  // std dev = 0.472, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19664545860457225;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.010401399756798218;  // std dev = 1.755, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1659614465274336;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 6.140189306829558E-4;  // std dev = 2.960, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
%   | | | else return -0.008261791734073156;  // std dev = 2.544, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.536', 'seconds']
Parameter learned model CLL:-0.176932 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.269, 60, 13], 'false,false,true,false': [5.233, 92, 39], 'false,false,false,true': [2.61, 28, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [2.98e-08, 0, 11], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [0.996, 1, 52], 'false,false,true,false': [0.086, 126, 0], 'false,false,false,true': [1.792, 9, 5], 'false,false,false,false': [2.301, 22, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.778, 47, 14], 'false,true,false,true': [1.0, 1, 42], 'false,true,false,false': [0.0, 106, 0], 'false,false,true,true': [0.203, 0, 3], 'false,false,true,false': [2.394, 18, 9], 'false,false,false,true': [1.232, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [2.11e-08, 0, 6], 'true,false': [1.279, 2, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.194, 0, 6], 'false,true,false': [4.183, 126, 49], 'false,false,true,true': [0.852, 1, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.827, 10, 5], 'false,false,false,false': [2.187, 16, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.061, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.92, 1, 6], 'false,true': [4.424, 154, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.015, 0, 2], 'false,false,false,true': [2.537, 24, 9], 'false,false,false,false': [1.492, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.022, 0, 5], 'true,true,false': [0.089, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.13, 0, 3], 'true,false,false': [0.072, 0, 4], 'false,true': [1.227, 25, 5], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.284, 40, 13], 'false,false,false,false': [4.428, 103, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.181, 0, 13], 'true,true,true,false': [0.034, 0, 3], 'true,true,false,true': [0.017, 0, 3], 'true,true,false,false': [1.557, 1, 33], 'true,false': [0.477, 104, 0], 'false,true': [0.0, 0, 3], 'false,false,true': [3.312, 59, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.813, 1, 4], 'true,false': [0.071, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.513, 2, 56], 'false,true,false': [0.236, 135, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.01, 0, 2], 'false,false,false,true': [2.418, 26, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.067, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [1.336, 3, 5], 'false,true,true': [0.401, 26, 1], 'false,true,false,true': [0.174, 0, 6], 'false,true,false,false': [1.638, 55, 17], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.765, 67, 31], 'false,false,false,false': [2.556, 40, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.02, 0, 8], 'true,true,true,false': [0.025, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.472, 1, 2], 'true,false': [0.015, 0, 3], 'false,true': [1.755, 60, 24], 'false,false,true': [0.0, 0, 3], 'false,false,false,true': [2.96, 75, 31], 'false,false,false,false': [2.544, 36, 12]}]
{'': [-2.3684757858670006e-16, 0.19946217174448694], 'false': [-2.5376526277146434e-16, 0.18996523864700682], 'false,false': [0.18992695117262678, 0.19013128112267944], 'false,false,false': [0.18407596785975178, 0.20999999999999988], 'false,false,true': [0.14636892475135996, 0.20907872501602526], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [2.3684757858670006e-16, 0.20826256010286134], 'false': [0.10937500000000006, 0.20438700459816017], 'false,false': [0.20524319976524363, 0.2007302140956263], 'false,false,true': [0.01870112043814916, 5.8125688896127673e-05], 'false,false,false': [0.2292900234469237, 0.18258234805867682], 'false,true': [0.22222222222222224, 0.0], 'true': [0.0, 8.074349270001139e-17], 'false,true,false': [0.0, 0.0]}
{'': [-2.3684757858670006e-16, 0.15161101541014763], 'false': [0.13617026655424694, 0.22531204463270182], 'false,false': [0.2175078201246366, 0.2529546166681929], 'false,false,false': [0.2529546166681929, nan], 'false,false,true': [0.013699403128676124, 0.2123486582913543], 'false,true': [0.12649964226263333, 0.1398374605215465], 'false,true,false': [0.023269667412550203, -6.28428127146315e-17], 'true': [-2.0185873175002846e-16, 0.0]}
{'': [0.10380622837370254, 0.12679495472714652], 'false': [0.10635138078574749, 0.21473208063531898], 'false,false': [0.2170117804392341, 0.21381921010626379], 'false,false,true': [0.24180343688595488, 0.0], 'false,false,false': [0.22247149219368192, 0.2080226608282052], 'false,true': [0.005731313280781121, 0.09996478811501718], 'true': [7.401486830834377e-17, 0.14876033057851246], 'false,true,true': [0.0, 0.006262141190338151]}
{'': [0.057070605148898335, 0.11105025724767527], 'false': [0.09319521095748083, 0.18874012244839458], 'false,false': [0.0011552209914039897, 0.19307171308190937], 'false,false,false': [0.1951131184077739, 0.18544705514788606], 'true': [0.00041159967368731287, 0.12098662391100527], 'false,false,true': [0.0, 0.00011539230876952966], 'true,true': [0.00041159967368731287, nan]}
{'': [0.0031708454010426074, 0.11575734645205318], 'false': [0.050171441645106236, 0.12339136689565056], 'false,false': [0.1388888888888889, 0.12271497996242922], 'false,false,false': [0.09841407562099021, 0.13072986828668706], 'true': [0.0021184066842345334, 0.0027682118272032152], 'true,false': [0.004195406346535854, 0.0012884299906778945], 'true,false,true': [0.0, 0.005592586341441608], 'true,true': [9.579397117264188e-05, 0.002657005186472735]}
{'': [0.10965737201242963, 0.11924764152199105], 'false': [-9.25185853854297e-18, 0.12187029839965983], 'false,false': [0.12187029839965983, nan], 'true': [0.06681357346464535, 0.0021860730475794766], 'true,true': [0.0021126279256108646, 0.07109082716943639], 'true,true,false': [9.45958593774332e-05, 0.07129112925995773], 'true,true,true': [0.0025112049228108724, 0.0003743757490892082]}
{'': [0.05204737463765716, 0.0895052758257928], 'false': [0.07767753174745148, 0.14402078460433784], 'false,false': [0.0002864168448388632, 0.1538018481892771], 'false,false,false': [0.1538018481892771, nan], 'false,true': [0.0394878800067626, 0.0004111169934506245], 'true': [0.13204468367565245, 0.0004634601364093246], 'false,true,true': [nan, 0.0394878800067625], 'false,false,true': [0.0, 4.958207174808604e-05]}
{'': [0.12789379366535464, 0.06985741550418925], 'true': [0.00044619709455788746, 0.21356340049765363], 'true,false': [0.0, 0.22299005086666684], 'false': [0.03325154031463083, 0.0940435949159344], 'false,false': [0.0, 0.09526154949966849], 'false,false,false': [0.07799172123242296, 0.12564071982970562], 'false,true': [0.005961603686742215, 0.03980675881536197], 'false,true,false': [0.005050488167174655, 0.03726525478844262]}
{'': [0.01776161701072795, 0.07636860418235623], 'false': [0.0366511375127051, 0.09757292802247076], 'false,false': [-4.625929269271485e-18, 0.09893365562606002], 'false,false,false': [0.08265910480580059, 0.13481906348236625], 'true': [0.02046717762535549, 7.602167409157441e-05], 'true,true': [0.0003572856056637569, 0.06260050182441228], 'true,true,false': [0.0, 0.07428366545411633], 'true,true,true': [4.824146330769524e-05, 0.0003113786851842576]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.103
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.14020021715079295;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.21042166237223958;  // std dev = 4.481, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7995984005289997;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.16036006395874375;  // std dev = 0.132, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.03745332157852191;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.20555676985438406;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22203310341295115;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.041550853014758755;  // std dev = 1.294, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | | else return 0.0861082392018003;  // std dev = 2.365, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6879285051376962;  // std dev = 0.242, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.14166116491702524;  // std dev = 0.038, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(J, K), complex(J, L) )
%   | | | then return -0.027516784360223073;  // std dev = 1.534, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1120410556291617;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else return 0.2996361051038324;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.35879986073830156;  // std dev = 0.289, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.5893037407966885;  // std dev = 0.078, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.006953148058358973;  // std dev = 2.324, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return 0.09481375309654179;  // std dev = 3.403, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.5621505180753539;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.1045161485913128;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.0032027559648038495;  // std dev = 2.340, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.1869037506202519;  // std dev = 1.736, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.34918544978655613;  // std dev = 0.038, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), enzyme(G, H) )
%   | | | then return -0.020081219531142547;  // std dev = 1.385, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | | else return 0.14051506079383855;  // std dev = 0.817, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( enzyme(A, I), location(A, J) )
%   | | | then return 0.16729022924218884;  // std dev = 2.164, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
%   | | | else return 0.0909735272977956;  // std dev = 3.092, 85.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=30 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), interaction(L, K) )
%   | | | then return 0.4225641508193858;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5051254375409311;  // std dev = 0.117, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return 0.0036100767633334536;  // std dev = 2.484, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.1117624304447694;  // std dev = 1.635, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.19360965552365408;  // std dev = 0.235, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.3087117267478351;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.05212551941848729;  // std dev = 1.145, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, G), enzyme(A, H) )
%   | then if ( interaction(I, A), phenotype(I, J) )
%   | | then return 0.0825906720857001;  // std dev = 0.317, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else if ( interaction(K, G), recursion_proteinclass(K, B) )
%   | | | then return 0.678768031130973;  // std dev = 0.288, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.197091481936629;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then return -0.03549031733179609;  // std dev = 0.296, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | | then return 0.3128307877072944;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.030400588815955996;  // std dev = 4.182, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2729888582985027;  // std dev = 0.076, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.27785422046554437;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5678742480471562;  // std dev = 0.840, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.16072166820957787;  // std dev = 0.073, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.24504004454010153;  // std dev = 0.049, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.2121753756681922;  // std dev = 1.275, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.01802088909578011;  // std dev = 2.755, 75.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.1485988333297837;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0037952846543230292;  // std dev = 1.182, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1727464491120504;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.1961930183266046;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.13170351594631835;  // std dev = 0.795, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( location(A, I), interaction(A, J) )
%   | | | then return 0.2958660977925209;  // std dev = 0.837, 25.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=24 */
%   | | | else return 0.4742841442028852;  // std dev = 1.070, 33.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=32 */
%   | | else return -0.13930719486780196;  // std dev = 0.036, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.27883253395623253;  // std dev = 0.075, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05814419946902796;  // std dev = 1.712, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return -0.05280665923679028;  // std dev = 1.734, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16068304685480694;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.07472964469790333;  // std dev = 0.467, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.22994957566066318;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.2355269386532993;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.048723721708098924;  // std dev = 1.598, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   | | else return 0.17735015781521804;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19137397764671615;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return 0.033960641737588025;  // std dev = 2.646, 79.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=30 */
%   | | | else return -3.189804088821615E-4;  // std dev = 2.490, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14022937891648146;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.19528471304884873;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.04243965682727033;  // std dev = 0.605, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07835169134836419;  // std dev = 0.003, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.005205760603854077;  // std dev = 1.266, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return -0.023845985282078028;  // std dev = 0.941, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.1637625703544103;  // std dev = 0.063, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.13590159181363243;  // std dev = 1.537, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.024354971604062456;  // std dev = 3.004, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '45.065', 'seconds']
Refined model CLL: -0.180457


******************************************
Best model found
******************************************
Results 

CLL : -0.187241 

AUC ROC : 0.982614 

AUC PR : 0.203753 

Precision : 0.144823 

Recall : 0.780919 

F1 : 0.244334 

Total Learning Time : 8.103 

Total Inference Time : 8.76651382446289 

Total revision time: 29.84699304962158
Best scored revision CLL: -0.176932


Results 

CLL : -0.187241 

AUC ROC : 0.982614 

AUC PR : 0.203753 

Precision : 0.144823 

Recall : 0.780919 

F1 : 0.244334 

Total Learning Time : 29.901312908172606 

Total Inference Time : 8.76651382446289 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.938
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14510545683864134;  // std dev = 4.851, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | | | else return 0.15323090231262584;  // std dev = 5.038, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6703345988241064;  // std dev = 3.411, 83.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=69 */
%   | | | else return -0.1610365127034906;  // std dev = 0.006, 140.000 (wgt'ed) examples reached here.  /* #neg=140 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.1168463752095521;  // std dev = 1.469, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.35321377852455527;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4442553256351732;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.3053664367462844;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.102737127546469;  // std dev = 4.321, 116.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6246676402984563;  // std dev = 1.899, 41.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=37 */
%   | | | else return -0.1409035467621713;  // std dev = 2.58e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10204328722108803;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1283331089266065;  // std dev = 1.300, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45856009864405933;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3117592215874256;  // std dev = 0.900, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6325228884470203;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.03189915392036783;  // std dev = 5.206, 239.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5234938228086707;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.020317576137586113;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.7821919491785401;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.36009605837856046;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.368598283881707;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.08343000678569572;  // std dev = 5.382, 226.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39425784631182803;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.2004675977487007;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.004390806618793153;  // std dev = 1.182, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2748509524684768;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3491014397128772;  // std dev = 0.185, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.29034007812203944;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.004075866096579617;  // std dev = 0.426, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 2.3046313161867804E-4;  // std dev = 2.190, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.28810005426046975;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.10491845224553381;  // std dev = 2.868, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.0664286124434672;  // std dev = 4.214, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.25111732734181935;  // std dev = 0.187, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.30411404893912697;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.469810804617156;  // std dev = 1.841, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else return -0.1810267127271937;  // std dev = 0.676, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.23290535051530692;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07340508188973241;  // std dev = 3.985, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18004655206019812;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.06610880383956587;  // std dev = 1.387, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4744117613960718;  // std dev = 1.634, 74.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=71 */
%   | | else return -0.15961971146172335;  // std dev = 0.295, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.24381117875550173;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.020638918709529292;  // std dev = 1.492, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18792482952824732;  // std dev = 0.091, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.19112851830108457;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.022749960856436963;  // std dev = 1.279, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.31462533912711665;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.023981619724260553;  // std dev = 1.630, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.204502437376329;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02554192126256609;  // std dev = 3.381, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | | | else return -0.004542517037067383;  // std dev = 1.475, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15247365492158588;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.22127632705982314;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.371870368537637;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.16334604104813108;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.009219625085946514;  // std dev = 2.280, 105.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17329315281483904;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020852042237443958;  // std dev = 3.294, 132.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=40 */
%   | | | else return 0.021432050310968755;  // std dev = 1.483, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.194', 'seconds']
Parameter learned model CLL:-0.201653 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.851, 82, 33], 'false,false,true,false': [5.038, 86, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.279, 9, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.411, 14, 69], 'false,false,true,false': [0.006, 140, 0], 'false,false,false,true': [1.469, 8, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.943, 1, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.321, 82, 34], 'false,true,false,true': [1.899, 4, 37], 'false,true,false,false': [2.58e-08, 80, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.195, 5, 2], 'false,false,false,true': [1.3, 6, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.038, 0, 5], 'true,false': [0.9, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [5.206, 182, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.537, 11, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.04, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.047, 0, 4], 'false,true': [5.382, 155, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.09, 3, 2], 'false,false,false,false': [1.182, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.028, 0, 4], 'true,true,false': [0.185, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.426, 1, 1], 'false,true': [2.19, 35, 12], 'false,false,true': [0.041, 0, 3], 'false,false,false,true': [2.868, 35, 20], 'false,false,false,false': [4.214, 97, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.187, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.841, 5, 33], 'true,false': [0.676, 89, 0], 'false,true': [0.036, 0, 3], 'false,false,true': [3.985, 81, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.018, 0, 3], 'true,false': [1.387, 3, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.634, 3, 71], 'false,true,false': [0.295, 169, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.492, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.091, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.027, 0, 3], 'false,true,true': [1.279, 36, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.63, 38, 17], 'false,false,true': [0.033, 0, 3], 'false,false,false,true': [3.381, 86, 40], 'false,false,false,false': [1.475, 12, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.05, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.024, 0, 3], 'false,true': [2.28, 76, 29], 'false,false,true': [0.029, 0, 3], 'false,false,false,true': [3.294, 92, 40], 'false,false,false,false': [1.483, 9, 4]}]
{'': [-1.6148698540002277e-16, 0.20826961801087093], 'false': [1.4802973661668753e-16, 0.2048019096038205], 'false,false': [0.20637718314372724, 0.1799307958477507], 'false,false,true': [0.20461247637051175, 0.20800859983875417], 'false,false,false': [0.22222222222222224, 0.14876033057851243], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [8.074349270001139e-17, 0.21492693720675143], 'false': [0.0, 0.21356920740035162], 'false,false': [0.21367737676434392, 0.21169179772130112], 'false,false,true': [0.14017318198972797, 2.9962222945251985e-07], 'false,false,false': [0.1961313547496685, 0.24999999999999994], 'true': [0.0, -9.868649107779169e-17], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.13017751479289935, 0.16323449779914004], 'false': [0.16108198042050795, 0.19508444188915977], 'false,false': [0.20408163265306117, 0.18778424665824767], 'false,false,true': [nan, 0.20408163265306117], 'false,false,false': [0.18778424665824767, nan], 'false,true': [0.16094080574900865, 0.1610956331378762], 'false,true,false': [0.08792494446912436, 8.326672684688674e-18], 'true': [0.09876543209876548, 0.18750000000000008]}
{'': [0.07281932054645858, 0.1342015477293723], 'false': [0.13040029162939212, 0.19358231584574273], 'false,false': [0.0, 0.19369706319112623], 'false,false,false': [0.16883573035167498, 0.0], 'false,true': [0.06205248690074452, 0.11338583565069077], 'true': [0.00028578709964079965, 0.115649613333937], 'false,true,true': [nan, 0.062052486900744636], 'false,false,true': [nan, 0.0]}
{'': [0.0003632130565223157, 0.1318960333323134], 'false': [0.12817306465046682, 0.18794225955185598], 'false,false': [0.0, 0.19430401037808395], 'false,false,false': [0.23748183720565902, 0.15532812672149604], 'true': [0.00022910495827577204, 0.0005519008766770861], 'true,true': [0.00022910495827577204, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03236202937550273, 0.1284741248985759], 'false': [0.10207309496120513, 0.13355496950896303], 'false,false': [0.000571207753509273, 0.13494254883055065], 'false,false,false': [0.14954207855290472, 0.12870171574645528], 'true': [0.005229518762501267, 0.07857160685530087], 'true,false': [0.0, 0.09054167725409884], 'true,true': [0.00019196889927483585, 0.006809276494846484], 'true,false,true': [nan, 0.0]}
{'': [0.11417763952475453, 0.12869661481143407], 'false': [0.00043354805084865516, 0.13126119885428109], 'false,false': [0.13126119885428109, nan], 'true': [0.07786488163723147, 0.005137599298433004], 'true,true': [0.0034009564057192565, 0.08915144342670515], 'true,true,false': [nan, 0.08915144342670538], 'true,true,true': [0.0034857200008309277, 0.0]}
{'': [0.14764124018704816, 0.10006380450745124], 'true': [0.00010748526121977704, 0.1748936203950104], 'false': [0.09648101464243455, 0.1622415961202573], 'false,false': [0.0, 0.1711641576377367], 'false,false,false': [0.1711641576377367, nan], 'false,true': [0.0360714506101455, 0.0005140325838312683], 'false,true,true': [nan, 0.03607145061014584], 'false,false,true': [0.0, nan]}
{'': [0.0008288199239697753, 0.07332219492837351], 'false': [0.043145233331701324, 0.0945846291947113], 'false,false': [0.00035950496906565305, 0.09588733594475728], 'false,false,false': [0.09069724588932321, 0.13595620180803752], 'false,true': [0.0347789728730255, 0.04893676768198907], 'false,true,false': [0.0, 0.04831806688674018], 'true': [0.0010455222523968813, 0.00024348259598003705], 'true,false': [nan, 0.00024348259598003705]}
{'': [0.022345369495948116, 0.07268897425601963], 'false': [0.049518786765722786, 0.0886694832710837], 'false,false': [0.00027883359512674566, 0.09002753018195377], 'false,false,false': [0.08222175135726721, 0.16928590123024556], 'true': [0.028785480329864516, 0.00018944791663157157], 'true,true': [0.0008248111304262375, 0.0], 'true,true,true': [0.0003509153302454889, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;complex(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 10.659
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.23652731347789074;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.13910131605189274;  // std dev = 6.513, 210.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=59 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.21947341221095448;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7117245520246258;  // std dev = 2.953, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.1592451621240383;  // std dev = 0.111, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.07685109628215891;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1631860979526562;  // std dev = 1.417, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.5553664367462844;  // std dev = 7.45e-09, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6159463602843244;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( location(A, G) )
%   | | | then return 0.1490493586037455;  // std dev = 4.009, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.14737194400567125;  // std dev = 0.702, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6417512918157182;  // std dev = 1.671, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14122330082048654;  // std dev = 0.035, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7438489526836944;  // std dev = 0.218, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18776616976015872;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.01610026468075849;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.44084146558364784;  // std dev = 0.057, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.5782422335063913;  // std dev = 1.241, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | | | else return -0.16354551507688828;  // std dev = 0.599, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return 0.1668734358431361;  // std dev = 1.770, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.07980592475734924;  // std dev = 3.692, 103.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=32 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37250825895004147;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.11244744311830893;  // std dev = 1.172, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.8196255838464341;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3352116127743647;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3194466677130665;  // std dev = 0.004, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.09958533382048124;  // std dev = 1.597, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return -0.002466815955597534;  // std dev = 2.670, 85.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=20 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.15678145313644248;  // std dev = 1.988, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.06703657136108851;  // std dev = 3.459, 98.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=30 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.2902892693722626;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.12821925444373267;  // std dev = 1.120, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.08577679661563024;  // std dev = 0.843, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2868979287199916;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2596602410600561;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I), phenotype(G, I) )
%   | | | then return -0.12888182860636596;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.031184808560981422;  // std dev = 1.423, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.10735391388133649;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1300234871764416;  // std dev = 1.665, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.003207246063686886;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.043822160254494945;  // std dev = 4.473, 191.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=57 */
%   | | | else return -0.047710023493196474;  // std dev = 1.538, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.22900127246808638;  // std dev = 0.042, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.39673345959941236;  // std dev = 1.043, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return 0.5549400730057256;  // std dev = 0.370, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.16197923538597905;  // std dev = 0.064, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2533352853441543;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.051505180993894145;  // std dev = 1.277, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.12870905131553795;  // std dev = 1.237, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.08277899177301008;  // std dev = 3.018, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   | | | else return 0.006918604345623727;  // std dev = 0.981, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16667903540529572;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.1897422981649122;  // std dev = 0.043, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.14918227306179166;  // std dev = 0.858, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.30629153668390907;  // std dev = 2.514, 50.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=41 */
%   | | | else return 0.4530862876469482;  // std dev = 0.488, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.14828279338144892;  // std dev = 0.030, 169.000 (wgt'ed) examples reached here.  /* #neg=169 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.15803387915356681;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.06374229566218982;  // std dev = 0.586, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1072076258869653;  // std dev = 0.939, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16682423531895635;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16474437932631691;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10094239975932344;  // std dev = 0.078, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.009957411760875412;  // std dev = 1.478, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.4189216703594909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.02473913966201982;  // std dev = 1.416, 48.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=17 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19713180962197138;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, A), enzyme(A, J) )
%   | | | then return -0.010580552245987997;  // std dev = 2.001, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | | | else return 0.023027838426064807;  // std dev = 2.883, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14502938992383152;  // std dev = 0.026, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.14345937301203213;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( complex(G, I) )
%   | | | then return 0.07380131746139978;  // std dev = 0.937, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return -0.03747820181957028;  // std dev = 0.722, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.026409941298724905;  // std dev = 1.805, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.074006121110506;  // std dev = 0.460, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.16787524726126;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.027280281787259348;  // std dev = 2.146, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | | | else return 0.03923334574312189;  // std dev = 2.749, 88.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.985', 'seconds']
Refined model CLL: -0.188794


******************************************
Best model found
******************************************
Results 

CLL : -0.192791 

AUC ROC : 0.988809 

AUC PR : 0.294357 

Precision : 0.186813 

Recall : 0.904255 

F1 : 0.309654 

Total Learning Time : 10.659 

Total Inference Time : 27.196404933929443 

Total revision time: 58.770033952713014
Best scored revision CLL: -0.188794


Results 

CLL : -0.192791 

AUC ROC : 0.988809 

AUC PR : 0.294357 

Precision : 0.186813 

Recall : 0.904255 

F1 : 0.309654 

Total Learning Time : 68.88152920913697 

Total Inference Time : 27.196404933929443 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.021
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.10814893509951115;  // std dev = 4.822, 124.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=31 */
%   | | | else return 0.1750503435502158;  // std dev = 5.544, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.5969331639813703;  // std dev = 1.334, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7763394517212514;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27633945172125146;  // std dev = 0.627, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7028932122548098;  // std dev = 3.217, 88.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=76 */
%   | | | else return -0.1601178806754753;  // std dev = 0.064, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.044467437835755505;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.8444674378357555;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5889391925840901;  // std dev = 0.099, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5920168459671142;  // std dev = 0.036, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.038003501224421365;  // std dev = 4.476, 161.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5394011338826554;  // std dev = 2.869, 58.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=48 */
%   | | | else return -0.14367852312830984;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7000180106933265;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.2037803741038563;  // std dev = 1.440, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43529812071494256;  // std dev = 0.083, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2306113890453688;  // std dev = 1.271, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5637717271193132;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6533327433552997;  // std dev = 0.849, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else return 0.043843891612216815;  // std dev = 5.108, 243.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.49043397719217297;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09472630143319091;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.12586936353042405;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3412960648687694;  // std dev = 0.097, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.28798048426293305;  // std dev = 0.915, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05152329495028503;  // std dev = 5.892, 287.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.06817784368527208;  // std dev = 0.621, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.08298774420189142;  // std dev = 1.734, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24835420076902928;  // std dev = 0.030, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20623908274473293;  // std dev = 1.467, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.35213665840243075;  // std dev = 0.049, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.019075458322289247;  // std dev = 2.686, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.20213291417798512;  // std dev = 0.951, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.020327575354755625;  // std dev = 2.319, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | | else return 0.07621863009990734;  // std dev = 4.656, 161.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.30275431744897113;  // std dev = 0.417, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.3073236251036907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23640150588067732;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.40958590761565883;  // std dev = 2.186, 39.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=33 */
%   | else return -0.1647600254432454;  // std dev = 0.565, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29348937839161204;  // std dev = 0.046, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06152510083994386;  // std dev = 4.424, 160.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.15521587339504161;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.08777704753737843;  // std dev = 1.246, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3910017035094286;  // std dev = 3.240, 94.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=82 */
%   | | else return -0.14511123419024194;  // std dev = 0.252, 192.000 (wgt'ed) examples reached here.  /* #neg=192 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.24601403290177537;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11536436226270685;  // std dev = 1.710, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09803439572414155;  // std dev = 0.816, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.014107170586908219;  // std dev = 0.427, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.23384152213789117;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.03959805013597349;  // std dev = 1.778, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.035945639536609314;  // std dev = 1.339, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | | else return -0.02778370027165279;  // std dev = 1.380, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22113613265681115;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04274316476447068;  // std dev = 3.948, 140.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=47 */
%   | | | else return -0.05232634087857077;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.07113681398445276;  // std dev = 1.237, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return 0.21092899159328718;  // std dev = 0.100, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21322467642183573;  // std dev = 0.173, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.025463336804487893;  // std dev = 2.625, 127.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18545041111198335;  // std dev = 0.033, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02283505245660231;  // std dev = 3.867, 157.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=47 */
%   | | | else return -0.05017673453308877;  // std dev = 1.578, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.368', 'seconds']
Parameter learned model CLL:-0.196501 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [1.155, 4, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.822, 93, 31], 'false,false,true,false': [5.544, 97, 45], 'false,false,false,true': [1.732, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.334, 2, 13], 'false,true,true': [0.114, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.627, 1, 1], 'false,false,true,true': [3.217, 12, 76], 'false,false,true,false': [0.064, 200, 0], 'false,false,false,true': [1.265, 8, 2], 'false,false,false,false': [0.0, 0, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.099, 0, 11], 'true,false': [0.036, 0, 6], 'false,true,true': [4.476, 127, 34], 'false,true,false,true': [2.869, 10, 48], 'false,true,false,false': [0.0, 88, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.44, 5, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.083, 0, 10], 'true,false': [1.271, 2, 7], 'false,true,true,true': [0.022, 0, 3], 'false,true,true,false': [0.849, 1, 21], 'false,true,false': [5.108, 185, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.944, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.097, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.915, 1, 10], 'false,true': [5.892, 205, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.621, 1, 1], 'false,false,false,true': [1.734, 18, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.03, 0, 5], 'true,true,false': [1.467, 2, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.049, 0, 2], 'false,true': [2.686, 51, 19], 'false,false,true': [0.951, 1, 8], 'false,false,false,true': [2.319, 47, 11], 'false,false,false,false': [4.656, 111, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.417, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [2.186, 6, 33], 'true,false': [0.565, 108, 0], 'false,true': [0.046, 0, 5], 'false,false,true': [4.424, 113, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.246, 2, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.24, 12, 82], 'false,true,false': [0.252, 192, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.71, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.816, 1, 9], 'true,false,true': [0.427, 2, 2], 'true,false,false': [0.199, 0, 5], 'false,true,true': [1.778, 46, 13], 'false,true,false,true': [1.339, 3, 8], 'false,true,false,false': [1.38, 48, 11], 'false,false,true': [0.038, 0, 5], 'false,false,false,true': [3.948, 93, 47], 'false,false,false,false': [1.579, 14, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [1.237, 2, 7], 'true,true,true,false': [0.1, 0, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.173, 0, 3], 'false,true': [2.625, 95, 32], 'false,false,true': [0.033, 0, 5], 'false,false,false,true': [3.867, 110, 47], 'false,false,false,false': [1.578, 15, 4]}]
{'': [0.05246913580246885, 0.2087618958869648], 'false': [0.23140495867768587, 0.2032090941099553], 'false,true': [0.22222222222222224, 0.0], 'false,false': [0.20408163265306153, 0.18749999999999983], 'false,false,true': [0.1875000000000012, 0.21647490577266523], 'false,false,false': [0.18749999999999983, nan], 'true': [-1.4802973661668753e-16, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.09617998404000237, 0.19983074051303842], 'false': [0.09463599994951966, 0.1953240132087948], 'false,false': [0.19398290530755025, 0.22222222222222232], 'false,false,false': [0.15999999999999995, 0.0], 'false,false,true': [0.11759324348002793, 2.0200630326008273e-05], 'true': [0.0, 0.11866669295533581], 'false,true': [0.0032337464495867385, 0.14727578020446733], 'false,true,false': [0.0, 0.1963677069392897]}
{'': [0.000656220315229331, 0.15073385081543622], 'false': [0.1472255094601651, 0.22953800979653888], 'false,false': [0.22953800979653888, nan], 'false,false,true': [0.0, 0.2304170539104751], 'false,true': [0.12445660116185915, 0.16811611157591158], 'false,true,false': [0.1419517917084966, -7.317379025938531e-17], 'true': [0.0008908534942498779, 0.00021993057797760804]}
{'': [0.09578703816937799, 0.13370720035715183], 'false': [0.13045829372892767, 0.20485575622994867], 'false,false': [0.0, 0.21116648731900522], 'false,false,false': [0.2040816326530612, 0.22294778005553922], 'false,true': [0.029700334121400617, 0.10738297519662036], 'true': [0.0006847998670786338, 0.1794053191430351], 'false,true,true': [0.0001585681582183899, 0.03276621567723683], 'false,false,true': [nan, 0.0]}
{'': [0.047668977198222245, 0.12381377901499321], 'false': [0.12097759515389621, 0.14133784113490067], 'false,false': [0.19271867176663005, 0.1366485787692402], 'false,false,true': [nan, 0.19271867176663005], 'false,false,false': [0.1366485787692402, nan], 'true': [0.0013371669295625071, 0.07604741990746539], 'true,true': [0.0013371669295625071, nan]}
{'': [0.12181824383248913, 0.12030111911980615], 'true': [0.1349371318606532, 0.001205801546673213], 'true,true': [0.00017491456586883337, 0.1956384091870266], 'false': [0.1030848300483938, 0.12525555199710214], 'false,false': [0.10058926280055377, 0.12536342140313533], 'false,false,false': [0.09270034160226495, 0.13466162487326136], 'true,false': [nan, 0.001205801546673213]}
{'': [0.09819209254432625, 0.12022077018782595], 'false': [0.0004197789238437388, 0.12233402310239909], 'false,false': [0.12233402310239909, nan], 'true': [0.08862482600640299, 0.0029509933435036377], 'true,true': [0.010866386140848852, 0.11580045119970135], 'true,true,false': [-9.25185853854297e-18, 0.12256583271475548], 'true,true,true': [0.011589506972794424, 0.0]}
{'': [0.08243098560088725, 0.10476087154195654], 'false': [0.10035491744217077, 0.15235960980247115], 'false,false': [0.0, 0.1538488194095973], 'false,false,false': [0.1538488194095973, nan], 'false,true': [0.11170700062928303, 0.00033137250156930104], 'false,true,true': [nan, 0.11170700062928307], 'true': [0.0, 0.1034551090804796], 'false,false,true': [0.0, nan]}
{'': [0.05274289320660285, 0.0877385717113891], 'false': [0.05356713261980279, 0.11288862625566819], 'false,false': [0.00028774685609071483, 0.11535361400646264], 'false,false,false': [0.11135489460597837, 0.1384462235924741], 'false,true': [0.05356806823572396, 0.05334840831427149], 'false,true,false': [0.16288888254042103, 0.032287383516586096], 'true': [0.06658350667767168, 0.0365985257723673], 'true,false': [0.045638914701670336, 0.007907021183800022]}
{'': [0.1071942085336644, 0.0802711201203454], 'true': [0.12174338850379014, 0.009928047082292613], 'true,true': [0.12174338850379014, nan], 'true,true,true': [0.16996406927628405, 0.0016756961393176728], 'false': [0.054270539119486046, 0.09767494411572676], 'false,false': [0.00022061468840114395, 0.09964051275147946], 'false,false,false': [0.0952563879504028, 0.13111198274033622]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, F), interaction(G, A).;true;true
9;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true


Refining candidate
***************************
Model training time 13.943
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(I, B), complex(H, J) )
%   | | | then return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return 0.06368253193745677;  // std dev = 6.427, 253.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=52 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.24276431971489695;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6676868915301604;  // std dev = 3.389, 90.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=76 */
%   | | | else return -0.15317223177972783;  // std dev = 0.192, 166.000 (wgt'ed) examples reached here.  /* #neg=166 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.017984333822928685;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.2580193346218546;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4871780842974612;  // std dev = 0.264, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5900930121402786;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.13130266448489053;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.0907064596574031;  // std dev = 4.017, 114.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.606389693224002;  // std dev = 2.279, 54.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=48 */
%   | | | else return -0.13601229015568111;  // std dev = 0.181, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.2319870646049569;  // std dev = 1.338, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.08803858408778738;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.228084242951453;  // std dev = 0.058, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44520054019442545;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4447626234753446;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4477298454317628;  // std dev = 0.104, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.32510197793541995;  // std dev = 2.150, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( location(A, H), interaction(A, I) )
%   | | | then return -0.06454369058978113;  // std dev = 2.235, 95.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=10 */
%   | | | else return 0.11521382127768691;  // std dev = 4.482, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.49759766550723916;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.29157006935321195;  // std dev = 0.944, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.016119637137380596;  // std dev = 1.132, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.34603840956872733;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.33520120589449415;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.31434407246895835;  // std dev = 2.032, 33.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | else return 0.6136066730003701;  // std dev = 0.866, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.14208888235369585;  // std dev = 0.505, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | | else return -0.2670014960300577;  // std dev = 0.126, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), phenotype(K, L) )
%   | | | then return 0.005527222366795853;  // std dev = 3.089, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | | else return 0.08757843027311117;  // std dev = 1.633, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | else return -0.13231469019568357;  // std dev = 0.563, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.264341166310345;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.019649732634509372;  // std dev = 1.063, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.4644445157653681;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.32413631168958573;  // std dev = 0.118, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2651141885525055;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.15396365512809118;  // std dev = 2.284, 44.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=23 */
%   | | | else return -0.12643586315889704;  // std dev = 0.205, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.009871180410940584;  // std dev = 2.767, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.0865307941665194;  // std dev = 3.340, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.21247124477849216;  // std dev = 0.247, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.020426382783686192;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3636784357150895;  // std dev = 1.825, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.13211338599385034;  // std dev = 0.060, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2091352058661493;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( complex(G, I), complex(A, J) )
%   | | | then return -0.03895893307167088;  // std dev = 1.427, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.09258970469074505;  // std dev = 3.269, 97.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=37 */
%   | | else if ( enzyme(A, K) )
%   | | | then return -0.1711002610866345;  // std dev = 0.602, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.05402223194031408;  // std dev = 1.035, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17757681760775268;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, E) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return -0.0032304578033535147;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.11800654027208224;  // std dev = 0.860, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1861489104078229;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.3119644276251306;  // std dev = 0.304, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.13222450539835254;  // std dev = 0.040, 172.000 (wgt'ed) examples reached here.  /* #neg=172 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.28669300046172574;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.06748393546415728;  // std dev = 0.823, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.30086833209300473;  // std dev = 0.517, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then return -0.17597524026170705;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.16219608026608737;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.2182044098985147;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(H, A), interaction(A, I) )
%   | then if ( interaction(A, A) )
%   | | then return -0.14519187017867244;  // std dev = 0.145, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( location(A, J) )
%   | | | then return -0.005948457170257889;  // std dev = 2.131, 109.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=30 */
%   | | | else return 0.2180357820263037;  // std dev = 0.413, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return -0.007736358889915085;  // std dev = 0.871, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.03674174626334876;  // std dev = 3.054, 113.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=39 */
%   | | | else return -0.011163537206954758;  // std dev = 1.858, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.16094105996456934;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), enzyme(F, G) )
%   | | | then return -0.26778221141395464;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.16445903197736889;  // std dev = 0.055, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1901151041153266;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(I, A) )
%   | then if ( interaction(A, J), interaction(J, K) )
%   | | then return -0.01523592402013073;  // std dev = 0.212, 117.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=31 */
%   | | else return -0.17874520261695595;  // std dev = 0.716, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15218036678017222;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return -0.005690642164617347;  // std dev = 3.231, 139.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=39 */
%   | | | else return 0.023076737857959852;  // std dev = 1.708, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.799', 'seconds']
Refined model CLL: -0.182626


******************************************
Best model found
******************************************
Results 

CLL : -0.167558 

AUC ROC : 0.990001 

AUC PR : 0.35988 

Precision : 0.272727 

Recall : 0.837736 

F1 : 0.411492 

Total Learning Time : 13.943 

Total Inference Time : 19.181647062301636 

Total revision time: 56.30029894256592
Best scored revision CLL: -0.182626


Results 

CLL : -0.167558 

AUC ROC : 0.990001 

AUC PR : 0.35988 

Precision : 0.272727 

Recall : 0.837736 

F1 : 0.411492 

Total Learning Time : 66.41179419898987 

Total Inference Time : 19.181647062301636 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.404
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06867525088898606;  // std dev = 2.513, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.1769895148096562;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17481560176617897;  // std dev = 3.603, 60.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8185113126624334;  // std dev = 0.993, 53.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=52 */
%   | | | else return -0.16262962450466906;  // std dev = 0.064, 153.000 (wgt'ed) examples reached here.  /* #neg=153 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0697801556814092;  // std dev = 1.948, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.13550888121959406;  // std dev = 3.240, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462844;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0622045566304341;  // std dev = 2.098, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6594610017869759;  // std dev = 1.012, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14360809103073216;  // std dev = 5.58e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1413678200143552;  // std dev = 3.629, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.7977145340616874;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.41751358415830986;  // std dev = 3.33e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4175135841583099;  // std dev = 1.49e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3924361677975635;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3016446621531429;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.0647857636509102;  // std dev = 4.210, 179.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5202413897125144;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.04637003012711428;  // std dev = 1.902, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.15099567679492717;  // std dev = 3.105, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.32071184716014967;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32071184716014967;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.06699951847186024;  // std dev = 4.216, 181.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.39192408905388654;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.05767898428116648;  // std dev = 3.691, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | | | else return 0.12901333658724348;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36149792325532715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.30833508291240824;  // std dev = 0.075, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.25517224256948945;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.3182216850747083;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09971427607772486;  // std dev = 1.258, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.019074242558275292;  // std dev = 2.807, 94.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=23 */
%   | | | else return 0.08799435482270394;  // std dev = 4.586, 138.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2312703009520554;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2208421143042441;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6208098124377901;  // std dev = 1.050, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19144115823172955;  // std dev = 0.721, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20975771563253556;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.035753002041489304;  // std dev = 3.392, 128.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17398314403404624;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.176058713174867;  // std dev = 0.004, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.44585260233838897;  // std dev = 0.771, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14397351693856972;  // std dev = 0.589, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1852556553474214;  // std dev = 0.025, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.01724932417527769;  // std dev = 3.147, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15224278546843084;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.2558820734386501;  // std dev = 0.547, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.16609755405704607;  // std dev = 0.019, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07530688947425007;  // std dev = 0.471, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2331598413883037;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.015035291824272644;  // std dev = 1.229, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.15287820949178987;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0022798900872983262;  // std dev = 2.771, 137.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=36 */
%   | | | else return -0.006014124789542926;  // std dev = 3.211, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13184851911447254;  // std dev = 0.000260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14371925922154502;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1319435361535235;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1471967204588623;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01171366969725863;  // std dev = 1.354, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.032554759340046514;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.024237905385347747;  // std dev = 2.692, 118.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=36 */
%   | | | else return 0.015605405751824923;  // std dev = 3.112, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.667', 'seconds']
Parameter learned model CLL:-0.174466 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.513, 30, 8], 'false,false,true,false': [5.475, 94, 44], 'false,false,false,true': [3.603, 41, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [2.98e-08, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.993, 1, 52], 'false,false,true,false': [0.064, 153, 0], 'false,false,false,true': [1.948, 16, 5], 'false,false,false,false': [3.24, 35, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.0, 0, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.098, 27, 8], 'false,true,false,true': [1.012, 1, 48], 'false,true,false,false': [5.58e-08, 105, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.629, 41, 20], 'false,false,false,true': [0.0, 0, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [3.33e-08, 0, 9], 'true,false': [1.49e-08, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.804, 2, 3], 'false,true,false': [4.21, 127, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.902, 14, 5], 'false,false,false,false': [3.105, 27, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.0, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.0, 0, 9], 'false,true': [4.216, 125, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.691, 48, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [7.45e-09, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.075, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.054, 0, 3], 'false,true': [1.258, 24, 3], 'false,false,true': [7.45e-09, 0, 6], 'false,false,false,true': [2.807, 71, 23], 'false,false,false,false': [4.586, 92, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.118, 0, 12], 'true,true,true,false': [0.028, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.05, 1, 36], 'true,false': [0.721, 112, 0], 'false,true': [0.0, 0, 5], 'false,false,true': [3.392, 92, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.004, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.771, 0, 56], 'false,true,false': [0.589, 120, 0], 'false,false,true,true': [0.025, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.147, 48, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.024, 0, 9], 'true,false,true': [0.547, 1, 1], 'true,false,false': [0.019, 0, 4], 'false,true,true': [0.471, 15, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.229, 42, 14], 'false,false,true': [3.73e-09, 0, 5], 'false,false,false,true': [2.771, 101, 36], 'false,false,false,false': [3.211, 53, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.00026, 0, 5], 'true,true,true,false': [0.022, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.024, 0, 4], 'false,true': [1.354, 51, 17], 'false,false,true': [0.913, 1, 5], 'false,false,false,true': [2.692, 82, 36], 'false,false,false,false': [3.112, 50, 20]}]
{'': [-2.5376526277146434e-16, 0.2174818597151309], 'false': [-1.4802973661668753e-16, 0.2110020478779761], 'false,false': [0.2081611570247941, 0.2185223725286156], 'false,false,false': [0.21638888888888838, 0.25], 'false,false,true': [0.16620498614958465, 0.21718126444024458], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [6.344131569286608e-17, 0.1963237121103165], 'false': [7.401486830834377e-17, 0.19234889750211587], 'false,false': [0.188758490861385, 0.20225298117206103], 'false,false,false': [0.18076525785341455, 0.21000000000000013], 'false,false,true': [0.018620259480371448, 2.6382536970083316e-05], 'false,true': [0.0, 0.0], 'true': [0.0, 9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [-2.5376526277146434e-16, 0.1624617100117056], 'false': [0.1430773363146445, 0.21829222536814444], 'false,false': [0.2151135403881016, 0.0], 'false,false,true': [0.0, 0.21587555873026162], 'false,true': [0.125713822151108, 0.1465659935841788], 'false,true,false': [0.020917819945723018, 2.960594732333751e-17], 'false,false,false': [0.0, nan], 'true': [0.0, -1.1102230246251565e-16]}
{'': [1.2688263138573217e-16, 0.13121929129332924], 'false': [0.10132363409817235, 0.21662048769531997], 'false,false': [0.0026382505084956154, 0.21973695559380832], 'false,false,false': [0.19041552920589347, 0.22959183673469358], 'false,true': [0.10884110699935745, 0.09901221269373917], 'false,true,true': [0.0, 0.12923547881636543], 'false,false,true': [0.0, 0.0], 'true': [1.2335811384723962e-16, 4.4408920985006264e-17]}
{'': [-3.172065784643304e-17, 0.1272898186967046], 'false': [0.09818036363311704, 0.20149755842910624], 'false,false': [0.0012677958488830077, 0.20482372674216723], 'false,false,false': [0.20332768591471378, 0.25], 'false,false,true': [0.0, 0.0], 'true': [-2.2204460492503132e-17, -3.700743415417188e-17], 'true,true': [-2.2204460492503132e-17, nan]}
{'': [0.0018504680673181925, 0.11940930671588788], 'false': [0.05862755331786472, 0.12354083644207954], 'false,false': [9.25185853854297e-18, 0.12577623741724805], 'false,false,false': [0.08384826705675946, 0.1524113077803472], 'true': [0.001384304127343694, 0.0019515596623745912], 'true,false': [0.002119715694995028, 0.0009673992457746583], 'true,false,true': [0.0028262875933266624, 0.0], 'true,true': [9.25185853854297e-18, 0.0]}
{'': [0.12581745558482832, 0.08758366812252821], 'true': [0.053078134805390004, 0.004636420580542803], 'false': [-5.551115123125783e-18, 0.08986664800247794], 'false,false': [0.08986664800247794, nan], 'true,true': [0.0010638369022649458, 0.0333209647182589], 'true,true,false': [0.0, 0.029775114851003093], 'true,true,true': [0.0011605267459561346, 0.0003904860600362353]}
{'': [2.3737888974433615e-06, 0.09839871702165179], 'false': [0.08081796421260502, 0.14226643977723138], 'false,false': [0.0003002851842510909, 0.1456354541319212], 'false,false,false': [0.1456354541319212, nan], 'false,true': [0.01060321192385229, 0.0028910323926947296], 'false,true,true': [nan, 0.010603211923852194], 'false,false,true': [0.0003002851842510909, nan], 'true': [0.0, 2.1539936291651665e-06]}
{'': [0.039712023263346864, 0.06937463022994261], 'false': [0.025818901332106094, 0.08421439395131135], 'false,false': [2.7755575615628915e-18, 0.08567167150480724], 'false,false,false': [0.056053361928102, 0.14121184051350616], 'true': [6.608199541246103e-05, 0.0895332140314601], 'true,false': [0.14970259791610846, 9.29200820004375e-05], 'false,true': [0.013885692563285125, 0.028086480267173225], 'false,true,false': [0.0, 0.0269654024981296]}
{'': [0.0001233312090032555, 0.07506465353221811], 'false': [0.026964339528586758, 0.09167384403227996], 'false,false': [0.1388888888888889, 0.0900781979453922], 'false,false,false': [0.06142888162819672, 0.13832598651441214], 'true': [7.73897986054095e-05, 0.00013926669436366973], 'true,true': [9.294141150753207e-05, 0.0], 'true,true,true': [1.354235656669811e-08, 0.00015974964924475588], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 7.695
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08921948595311936;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.02481560176617899;  // std dev = 2.236, 36.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=6 */
%   | | | else return 0.15531874642026658;  // std dev = 6.654, 212.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=63 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.7609104304538484;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8410920193376114;  // std dev = 0.049, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15663011036744284;  // std dev = 0.115, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.24993561619976365;  // std dev = 2.870, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.15396038400162143;  // std dev = 2.026, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5771378616713095;  // std dev = 0.085, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.2211219093766486;  // std dev = 1.088, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.01220526947065819;  // std dev = 1.765, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6433937641034462;  // std dev = 1.402, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.13824277717342257;  // std dev = 0.073, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5553664367462845;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1525960698453086;  // std dev = 3.566, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.8013487765088297;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4248285067514247;  // std dev = 0.025, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.39627362918364417;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6056734277964041;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.11940907983022797;  // std dev = 0.118, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.09466618401386748;  // std dev = 4.083, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.41751358415830997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5174383200049533;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.04639385636672685;  // std dev = 1.854, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.19892151609670883;  // std dev = 2.959, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3408200522281509;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3191203434721994;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.31459555179137805;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.04441058990775588;  // std dev = 0.293, 208.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3899180420088316;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.18349629491434585;  // std dev = 2.268, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.0752824029852665;  // std dev = 2.695, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.26622718720590616;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.31273908578068843;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), interaction(A, A) )
%   | | | then return -0.15057024433494295;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.1094080520075832;  // std dev = 0.841, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.056288068011931015;  // std dev = 0.686, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.10365401675733117;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2525453563414084;  // std dev = 0.010, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), phenotype(A, M) )
%   | | | then return 0.009445149678671152;  // std dev = 2.838, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.0728277083812626;  // std dev = 4.603, 166.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=55 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.236232963551726;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11960619188164805;  // std dev = 0.833, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.6120025106594329;  // std dev = 0.129, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | else return -0.20612052197407602;  // std dev = 0.088, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.20763590411471303;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4955628661180027;  // std dev = 0.108, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.15053411194821342;  // std dev = 0.036, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.026634336478007524;  // std dev = 1.734, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.09916169712215954;  // std dev = 1.456, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16723806960702436;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17521101376165643;  // std dev = 0.021, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.374659571806058;  // std dev = 0.285, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.12735703037545687;  // std dev = 0.179, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( interaction(A, I), complex(A, J) )
%   | | | then return 0.01940896756836563;  // std dev = 0.932, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.11513167208076701;  // std dev = 2.128, 44.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=19 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.241586699660661;  // std dev = 0.030, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return -0.12083452891844416;  // std dev = 1.288, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.03595325486349827;  // std dev = 2.759, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16683360810174985;  // std dev = 0.031, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.10940858340172646;  // std dev = 0.428, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.19666646083414777;  // std dev = 0.068, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.057403493442243575;  // std dev = 0.118, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2744091716946129;  // std dev = 0.060, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.004435751201831236;  // std dev = 1.387, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.016184663620058732;  // std dev = 0.919, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.014418288224707651;  // std dev = 2.536, 110.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=27 */
%   | | | else return 0.04234550916462577;  // std dev = 3.130, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.156188328096992;  // std dev = 0.033, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, D), enzyme(A, F) )
%   | | then if ( interaction(G, A), complex(D, H) )
%   | | | then return -0.015400971514705509;  // std dev = 0.791, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.04976785281150504;  // std dev = 1.030, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( enzyme(A, I), complex(D, J) )
%   | | | then return -0.1516709877851486;  // std dev = 0.764, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.028202091982160768;  // std dev = 1.253, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | else if ( complex(A, K), phenotype(A, L) )
%   | | then if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.09378465928612734;  // std dev = 0.797, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.04442533592137971;  // std dev = 1.001, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(P, A), phenotype(P, Q) )
%   | | | then return -0.005687408704754886;  // std dev = 1.511, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.04400123886566622;  // std dev = 3.205, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '22.479', 'seconds']
Refined model CLL: -0.189295


******************************************
Best model found
******************************************
Results 

CLL : -0.195127 

AUC ROC : 0.981546 

AUC PR : 0.238068 

Precision : 0.137805 

Recall : 0.815884 

F1 : 0.235785 

Total Learning Time : 7.695 

Total Inference Time : 7.458693742752075 

Total revision time: 26.957872652053833
Best scored revision CLL: -0.174466


Results 

CLL : -0.195127 

AUC ROC : 0.981546 

AUC PR : 0.238068 

Precision : 0.137805 

Recall : 0.815884 

F1 : 0.235785 

Total Learning Time : 37.06936790847779 

Total Inference Time : 7.458693742752075 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.537
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06782635445435108;  // std dev = 3.205, 62.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | | else return 0.16047451649486058;  // std dev = 5.216, 129.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.09499104036267027;  // std dev = 2.621, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.19148226843284558;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.636140078877621;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8033751461126027;  // std dev = 1.393, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15889909560374726;  // std dev = 0.066, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.0811920138414907;  // std dev = 1.953, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.11342129278393626;  // std dev = 2.257, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5683938064673298;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.37583801773649855;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.018979613549847698;  // std dev = 2.847, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6215013218414468;  // std dev = 1.673, 45.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=42 */
%   | | | else return -0.1420429480738132;  // std dev = 2.11e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6471907443076929;  // std dev = 0.225, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1702356060586499;  // std dev = 2.399, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.1187510720643807;  // std dev = 1.448, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4211339924909557;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.20858987479629418;  // std dev = 1.486, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5506749251041902;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4789597065677657;  // std dev = 0.848, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.054068346504464515;  // std dev = 4.339, 187.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.39536559516751046;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5130325590556201;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1424807344898034;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.1337881954646885;  // std dev = 2.132, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.349005981181695;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.40713308446324437;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.054105412569837405;  // std dev = 4.511, 199.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.30572573096348776;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3462501608984458;  // std dev = 0.057, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.0328441524755433;  // std dev = 2.574, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.27736366107827476;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.24766787241816912;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.33746309627069526;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.24491771783446503;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.32907876682449766;  // std dev = 0.057, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3244139495786439;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.024406302903429888;  // std dev = 1.238, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3266671685960409;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05801023378656404;  // std dev = 2.217, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.05248097641427881;  // std dev = 4.566, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24720815502723253;  // std dev = 0.156, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2100522090906427;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26675497184337427;  // std dev = 0.000655, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5679286409473728;  // std dev = 1.365, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18886661065360896;  // std dev = 0.880, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.25451635067018685;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.11989351559435353;  // std dev = 3.173, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1664453617539704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.05665683710037143;  // std dev = 1.249, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40119512447821004;  // std dev = 1.821, 60.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=56 */
%   | | else return -0.1432239626539854;  // std dev = 0.270, 146.000 (wgt'ed) examples reached here.  /* #neg=146 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.17067168913551378;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.11934931845990282;  // std dev = 0.736, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.004958919441850276;  // std dev = 2.513, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16664741003460035;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19984735360283157;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1862127638922108;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.08854087570662643;  // std dev = 0.307, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2632161308542525;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.035190340023211114;  // std dev = 1.530, 93.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20014163412439134;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04451844479756934;  // std dev = 2.766, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
%   | | | else return 0.026513072946019567;  // std dev = 2.473, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.144920815482346;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14448967577613409;  // std dev = 0.023, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13839374650874925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16435365060690926;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16707039939055493;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.01191208010514181;  // std dev = 1.782, 94.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17004429806341595;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.020186070868337357;  // std dev = 2.771, 102.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=31 */
%   | | | else return 0.06837915228629224;  // std dev = 2.375, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.162', 'seconds']
Parameter learned model CLL:-0.181962 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.205, 49, 13], 'false,false,true,false': [5.216, 90, 39], 'false,false,false,true': [2.621, 29, 9], 'false,false,false,false': [1.414, 6, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.957, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 3], 'false,false,true,true': [1.393, 2, 52], 'false,false,true,false': [0.066, 138, 0], 'false,false,false,true': [1.953, 16, 5], 'false,false,false,false': [2.257, 19, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.033, 0, 11], 'true,false': [0.894, 1, 4], 'false,true,true': [2.847, 63, 14], 'false,true,false,true': [1.673, 3, 42], 'false,true,false,false': [2.11e-08, 93, 0], 'false,false,true,true': [0.225, 0, 3], 'false,false,true,false': [2.399, 16, 9], 'false,false,false,true': [1.448, 7, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.024, 0, 6], 'true,false': [1.486, 3, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.848, 1, 6], 'false,true,false': [4.339, 138, 49], 'false,false,true,true': [0.0, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.826, 10, 5], 'false,false,false,false': [2.132, 14, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.096, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.089, 0, 6], 'false,true': [4.511, 143, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.057, 0, 2], 'false,false,false,true': [2.574, 27, 9], 'false,false,false,false': [1.225, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.004, 0, 5], 'true,true,false': [0.078, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.057, 0, 3], 'true,false,false': [0.114, 0, 4], 'false,true': [1.238, 20, 5], 'false,false,true': [0.037, 0, 5], 'false,false,false,true': [2.217, 34, 13], 'false,false,false,false': [4.566, 119, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.156, 0, 13], 'true,true,true,false': [0.043, 0, 3], 'true,true,false,true': [0.000655, 0, 3], 'true,true,false,false': [1.365, 1, 33], 'true,false': [0.88, 101, 0], 'false,true': [0.029, 0, 3], 'false,false,true': [3.173, 50, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.249, 2, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.821, 4, 56], 'false,true,false': [0.27, 146, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.736, 1, 2], 'false,false,false,true': [2.513, 35, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.068, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.05, 0, 5], 'false,true,true': [0.307, 16, 1], 'false,true,false,true': [0.171, 0, 6], 'false,true,false,false': [1.53, 76, 17], 'false,false,true': [0.025, 0, 3], 'false,false,false,true': [2.766, 60, 31], 'false,false,false,false': [2.473, 30, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.056, 0, 8], 'true,true,true,false': [0.023, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.008, 0, 2], 'true,false': [0.037, 0, 3], 'false,true': [1.782, 70, 24], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [2.771, 71, 31], 'false,false,false,false': [2.375, 23, 12]}]
{'': [-2.3684757858670006e-16, 0.20581424406497328], 'false': [-2.5376526277146434e-16, 0.19659628557305403], 'false,false': [0.19813053370247607, 0.19013128112267944], 'false,false,true': [0.1657127991675333, 0.21092482422931366], 'false,false,false': [0.18074792243767326, 0.2222222222222221], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375000000022, 0.20057133612285324], 'false': [-6.344131569286608e-17, 0.19584946664884204], 'false,false': [0.19730597783943873, 0.1897694922112616], 'false,false,true': [0.035910502197853245, 3.1183976295088904e-05], 'false,false,false': [0.18167197668744167, 0.19584568140607528], 'true': [0.0, 0.07638888888888899], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 0.0]}
{'': [0.058032591649350596, 0.15027031200194746], 'false': [0.13474008886868696, 0.2261239945881978], 'false,false': [0.2291793021462391, 0.209814558519089], 'false,false,true': [0.016863406918264268, 0.2302836877269356], 'false,false,false': [0.209814558519089, nan], 'false,true': [0.10528392787889893, 0.1484049073451357], 'false,true,false': [0.06221717783522899, 4.775152794086695e-18], 'true': [9.697849248499227e-05, 0.16000000000000006]}
{'': [0.13279597809965468, 0.1255689092640223], 'true': [9.207697910003827e-05, 0.18408959467106456], 'false': [0.1076718669983262, 0.20854163917757865], 'false,false': [0.003076780975699004, 0.21887027511839996], 'false,false,false': [0.22223008007022393, 0.21643893100739897], 'false,true': [0.09037070618082696, 0.10068973345491558], 'false,true,true': [0.0, 0.10263792299258638], 'false,false,true': [0.0, 0.0]}
{'': [0.0019538465584257795, 0.11891423474919895], 'false': [0.1022474864208519, 0.19181752610774488], 'false,false': [0.0014597594858251812, 0.20073402612496893], 'false,false,false': [0.18398102002435932, 0.2500036712252101], 'true': [0.0010271984620915386, 0.0013165626213849275], 'false,false,true': [0.0, 0.001642229421553329], 'true,true': [0.0010271984620915386, nan]}
{'': [0.0030172689338078817, 0.11451082206372958], 'false': [0.06132392624291407, 0.11987793565722048], 'false,false': [0.00027487848035108177, 0.12097656265946205], 'false,false,false': [0.10456615133000285, 0.12561613785360634], 'true': [0.0026484869125546623, 0.0027775642592844235], 'true,false': [0.0021476118820228096, 0.0032734390370449673], 'true,true': [3.556196959741964e-06, 0.0020172158801762077], 'true,false,true': [0.0, 0.0010927119675880892]}
{'': [0.11831509486957127, 0.1205056574777483], 'false': [0.0002866181547563444, 0.12431095349957327], 'false,false': [0.12431095349957327, nan], 'true': [0.0598313197911519, 0.007675480379250916], 'true,true': [0.0018587552614760389, 0.05713560961614335], 'true,true,false': [1.4305283353259016e-07, 0.054822467910616936], 'true,true,true': [0.001883412685824712, 0.0006301979138970496]}
{'': [0.09387149461742078, 0.08922607540018834], 'true': [0.0, 0.11991890903557775], 'false': [0.07764102408515955, 0.1358532580593778], 'false,false': [0.15125267870026227, 0.1343321946091492], 'false,false,true': [0.0, 0.18064219205535123], 'false,false,false': [0.1343321946091492, nan], 'false,true': [0.05528696891430638, 0.0004998136246992121], 'false,true,true': [nan, 0.0552869689143065]}
{'': [0.0005671298628050769, 0.06824033143872503], 'false': [0.026212881432479886, 0.10183397595320653], 'false,false': [0.00020254150098729848, 0.10355242995977235], 'false,false,false': [0.08405955959616054, 0.14556516586680865], 'false,true': [0.0055278473861773165, 0.029016993248124692], 'false,true,false': [0.004878065179971626, 0.025177590605976564], 'true': [0.0004597059508524348, 0.0004481141694983361], 'true,false': [0.0, 0.0005067533306351901]}
{'': [0.00042289529678570664, 0.07153136488753893], 'false': [0.03378427265101474, 0.09597490781755202], 'false,false': [0.00015677372448349067, 0.09766770934476049], 'false,false,false': [0.0752708118357508, 0.16120945279339252], 'true': [0.00034114866191957524, 0.00046090007523633125], 'true,true': [0.0003654027729289411, 0.00016948256574803497], 'true,true,true': [0.00038925865403948226, 0.00026983054332974446], 'true,true,false': [0.0, 2.9584975026829274e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.694
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), enzyme(A, J) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.015011680197551485;  // std dev = 2.597, 51.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=8 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.14905802600860238;  // std dev = 5.834, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109544;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109545;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.802702407475194;  // std dev = 1.390, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15656363305689894;  // std dev = 0.101, 151.000 (wgt'ed) examples reached here.  /* #neg=151 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.34875069428922156;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.08621524251497123;  // std dev = 2.617, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5553664367462846;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.05788078751912118;  // std dev = 1.531, 42.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=4 */
%   | | | else return 0.09568571274116383;  // std dev = 2.274, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6479353972830141;  // std dev = 1.372, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.13884937096359293;  // std dev = 0.074, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( complex(A, J), enzyme(I, K) )
%   | | | then return 0.05912342543249668;  // std dev = 1.067, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17541439817425597;  // std dev = 1.732, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.2925679730086599;  // std dev = 1.525, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.16457080613590733;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.27465644130116706;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.41751358415830986;  // std dev = 1.05e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.603795171636395;  // std dev = 0.070, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.03261693359927514;  // std dev = 2.352, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.08736841827387405;  // std dev = 3.504, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5427774231292632;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.07369999185064569;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.015498143695705338;  // std dev = 2.002, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.19876143462550047;  // std dev = 2.027, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2701686072728279;  // std dev = 0.246, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), location(A, F) )
%   | | then if ( interaction(E, E), complex(E, G) )
%   | | | then return -0.08281074287292893;  // std dev = 0.589, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.0529476290302569;  // std dev = 2.628, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.14069430214239873;  // std dev = 2.227, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.055520398148574436;  // std dev = 2.539, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.40624190156911544;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.004707895747267238;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.18158265999571183;  // std dev = 1.786, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.010150376985447128;  // std dev = 2.280, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.3006154510441711;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.31307870764400747;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.042405159285931054;  // std dev = 0.902, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.436849076513924;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12413473925381745;  // std dev = 0.009, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.01383691742825778;  // std dev = 0.247, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.26489672324993563;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.014959097676585209;  // std dev = 2.891, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.06685110241907781;  // std dev = 4.172, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2754108597645015;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2432390205014907;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5770623799114444;  // std dev = 1.111, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17315487704888635;  // std dev = 0.064, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.21660396859360276;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, G) )
%   | | then if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.10915040690712499;  // std dev = 1.583, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return -0.1429052629214516;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.026917197061830437;  // std dev = 2.153, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | | | else return -0.0024087137435371887;  // std dev = 1.906, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1900329515068733;  // std dev = 0.019, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.39063416396269446;  // std dev = 0.840, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.4469754375230464;  // std dev = 0.753, 43.000 (wgt'ed) examples reached here.  /* #pos=43 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11607062416533176;  // std dev = 0.132, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | | else return -0.16897356299438435;  // std dev = 0.156, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.20193331099293155;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.31626973175607404;  // std dev = 0.089, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.2968091085108401;  // std dev = 1.092, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.009885403252780466;  // std dev = 2.083, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.16807064089127177;  // std dev = 0.020, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.20058881206971826;  // std dev = 0.051, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(I, G), location(A, J) )
%   | | | then return -0.043854084545396216;  // std dev = 1.654, 72.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=16 */
%   | | | else return 0.03674616084971955;  // std dev = 0.612, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.033901161560949175;  // std dev = 0.704, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.08098305300177695;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.15548613127299515;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), phenotype(M, N) )
%   | | | then return -0.023710787388725073;  // std dev = 2.084, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.06758334835925052;  // std dev = 2.830, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14545556098427842;  // std dev = 0.018, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.19765526309092538;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.028299060743661408;  // std dev = 0.728, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.087354996796903;  // std dev = 0.354, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.04924502884167336;  // std dev = 0.843, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.04239197873666164;  // std dev = 1.160, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.13614425744923997;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.0038407526811549;  // std dev = 2.816, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | | else return 0.04860363130889305;  // std dev = 2.307, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.608', 'seconds']
Refined model CLL: -0.183215


******************************************
Best model found
******************************************
Results 

CLL : -0.191611 

AUC ROC : 0.983273 

AUC PR : 0.232817 

Precision : 0.143413 

Recall : 0.780919 

F1 : 0.242325 

Total Learning Time : 7.694 

Total Inference Time : 8.66421389579773 

Total revision time: 28.924866729736326
Best scored revision CLL: -0.181962


Results 

CLL : -0.191611 

AUC ROC : 0.983273 

AUC PR : 0.232817 

Precision : 0.143413 

Recall : 0.780919 

F1 : 0.242325 

Total Learning Time : 39.03636198616027 

Total Inference Time : 8.66421389579773 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.808
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.13780995204866345;  // std dev = 4.876, 118.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=33 */
%   | | | else return 0.15083186192877934;  // std dev = 5.046, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5376552303927726;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7816289395752953;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7242705656804588;  // std dev = 2.821, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.16033893577482863;  // std dev = 0.011, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.11309945725240747;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.09446743783575562;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5886131109664914;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3496953357065603;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.11567639530813409;  // std dev = 4.201, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6623185751709842;  // std dev = 1.377, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.1406977108711674;  // std dev = 0.000, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15022346684843832;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.29643637380108195;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4600342740343001;  // std dev = 0.104, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.4639585457821825;  // std dev = 0.054, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return -0.2884970577964779;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5301846248257445;  // std dev = 1.395, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.06835447594111621;  // std dev = 4.920, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5568029304246964;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.017651047695324763;  // std dev = 1.525, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.7859943610508671;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33223528036353145;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18845843031998447;  // std dev = 0.884, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06522680258092126;  // std dev = 5.331, 234.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.41857982351019685;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04043405360645403;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.24136268941050726;  // std dev = 0.929, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2765920007653917;  // std dev = 0.095, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3457621436243986;  // std dev = 0.204, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.27277054437475545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3214347868815961;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -2.301736895986295E-4;  // std dev = 2.218, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.092097633731863;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.10043240456125893;  // std dev = 2.789, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.06071195135648854;  // std dev = 4.177, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24964302913896716;  // std dev = 0.216, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.25566547884555324;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5428187709433997;  // std dev = 1.085, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18832795303529729;  // std dev = 0.550, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31762402130294687;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.037407603351543375;  // std dev = 4.042, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16478144140430354;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.10264143945678386;  // std dev = 0.941, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.31796402655157857;  // std dev = 3.466, 88.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=71 */
%   | | else return -0.15751543162756262;  // std dev = 0.272, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.21010607017649852;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.058194835935625154;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1679615784032915;  // std dev = 0.118, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3384480166101803;  // std dev = 0.125, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | | else return 0.211158542042408;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.04406245720330113;  // std dev = 1.530, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.26044543047552837;  // std dev = 0.751, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.0479968233133582;  // std dev = 1.559, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.23433800318603973;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0670438558037467;  // std dev = 3.219, 117.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=40 */
%   | | | else return 0.004442431836216052;  // std dev = 1.397, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.018226887682369533;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.24245100571474054;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.046911882934568286;  // std dev = 0.456, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.006316503030335408;  // std dev = 2.278, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.06117656588867093;  // std dev = 0.888, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.013987566468211766;  // std dev = 3.482, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return -0.01025398669906974;  // std dev = 1.466, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.756', 'seconds']
Parameter learned model CLL:-0.201465 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.876, 85, 33], 'false,false,true,false': [5.046, 87, 36], 'false,false,false,true': [1.155, 4, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.279, 2, 9], 'false,true,true': [0.044, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.821, 9, 69], 'false,false,true,false': [0.011, 149, 0], 'false,false,false,true': [1.47, 8, 3], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 8], 'true,false': [0.866, 1, 3], 'false,true,true': [4.201, 77, 34], 'false,true,false,true': [1.377, 2, 37], 'false,true,false,false': [0.0, 62, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.155, 4, 2], 'false,false,false,true': [1.155, 3, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.104, 0, 5], 'true,false': [0.054, 0, 6], 'false,true,true,true': [0.0, 1, 0], 'false,true,true,false': [1.395, 3, 14], 'false,true,false': [4.92, 138, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.525, 10, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.047, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.884, 1, 4], 'false,true': [5.331, 163, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [0.929, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.095, 0, 4], 'true,true,false': [0.204, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.218, 38, 12], 'false,false,true': [0.852, 1, 3], 'false,false,false,true': [2.789, 35, 20], 'false,false,false,false': [4.177, 88, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.216, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.085, 1, 33], 'true,false': [0.55, 101, 0], 'false,true': [0.041, 0, 3], 'false,false,true': [4.042, 96, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 3], 'true,false': [0.941, 1, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.466, 17, 71], 'false,true,false': [0.272, 149, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.399, 6, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.118, 0, 8], 'true,false,true': [0.125, 2, 0], 'true,false,false': [0.041, 0, 3], 'false,true,true': [1.53, 40, 11], 'false,true,false,true': [0.751, 2, 1], 'false,true,false,false': [1.559, 30, 17], 'false,false,true': [0.034, 0, 3], 'false,false,false,true': [3.219, 77, 40], 'false,false,false,false': [1.397, 9, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.854, 1, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.456, 1, 3], 'false,true': [2.278, 80, 29], 'false,false,true': [0.888, 1, 3], 'false,false,false,true': [3.482, 96, 40], 'false,false,false,false': [1.466, 8, 4]}]
{'': [-1.6148698540002277e-16, 0.20733143513066316], 'false': [0.18750000000000006, 0.2043214148404473], 'false,false': [0.20433532480501398, 0.20408163265306106], 'false,false,true': [0.20145073254811968, 0.20701963117192268], 'false,false,false': [0.22222222222222224, 0.18750000000000003], 'false,true': [nan, 0.18750000000000006], 'false,true,false': [0.0, 0.22222222222222224], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289957, 0.21261628871359078], 'false': [0.0008585132404309951, 0.21054223836759858], 'false,false': [0.21154543477318863, 0.19417887146000062], 'false,false,true': [0.1020043442629705, 7.683769143665923e-07], 'false,false,false': [0.1965149780848985, 0.18749999999999997], 'true': [0.0, 0.14876033057851235], 'false,true': [0.0009658273954848973, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.07543045437374658, 0.16938593141049293], 'false': [0.16573265591231137, 0.2275525814057554], 'false,false': [0.22222222222222218, 0.22219383350951735], 'false,false,true': [nan, 0.22222222222222218], 'false,false,false': [0.22219383350951735, nan], 'false,true': [0.15899629377504695, 0.17162604428540787], 'false,true,false': [0.04862804554362581, -5.372046893347532e-17], 'true': [0.0003684471155681046, 0.1875]}
{'': [0.0012634905819762484, 0.1435684184776744], 'false': [0.13915826448567314, 0.20619107791373276], 'false,false': [0.0, 0.20528450248059382], 'false,false,false': [0.17890765754329754, 0.0], 'false,true': [0.1433514988337365, 0.12412227966900759], 'false,true,true': [0.0, 0.11454840119376145], 'true': [0.0021793351305568363, 0.0004932868329691938], 'false,false,true': [nan, 0.0]}
{'': [0.07031119674623473, 0.12566306900999905], 'false': [0.12147010376829163, 0.19699473882688337], 'false,false': [0.0, 0.20596277523117548], 'false,false,false': [0.18750000000000006, 0.2159734479028079], 'true': [0.00030915573766630643, 0.15625551430330462], 'true,true': [0.00030915573766630643, nan], 'false,false,true': [nan, 0.0]}
{'': [0.005749377086719167, 0.13086001829488056], 'false': [0.0983812541140039, 0.13837137622235085], 'false,false': [0.18164745062208598, 0.1374224910117213], 'false,false,false': [0.14142979541348533, 0.13524235096143175], 'true': [0.006837080977005244, 0.0005920521246911559], 'true,true': [0.002277809296049607, 0.00835805002704293], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.1081097849035562, 0.11923031229755182], 'false': [0.0005674790280053021, 0.12015317175536377], 'false,false': [0.12015317175536377, nan], 'true': [0.043033921189776496, 0.0030001465112140294], 'true,true': [0.004229864348918901, 0.03465608162132467], 'true,true,false': [nan, 0.03465608162132483], 'true,true,true': [0.004649553520131832, 0.0]}
{'': [0.0745606662175715, 0.10726592189920008], 'false': [0.10377509315014369, 0.1797959390649488], 'false,false': [0.0, 0.19567762178157228], 'false,false,false': [0.19567762178157228, nan], 'false,true': [0.1365066783580101, 0.0004981051245894278], 'false,true,true': [nan, 0.13650667835800998], 'true': [0.00013819905585924405, 0.09840281031096615], 'false,false,true': [0.0, nan]}
{'': [0.03767611868296637, 0.07902997297391906], 'false': [0.05684878597584812, 0.09361507035436095], 'false,false': [0.0003835616014143857, 0.09508714359364084], 'false,false,false': [0.08858055579129448, 0.15011938936027192], 'false,true': [0.04590850186051721, 0.06527609039408584], 'false,true,false': [0.1878574549897648, 0.051743550537742974], 'true': [0.0017332252858315786, 0.07598247788212291], 'true,false': [0.00785821255116817, 0.0005717070438496693]}
{'': [0.07551746923847276, 0.07774619232814649], 'false': [0.04759329013189601, 0.09925650491124167], 'false,false': [0.1970972004792045, 0.09647116086170063], 'false,false,false': [0.08914176519072396, 0.1789976397652366], 'true': [0.08594018735229947, 0.052056507494600744], 'true,true': [0.08594018735229947, nan], 'true,true,true': [0.0910964379816264, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;complex(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 13.52
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), interaction(E, E) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.12178529873587486;  // std dev = 4.621, 110.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=29 */
%   | | | else return 0.20460562801289753;  // std dev = 5.362, 127.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.42405077188448576;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7836053444854283;  // std dev = 0.057, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.74402392482515;  // std dev = 2.521, 76.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=69 */
%   | | | else return -0.1620479048582879;  // std dev = 0.115, 163.000 (wgt'ed) examples reached here.  /* #neg=163 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.025769156726354082;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.3313737004165031;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5788457324818541;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6322041431501996;  // std dev = 0.077, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.05208922117533282;  // std dev = 3.263, 85.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=19 */
%   | | | else return 0.12267732233135159;  // std dev = 2.702, 48.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=15 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6510943944341352;  // std dev = 1.376, 39.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=37 */
%   | | | else return -0.14391769753877853;  // std dev = 0.042, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7374392259465596;  // std dev = 0.215, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18713969373732883;  // std dev = 0.061, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.02971746745162651;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.48384233270363525;  // std dev = 0.080, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1902473232202757;  // std dev = 0.394, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4987937534835185;  // std dev = 1.643, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.14888318273574358;  // std dev = 0.177, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.12556032495978425;  // std dev = 4.578, 156.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=57 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3740077262244569;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.03150706667338866;  // std dev = 1.235, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.2745708480722846;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.36674808163686123;  // std dev = 0.000192, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3744261193974911;  // std dev = 0.080, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.0701956530718231;  // std dev = 0.954, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.05252416439672654;  // std dev = 4.028, 135.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=39 */
%   | | else if ( location(A, H) )
%   | | | then return 0.06919840132831949;  // std dev = 3.134, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.29750597566502396;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.2913019286827523;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.03260481308731493;  // std dev = 1.235, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.05048526687354695;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.32660857707467106;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.2862916243333178;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.2831956065625176;  // std dev = 0.598, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5117229451262765;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.015248850858335427;  // std dev = 0.317, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | else if ( complex(A, J), interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.5640245204462484;  // std dev = 0.399, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.152917948775834;  // std dev = 0.113, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.060922994818004055;  // std dev = 3.320, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
%   | | | else return -0.0048788862442838594;  // std dev = 1.805, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26075637617613334;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A) )
%   | | | then return 0.5033880247417879;  // std dev = 0.399, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return 0.6646793011500782;  // std dev = 0.104, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.16123536541946823;  // std dev = 0.085, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2414939042365222;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), interaction(I, I) )
%   | | | then return 0.06714754953589325;  // std dev = 1.731, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.023750167945282532;  // std dev = 2.261, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | else if ( enzyme(A, J), complex(A, K) )
%   | | | then return -0.1627648177946526;  // std dev = 0.765, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08069783544393128;  // std dev = 2.401, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18248373069946922;  // std dev = 0.000223, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.1949211610415199;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.23150378207316596;  // std dev = 2.889, 56.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=41 */
%   | | | else return 0.44612485255885576;  // std dev = 0.475, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.12431846816722339;  // std dev = 0.165, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | | else return -0.167422092656134;  // std dev = 0.182, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.23904325499348056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.004382157338007495;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.06003575658124758;  // std dev = 0.720, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17835415089291573;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.19413467420092456;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return 0.04215860669892439;  // std dev = 1.241, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.013626253626638015;  // std dev = 1.538, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return -0.08987280604983085;  // std dev = 0.785, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.08339758781833467;  // std dev = 0.402, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.22115785467822632;  // std dev = 1.079, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.01628319340422971;  // std dev = 2.093, 48.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=16 */
%   | | | else return 0.047008673368497886;  // std dev = 2.702, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15730000868364352;  // std dev = 0.045, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.36400222243193936;  // std dev = 0.239, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.11295580078631244;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.42761630767613396;  // std dev = 0.480, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.14762083602503562;  // std dev = 0.678, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, L), interaction(K, L) )
%   | | | then return -0.02432484566565031;  // std dev = 1.380, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.03273841152149912;  // std dev = 2.678, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | else if ( location(A, M) )
%   | | | then return 0.057797066343445516;  // std dev = 1.292, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.005254385180842647;  // std dev = 0.317, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '41.348', 'seconds']
Refined model CLL: -0.183351


******************************************
Best model found
******************************************
Results 

CLL : -0.176905 

AUC ROC : 0.987735 

AUC PR : 0.281248 

Precision : 0.174729 

Recall : 0.858156 

F1 : 0.290342 

Total Learning Time : 13.52 

Total Inference Time : 29.222617149353027 

Total revision time: 63.84077828216553
Best scored revision CLL: -0.183351


Results 

CLL : -0.176905 

AUC ROC : 0.987735 

AUC PR : 0.281248 

Precision : 0.174729 

Recall : 0.858156 

F1 : 0.290342 

Total Learning Time : 63.887779167175296 

Total Inference Time : 29.222617149353027 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.011
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1374282143787903;  // std dev = 4.727, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | | else return 0.17729787126972435;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5691978341024272;  // std dev = 0.882, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7505511758931249;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2505511758931249;  // std dev = 0.663, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6460977716739886;  // std dev = 3.811, 94.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=76 */
%   | | | else return -0.1622601960832063;  // std dev = 0.038, 200.000 (wgt'ed) examples reached here.  /* #neg=200 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.016145969102565477;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.15052069756410122;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.40152028290013075;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | else return 0.5553664367462843;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.0736766359591775;  // std dev = 4.396, 135.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6274117690576823;  // std dev = 2.122, 53.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=48 */
%   | | | else return -0.14369146841092661;  // std dev = 5.58e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.7936200483685952;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.009448321289439494;  // std dev = 1.750, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44020567250374737;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22470703201350656;  // std dev = 1.235, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.06525012258525566;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.6037420642685941;  // std dev = 1.334, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | | else return 0.04699508723660137;  // std dev = 5.119, 226.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.671600956715056;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.012353378355064516;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return 0.25509569438617474;  // std dev = 0.927, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.25015872693775515;  // std dev = 0.911, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18383007092782058;  // std dev = 1.285, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.05878441261111074;  // std dev = 5.846, 278.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5109567278657304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.10526548389329875;  // std dev = 1.577, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2917803772583438;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.38231280705096493;  // std dev = 0.779, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3539840142939115;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.0014731255632597824;  // std dev = 2.826, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.3110150573083779;  // std dev = 0.088, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return -0.027040620762052152;  // std dev = 2.267, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return 0.1023163880782787;  // std dev = 4.451, 146.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.31676154283840924;  // std dev = 0.378, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.305528764638786;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.21959302753642462;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.538424175197703;  // std dev = 0.856, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17415050671423546;  // std dev = 0.485, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.09838206359273731;  // std dev = 0.921, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05320322260245407;  // std dev = 4.427, 156.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18572229479096092;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.14783587864779676;  // std dev = 0.893, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3683729509070119;  // std dev = 3.305, 95.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=82 */
%   | | else return -0.15170163999120864;  // std dev = 0.289, 182.000 (wgt'ed) examples reached here.  /* #neg=182 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.24478252735708494;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.03842913022982098;  // std dev = 1.440, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.09608045851847928;  // std dev = 0.817, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.247329323594341;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.24323992659631477;  // std dev = 0.189, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.024746766066480855;  // std dev = 1.693, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2502918775143818;  // std dev = 0.170, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.0536238003088467;  // std dev = 1.445, 63.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22111198210489919;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.018734239136149237;  // std dev = 3.985, 159.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=47 */
%   | | | else return 0.09167461851469984;  // std dev = 1.293, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.15606285938887446;  // std dev = 0.028, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.21092287279353247;  // std dev = 0.088, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return -0.43566973047977403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return -0.489654701007907;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return -0.15552261658212727;  // std dev = 0.996, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03308493613290069;  // std dev = 2.474, 128.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.01629096984047429;  // std dev = 0.927, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.038383145767371646;  // std dev = 3.673, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return -0.02707866937160549;  // std dev = 1.420, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.823', 'seconds']
Parameter learned model CLL:-0.201151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.816, 1, 2], 'false,false,true,true': [4.727, 80, 31], 'false,false,true,false': [5.535, 96, 45], 'false,false,false,true': [1.491, 5, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.0, 0, 13], 'false,true,true': [0.882, 1, 4], 'false,true,false,true': [0.044, 0, 2], 'false,true,false,false': [0.663, 1, 1], 'false,false,true,true': [3.811, 18, 76], 'false,false,true,false': [0.038, 200, 0], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.301, 2, 11], 'true,false': [2.11e-08, 0, 6], 'false,true,true': [4.396, 101, 34], 'false,true,false,true': [2.122, 5, 48], 'false,true,false,false': [5.58e-08, 99, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.75, 17, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.059, 0, 10], 'true,false': [1.235, 2, 7], 'false,true,true,true': [1.192, 3, 3], 'false,true,true,false': [1.334, 2, 21], 'false,true,false': [5.119, 168, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.291, 10, 2], 'false,false,false,false': [0.927, 2, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.911, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [1.285, 2, 10], 'false,true': [5.846, 196, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.577, 8, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.016, 0, 5], 'true,true,false': [0.779, 1, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.044, 0, 2], 'false,true': [2.826, 52, 19], 'false,false,true': [0.088, 0, 8], 'false,false,false,true': [2.267, 53, 11], 'false,false,false,false': [4.451, 96, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.378, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 3], 'true,true,false,false': [0.856, 1, 33], 'true,false': [0.485, 104, 0], 'false,true': [0.921, 1, 5], 'false,false,true': [4.427, 109, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.893, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.305, 13, 82], 'false,true,false': [0.289, 182, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.44, 15, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.817, 1, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.189, 0, 5], 'false,true,true': [1.693, 37, 13], 'false,true,false,true': [0.17, 0, 8], 'false,true,false,false': [1.445, 52, 11], 'false,false,true': [0.038, 0, 5], 'false,false,false,true': [3.985, 112, 47], 'false,false,false,false': [1.293, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.028, 0, 7], 'true,true,true,false': [0.088, 0, 6], 'true,true,false,true': [0.0, 1, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.996, 2, 3], 'false,true': [2.474, 96, 32], 'false,false,true': [0.927, 1, 5], 'false,false,false,true': [3.673, 106, 47], 'false,false,false,false': [1.42, 12, 4]}]
{'': [-2.0898315757650005e-16, 0.2183950617283956], 'false': [0.17283950617283939, 0.21256293947534644], 'false,false': [0.21063240110859185, 0.2469135802469134], 'false,false,false': [0.2469135802469134, nan], 'false,false,true': [0.20128236344452688, 0.2172928927116353], 'false,true': [0.22222222222222224, 0.1388888888888887], 'false,true,false': [1.4802973661668753e-16, 0.22222222222222224], 'true': [-1.4802973661668753e-16, 0.0]}
{'': [1.0449157878825003e-16, 0.1953038494489988], 'false': [0.1644897931370718, 0.19062138644990176], 'false,false': [0.1915240433338757, 0.1728395061728395], 'false,false,true': [0.1544876689045595, 7.313535261213033e-06], 'false,false,false': [0.13888888888888887, 0.22222222222222218], 'false,true': [0.15564568734396306, 0.1729269455543997], 'false,true,false': [0.0009658273954848973, 0.21988806371331443], 'true': [0.0, -1.3664283380001927e-16]}
{'': [0.0941828254847643, 0.1564226872812438], 'false': [0.15520571213128576, 0.16722644331549777], 'false,false': [0.16722644331549777, nan], 'false,false,true': [0.0, 0.14587511608539272], 'false,true': [0.14314148543269642, 0.16467291061075748], 'false,true,false': [0.08499697895704313, 3.140024716111554e-17], 'true': [0.1301775147928993, 7.401486830834377e-17]}
{'': [0.09197752028283249, 0.14331867915826838], 'false': [0.14071876833599883, 0.18227357499572983], 'false,false': [0.0, 0.17126551937342366], 'false,false,false': [0.1388888888888888, 0.21474865594441656], 'false,true': [0.15795933751635022, 0.11595208777200446], 'false,true,true': [0.23687535919858368, 0.0773780172670285], 'true': [0.0003432872489847139, 0.1693514063158635], 'false,false,true': [nan, 0.0]}
{'': [0.12508678182568334, 0.12677875343883008], 'false': [0.12294030120639261, 0.20309676320388398], 'false,false': [0.0, 0.2073610792065744], 'false,false,false': [0.2073610792065744, nan], 'true': [0.10370424393409418, 0.13758201084350913], 'true,true': [0.10370424393409418, nan], 'false,false,true': [nan, 0.0]}
{'': [0.03747230273019073, 0.11915207620999979], 'false': [0.11250577690443171, 0.12009474619482088], 'false,false': [0.0009720552905527896, 0.12237350918796429], 'false,false,false': [0.08032793488496268, 0.13570479307296265], 'true': [0.04233747006766803, 0.000980532141514251], 'true,true': [5.116575151991043e-05, 0.06074858194435693], 'true,false': [nan, 0.000980532141514251]}
{'': [0.09963066063954235, 0.12626171431675107], 'false': [0.14130977166487946, 0.12560734555905403], 'false,false': [0.12560734555905403, nan], 'true': [0.029953680985156547, 0.002257960939949113], 'true,true': [0.008914234302672172, 0.02739368925963027], 'true,true,false': [0.0, 0.02156861997066366], 'true,true,true': [0.009500630632886819, 0.0]}
{'': [0.04452380498190237, 0.10129879350219742], 'false': [0.10067499787578126, 0.10751899433128291], 'false,false': [0.0, 0.10916744662011535], 'false,false,false': [0.10916744662011535, nan], 'false,true': [0.11495380970474563, 0.00045870293444002423], 'false,true,true': [nan, 0.1149538097047458], 'true': [0.0, 0.056925918668883635], 'false,false,true': [0.0, nan]}
{'': [0.04673024245416178, 0.07979346784700987], 'false': [0.04660609265340736, 0.10168944125067818], 'false,false': [0.00028880412429088675, 0.1035555639830229], 'false,false,false': [0.09986468696901826, 0.15192946924274894], 'true': [0.06680260191955825, 0.0051135866331328194], 'false,true': [0.057318889456405626, 0.03904996685166563], 'false,true,false': [0.003630543868267583, 0.033140376796733116], 'true,false': [0.0, 0.007154243238440971]}
{'': [0.09836972543152323, 0.07543660135276664], 'true': [0.04924678856710501, 0.19847543426750777], 'false': [0.04779896168278842, 0.09388178215073736], 'false,false': [0.1432308731718192, 0.09212108152305985], 'false,false,false': [0.08816346692729925, 0.12608622592391233], 'true,true': [0.001405250583125564, 0.0007285942607308804], 'true,true,true': [0.00011418067568835391, 0.001290933616521735], 'true,true,false': [0.0, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;false;interaction(A, G), interaction(G, A).;true;true
5;false,false;interaction(H, A), recursion_proteinclass(H, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true


Refining candidate
***************************
Model training time 14.878
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, H), location(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.7840748610254378;  // std dev = 1.361, 27.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | else return -0.14185106490048768;  // std dev = 4.94e-08, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.06350607795665476;  // std dev = 4.275, 112.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=23 */
%   | | | else return 0.1340110040650282;  // std dev = 4.814, 116.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.356766728629559;  // std dev = 1.109, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6718951827829945;  // std dev = 3.243, 89.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=76 */
%   | | | else return -0.14579245809243666;  // std dev = 0.225, 204.000 (wgt'ed) examples reached here.  /* #neg=204 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.05079196362560238;  // std dev = 1.176, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.21840445941247394;  // std dev = 0.942, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5843397364833676;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5698447757939858;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.020504926327365544;  // std dev = 2.588, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | | else return 0.09875631187507895;  // std dev = 3.264, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5332948265809673;  // std dev = 2.709, 57.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=48 */
%   | | | else return -0.12947330245728475;  // std dev = 0.122, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.4917077472583063;  // std dev = 0.776, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.26900806460863214;  // std dev = 0.841, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return -0.154499101235336;  // std dev = 0.002, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.3375016409937208;  // std dev = 0.265, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then return -0.11775426189643427;  // std dev = 1.131, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4463428359361301;  // std dev = 0.153, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), enzyme(A, H) )
%   | | then return 0.012545845699826757;  // std dev = 0.298, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.0711735024669339;  // std dev = 2.882, 62.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=16 */
%   | | | else return 0.135423098113858;  // std dev = 4.474, 151.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=57 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.43307156322727935;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06355508208719365;  // std dev = 1.424, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1370275153402119;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.3851336238925863;  // std dev = 0.097, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, F) )
%   | | then return -0.24772984625841124;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.33468389776644014;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(G, A) )
%   | then if ( location(A, H), enzyme(A, I) )
%   | | then return 0.060000757668416914;  // std dev = 0.291, 78.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=24 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06210959173852158;  // std dev = 3.419, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return 0.12787133503879303;  // std dev = 3.480, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.33127996463383735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.20024212158751564;  // std dev = 1.065, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.05943509794529463;  // std dev = 0.625, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2983847103968213;  // std dev = 0.205, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4363092155568549;  // std dev = 0.073, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2534050645414614;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15077975680908137;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.160622340509906;  // std dev = 2.127, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.03660161206450923;  // std dev = 1.937, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.25355088759971883;  // std dev = 0.009, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(A, I), complex(A, J) )
%   | | | then return -0.027009505995011323;  // std dev = 2.167, 68.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=12 */
%   | | | else return 0.0803387994668114;  // std dev = 4.108, 146.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=49 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2904028041401248;  // std dev = 0.086, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21304386732519975;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5320102459413171;  // std dev = 1.539, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.1666281977286789;  // std dev = 0.053, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.4313388247243804;  // std dev = 0.184, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.14744092500034398;  // std dev = 0.052, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2059795206390783;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.021713533249395255;  // std dev = 3.551, 113.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=32 */
%   | | | else return 0.08475495872534879;  // std dev = 1.184, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.15797341031576806;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then return -0.02816381430270118;  // std dev = 0.909, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.199543938566324;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.1733220499445914;  // std dev = 1.459, 23.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=16 */
%   | | | else return 0.3656285652516972;  // std dev = 2.877, 77.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=66 */
%   | | else return -0.14454311836477773;  // std dev = 0.032, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.17115132520774012;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, L), phenotype(A, M) )
%   | | | then return 0.08643635150663825;  // std dev = 0.783, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.012253543638130592;  // std dev = 0.700, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1812100710179861;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.10854648921462488;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.24409808519998927;  // std dev = 0.195, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12240998038397419;  // std dev = 0.185, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.02416869650619451;  // std dev = 2.393, 95.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=30 */
%   | | else return -0.07343396541835767;  // std dev = 0.140, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.14745530249382652;  // std dev = 0.014, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06954029989719993;  // std dev = 2.828, 84.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=33 */
%   | | | else return -0.023779573532829255;  // std dev = 2.148, 76.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.09693102843918146;  // std dev = 0.244, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22230984955245914;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), enzyme(F, H) )
%   | | then return -0.09446255016006275;  // std dev = 0.221, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.08853826125844397;  // std dev = 0.897, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.08208315120955914;  // std dev = 0.703, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.14635109116204642;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.024190035372409144;  // std dev = 2.198, 98.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=20 */
%   | | | else return 0.03302608903220681;  // std dev = 3.524, 145.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=50 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.363', 'seconds']
Refined model CLL: -0.193581


******************************************
Best model found
******************************************
Results 

CLL : -0.165171 

AUC ROC : 0.992146 

AUC PR : 0.372471 

Precision : 0.32829 

Recall : 0.818868 

F1 : 0.468683 

Total Learning Time : 14.878 

Total Inference Time : 37.435513973236084 

Total revision time: 75.11218482398986
Best scored revision CLL: -0.193581


Results 

CLL : -0.165171 

AUC ROC : 0.992146 

AUC PR : 0.372471 

Precision : 0.32829 

Recall : 0.818868 

F1 : 0.468683 

Total Learning Time : 75.15918570899963 

Total Inference Time : 37.435513973236084 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.239
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1340110040650296;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.15951879811320988;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7282439011667574;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8381296214258624;  // std dev = 0.009, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16162440428012942;  // std dev = 0.017, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.061094215797655525;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.14012511317904303;  // std dev = 3.226, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5723328131411036;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5648133892457411;  // std dev = 0.033, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07008340592196072;  // std dev = 2.044, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6792180450212766;  // std dev = 0.259, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14159494409149126;  // std dev = 8.56e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return -0.02519377831846109;  // std dev = 0.734, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08668095827763389;  // std dev = 3.769, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.3245412958966174;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42998274303680334;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.4217603941275733;  // std dev = 0.025, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38773563774409747;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40427947480642434;  // std dev = 0.624, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.0455290280498412;  // std dev = 4.223, 196.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5615786573040891;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5338722137841294;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1639585517049536;  // std dev = 1.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.1262731995092535;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3335921707761376;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32367988279253024;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05446149289877978;  // std dev = 4.205, 195.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.42213692295483163;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.40175076978308466;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04884627249253554;  // std dev = 3.728, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | | | else return -0.132515196832;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2645034947110258;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3642810418443706;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.34406446439237626;  // std dev = 0.029, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.26618249649009473;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.17284099440484896;  // std dev = 0.517, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.04958976724658699;  // std dev = 0.989, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.25255672613634345;  // std dev = 0.017, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.08558663726370276;  // std dev = 2.651, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
%   | | | else return 0.043452106203026766;  // std dev = 4.810, 168.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24057470229579678;  // std dev = 0.128, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.263897904074525;  // std dev = 0.015, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.22141738304921255;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6496300639500728;  // std dev = 0.809, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18857556775481815;  // std dev = 0.552, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.20521857337077157;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.060405784029036555;  // std dev = 3.318, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1777968814598568;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17711404627049077;  // std dev = 0.012, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42292858792163224;  // std dev = 1.100, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.14770873967423392;  // std dev = 0.420, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.21592627289948768;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.031249956536430923;  // std dev = 3.152, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15805564691885707;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.14990048129324185;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17870249145507724;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.07059490896437264;  // std dev = 0.419, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.20447178552267886;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.012355101687942474;  // std dev = 1.202, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14978054802862933;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.03912802091028673;  // std dev = 2.630, 108.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=36 */
%   | | | else return 0.1304787962114851;  // std dev = 2.854, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1339020323358714;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.08764267569916803;  // std dev = 0.843, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1350808334526581;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.27238607929253467;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
%   | else return 0.14603504226754713;  // std dev = 0.032, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.02457204245632529;  // std dev = 1.348, 74.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13168937832807842;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.01804016558035088;  // std dev = 2.657, 119.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=36 */
%   | | | else return 0.05298808201256484;  // std dev = 2.968, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.314', 'seconds']
Parameter learned model CLL:-0.179107 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.407, 21, 8], 'false,false,true,false': [5.544, 102, 44], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.029, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.009, 0, 52], 'false,false,true,false': [0.017, 142, 0], 'false,false,false,true': [1.966, 17, 5], 'false,false,false,false': [3.226, 34, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.021, 0, 6], 'true,false': [0.033, 0, 8], 'false,true,true': [2.044, 24, 8], 'false,true,false,true': [0.259, 0, 48], 'false,true,false,false': [8.56e-08, 99, 0], 'false,false,true,true': [0.734, 2, 1], 'false,false,true,false': [3.769, 53, 20], 'false,false,false,true': [0.707, 1, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.028, 0, 9], 'true,false': [0.025, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.624, 1, 3], 'false,true,false': [4.223, 144, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.787, 9, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.005, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.205, 139, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.728, 52, 19], 'false,false,false,false': [0.935, 7, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.005, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.029, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.517, 1, 3], 'false,true': [0.989, 16, 3], 'false,false,true': [0.017, 0, 6], 'false,false,false,true': [2.651, 43, 23], 'false,false,false,false': [4.81, 122, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.128, 0, 12], 'true,true,true,false': [0.015, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.809, 0, 36], 'true,false': [0.552, 104, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.318, 76, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.003, 0, 5], 'true,false': [0.012, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.1, 1, 56], 'false,true,false': [0.42, 113, 0], 'false,false,true,true': [0.013, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.152, 51, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.025, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.033, 0, 4], 'false,true,true': [0.419, 9, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.202, 40, 14], 'false,false,true': [0.001, 0, 5], 'false,false,false,true': [2.63, 72, 36], 'false,false,false,false': [2.854, 29, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.002, 0, 5], 'true,true,true,false': [0.843, 1, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.004, 2, 0], 'true,false': [0.032, 0, 4], 'false,true': [1.348, 57, 17], 'false,false,true': [0.001, 0, 5], 'false,false,false,true': [2.657, 83, 36], 'false,false,false,false': [2.968, 38, 20]}]
{'': [0.06222222222222188, 0.21842770302575015], 'false': [-1.4802973661668753e-16, 0.2120080436656147], 'false,false': [0.20884897959183743, 0.2203708680462237], 'false,false,false': [0.22027348394768081, 0.22222222222222224], 'false,false,true': [0.19976218787158156, 0.2105460686808041], 'true': [0.08999999999999977, 0.0], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16]}
{'': [8.940649933971859e-05, 0.20148544191841716], 'false': [7.401486830834377e-17, 0.19779184920937734], 'false,false': [0.1961005511458422, 0.20235001899268118], 'false,false,false': [0.17562982862398852, 0.21241149521032965], 'false,false,true': [1.5403909307073386e-06, 2.0656700423223294e-06], 'true': [0.0, 9.615184565486206e-05], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00012342446430935183, 0.16165124493346275], 'false': [0.14585155648485948, 0.19736826765306945], 'false,false': [0.1944781483185008, 0.24999999999999994], 'false,false,false': [0.24999999999999994, nan], 'false,false,true': [0.1796465631692228, 0.194593614594504], 'false,true': [0.1305496858215567, 0.14861507730971335], 'false,true,false': [0.0013944746247550228, 7.401486830834377e-17], 'true': [7.464847805926933e-05, 0.00013577428154643023]}
{'': [0.00011597592915491006, 0.12511779545072338], 'false': [0.09372700380622959, 0.22013069825537943], 'false,false': [0.0001919117531311576, 0.22196884792240026], 'false,false,false': [0.22815656399315737, 0.21975425330812887], 'false,true': [0.07782026843172232, 0.09099003196605995], 'false,true,true': [0.0, 0.097220595830704], 'false,false,true': [0.0, 0.0], 'true': [8.42854561137813e-05, 0.0001295571238958626]}
{'': [8.811308343825708e-05, 0.1195148926635152], 'false': [0.09067665487864258, 0.1887904587907505], 'false,false': [0.00010389881028546877, 0.1899743894463725], 'false,false,false': [0.1957251771159308, 0.10937499999999999], 'false,false,true': [0.0, 0.0], 'true': [4.3713217139140784e-06, 9.954576544267556e-05], 'true,true': [4.3713217139140784e-06, nan]}
{'': [0.021562645413624033, 0.12225705651347994], 'false': [0.0514704106795557, 0.12697566919827466], 'false,false': [4.805737470530332e-05, 0.12925782499577843], 'false,false,false': [0.10644890773629394, 0.13771774014444754], 'true': [0.0012230941648026436, 0.03862145531497398], 'true,false': [0.0017207552330192333, 0.06677282734094536], 'true,false,true': [0.00040871000387247836, 0.0], 'true,true': [4.720490563048241e-06, 0.0]}
{'': [0.13158150346743105, 0.09497326483099104], 'true': [0.047612561886836845, 0.0029293219109794476], 'false': [4.0952415180650623e-07, 0.0983169388037183], 'false,false': [0.0983169388037183, nan], 'true,true': [0.0012448001094659902, 0.022510828620010127], 'true,true,false': [0.0, 0.018180288872191537], 'true,true,true': [0.0013564209879520135, 0.00010881334608314752]}
{'': [1.169821651881921e-05, 0.09766109434698682], 'false': [0.08073343674992497, 0.13704425267968595], 'false,false': [8.264116413886358e-05, 0.13996793331678017], 'false,false,false': [0.13996793331678017, nan], 'false,true': [0.021237437625565386, 0.001563888828881627], 'false,true,true': [nan, 0.021237437625565292], 'false,false,true': [8.264116413886358e-05, nan], 'true': [1.5619291951263214e-06, 1.716296443426968e-05]}
{'': [0.00022095192019572218, 0.07657486309511138], 'false': [0.026476197470528724, 0.09490465730766454], 'false,false': [2.496881425312347e-07, 0.09771884155723005], 'false,false,false': [0.06405588400273399, 0.1661742631121672], 'false,true': [0.01752289465570907, 0.0274153290104385], 'false,true,false': [0.0, 0.026751643744328944], 'true': [6.769470319611331e-05, 0.0003543538012389824], 'true,false': [0.0, 0.0002770310936762374]}
{'': [0.06349933141903769, 0.07013830027984035], 'false': [0.02457055354976357, 0.08773090513802928], 'false,false': [2.013265020528454e-07, 0.0899222423164591], 'false,false,false': [0.05931479629828132, 0.15189913988248058], 'true': [0.07817288177407039, 0.00025470279640563837], 'true,true': [0.0911330919704971, 0.04151139413930289], 'true,true,true': [1.0707618500249704e-06, 0.17778030867112213], 'true,true,false': [0.0, 8.145787556521067e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.961
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.06185106490048781;  // std dev = 1.356, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.09624417319475045;  // std dev = 3.904, 84.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=20 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.1481489350995111;  // std dev = 4.538, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return 0.2867203636709409;  // std dev = 3.464, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109545;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8378433557570335;  // std dev = 0.075, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1592557305088821;  // std dev = 0.134, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.06435382631446661;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.22792862013794327;  // std dev = 2.798, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5668083122959419;  // std dev = 0.028, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(A, F), phenotype(A, G) )
%   | | | then return 0.223372335203961;  // std dev = 1.084, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.027224758951622283;  // std dev = 1.668, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.678800600316837;  // std dev = 0.283, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14025059064346018;  // std dev = 0.105, 124.000 (wgt'ed) examples reached here.  /* #neg=124 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7418248248828546;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18687010582660654;  // std dev = 0.081, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.4949133874177711;  // std dev = 0.805, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18207724946915801;  // std dev = 2.832, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42389940627779343;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.43123203534032495;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.38783474238779425;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5828704557996194;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.008585745245370785;  // std dev = 1.840, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | | else return 0.05775687229216409;  // std dev = 3.800, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.37298151240143473;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.059728086404656336;  // std dev = 2.974, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.1915545166845203;  // std dev = 1.868, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3313925734775195;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.23140884262885283;  // std dev = 0.281, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(G, F), phenotype(G, H) )
%   | | | then return 0.024731172476327425;  // std dev = 2.845, 93.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=23 */
%   | | | else return -0.030839145658336634;  // std dev = 1.142, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.19762083016027376;  // std dev = 1.009, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07572213112629968;  // std dev = 2.696, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2906088865782678;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.0018635623935515442;  // std dev = 1.666, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.083053127868811;  // std dev = 3.155, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2833315183347613;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.29565245228581893;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.29554285543694203;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.12699192158609238;  // std dev = 0.008, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.25314425327841805;  // std dev = 0.482, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.03687160545004358;  // std dev = 0.490, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2682730523398158;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.09878377556879887;  // std dev = 3.284, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | | | else return 0.024989556335357585;  // std dev = 4.208, 177.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23429059464230564;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.21959776154165556;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5920755739967507;  // std dev = 0.983, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.19399181611329147;  // std dev = 0.072, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.218845336207814;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5136032365424036;  // std dev = 0.196, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return -0.14205967207204823;  // std dev = 0.051, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 3.0169365442121303E-4;  // std dev = 1.967, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.03061950422888701;  // std dev = 1.564, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1712830126086246;  // std dev = 0.016, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19041123751396485;  // std dev = 0.020, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.4102677061690228;  // std dev = 0.424, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.360991155318815;  // std dev = 1.348, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.11278826306084193;  // std dev = 0.154, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | | else return -0.14186089451434167;  // std dev = 0.154, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.15278460863387083;  // std dev = 1.00e-05, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.02227115814919456;  // std dev = 2.014, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.18332398711187906;  // std dev = 1.791, 21.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15568817766287615;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17104972493199147;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return -0.029037336862473024;  // std dev = 0.315, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.09977261853524311;  // std dev = 0.011, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.18416817238173078;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.004869461872351966;  // std dev = 1.364, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1568752954090729;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.04805746061575192;  // std dev = 1.464, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.0013817278831824342;  // std dev = 3.513, 156.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=42 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.13370066952541654;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.13653973469207725;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.15644679125189048;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09269977183360946;  // std dev = 0.005, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, G), phenotype(G, H) )
%   | | | then return -0.012019490569501213;  // std dev = 1.289, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return -0.06926775619738251;  // std dev = 0.765, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13722420664722082;  // std dev = 0.000952, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.014835567496920318;  // std dev = 1.517, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.03519928848427278;  // std dev = 3.405, 123.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '36.949', 'seconds']
Refined model CLL: -0.171291


******************************************
Best model found
******************************************
Results 

CLL : -0.189961 

AUC ROC : 0.98113 

AUC PR : 0.190294 

Precision : 0.135539 

Recall : 0.916968 

F1 : 0.236169 

Total Learning Time : 6.961 

Total Inference Time : 7.4046080112457275 

Total revision time: 26.035294961929324
Best scored revision CLL: -0.171291


Results 

CLL : -0.189961 

AUC ROC : 0.98113 

AUC PR : 0.190294 

Precision : 0.135539 

Recall : 0.916968 

F1 : 0.236169 

Total Learning Time : 26.08229584693909 

Total Inference Time : 7.4046080112457275 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.393
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06127393509951237;  // std dev = 3.219, 64.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=13 */
%   | | | else return 0.11642708079487611;  // std dev = 5.378, 151.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6361400788776211;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2194734122109545;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7905211649013323;  // std dev = 1.687, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15445506408740148;  // std dev = 0.036, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22705943059292202;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.17565619870707047;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5683938064673298;  // std dev = 0.033, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.5758380177364986;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.040518239542350426;  // std dev = 2.833, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7013125128082868;  // std dev = 0.215, 42.000 (wgt'ed) examples reached here.  /* #pos=42 */
%   | | | else return -0.13728468648631423;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6820977539867711;  // std dev = 0.186, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09993665729438819;  // std dev = 2.490, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.085057781984823;  // std dev = 1.481, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4211339924909557;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.33397295942704147;  // std dev = 0.948, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5453399619801362;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4519993655382811;  // std dev = 0.995, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.07473058006670313;  // std dev = 4.221, 169.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.13572981748904095;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.65077351109605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1788554450090451;  // std dev = 1.755, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.11608265968680459;  // std dev = 2.153, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33602558687450146;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20846475291793823;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.0831869419926056;  // std dev = 4.319, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3553853692198732;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4845364828178624;  // std dev = 0.012, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.07156386282371506;  // std dev = 2.477, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.37657057798171883;  // std dev = 1.099, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2574441079284479;  // std dev = 0.037, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.31830515722691094;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.278716869841264;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3035734963576445;  // std dev = 0.052, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.38631388488784746;  // std dev = 0.094, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.07133898371079353;  // std dev = 1.298, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.06745738871727595;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.07026149311051677;  // std dev = 2.155, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.0724844561139352;  // std dev = 4.402, 145.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.24517220477401264;  // std dev = 0.178, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.26369893655605997;  // std dev = 0.047, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.30765417680879215;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5589505405633377;  // std dev = 1.092, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.2005609777810563;  // std dev = 0.892, 132.000 (wgt'ed) examples reached here.  /* #neg=132 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3224306649294875;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06700671535301801;  // std dev = 3.245, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16717365259893613;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22210092994696834;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40646157372522285;  // std dev = 1.630, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14435138944522943;  // std dev = 0.225, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.18343425730113105;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.23216279979580784;  // std dev = 0.008, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.018937797077264198;  // std dev = 2.510, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.151952584121081;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.19519414016382064;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return -0.030608547858098172;  // std dev = 0.942, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09495737690037792;  // std dev = 0.305, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.26604858605394005;  // std dev = 0.186, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.006750926600853916;  // std dev = 1.490, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.03377033810242305;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06126317470245862;  // std dev = 2.639, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
%   | | | else return -0.005781052710666491;  // std dev = 2.470, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13084402434208137;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.14360231791451317;  // std dev = 0.007, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1698923682425142;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16411715500257468;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.21264288295001763;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.030581229051915126;  // std dev = 1.796, 107.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.22211493885478875;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.029614732444832335;  // std dev = 2.653, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | | | else return -0.012263473938311833;  // std dev = 2.484, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.940', 'seconds']
Parameter learned model CLL:-0.182479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.219, 51, 13], 'false,false,true,false': [5.378, 112, 39], 'false,false,false,true': [2.572, 25, 9], 'false,false,false,false': [1.477, 8, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.957, 1, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.225, 3, 3], 'false,false,true,true': [1.687, 3, 52], 'false,false,true,false': [0.036, 122, 0], 'false,false,false,true': [1.754, 8, 5], 'false,false,false,false': [2.16, 14, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.033, 0, 11], 'true,false': [0.0, 0, 4], 'false,true,true': [2.833, 52, 14], 'false,true,false,true': [0.215, 0, 42], 'false,true,false,false': [0.0, 89, 0], 'false,false,true,true': [0.186, 0, 3], 'false,false,true,false': [2.49, 22, 9], 'false,false,false,true': [1.481, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.024, 0, 6], 'true,false': [0.948, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.995, 1, 6], 'false,true,false': [4.221, 120, 49], 'false,false,true,true': [0.771, 1, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.755, 8, 5], 'false,false,false,false': [2.153, 15, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.054, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.922, 1, 6], 'false,true': [4.319, 117, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.012, 0, 2], 'false,false,false,true': [2.477, 21, 9], 'false,false,false,false': [1.099, 2, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.037, 0, 5], 'true,true,false': [0.088, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.052, 0, 3], 'true,false,false': [0.094, 0, 4], 'false,true': [1.298, 32, 5], 'false,false,true': [1.37, 3, 5], 'false,false,false,true': [2.155, 29, 13], 'false,false,false,false': [4.402, 98, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.178, 0, 13], 'true,true,true,false': [0.047, 0, 3], 'true,true,false,true': [0.035, 0, 3], 'true,true,false,false': [1.092, 1, 33], 'true,false': [0.892, 132, 0], 'false,true': [0.001, 0, 3], 'false,false,true': [3.245, 65, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.112, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.63, 3, 56], 'false,true,false': [0.225, 126, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.008, 0, 2], 'false,false,false,true': [2.51, 34, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.023, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.942, 2, 5], 'false,true,true': [0.305, 14, 1], 'false,true,false,true': [0.186, 0, 6], 'false,true,false,false': [1.49, 43, 17], 'false,false,true': [0.866, 1, 3], 'false,false,false,true': [2.639, 53, 31], 'false,false,false,false': [2.47, 34, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.01, 0, 8], 'true,true,true,false': [0.007, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.003, 0, 2], 'true,false': [0.036, 0, 3], 'false,true': [1.796, 83, 24], 'false,false,true': [0.001, 0, 3], 'false,false,false,true': [2.653, 63, 31], 'false,false,false,false': [2.484, 36, 12]}]
{'': [-2.3684757858670006e-16, 0.19520543141298147], 'false': [-2.5376526277146434e-16, 0.185562130177516], 'false,false': [0.18336398053001712, 0.19555555555555507], 'false,false,false': [0.19463667820069216, 0.1983471074380164], 'false,false,true': [0.16186523437499947, 0.19157054515152885], 'true': [-1.4802973661668753e-16, 1.4802973661668753e-16], 'false,true': [0.0, -1.4802973661668753e-16], 'false,true,false': [1.4802973661668753e-16, 1.4802973661668753e-16]}
{'': [0.05859375, 0.21427708144847307], 'false': [0.21000000000000013, 0.21115059554703772], 'false,false': [0.20734941696603457, 0.22829629996493306], 'false,false,false': [0.23658543744538385, 0.22215464093111117], 'false,true': [0.0, 0.234375], 'false,true,false': [0.0, 0.25000000000000006], 'false,false,true': [0.05176378549113539, 1.0796525374066276e-05], 'true': [0.0, 0.07638888888888877]}
{'': [8.195452285549483e-05, 0.15676947190070312], 'false': [0.14468681522762442, 0.20872143906916293], 'false,false': [0.2107072981275564, 0.19926754603585542], 'false,false,true': [0.011518458709478097, 0.20007967779354385], 'false,false,false': [0.19926754603585542, nan], 'false,true': [0.12161685919064061, 0.15353182345953884], 'false,true,false': [0.0010957525533099905, -7.484649604214538e-18], 'true': [9.697849248487115e-05, 0.0]}
{'': [0.05797416706360095, 0.13276284592633336], 'false': [0.11280533478507714, 0.22039723776392003], 'false,false': [0.1984242335141333, 0.22130350211028108], 'false,false,false': [0.2367923970798899, 0.2106873877359616], 'false,false,true': [0.19824814310442349, 0.0], 'false,true': [0.12470897069302661, 0.10540471947288192], 'false,true,true': [0.0, 0.14143547956687233], 'true': [9.207697910000127e-05, 0.089854528982513]}
{'': [0.05730175526056949, 0.12703748587353492], 'false': [0.10780907252493395, 0.2118463623036558], 'false,false': [0.0037534948198196063, 0.22127466498232506], 'false,false,false': [0.20458234886764073, 0.24168933627773778], 'true': [0.00032116027854590793, 0.12140965166012903], 'false,false,true': [0.0, 7.023884852913609e-05], 'true,true': [0.00032116027854590793, nan]}
{'': [0.003690912764452034, 0.12207299124940162], 'false': [0.04551680213914922, 0.13357927795881389], 'false,false': [0.23452405863636136, 0.12846307265755577], 'false,false,false': [0.11061508141494854, 0.1336317257680681], 'true': [0.002008221680564151, 0.003478195355592878], 'true,false': [0.0007895275311067818, 0.0022104076278302576], 'true,true': [0.00027547881374448966, 0.002581084382528187], 'true,false,true': [0.0, 0.0008982404043653321]}
{'': [0.10374236817735144, 0.10828233323365728], 'false': [5.882828107058499e-07, 0.10968912582345482], 'false,false': [0.10968912582345482, nan], 'true': [0.044158075085204314, 0.006025337052977495], 'true,true': [0.0021634542811814136, 0.036941628300987774], 'true,true,false': [0.0004052214872085254, 0.03504516978575012], 'true,true,true': [0.0024295085800295066, 0.0007316699897056689]}
{'': [0.0014252122412970432, 0.09147520063396611], 'false': [0.08053774933917562, 0.13175231535026485], 'false,false': [0.0005515103290180586, 0.13693185923722476], 'false,false,false': [0.13693185923722476, nan], 'false,true': [0.045038516180265, 0.000402026117428942], 'false,true,true': [nan, 0.045038516180265], 'true': [0.0, 0.001138936358967648], 'false,false,true': [0.0, 3.5775208975255546e-05]}
{'': [0.0576726390019791, 0.07885874719193665], 'false': [0.03593419538774633, 0.10425334555195213], 'false,false': [0.1876581657547577, 0.10153524815428011], 'false,false,false': [0.0828959161075787, 0.13266787399018137], 'true': [5.1726911891214475e-05, 0.1164657024925439], 'true,false': [0.0, 0.12673030325173826], 'false,true': [0.00621557967410236, 0.04032352849175621], 'false,true,false': [0.005760904067846101, 0.037014375106447804]}
{'': [0.001047177238132909, 0.06653841350605351], 'false': [0.030132745428788132, 0.09232833536315352], 'false,false': [3.681359594017349e-07, 0.09339533739530896], 'false,false,false': [0.07487169782910623, 0.1285098424943735], 'true': [0.00022375459383653032, 0.000436809557602752], 'true,true': [4.1717209363920095e-05, 1.0702204990701661e-05], 'true,true,true': [1.2827269142534625e-05, 2.705772634517198e-05], 'true,true,false': [0.0, 4.935611497131759e-06]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.873
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(E, A), complex(E, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), enzyme(K, L) )
%   | | | then return -0.025571995133045863;  // std dev = 2.102, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return 0.19148226843284566;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1839065108570868;  // std dev = 5.384, 132.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6520062622195435;  // std dev = 0.268, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7592042895028145;  // std dev = 1.948, 56.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=52 */
%   | | | else return -0.1648235991791483;  // std dev = 0.174, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.08765955167654468;  // std dev = 2.280, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.34504675360251763;  // std dev = 1.582, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4644820142512974;  // std dev = 0.316, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), location(A, G) )
%   | | | then return -0.04696949875568765;  // std dev = 1.507, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | | else return 0.09969307390656373;  // std dev = 2.277, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6447834577094093;  // std dev = 1.384, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14737528489233115;  // std dev = 0.317, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.13413135353907235;  // std dev = 1.971, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.32177706501691405;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1254985534889718;  // std dev = 1.165, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.06898098053260412;  // std dev = 1.470, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4453289929775848;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.3751654597802698;  // std dev = 0.308, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5669326245822124;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5008549283104565;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.13239683174873318;  // std dev = 0.044, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.07365226764305907;  // std dev = 4.244, 160.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5631920665079523;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.09204493243332999;  // std dev = 2.052, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.36726043014339044;  // std dev = 1.551, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3634708982166209;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.373172604676905;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.07634548239068198;  // std dev = 0.986, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.05444255826041661;  // std dev = 0.963, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.038175256742503876;  // std dev = 3.332, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | | else return 0.14702005163743748;  // std dev = 2.364, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4238151039394065;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.17342390505319033;  // std dev = 2.281, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.10745359435214728;  // std dev = 1.551, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.0942583394059629;  // std dev = 0.915, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.13219978924175246;  // std dev = 0.693, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.33471113639561273;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3770774708991869;  // std dev = 0.089, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11260625908046394;  // std dev = 0.008, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(A, I), location(A, J) )
%   | | | then return 0.06056515258900246;  // std dev = 1.668, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.17607698768558175;  // std dev = 1.920, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.29468634147215833;  // std dev = 0.051, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.023015306055449377;  // std dev = 4.426, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2724169380376658;  // std dev = 0.042, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.25513550375685234;  // std dev = 0.046, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5855258719592081;  // std dev = 0.652, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.19106885350793837;  // std dev = 0.105, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.23553798740851073;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.45726866340565697;  // std dev = 0.943, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.17444473746759753;  // std dev = 0.340, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.06871448432047905;  // std dev = 1.344, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.15755799228438125;  // std dev = 1.329, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1950413173555633;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.024821212521826876;  // std dev = 0.804, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.2092016375316323;  // std dev = 0.014, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.38882515183078253;  // std dev = 0.141, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13832397255908088;  // std dev = 0.045, 145.000 (wgt'ed) examples reached here.  /* #neg=145 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.18154885051368208;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.089481624634197;  // std dev = 0.744, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.0406980878098841;  // std dev = 1.635, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.02049554080627745;  // std dev = 1.828, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17554385011832002;  // std dev = 0.014, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.2443082866101849;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.19943704428899547;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.35467704649815146;  // std dev = 1.072, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then return -0.042925603624067214;  // std dev = 0.249, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3449082894076267;  // std dev = 0.337, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.03102356665136615;  // std dev = 2.188, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.01193515792723571;  // std dev = 1.294, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.056711333767502405;  // std dev = 2.141, 67.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.15159346806683258;  // std dev = 0.012, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.17252258271502618;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.2634483160378361;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.19737581467554643;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.06298001019516127;  // std dev = 0.583, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | | else return 0.00698277006031823;  // std dev = 1.417, 64.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1603142553254773;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return -0.0542906987672678;  // std dev = 1.459, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | | else return 0.038077300946466934;  // std dev = 3.023, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '45.835', 'seconds']
Refined model CLL: -0.182867


******************************************
Best model found
******************************************
Results 

CLL : -0.193299 

AUC ROC : 0.983055 

AUC PR : 0.224016 

Precision : 0.145682 

Recall : 0.780919 

F1 : 0.245556 

Total Learning Time : 7.873 

Total Inference Time : 8.152902841567993 

Total revision time: 28.40798684692383
Best scored revision CLL: -0.182479


Results 

CLL : -0.193299 

AUC ROC : 0.983055 

AUC PR : 0.224016 

Precision : 0.145682 

Recall : 0.780919 

F1 : 0.245556 

Total Learning Time : 28.454987731933596 

Total Inference Time : 8.152902841567993 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.175
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1940562710068482;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17628180810158278;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | | else return 0.12566514422525027;  // std dev = 6.122, 181.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15125375345141234;  // std dev = 4.808, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.13034560336939532;  // std dev = 5.954, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13217868947713993;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.13510070147649128;  // std dev = 6.919, 212.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09805459314105275;  // std dev = 7.626, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07664561646928403;  // std dev = 7.643, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7310625239621631;  // std dev = 0.027, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2693244192593034;  // std dev = 0.038, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08613505256448795;  // std dev = 3.586, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.06210781156842936;  // std dev = 4.654, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03260524317610273;  // std dev = 3.836, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.07689275207088106;  // std dev = 5.789, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0447749591897399;  // std dev = 6.967, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05977920393150021;  // std dev = 6.800, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.132', 'seconds']
Parameter learned model CLL:-0.345346 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 65, 34], 'false,false,false,false': [6.122, 128, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.808, 68, 35], 'false,false,false,false': [5.954, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [6.919, 139, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.626, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.643, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 35], 'true,false': [0.038, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.586, 36, 20], 'false,false,false,false': [4.654, 67, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.836, 74, 35], 'false,false,false,false': [5.789, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.967, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.8, 151, 87]}]
{'': [nan, 0.223073597590973], 'false': [nan, 0.22307359759097298], 'false,false': [nan, 0.223073597590973], 'false,false,false': [nan, 0.22307359759097298]}
{'': [nan, 0.21417091836734822], 'false': [nan, 0.21417091836734634], 'false,false': [nan, 0.21417091836734822], 'false,false,false': [0.22548719518416435, 0.20707548609627233]}
{'': [nan, 0.22024363722259407], 'false': [nan, 0.22024363722259407], 'false,false': [nan, 0.2202436372225947], 'false,false,false': [0.22439338432074693, 0.2174521317387958]}
{'': [nan, 0.22609483027146088], 'false': [nan, 0.22609483027146088], 'false,false': [nan, 0.22609483027146104], 'false,false,false': [0.22750000000000054, 0.22582834864502624]}
{'': [nan, 0.22194992781370748], 'false': [nan, 0.22194992781370748], 'false,false': [nan, 0.22194992781370704], 'false,false,false': [nan, 0.22194992781370704]}
{'': [nan, 0.2204312857823597], 'false': [nan, 0.2204312857823597], 'false,false': [nan, 0.2204312857823591], 'false,false,false': [nan, 0.2204312857823597]}
{'': [0.22453304696919657, 0.22280230663454], 'true': [2.1193734548420806e-05, 2.1771245480522024e-05], 'false': [nan, 0.22280230663454], 'false,false': [nan, 0.22280230663454], 'false,false,false': [0.22959183673469452, 0.21875318845015765], 'true,true': [nan, 2.1193734548420806e-05], 'true,true,false': [nan, 2.1193734548420806e-05]}
{'': [nan, 0.1895958381271567], 'false': [nan, 0.1895958381271567], 'false,false': [nan, 0.18959583812715608], 'false,false,false': [0.13502126600779454, 0.2295014727209827]}
{'': [nan, 0.1910795952430473], 'false': [nan, 0.19107959524304702], 'false,false': [nan, 0.19107959524304702], 'false,false,false': [nan, 0.19107959524304702]}
{'': [nan, 0.19426094218663129], 'false': [nan, 0.19426094218663129], 'false,false': [nan, 0.1942609421866316], 'false,false,false': [nan, 0.1942609421866316]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.607
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( location(C, D), enzyme(A, E) )
%   | | | then return 0.26723984419042146;  // std dev = 3.261, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.17460463130204304;  // std dev = 5.846, 158.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=50 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.058148935099512224;  // std dev = 0.400, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7333616372803768;  // std dev = 0.118, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12745050010411493;  // std dev = 0.029, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(F, G), phenotype(A, H) )
%   | | | then return 0.2900833281833817;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.06156435026162023;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.18028664381427723;  // std dev = 2.132, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.33291225872610225;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.23381361989622768;  // std dev = 2.445, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.14459145798616593;  // std dev = 5.381, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.5658552360478027;  // std dev = 0.076, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.7404561387979809;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11896683500575159;  // std dev = 0.053, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( phenotype(E, F), interaction(G, A) )
%   | | | then return 0.07484618121391574;  // std dev = 1.903, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.26508176646086495;  // std dev = 1.641, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.3115754310685284;  // std dev = 1.402, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07644087100479463;  // std dev = 2.769, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.1235860651043558;  // std dev = 3.254, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | | | else return 0.2247254266602298;  // std dev = 4.487, 84.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.5137387809514965;  // std dev = 0.125, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.13823704076523152;  // std dev = 0.887, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(E, G) )
%   | | | then return 0.7088029342681896;  // std dev = 0.845, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.025416892772574008;  // std dev = 0.874, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.18591000903419524;  // std dev = 0.455, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return 0.005329188189238959;  // std dev = 3.928, 87.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=20 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5449098989291454;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.02145215045780062;  // std dev = 2.148, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.12841138796624635;  // std dev = 4.691, 97.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.6046220797044463;  // std dev = 0.190, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.17638713573488407;  // std dev = 0.059, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | | then return 0.38881136738474326;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.1328212942503925;  // std dev = 0.265, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.06516320092243678;  // std dev = 2.760, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   else if ( interaction(I, A), interaction(A, I) )
%   | then return -0.016224406001019723;  // std dev = 0.361, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.47574090384250883;  // std dev = 0.250, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.17556398249429375;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.030182858927974194;  // std dev = 5.812, 179.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=48 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.2440187358369549;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.378158491855099;  // std dev = 0.223, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.07913723974288946;  // std dev = 0.041, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( complex(A, E), phenotype(A, F) )
%   | | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6692845311266381;  // std dev = 0.596, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.21486325214444962;  // std dev = 0.276, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(H, A), enzyme(H, I) )
%   | | | then return 0.1594056609634014;  // std dev = 2.721, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | else return 0.06309083078284047;  // std dev = 5.253, 133.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.1980524960703013;  // std dev = 0.157, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5937694843350418;  // std dev = 0.143, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.19947801401981322;  // std dev = 0.057, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), enzyme(H, I) )
%   | | | then return 0.17010533908906691;  // std dev = 0.607, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6719169389752861;  // std dev = 0.525, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.255454950297893;  // std dev = 0.244, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5081650599959302;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.023822555854377727;  // std dev = 4.139, 90.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=25 */
%   | | else return 0.2595908707693951;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.020794888880797762;  // std dev = 0.240, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( enzyme(D, G), complex(D, H) )
%   | | | then return -0.07502721499024761;  // std dev = 1.118, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.06596335324975798;  // std dev = 1.519, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( enzyme(D, I) )
%   | | | then return 0.44713029683897165;  // std dev = 0.865, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.16078819420684698;  // std dev = 2.163, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.28684636270513497;  // std dev = 1.382, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return -0.2363349010797758;  // std dev = 0.239, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.04004539685072952;  // std dev = 3.850, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return -0.02012536938817911;  // std dev = 1.737, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.28679933299368815;  // std dev = 0.234, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return -0.09152929035548311;  // std dev = 0.203, 51.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.009911744779499469;  // std dev = 3.731, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.10666488535153278;  // std dev = 3.268, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.365229129624014;  // std dev = 0.662, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return -0.17597344422130984;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( enzyme(A, J) )
%   | | then return -0.14295473365474054;  // std dev = 0.145, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.07111410134558212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06111153329716741;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then return -0.01573661520196538;  // std dev = 0.270, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(A, G), phenotype(E, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.346616166526992;  // std dev = 0.686, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.05703745042118291;  // std dev = 1.360, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(J, E), interaction(E, J) )
%   | | | then return -0.05047852117325813;  // std dev = 2.415, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | | else return 0.1089299342537282;  // std dev = 1.435, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.29537421493049915;  // std dev = 1.113, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.24702291030661366;  // std dev = 0.138, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(N, A), enzyme(A, P) )
%   | | | then return 0.2571587036534918;  // std dev = 1.167, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.11716886053413131;  // std dev = 2.728, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.049', 'seconds']
Refined model CLL: -0.271292


******************************************
Best model found
******************************************
Results 

CLL : -0.267517 

AUC ROC : 0.95462 

AUC PR : 0.255786 

Precision : 0.239006 

Recall : 0.443262 

F1 : 0.310559 

Total Learning Time : 19.607 

Total Inference Time : 9.676292896270752 

Total revision time: 36.8662707157135
Best scored revision CLL: -0.271292


Results 

CLL : -0.267517 

AUC ROC : 0.95462 

AUC PR : 0.255786 

Precision : 0.239006 

Recall : 0.443262 

F1 : 0.310559 

Total Learning Time : 36.923938686370846 

Total Inference Time : 9.676292896270752 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.441
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18013035924811974;  // std dev = 8.397, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17498333645831232;  // std dev = 4.666, 97.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else return 0.16196609098346978;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14954197829086732;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.17062848502192554;  // std dev = 6.349, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.2136218266312325;  // std dev = 2.619, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.09717273079446886;  // std dev = 7.951, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0852912447602739;  // std dev = 8.407, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08982409187836916;  // std dev = 8.286, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7305444678347401;  // std dev = 0.075, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26826146906615045;  // std dev = 0.092, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.031445679041565075;  // std dev = 3.834, 70.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=21 */
%   | | | else return 0.11237335618056464;  // std dev = 5.110, 111.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.045519029888390045;  // std dev = 4.096, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.01906021428147019;  // std dev = 6.627, 208.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039434080513653415;  // std dev = 7.694, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.00823311118880327;  // std dev = 7.799, 342.000 (wgt'ed) examples reached here.  /* #neg=238 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.893', 'seconds']
Parameter learned model CLL:-0.325457 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.397, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.666, 64, 33], 'false,false,false,false': [6.912, 146, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.206, 80, 41], 'false,false,false,false': [6.349, 112, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.619, 16, 12], 'false,false,false,false': [7.951, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.407, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.286, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.075, 0, 41], 'true,false': [0.092, 69, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.834, 49, 21], 'false,false,false,false': [5.11, 69, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.096, 81, 41], 'false,false,false,false': [6.627, 145, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.694, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.799, 238, 104]}]
{'': [nan, 0.21830938665184368], 'false': [nan, 0.21830938665184232], 'false,false': [nan, 0.21830938665184368], 'false,false,false': [nan, 0.21830938665184232]}
{'': [nan, 0.22151000040569846], 'false': [nan, 0.22151000040569643], 'false,false': [nan, 0.22151000040569846], 'false,false,false': [0.2244659368689546, 0.22013633757353243]}
{'': [nan, 0.2278477247440117], 'false': [nan, 0.2278477247440117], 'false,false': [nan, 0.22784772474401135], 'false,false,false': [0.22397968624150294, 0.23034043514523286]}
{'': [nan, 0.21871364415175484], 'false': [nan, 0.21871364415175484], 'false,false': [nan, 0.21871364415175473], 'false,false,false': [0.24489795918367346, 0.21504073534811396]}
{'': [nan, 0.2174801981656406], 'false': [nan, 0.2174801981656406], 'false,false': [nan, 0.21748019816564024], 'false,false,false': [nan, 0.21748019816564024]}
{'': [nan, 0.2251244786219832], 'false': [nan, 0.2251244786219832], 'false,false': [nan, 0.22512447862198293], 'false,false,false': [nan, 0.22512447862198318]}
{'': [0.2333723899585175, 0.22701247039257882], 'true': [0.0001376541752328126, 0.00012346161159272034], 'false': [nan, 0.22701247039257882], 'false,false': [nan, 0.22701247039257882], 'false,false,false': [0.21000000000000052, 0.23520818115412784], 'true,true': [nan, 0.0001376541752328126], 'true,true,false': [nan, 0.0001376541752328126]}
{'': [nan, 0.18406365837975638], 'false': [nan, 0.18406365837975638], 'false,false': [nan, 0.18406365837975636], 'false,false,false': [0.13749138589745288, 0.21112127407234588]}
{'': [nan, 0.19095856122214633], 'false': [nan, 0.19095856122214586], 'false,false': [nan, 0.19095856122214586], 'false,false,false': [nan, 0.19095856122214586]}
{'': [nan, 0.17786336319497162], 'false': [nan, 0.17786336319497162], 'false,false': [nan, 0.1778633631949724], 'false,false,false': [nan, 0.1778633631949724]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 31.345
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), enzyme(E, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4478925248431012;  // std dev = 3.072, 39.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=23 */
%   | | | else return -0.14185106490048766;  // std dev = 7.60e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.07689893509951237;  // std dev = 2.339, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return 0.15755013270430185;  // std dev = 5.919, 167.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7748794062382176;  // std dev = 0.173, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | else return -0.15340630203860076;  // std dev = 0.147, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, H), interaction(F, H) )
%   | | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7422198280150732;  // std dev = 0.102, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13808936093957525;  // std dev = 5.459, 147.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=44 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.051020873214192956;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.2422738208326176;  // std dev = 1.978, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.07893821839680924;  // std dev = 2.038, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then if ( interaction(C, A) )
%   | | then return 0.5485063199715773;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.03502441835905623;  // std dev = 0.819, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5745205005733363;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.6204091401991623;  // std dev = 3.166, 89.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=77 */
%   | | | else return -0.10805332339320882;  // std dev = 1.742, 44.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | else return -0.15134568219618463;  // std dev = 0.343, 141.000 (wgt'ed) examples reached here.  /* #neg=141 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.5459597237896652;  // std dev = 0.836, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.16019000772407363;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.31822392986279135;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(D, E) )
%   | then return 0.4091985739185944;  // std dev = 0.021, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.47575913385294794;  // std dev = 0.170, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(F, G), complex(A, G) )
%   | | then return -0.1456166042607789;  // std dev = 0.130, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H), complex(F, I) )
%   | | | then return -4.60838275712641E-4;  // std dev = 1.169, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.1057037071553342;  // std dev = 2.578, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4816345083463666;  // std dev = 0.279, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.05632721684076771;  // std dev = 3.054, 77.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=19 */
%   | | | else return 0.10525925947065501;  // std dev = 4.528, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( location(D, C) )
%   | then return 0.07609874940368404;  // std dev = 0.352, 238.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=81 */
%   | else if ( interaction(E, D), enzyme(E, F) )
%   | | then return 0.33011412865824685;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( location(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.4995259249132241;  // std dev = 0.814, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.15219762532042885;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.7154062492924084;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1527260890297148;  // std dev = 0.112, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), interaction(K, A) )
%   | | then return 0.17093735680969002;  // std dev = 1.103, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return -0.03756003592805046;  // std dev = 0.610, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05948455636374776;  // std dev = 1.531, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), location(E, C) )
%   | | then return 0.47211412491059596;  // std dev = 0.079, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return 0.31461576401063246;  // std dev = 0.265, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return -0.13891483441681013;  // std dev = 0.042, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.5959544223212361;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, J), enzyme(J, H) )
%   | | | then return -0.09902923778774289;  // std dev = 0.927, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.0671301885101194;  // std dev = 3.084, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.41247167712095;  // std dev = 2.593, 51.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=42 */
%   | | | else return -0.18043526447633684;  // std dev = 0.360, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.23418399698922773;  // std dev = 0.777, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3235385394106029;  // std dev = 0.266, 44.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=41 */
%   | else return -0.14506734582029504;  // std dev = 0.077, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.26935883541315125;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3441548125591349;  // std dev = 0.730, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.004581250700793865;  // std dev = 2.871, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5605923062619426;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1410830660349302;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.07324575707131273;  // std dev = 2.944, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.2031287311119463;  // std dev = 0.564, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.07463101653496862;  // std dev = 0.591, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2227595452160139;  // std dev = 0.069, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( phenotype(F, H) )
%   | | then if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.24731991284953145;  // std dev = 1.744, 23.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=17 */
%   | | | else return -0.04806069715507078;  // std dev = 2.133, 104.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=15 */
%   | | else return -0.08935881714576835;  // std dev = 0.177, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4515055138259556;  // std dev = 1.271, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.19847566959010757;  // std dev = 0.302, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.03968862172267981;  // std dev = 1.146, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.06202405209345992;  // std dev = 2.831, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(D, D), recursion_proteinclass(D, B) )
%   | then return 0.17360065793584387;  // std dev = 0.077, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(D, E), location(D, C) )
%   | | then if ( interaction(F, D), interaction(F, A) )
%   | | | then return -0.0319742999872643;  // std dev = 2.617, 105.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=27 */
%   | | | else return 0.010711509157433222;  // std dev = 2.963, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | else if ( location(D, C), phenotype(A, G) )
%   | | | then return 0.07879662661806328;  // std dev = 1.608, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.010617266459202595;  // std dev = 1.686, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   else if ( phenotype(A, H) )
%   | then return -0.005700320500516108;  // std dev = 0.258, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5025193924627066;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.26544469527483716;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return 0.20853564422420426;  // std dev = 0.870, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F), phenotype(E, F) )
%   | | then return 0.3395911368791428;  // std dev = 0.137, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else if ( complex(A, D), phenotype(C, G) )
%   | | | then return 0.2558642035831815;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1558862904105394;  // std dev = 1.080, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else return -0.06825558783897319;  // std dev = 0.188, 117.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=16 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.1757899626035772;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(A, I), phenotype(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.32240371826325;  // std dev = 0.266, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.11408386586329261;  // std dev = 0.116, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.06762669634190802;  // std dev = 1.199, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.04683686522868545;  // std dev = 3.234, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '26.958', 'seconds']
Refined model CLL: -0.18758


******************************************
Best model found
******************************************
Results 

CLL : -0.183389 

AUC ROC : 0.990805 

AUC PR : 0.555473 

Precision : 0.448276 

Recall : 0.784906 

F1 : 0.570645 

Total Learning Time : 31.345 

Total Inference Time : 25.314407110214233 

Total revision time: 65.53351806259155
Best scored revision CLL: -0.18758


Results 

CLL : -0.183389 

AUC ROC : 0.990805 

AUC PR : 0.555473 

Precision : 0.448276 

Recall : 0.784906 

F1 : 0.570645 

Total Learning Time : 65.5911860332489 

Total Inference Time : 25.314407110214233 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.277
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19888967584025322;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15150124213840263;  // std dev = 5.086, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return 0.13554429756281958;  // std dev = 6.133, 178.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11652922859392656;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
%   | | | else return 0.11362365127821812;  // std dev = 5.788, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1293777913435239;  // std dev = 3.986, 71.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=24 */
%   | | | else return 0.17362962569557336;  // std dev = 6.494, 179.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09730527654482266;  // std dev = 7.840, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08849630571790885;  // std dev = 7.783, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7098730256961283;  // std dev = 0.987, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2678008926533391;  // std dev = 0.028, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07642396402918594;  // std dev = 3.017, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return 0.0730179829202928;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03919846881154169;  // std dev = 4.315, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.015604454316185033;  // std dev = 5.789, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -1.0221713740726779E-4;  // std dev = 7.327, 320.000 (wgt'ed) examples reached here.  /* #neg=228 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040351358171750375;  // std dev = 7.103, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.671', 'seconds']
Parameter learned model CLL:-0.316593 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.086, 81, 38], 'false,false,false,false': [6.133, 124, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.528, 100, 44], 'false,false,false,false': [5.788, 111, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.986, 47, 24], 'false,false,false,false': [6.494, 111, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.84, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.783, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 44], 'true,false': [0.028, 101, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.017, 26, 14], 'false,false,false,false': [4.725, 65, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 91, 44], 'false,false,false,false': [5.789, 111, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.327, 228, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.103, 183, 92]}]
{'': [nan, 0.22463648834019337], 'false': [nan, 0.22463648834019292], 'false,false': [nan, 0.22463648834019337], 'false,false,false': [nan, 0.22463648834019292]}
{'': [nan, 0.21381038216054749], 'false': [nan, 0.21381038216055145], 'false,false': [nan, 0.21381038216054749], 'false,false,false': [0.2173575312477924, 0.21133695240500097]}
{'': [nan, 0.21143966811530765], 'false': [nan, 0.21143966811530765], 'false,false': [nan, 0.21143966811530793], 'false,false,false': [0.21223902352224916, 0.21071171137583566]}
{'': [nan, 0.23263326252610378], 'false': [nan, 0.23263326252610378], 'false,false': [nan, 0.23263326252610414], 'false,false,false': [0.2237651259670698, 0.23559465569675309]}
{'': [nan, 0.2218923912156187], 'false': [nan, 0.2218923912156187], 'false,false': [nan, 0.2218923912156177], 'false,false,false': [nan, 0.2218923912156177]}
{'': [nan, 0.22436638337678527], 'false': [nan, 0.22436638337678527], 'false,false': [nan, 0.22436638337678477], 'false,false,false': [nan, 0.2243663833767849]}
{'': [0.2104765177046656, 0.2260687972532606], 'false': [nan, 0.2260687972532606], 'false,false': [nan, 0.2260687972532606], 'false,false,false': [0.2275000000000002, 0.22548719518416407], 'true': [0.021626312727934995, 7.54007178710931e-06], 'true,true': [nan, 0.021626312727934995], 'true,true,false': [nan, 0.021626312727934995]}
{'': [nan, 0.17746767455441426], 'false': [nan, 0.17746767455441426], 'false,false': [nan, 0.17746767455441434], 'false,false,false': [0.13791560485131926, 0.21079400330016562]}
{'': [nan, 0.16776677632763598], 'false': [nan, 0.16776677632763487], 'false,false': [nan, 0.16776677632763487], 'false,false,false': [nan, 0.16776677632763487]}
{'': [nan, 0.18344670019249626], 'false': [nan, 0.18344670019249626], 'false,false': [nan, 0.18344670019249573], 'false,false,false': [nan, 0.18344670019249573]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.957
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(A, F), complex(C, G) )
%   | | | then return 0.4945125714631487;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.23693681388739113;  // std dev = 3.941, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( complex(A, J), complex(H, J) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.15226658215833574;  // std dev = 0.456, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.15525038437487412;  // std dev = 0.457, 138.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( enzyme(E, F), enzyme(A, F) )
%   | | | then return 0.668351594583485;  // std dev = 0.892, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return 0.8210273200844252;  // std dev = 0.211, 39.000 (wgt'ed) examples reached here.  /* #pos=39 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.1739774040854258;  // std dev = 0.118, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | | else return 0.5965486648664031;  // std dev = 3.033, 53.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=41 */
%   | else return -0.16420176091009178;  // std dev = 0.182, 125.000 (wgt'ed) examples reached here.  /* #neg=125 */
%   else if ( interaction(A, A) )
%   | then return 0.04353897161947777;  // std dev = 0.756, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.038180182760649564;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), enzyme(F, C) )
%   | | then return 0.45832245533944693;  // std dev = 0.682, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.6936227587376192;  // std dev = 0.158, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.15568236776386596;  // std dev = 0.327, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(G, H) )
%   | | then return 0.5621642659374321;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.6862322303896957;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(A, K), enzyme(A, L) )
%   | | | then return -0.019073841481829754;  // std dev = 1.616, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.11435299489604574;  // std dev = 3.960, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | | else if ( interaction(A, M), enzyme(A, N) )
%   | | | then return 0.45146168144819093;  // std dev = 1.283, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.14241129595733099;  // std dev = 3.300, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.4245592371485025;  // std dev = 0.063, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(C, C) )
%   | | then return 0.6292601631136965;  // std dev = 0.094, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5434766007206752;  // std dev = 0.236, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F), interaction(G, E) )
%   | | then return 0.11266268091461644;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.5006784083909516;  // std dev = 0.140, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return -0.01611884954355979;  // std dev = 1.747, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | | else return 0.07475096356455294;  // std dev = 3.465, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.15329543732154943;  // std dev = 2.877, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | | else return 0.07285701792169272;  // std dev = 3.353, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.37223731784389974;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C), phenotype(C, D) )
%   | | then return -0.10570408193676563;  // std dev = 0.159, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(E, A), phenotype(E, F) )
%   | | | then return -0.013007595629957425;  // std dev = 1.283, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.09247225498787265;  // std dev = 2.065, 33.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.01993146464023264;  // std dev = 0.269, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), interaction(H, K) )
%   | | | then return 0.12220994460767365;  // std dev = 1.317, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.03650080889400751;  // std dev = 1.302, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return 0.2638847037949705;  // std dev = 1.889, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   | | | else return 0.08879123780531267;  // std dev = 4.525, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.29629387855141426;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3846619140148342;  // std dev = 0.117, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E), location(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(A, H), interaction(I, G) )
%   | | | then return 0.43882300076541064;  // std dev = 0.664, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.6240703439660071;  // std dev = 0.241, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( location(J, F), recursion_proteinclass(J, B) )
%   | | | then return -0.2373719775946984;  // std dev = 0.390, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return -0.1615201287793009;  // std dev = 0.263, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4487487662589345;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, L) )
%   | | | then return 0.06638457004531155;  // std dev = 4.489, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
%   | | | else return 0.2297706957245207;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.43802499570595893;  // std dev = 0.144, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.17588359028122402;  // std dev = 0.060, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.26339527059214485;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5454022089778169;  // std dev = 0.376, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.17887100618961863;  // std dev = 0.031, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.5856465352233049;  // std dev = 0.068, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.20611262971086583;  // std dev = 0.073, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, L), location(A, M) )
%   | | | then return -0.047965851429914365;  // std dev = 1.390, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.003762422646791591;  // std dev = 3.263, 78.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, E) )
%   | then return 0.17906124279675217;  // std dev = 0.083, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.08026395189357756;  // std dev = 0.134, 28.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=3 */
%   | | else if ( complex(A, G), phenotype(C, H) )
%   | | | then return 0.072794603787514;  // std dev = 1.403, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return -0.01935238730590999;  // std dev = 1.508, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   else if ( interaction(A, I), enzyme(I, J) )
%   | then return 0.017531838679861102;  // std dev = 0.218, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( location(A, L), location(K, L) )
%   | | | then return 0.13553956931608727;  // std dev = 0.708, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.4716095825067028;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( location(A, M) )
%   | | | then return 0.06961396008456916;  // std dev = 3.639, 108.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=41 */
%   | | | else return 0.34963595095157135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B), interaction(F, A) )
%   | | then return 0.16697276097518587;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.35563860676557263;  // std dev = 0.199, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.20515320861156416;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1052432043787101;  // std dev = 0.152, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return -0.016819943275778137;  // std dev = 2.777, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), interaction(H, J) )
%   | | | then return -0.1498592731656716;  // std dev = 0.715, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3500354892252628;  // std dev = 2.241, 47.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=39 */
%   | | else return -0.1878392576247538;  // std dev = 0.033, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else return 0.2467857306433391;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), interaction(C, C) )
%   | then return -0.01544422949997658;  // std dev = 0.164, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( complex(C, F), phenotype(A, G) )
%   | | then return 0.07619925648231245;  // std dev = 0.230, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( interaction(C, H), phenotype(H, I) )
%   | | | then return 0.06749760281824192;  // std dev = 0.890, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return -0.005546192679816923;  // std dev = 1.477, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.23770349365884402;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.20947664368649238;  // std dev = 0.081, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.18153577652061503;  // std dev = 0.088, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, N), location(A, P) )
%   | | | then return -0.029689772183091663;  // std dev = 1.849, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.007517340961359528;  // std dev = 3.363, 110.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=36 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '53.775', 'seconds']
Refined model CLL: -0.211644


******************************************
Best model found
******************************************
Results 

CLL : -0.227913 

AUC ROC : 0.988906 

AUC PR : 0.370775 

Precision : 0.309091 

Recall : 0.797834 

F1 : 0.445565 

Total Learning Time : 33.957 

Total Inference Time : 24.931708812713623 

Total revision time: 66.62389520072938
Best scored revision CLL: -0.211644


Results 

CLL : -0.227913 

AUC ROC : 0.988906 

AUC PR : 0.370775 

Precision : 0.309091 

Recall : 0.797834 

F1 : 0.445565 

Total Learning Time : 66.68156317138673 

Total Inference Time : 24.931708812713623 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.073
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21499540812855825;  // std dev = 7.437, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17559113529068274;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.14007255075249034;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.20131906019341983;  // std dev = 4.121, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.15459723150718532;  // std dev = 6.154, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.09139017221184911;  // std dev = 2.471, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.10176837449653946;  // std dev = 7.230, 240.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09134815417874492;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08072745748335322;  // std dev = 7.558, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7234535204366749;  // std dev = 0.012, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27625781266428706;  // std dev = 0.016, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.028888388778679983;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.09208665616614035;  // std dev = 5.005, 109.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0014939534151704047;  // std dev = 3.500, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.09218985701342308;  // std dev = 6.023, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024412120196725774;  // std dev = 7.141, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025020280426382425;  // std dev = 7.072, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.946', 'seconds']
Parameter learned model CLL:-0.344571 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.437, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.28, 53, 28], 'false,false,false,false': [6.325, 129, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 43, 28], 'false,false,false,false': [6.154, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.471, 19, 9], 'false,false,false,false': [7.23, 163, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.558, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.012, 0, 28], 'true,false': [0.016, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [5.005, 70, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.5, 69, 28], 'false,false,false,false': [6.023, 97, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.141, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.072, 179, 86]}]
{'': [nan, 0.2295070677157771], 'false': [nan, 0.22950706771577686], 'false,false': [nan, 0.2295070677157771], 'false,false,false': [nan, 0.22950706771577686]}
{'': [nan, 0.21792158609935214], 'false': [nan, 0.21792158609935297], 'false,false': [nan, 0.21792158609935214], 'false,false,false': [0.2261850327693957, 0.21396093682976186]}
{'': [nan, 0.23094190841713408], 'false': [nan, 0.23094190841713408], 'false,false': [nan, 0.2309419084171344], 'false,false,false': [0.23922943850639436, 0.22676725748694504]}
{'': [nan, 0.21782464891790027], 'false': [nan, 0.21782464891790027], 'false,false': [nan, 0.2178246489178999], 'false,false,false': [0.21811224489795913, 0.21777984307477471]}
{'': [nan, 0.2209379700903475], 'false': [nan, 0.2209379700903475], 'false,false': [nan, 0.2209379700903479], 'false,false,false': [nan, 0.2209379700903479]}
{'': [nan, 0.22315265237806817], 'false': [nan, 0.22315265237806817], 'false,false': [nan, 0.22315265237806814], 'false,false,false': [nan, 0.22315265237806828]}
{'': [0.2260596127845856, 0.22369285927805152], 'true': [5.539926105984401e-06, 4.9370193315326374e-06], 'false': [nan, 0.22369285927805152], 'false,false': [nan, 0.22369285927805152], 'false,false,false': [0.2106324011085916, 0.2297786381617713], 'true,true': [nan, 5.539926105984401e-06], 'true,true,false': [nan, 5.539926105984401e-06]}
{'': [nan, 0.1944825433603336], 'false': [nan, 0.1944825433603336], 'false,false': [nan, 0.19448254336033327], 'false,false,false': [0.1262576496501472, 0.23401186227397136]}
{'': [nan, 0.19242263848111327], 'false': [nan, 0.192422638481114], 'false,false': [nan, 0.192422638481114], 'false,false,false': [nan, 0.192422638481114]}
{'': [nan, 0.1887059863464067], 'false': [nan, 0.1887059863464067], 'false,false': [nan, 0.1887059863464074], 'false,false,false': [nan, 0.1887059863464074]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.76
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, E) )
%   | | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.4805979146913499;  // std dev = 4.799, 98.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=61 */
%   | | | else return -0.14185106490048777;  // std dev = 2.98e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(A, E), interaction(F, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.7473169320860327;  // std dev = 0.108, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(D, A), phenotype(F, E) )
%   | | | then return -0.0510865834002789;  // std dev = 0.892, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.14480830277920845;  // std dev = 3.302, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.7368756121328783;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.05828854845850708;  // std dev = 0.393, 76.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=17 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.10215789866680935;  // std dev = 0.407, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.44613464298850963;  // std dev = 1.252, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.23835455865069027;  // std dev = 2.705, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.09566387380513658;  // std dev = 0.386, 119.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=37 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), interaction(F, F) )
%   | | then if ( enzyme(A, G), enzyme(F, H) )
%   | | | then return 0.022217986331542452;  // std dev = 1.053, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.1888057443890422;  // std dev = 2.535, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | else if ( phenotype(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.6815932124613049;  // std dev = 0.874, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.16689030783922457;  // std dev = 0.262, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7792177373872331;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1675010317595199;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2582542303576278;  // std dev = 1.329, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.1455254235245541;  // std dev = 2.298, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.6537786957968611;  // std dev = 0.188, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7543691332435468;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.15498783759193535;  // std dev = 0.128, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.5391385258753154;  // std dev = 0.135, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.4564118554563001;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14581237185498988;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.26921134161617893;  // std dev = 1.108, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07670720896371251;  // std dev = 5.477, 195.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=57 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4608270488358429;  // std dev = 0.084, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16824976848610113;  // std dev = 0.061, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | | then return 0.4457110219901086;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10412897585526706;  // std dev = 4.809, 150.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=50 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then return -0.008209553236895116;  // std dev = 0.337, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | else if ( complex(A, H) )
%   | | then if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.024920962042868436;  // std dev = 0.809, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.014828714407991116;  // std dev = 0.792, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.23777413370358688;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06069225785891582;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2514148234432285;  // std dev = 0.296, 18.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=15 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(F, A), phenotype(F, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.27683724760110057;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.04785108847124817;  // std dev = 2.569, 74.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=12 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4423248953490033;  // std dev = 0.315, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.02647311493176745;  // std dev = 2.900, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5793698348127994;  // std dev = 0.216, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17921149761341915;  // std dev = 0.244, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, L) )
%   | | | then return 0.11365586947087127;  // std dev = 3.055, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | | | else return 0.37587162063899915;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3712788307854787;  // std dev = 0.316, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | else return -0.164128545307915;  // std dev = 0.050, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3591449622463173;  // std dev = 0.076, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.03653177430099633;  // std dev = 2.110, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | | else return 0.06216041502013591;  // std dev = 3.178, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5326987934818536;  // std dev = 0.850, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.21630925624273503;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.08578009375511648;  // std dev = 1.255, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.04298362243458344;  // std dev = 1.048, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.12076866599362189;  // std dev = 0.202, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | else if ( interaction(F, A), phenotype(F, G) )
%   | | | then return 0.5350261124317895;  // std dev = 0.708, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.31401552139101013;  // std dev = 1.669, 22.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=18 */
%   | else return -0.18683463138868445;  // std dev = 0.082, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( location(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.47463907437825137;  // std dev = 0.156, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1577916119832154;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.13542175343232843;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return -0.06687697569061476;  // std dev = 1.364, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | | else return -0.005068601616667646;  // std dev = 2.502, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16760216696006772;  // std dev = 0.039, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.3067589955361259;  // std dev = 0.255, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.24227298631698826;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.10434014321855808;  // std dev = 0.123, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return -0.15514659427875852;  // std dev = 0.139, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.21832310123561935;  // std dev = 0.179, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.042745260303429074;  // std dev = 3.170, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | | | else return -0.021476045445053493;  // std dev = 3.127, 99.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=26 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.14623397538252225;  // std dev = 0.035, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06249211441882248;  // std dev = 0.103, 47.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=6 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(G, E) )
%   | | | then return 0.35338375110579123;  // std dev = 1.300, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return 0.15629554672898016;  // std dev = 1.340, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | else return -0.15656116640750745;  // std dev = 0.045, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4906103108399102;  // std dev = 0.436, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2903936232756182;  // std dev = 0.254, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.029287176352529688;  // std dev = 1.535, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | | else return 0.13664414877507422;  // std dev = 2.227, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '19.760', 'seconds']
Refined model CLL: -0.194664


******************************************
Best model found
******************************************
Results 

CLL : -0.211874 

AUC ROC : 0.980552 

AUC PR : 0.32622 

Precision : 0.19191 

Recall : 0.720848 

F1 : 0.30312 

Total Learning Time : 16.76 

Total Inference Time : 10.12902283668518 

Total revision time: 34.102505739212035
Best scored revision CLL: -0.194664


Results 

CLL : -0.211874 

AUC ROC : 0.980552 

AUC PR : 0.32622 

Precision : 0.19191 

Recall : 0.720848 

F1 : 0.30312 

Total Learning Time : 34.16017370986938 

Total Inference Time : 10.12902283668518 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 6.032
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11005733204607591;  // std dev = 4.969, 131.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=33 */
%   | | | else return 0.15566959625653587;  // std dev = 5.029, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.5376552303927726;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7260197101167462;  // std dev = 2.813, 78.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=69 */
%   | | | else return -0.1589502949679331;  // std dev = 0.038, 152.000 (wgt'ed) examples reached here.  /* #neg=152 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.13410054615993067;  // std dev = 1.442, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.17780077116908896;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5886131109664914;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5996953357065603;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.12126021166018076;  // std dev = 4.256, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6841890535069289;  // std dev = 0.995, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | | | else return -0.14145217665365112;  // std dev = 4.21e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30341089892943623;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05188259426487457;  // std dev = 1.381, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4350976522732422;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.45356828671507504;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5334473653571186;  // std dev = 1.398, 17.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else return 0.060752719892333586;  // std dev = 4.858, 209.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5425208128891997;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.07128504315861368;  // std dev = 1.457, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.8118639948941384;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.20672455123050537;  // std dev = 0.964, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34696042902072044;  // std dev = 0.005, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.06387480449975615;  // std dev = 5.343, 237.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40805161871078877;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.012492339476277134;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.020341893202360635;  // std dev = 1.225, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.27716016802864435;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3506412439650496;  // std dev = 0.168, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3005437077484978;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3143032106105603;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.045684233781435615;  // std dev = 2.123, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.022101587978320902;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.03130455715450189;  // std dev = 2.934, 77.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=20 */
%   | | | else return 0.06287539879865352;  // std dev = 4.122, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2528171273602297;  // std dev = 0.173, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.2507942837737558;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5372991373142328;  // std dev = 1.346, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.18048834609215572;  // std dev = 0.487, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.01828789506967693;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05269793467063172;  // std dev = 3.982, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18516860399439783;  // std dev = 0.020, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.03135032447848991;  // std dev = 1.186, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40508282340337315;  // std dev = 2.500, 79.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=71 */
%   | | else return -0.15545294734448195;  // std dev = 0.303, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2066603415078101;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.004314874803859686;  // std dev = 1.449, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18612013738258;  // std dev = 0.092, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.5981185017411644;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | else return 0.17340104638126144;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05012547704159286;  // std dev = 1.622, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return -0.16737655365978493;  // std dev = 0.693, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.006343660464298904;  // std dev = 1.608, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2588941152290543;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.02700756886127045;  // std dev = 3.409, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.08227328548272891;  // std dev = 1.337, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14992989787875638;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.2282584075650319;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.10550218325202881;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.14993636859982692;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.024693396294940103;  // std dev = 2.525, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return -0.1879474372651368;  // std dev = 1.096, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.041066572058801806;  // std dev = 3.229, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
%   | | | else return -0.014188497459539935;  // std dev = 1.428, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.780', 'seconds']
Parameter learned model CLL:-0.195445 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.969, 98, 33], 'false,false,true,false': [5.029, 85, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.225, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [1.279, 2, 9], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [2.813, 9, 69], 'false,false,true,false': [0.038, 152, 0], 'false,false,false,true': [1.442, 7, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.054, 0, 8], 'true,false': [1.49e-08, 0, 3], 'false,true,true': [4.256, 72, 34], 'false,true,false,true': [0.995, 1, 37], 'false,true,false,false': [4.21e-08, 61, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.0, 2, 2], 'false,false,false,true': [1.381, 9, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.047, 0, 5], 'true,false': [0.003, 0, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.398, 3, 14], 'false,true,false': [4.858, 152, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.457, 7, 3], 'false,false,false,false': [0.0, 0, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.964, 1, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.005, 0, 4], 'false,true': [5.343, 166, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.225, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.027, 0, 4], 'true,true,false': [0.168, 0, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.123, 29, 12], 'false,false,true': [0.869, 1, 3], 'false,false,false,true': [2.934, 57, 20], 'false,false,false,false': [4.122, 91, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.173, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.346, 1, 33], 'true,false': [0.487, 85, 0], 'false,true': [0.867, 1, 3], 'false,false,true': [3.982, 91, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.02, 0, 3], 'true,false': [1.186, 2, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.5, 8, 71], 'false,true,false': [0.303, 157, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.449, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.092, 0, 8], 'true,false,true': [0.0, 1, 0], 'true,false,false': [0.006, 0, 3], 'false,true,true': [1.622, 34, 11], 'false,true,false,true': [0.693, 1, 1], 'false,true,false,false': [1.608, 45, 17], 'false,false,true': [0.004, 0, 3], 'false,false,false,true': [3.409, 90, 40], 'false,false,false,false': [1.337, 7, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.037, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.005, 0, 3], 'false,true': [2.525, 73, 29], 'false,false,true': [1.096, 2, 3], 'false,false,false,true': [3.229, 82, 40], 'false,false,false,false': [1.428, 11, 4]}]
{'': [-1.6148698540002277e-16, 0.20316328803742512], 'false': [1.4802973661668753e-16, 0.19958704165183466], 'false,false': [0.198837868480726, 0.21301775147928975], 'false,false,false': [0.24000000000000005, 0.18750000000000003], 'false,false,true': [0.18845055649437803, 0.2090021173417128], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0], 'true': [-2.220446049250313e-16, 1.4802973661668753e-16]}
{'': [0.13017751479289957, 0.21148738964909333], 'false': [0.0, 0.21002214594978283], 'false,false': [0.20992980420255838, 0.21164727923469318], 'false,false,false': [0.2080340941078534, 0.2222222222222222], 'false,false,true': [0.10143124204481115, 9.267627631110764e-06], 'true': [0.0, 0.14876033057851243], 'false,true': [0.0, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.00029232167846741805, 0.1734284039173732], 'false': [0.17177967756820783, 0.19356263150120867], 'false,false': [0.25000000000000006, 0.1589335533230877], 'false,false,true': [nan, 0.25000000000000006], 'false,true': [0.17088116875668805, 0.17122271965811658], 'false,true,false': [0.02605307263896372, 2.912060392459427e-17], 'false,false,false': [0.1589335533230877, nan], 'true': [0.0003684471155681601, 7.401486830834377e-17]}
{'': [0.0002849329609769297, 0.13403819961112684], 'false': [0.12860260763051468, 0.23092948427054782], 'false,false': [0.0, 0.23832777210838368], 'false,false,false': [0.21230080534161394, 0.0], 'false,true': [0.11501923275251472, 0.11290002467599912], 'false,true,true': [nan, 0.11501923275251472], 'true': [0.0004395063927732812, 1.047069320729103e-06], 'false,false,true': [nan, 0.0]}
{'': [0.08182664500152019, 0.12460608351966976], 'false': [0.12046077369039279, 0.17617392234206872], 'false,false': [0.0, 0.17651655236269145], 'false,false,false': [0.18749999999999994, 0.16672449226974848], 'true': [0.11618171531944574, 5.770085940964842e-06], 'true,true': [0.11618171531944574, nan], 'false,false,true': [nan, 0.0]}
{'': [0.003744704564833516, 0.12171276199536005], 'false': [0.10989540652477242, 0.12398340854409973], 'false,false': [0.18869554150475845, 0.12272894985932514], 'false,false,false': [0.1117921580820262, 0.1287415331524964], 'true': [0.00454606974861058, 4.7330979752777114e-05], 'true,true': [0.00018829643539373941, 0.005632524612174406], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.11626606128667562, 0.12302637505625058], 'false': [0.18786939682161838, 0.12101135247294409], 'false,false': [0.12101135247294409, nan], 'true': [0.0558780103573778, 0.0027939694496420414], 'true,true': [0.0027073177032607646, 0.0532718165844121], 'true,true,false': [nan, 0.05327181658441205], 'true,true,true': [0.0029776774830254427, 0.0]}
{'': [0.11247421776647092, 0.09923036279996343], 'true': [0.00013936111920179647, 0.14071466019605922], 'false': [0.09684884829789787, 0.13384871557643127], 'false,false': [0.0, 0.13999005441291693], 'false,false,false': [0.13999005441291693, nan], 'false,true': [0.0791377798182567, 0.0005835513129507809], 'false,true,true': [nan, 0.07913777981825662], 'false,false,true': [0.0, nan]}
{'': [0.047305071305971995, 0.07751846790426799], 'false': [0.05342539901284139, 0.09439400650943797], 'false,false': [5.460553870193878e-06, 0.09532330683496523], 'false,false,false': [0.08939975335574736, 0.16251291810762572], 'false,true': [0.05847981319374797, 0.04879600558945042], 'false,true,false': [0.2398893144213013, 0.04168862052969833], 'true': [0.0010589262065349644, 0.11161673499299801], 'true,false': [0.0, 1.1710040239291489e-05]}
{'': [0.005847363220720586, 0.08393592524862925], 'false': [0.06248386791119273, 0.09822089795337402], 'false,false': [0.24040100863910002, 0.09128138410641545], 'false,false,false': [0.0854653855662698, 0.13586599970024107], 'true': [0.0076965284776844495, 9.253503620710682e-06], 'true,true': [0.000842670475211426, 0.0], 'true,true,true': [0.00019613254296108051, 0.0], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,false;complex(A, J), interaction(A, K).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 14.711
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.24945328292559932;  // std dev = 3.310, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | | | else return 0.15070212658887444;  // std dev = 6.238, 188.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7353395955528769;  // std dev = 0.067, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.08256265340251466;  // std dev = 0.783, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.708195128215529;  // std dev = 2.966, 79.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=69 */
%   | | | else return -0.16281062345357916;  // std dev = 0.131, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.2673675620000539;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.050092755460263566;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.36437764140722656;  // std dev = 0.392, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | else return 0.5919392378865646;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.0701847594974263;  // std dev = 3.807, 97.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=26 */
%   | | | else return 0.16105685070778963;  // std dev = 1.969, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6439020931963816;  // std dev = 1.665, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14038348785708019;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.3963584321768238;  // std dev = 0.698, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.03128175955904237;  // std dev = 1.275, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return -6.991621973619466E-4;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46462988227538427;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.46154513309755013;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11737978466771093;  // std dev = 0.012, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.055630863404557404;  // std dev = 2.129, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.15652466123805206;  // std dev = 2.159, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.06627897500150831;  // std dev = 4.757, 174.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.44556297335379735;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.054689320967975984;  // std dev = 1.463, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.17465685477551315;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.35074763841441364;  // std dev = 0.003, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3541814610814832;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.46838723897394613;  // std dev = 2.062, 38.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=31 */
%   | | | else return -0.16453414881302883;  // std dev = 0.493, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( location(A, H) )
%   | | | then return 0.10171490300230118;  // std dev = 3.781, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
%   | | | else return 0.30566851037261367;  // std dev = 0.777, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3398017936923181;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.014845857222241776;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.5352364206372016;  // std dev = 0.833, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2159114798606891;  // std dev = 0.218, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.46010020205753355;  // std dev = 1.364, 24.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | | else return -0.09593061553854856;  // std dev = 2.269, 91.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=9 */
%   | | else if ( enzyme(D, G) )
%   | | | then return -0.11501868466545204;  // std dev = 0.727, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.032164527514135434;  // std dev = 0.839, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(H, J), enzyme(A, K) )
%   | | | then return 0.03720374417100178;  // std dev = 1.883, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return 0.16419450384806733;  // std dev = 1.941, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.052606242228664675;  // std dev = 2.448, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return -0.011054546524508525;  // std dev = 0.852, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.26147107293738625;  // std dev = 0.071, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, A), phenotype(A, F) )
%   | | | then return 0.37084711432074374;  // std dev = 0.603, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.5788642443996613;  // std dev = 0.337, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.17549216575584933;  // std dev = 0.078, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5030837535273407;  // std dev = 0.104, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.17015278105714995;  // std dev = 0.068, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(I, J), complex(J, K) )
%   | | | then return 0.0013828860026044649;  // std dev = 2.508, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.05316051813994726;  // std dev = 1.688, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else return 0.07802142577474647;  // std dev = 0.716, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19169880330947234;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return -0.12325325078815219;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2018432006935389;  // std dev = 0.062, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.2888519632866537;  // std dev = 0.817, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return 0.4199963274953436;  // std dev = 1.518, 58.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=55 */
%   | | else return -0.13953809783676085;  // std dev = 0.032, 158.000 (wgt'ed) examples reached here.  /* #neg=158 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.18522179124334337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.05916430013271101;  // std dev = 0.921, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.08410426739807066;  // std dev = 0.620, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.18730373546379903;  // std dev = 0.050, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.1870953523555169;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(A, I), interaction(A, G) )
%   | | | then return 0.043587422787987516;  // std dev = 0.787, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.022297694159058;  // std dev = 1.738, 79.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=19 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.15225909641912094;  // std dev = 0.896, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.0021278366374688283;  // std dev = 0.561, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return -0.05096906143666763;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.057607722172199546;  // std dev = 2.638, 99.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
%   | | | else return -0.05294414737511142;  // std dev = 1.475, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16073067890414247;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( enzyme(A, D) )
%   | then if ( enzyme(E, D), interaction(E, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.3065047867527595;  // std dev = 0.425, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.06763260448373733;  // std dev = 1.338, 56.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=7 */
%   | | else if ( enzyme(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.4014174761271259;  // std dev = 0.162, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14888562270333686;  // std dev = 0.047, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), phenotype(H, K) )
%   | | | then return -0.09433600248562392;  // std dev = 0.714, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.00487563424501405;  // std dev = 1.348, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.005760203413292845;  // std dev = 2.408, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
%   | | | else return -0.059710303438430735;  // std dev = 0.642, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.365', 'seconds']
Refined model CLL: -0.171351


******************************************
Best model found
******************************************
Results 

CLL : -0.169017 

AUC ROC : 0.99105 

AUC PR : 0.388733 

Precision : 0.218647 

Recall : 0.939716 

F1 : 0.354752 

Total Learning Time : 14.711 

Total Inference Time : 24.475258111953735 

Total revision time: 60.08671900558472
Best scored revision CLL: -0.171351


Results 

CLL : -0.169017 

AUC ROC : 0.99105 

AUC PR : 0.388733 

Precision : 0.218647 

Recall : 0.939716 

F1 : 0.354752 

Total Learning Time : 60.13290616798401 

Total Inference Time : 24.475258111953735 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.944
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7812258581764353;  // std dev = 0.961, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.09479015647355703;  // std dev = 4.865, 131.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=31 */
%   | | | else return 0.16636811318170328;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.16584124279182003;  // std dev = 1.664, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7347337483847239;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7288643883178896;  // std dev = 0.027, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7145096431484654;  // std dev = 3.091, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.15850610812804344;  // std dev = 0.064, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.08673855063232921;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.8367385506323292;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.3491657074115101;  // std dev = 1.544, 14.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | else return 0.4264129320900275;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.08610002179099426;  // std dev = 4.282, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5659266345413992;  // std dev = 2.608, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14281079903486035;  // std dev = 2.58e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6894223680175467;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.011756407824745713;  // std dev = 1.652, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4730621593116444;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.25016401548180495;  // std dev = 1.243, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5044576685787715;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48394641812934264;  // std dev = 1.960, 27.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=21 */
%   | | else return 0.016734022987561787;  // std dev = 5.252, 264.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.6146840420557267;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.5447656798330844;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.3228334847731168;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.08309127574848732;  // std dev = 1.132, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3920294662116245;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, E) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.5767436759289399;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.28341329202897153;  // std dev = 0.925, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(F, A) )
%   | then return 0.06618387895676485;  // std dev = 5.786, 277.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=82 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.026730528978292534;  // std dev = 0.617, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return -0.0020568450378508313;  // std dev = 1.670, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.28440366849866583;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3894483845889317;  // std dev = 0.209, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.3773273669230689;  // std dev = 0.055, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.05517166490658223;  // std dev = 2.623, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.19696257558577188;  // std dev = 0.931, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.004549933751833763;  // std dev = 2.223, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.06980544577897149;  // std dev = 4.650, 164.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2760673360934252;  // std dev = 0.232, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.32831432313393627;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return -0.13004468722608303;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4700695500774968;  // std dev = 1.731, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.18803169870059439;  // std dev = 0.805, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.27507113228936697;  // std dev = 0.045, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07725204864295834;  // std dev = 4.349, 146.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18381849322971555;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22759915013600882;  // std dev = 0.111, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.3639459467722651;  // std dev = 3.340, 97.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=82 */
%   | | else return -0.15126476698932162;  // std dev = 0.643, 178.000 (wgt'ed) examples reached here.  /* #neg=178 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2603532470927019;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.0010617949144939576;  // std dev = 1.394, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17728473655267116;  // std dev = 0.105, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.16227511286212792;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.2013695062993312;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.031363280968087874;  // std dev = 1.750, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.18167407689150264;  // std dev = 0.851, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.04713509473361588;  // std dev = 1.485, 69.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18681630334288274;  // std dev = 0.034, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.013780795164626729;  // std dev = 4.032, 164.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=47 */
%   | | | else return 0.10091626677252816;  // std dev = 1.256, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1397983597817516;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.02715690732292291;  // std dev = 0.932, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17178590499326604;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return 0.008132580680033192;  // std dev = 2.469, 100.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=32 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.12157816369540707;  // std dev = 1.179, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.03817217413516656;  // std dev = 3.890, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   | | | else return -0.08272674020619014;  // std dev = 1.530, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.877', 'seconds']
Parameter learned model CLL:-0.200108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.961, 1, 12], 'true,false': [0.0, 0, 5], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.865, 100, 31], 'false,false,true,false': [5.579, 101, 45], 'false,false,false,true': [1.664, 9, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.027, 0, 13], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.091, 11, 76], 'false,false,true,false': [0.064, 178, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [0.0, 0, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [1.544, 3, 11], 'true,false': [0.923, 1, 6], 'false,true,true': [4.282, 95, 34], 'false,true,false,true': [2.608, 8, 48], 'false,true,false,false': [2.58e-08, 90, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.652, 13, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.028, 0, 10], 'true,false': [1.243, 2, 7], 'false,true,true,true': [0.036, 0, 3], 'false,true,true,false': [1.96, 6, 21], 'false,true,false': [5.252, 206, 58], 'false,false,true,true': [0.0, 1, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [1.132, 6, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'true,true,false': 'complex(A, E)', 'false': 'interaction(F, A)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'interaction(G, H), interaction(H, G)', 'false,false,false': 'interaction(A, I), interaction(I, J)'}, {'true,true,true': [0.072, 0, 7], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.925, 1, 10], 'false,true': [5.786, 195, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.617, 1, 1], 'false,false,false,true': [1.67, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.007, 0, 5], 'true,true,false': [0.209, 0, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.055, 0, 2], 'false,true': [2.623, 46, 19], 'false,false,true': [0.931, 1, 8], 'false,false,false,true': [2.223, 41, 11], 'false,false,false,false': [4.65, 114, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.232, 0, 15], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [1.047, 2, 3], 'true,true,false,false': [1.731, 4, 33], 'true,false': [0.805, 107, 0], 'false,true': [0.045, 0, 5], 'false,false,true': [4.349, 99, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.111, 0, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [3.34, 15, 82], 'false,true,false': [0.643, 178, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.394, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.105, 0, 9], 'true,false,true': [0.0, 0, 2], 'true,false,false': [0.091, 0, 5], 'false,true,true': [1.75, 45, 13], 'false,true,false,true': [0.851, 1, 8], 'false,true,false,false': [1.485, 58, 11], 'false,false,true': [0.034, 0, 5], 'false,false,false,true': [4.032, 117, 47], 'false,false,false,false': [1.256, 6, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.013, 0, 7], 'true,true,true,false': [0.932, 1, 6], 'true,true,false': [0.0, 0, 0], 'true,false': [0.079, 0, 3], 'false,true': [2.469, 68, 32], 'false,false,true': [1.179, 2, 5], 'false,false,false,true': [3.89, 96, 47], 'false,false,false,false': [1.53, 12, 4]}]
{'': [0.05246913580246885, 0.20671366154677767], 'false': [0.10937499999999978, 0.19976218787158254], 'false,false': [0.19909030483910944, 0.21301775147928975], 'false,false,false': [0.21301775147928975, nan], 'false,false,true': [0.18064215372064682, 0.21322011634453103], 'false,true': [0.22222222222222224, 0.0], 'true': [0.07100591715976314, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [4.8348344665239503e-05, 0.20962613927191764], 'false': [0.0007884305269265646, 0.20585101614194748], 'false,false': [0.20413325166059987, 0.23999999999999994], 'false,false,false': [0.18749999999999994, 0.0], 'false,false,true': [0.10979948939201938, 2.2785251611706076e-05], 'false,true': [0.0009658273954848973, 0.0], 'true': [0.0, 5.511902015048902e-05], 'false,true,false': [0.0, 0.0]}
{'': [0.15536893868947446, 0.15639192198486218], 'false': [0.1549070914244905, 0.17575525878248188], 'false,false': [0.17575525878248188, nan], 'false,false,true': [0.0, 0.1605809615498549], 'true': [0.1702042199728791, 0.12172028697564323], 'false,true': [0.14211218192137534, 0.16534750724486852], 'false,true,false': [0.12144219247556531, 7.401486830834377e-18]}
{'': [0.09370735556289589, 0.13239740571291395], 'false': [0.1270852579141711, 0.24336282774653153], 'false,false': [0.3360809143970104, 0.22682414435116596], 'false,false,true': [0.0, 0.0], 'false,false,false': [0.25, 0.16031124612524197], 'false,true': [0.12815579613873704, 0.10449337611074384], 'false,true,true': [0.00043687049064304134, 0.14230471673791434], 'true': [7.579012033152033e-05, 0.17159317431749457]}
{'': [0.08854362919435094, 0.1253492506550936], 'false': [0.120867455541999, 0.19813088411556454], 'false,false': [0.1904681233284734, 0.19914946539310702], 'false,false,false': [0.19914946539310702, nan], 'false,false,true': [nan, 0.1904681233284734], 'true': [0.10329069852976248, 0.07775290381904343], 'true,true': [0.0007313374888300623, 0.0], 'true,true,false': [nan, 0.0]}
{'': [0.00520712366788928, 0.11949953283060198], 'false': [0.1058457028787233, 0.12343914950642922], 'false,false': [0.09620492909949574, 0.12375747190140239], 'false,false,false': [0.09507281997652221, 0.13182746351172586], 'true': [0.005654784142943419, 0.0015092096875313488], 'true,true': [9.277680299146773e-06, 0.004850322201302893], 'true,false': [nan, 0.0015092096875313488]}
{'': [0.10957411936290713, 0.12652919823877642], 'false': [0.00039788312095450084, 0.12955298932650303], 'false,false': [0.12955298932650303, nan], 'true': [0.10170648082782746, 0.006050458154945797], 'true,true': [0.0035188571444765837, 0.135185440728626], 'true,true,false': [0.21935882221296113, 0.08093719542142852], 'true,true,true': [0.0035828383923493263, 0.0]}
{'': [0.0010756816618592683, 0.10428280999871765], 'false': [0.1026612605098203, 0.13382273794300184], 'false,false': [0.0, 0.13882564999308894], 'false,false,false': [0.13882564999308894, nan], 'false,true': [0.11497522221162637, 0.0023221823824892958], 'false,true,true': [nan, 0.11497522221162625], 'true': [0.0, 0.0009556615949398717], 'false,false,true': [0.0, nan]}
{'': [0.001383661527665607, 0.07823580013493024], 'false': [0.047163078488005834, 0.10081808765886245], 'false,false': [0.00022997715224125083, 0.1029199105063275], 'false,false,false': [0.09913491281914194, 0.1578376379346629], 'false,true': [0.0528065794796026, 0.04291844602801163], 'false,true,false': [0.08051460346839114, 0.03197379513384114], 'true': [0.0012303659080883501, 0.0014869332840724797], 'true,false': [0.0, 0.0016450289982092136]}
{'': [0.055228711976776805, 0.09520170722856858], 'false': [0.060974806889260755, 0.11576929641474545], 'false,false': [0.19850452788756898, 0.1112083822792131], 'false,false,false': [0.10580260467066223, 0.1463768197127726], 'true': [0.06524349147425673, 0.002070903070788855], 'true,true': [0.06524349147425673, nan], 'true,true,true': [2.280458031782086e-05, 0.12412012996217837]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
1;false,false,false;complex(A, K).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;true,true;interaction(D, A).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 14.599
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6498156017661788;  // std dev = 1.990, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.04925847230789509;  // std dev = 3.012, 108.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=10 */
%   | | else if ( phenotype(A, K), location(A, L) )
%   | | | then return 0.23024195835532496;  // std dev = 4.483, 86.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=32 */
%   | | | else return 0.12203782398840127;  // std dev = 3.740, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E), enzyme(A, F) )
%   | | then return 0.38614007887762103;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.75517232473028;  // std dev = 0.041, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7194734122109544;  // std dev = 2.98e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7194734122109546;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.693105645610587;  // std dev = 3.109, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.15171537557797823;  // std dev = 0.241, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.016333379989427348;  // std dev = 1.269, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.22774911245391713;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5810045371804705;  // std dev = 0.033, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.26965215103199885;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.08169566424441717;  // std dev = 3.610, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | | else return -0.0246297070477653;  // std dev = 1.890, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5819046651559066;  // std dev = 2.464, 55.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=48 */
%   | | | else return -0.13576441203567147;  // std dev = 0.118, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.6123727314691008;  // std dev = 0.880, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.019184005480122293;  // std dev = 0.619, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.15954347160859836;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #neg=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44161546919059014;  // std dev = 0.033, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.34602069676942204;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4611959696655265;  // std dev = 0.123, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.36234248842830163;  // std dev = 2.038, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | else if ( interaction(H, A), interaction(H, H) )
%   | | | then return -0.07211093209252531;  // std dev = 2.147, 63.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=7 */
%   | | | else return 0.06625135681217735;  // std dev = 4.634, 186.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5506243514658344;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.1042662091160484;  // std dev = 1.033, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.03433686385084807;  // std dev = 1.088, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3410177580045534;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.6201880540253087;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.36749559669737397;  // std dev = 0.032, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then return 0.33545176403176047;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.48968174862278246;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.07745736824521093;  // std dev = 1.094, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.029649622807685398;  // std dev = 3.349, 109.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=27 */
%   | | else if ( complex(A, I), location(A, J) )
%   | | | then return -0.003664006693764087;  // std dev = 2.525, 73.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=15 */
%   | | | else return 0.13160750869325696;  // std dev = 3.645, 94.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=36 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.23448958835559755;  // std dev = 0.234, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(D, F), location(A, G) )
%   | | then if ( interaction(D, H), phenotype(H, I) )
%   | | | then return -0.02903599038825446;  // std dev = 1.195, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -0.13482375459078788;  // std dev = 1.249, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11972329162342321;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.07893341126606589;  // std dev = 1.741, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | else if ( interaction(J, A), phenotype(A, K) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.1627634865096318;  // std dev = 1.992, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.08288632070900048;  // std dev = 3.398, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.051791655463322026;  // std dev = 3.077, 91.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=28 */
%   | | | else return -0.06656643470569452;  // std dev = 1.174, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24595260434219632;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.09277996758396687;  // std dev = 0.588, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.4886504417016253;  // std dev = 1.031, 35.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=33 */
%   | else return -0.15757993010294033;  // std dev = 0.104, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.29935347071197416;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I), enzyme(A, J) )
%   | | | then return 0.4360171029706035;  // std dev = 0.700, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08082038826309848;  // std dev = 2.171, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.07179654282180269;  // std dev = 2.212, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | | else return 0.015130860976777414;  // std dev = 2.886, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16497023539260136;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22410496039335415;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( location(A, G), interaction(A, H) )
%   | | | then return 0.21621584902329563;  // std dev = 1.903, 41.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=33 */
%   | | | else return 0.43858900782080185;  // std dev = 2.367, 55.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=49 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return -0.10887401097458514;  // std dev = 0.143, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | | else return -0.17118078467607936;  // std dev = 0.251, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21122542442978942;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.04949405529267537;  // std dev = 1.223, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.1483607371950685;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17432035451063035;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3132161023721507;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.18479968437441352;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( complex(A, H), enzyme(A, I) )
%   | | then return -0.09080869226091418;  // std dev = 0.174, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.03295882118013112;  // std dev = 1.454, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return -0.013138634871056935;  // std dev = 1.787, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.03343922037860538;  // std dev = 0.924, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.06559726604867204;  // std dev = 1.054, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.016068567507556544;  // std dev = 3.869, 153.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=49 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.12415909645914502;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12759446443823844;  // std dev = 0.727, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.1515681778179145;  // std dev = 0.804, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.18033491784807373;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15735797574178997;  // std dev = 0.100, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A), phenotype(G, H) )
%   | then return -0.0025674333679933047;  // std dev = 0.265, 251.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=72 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( enzyme(A, K), phenotype(J, I) )
%   | | | then return 0.2790792337283958;  // std dev = 0.566, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1203826593499373;  // std dev = 0.931, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return 0.029409109641085143;  // std dev = 0.250, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.275', 'seconds']
Refined model CLL: -0.198866


******************************************
Best model found
******************************************
Results 

CLL : -0.1698 

AUC ROC : 0.986904 

AUC PR : 0.316539 

Precision : 0.263226 

Recall : 0.769811 

F1 : 0.392308 

Total Learning Time : 14.599 

Total Inference Time : 24.29834222793579 

Total revision time: 62.027214544296264
Best scored revision CLL: -0.198866


Results 

CLL : -0.1698 

AUC ROC : 0.986904 

AUC PR : 0.316539 

Precision : 0.263226 

Recall : 0.769811 

F1 : 0.392308 

Total Learning Time : 62.073401706695556 

Total Inference Time : 24.29834222793579 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.379
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.15951879811320993;  // std dev = 5.544, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.18573514199606403;  // std dev = 3.574, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8384934621274266;  // std dev = 0.015, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16161515304957388;  // std dev = 0.024, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.25060289978545985;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.16733599753278444;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.41250929388914154;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.05546667937060781;  // std dev = 2.090, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6791467605819353;  // std dev = 0.259, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.14159606854358617;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.182445884666016;  // std dev = 0.527, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.15224644240577967;  // std dev = 3.572, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.0045794057586944995;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.42921231177150465;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.43857129386206034;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.3877525605711041;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4059736650715332;  // std dev = 0.627, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.06024298913750372;  // std dev = 4.139, 185.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5099816156955972;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5175256200117277;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.024327594532357392;  // std dev = 2.001, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.1110256390115677;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3490802848626455;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.32101106745893265;  // std dev = 0.029, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.034538512917965;  // std dev = 4.303, 214.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.38460444540121674;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.38998044677509625;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.09509794247806083;  // std dev = 3.575, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | | | else return 0.05008438199778465;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.264046661223941;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.36550473051194055;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.3319810780866747;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.2733318626575231;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.32032175273987956;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.06821510213747393;  // std dev = 1.018, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.008968504571196245;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.041367882162188625;  // std dev = 2.779, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | | else return 0.045173547662518757;  // std dev = 4.784, 160.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23713945972693895;  // std dev = 0.112, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.2364736560603261;  // std dev = 0.004, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2512078668735632;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5981830039366903;  // std dev = 1.368, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.2001849454367412;  // std dev = 0.839, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2556921666559548;  // std dev = 0.024, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.05186595753962524;  // std dev = 3.383, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18027049857947144;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.19958225912867567;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43376166714396835;  // std dev = 1.100, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else return -0.13929266893814046;  // std dev = 0.227, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.19645874053986917;  // std dev = 0.003, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.02540113941168181;  // std dev = 3.138, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.158624534562848;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13350897341554824;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1647279466094675;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0734456321318421;  // std dev = 0.442, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.21731187625490545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.01969401285797012;  // std dev = 1.268, 63.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.011471968525434362;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.04617021377132644;  // std dev = 2.629, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
%   | | | else return 0.07801683784741323;  // std dev = 2.976, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13900688072602904;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.14822229281167656;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.12749476853144026;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.136174154113034;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.03793070518936094;  // std dev = 1.434, 100.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17726699372975446;  // std dev = 0.019, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027746721786065975;  // std dev = 2.645, 114.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=36 */
%   | | | else return 0.03425857261014902;  // std dev = 3.033, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.054', 'seconds']
Parameter learned model CLL:-0.177644 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.436, 23, 8], 'false,false,true,false': [5.544, 102, 44], 'false,false,false,true': [3.574, 39, 19], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.0, 0, 9], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.015, 0, 52], 'false,false,true,false': [0.024, 148, 0], 'false,false,false,true': [1.708, 7, 5], 'false,false,false,false': [3.162, 30, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.926, 1, 6], 'true,false': [0.0, 0, 8], 'false,true,true': [2.09, 26, 8], 'false,true,false,true': [0.259, 0, 48], 'false,true,false,false': [0.0, 98, 0], 'false,false,true,true': [0.527, 1, 1], 'false,false,true,false': [3.572, 37, 20], 'false,false,false,true': [0.894, 4, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.05, 0, 9], 'true,false': [0.038, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.627, 1, 3], 'false,true,false': [4.139, 133, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [2.001, 20, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.002, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.029, 0, 9], 'false,true': [4.303, 158, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.575, 39, 19], 'false,false,false,false': [0.866, 3, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.027, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.047, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.056, 0, 3], 'false,true': [1.018, 21, 3], 'false,false,true': [1.214, 2, 6], 'false,false,false,true': [2.779, 60, 23], 'false,false,false,false': [4.784, 114, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.112, 0, 12], 'true,true,true,false': [0.004, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [1.368, 2, 36], 'true,false': [0.839, 106, 0], 'false,true': [0.024, 0, 5], 'false,false,true': [3.383, 84, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.018, 0, 5], 'true,false': [0.049, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.1, 1, 56], 'false,true,false': [0.227, 150, 0], 'false,false,true,true': [0.003, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [3.138, 48, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.025, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.025, 0, 4], 'false,true,true': [0.442, 12, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.268, 49, 14], 'false,false,true': [0.917, 1, 5], 'false,false,false,true': [2.629, 71, 36], 'false,false,false,false': [2.976, 35, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.005, 0, 5], 'true,true,true,false': [0.006, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.029, 0, 4], 'false,true': [1.434, 83, 17], 'false,false,true': [0.019, 0, 5], 'false,false,false,true': [2.645, 78, 36], 'false,false,false,false': [3.033, 41, 20]}]
{'': [-2.5376526277146434e-16, 0.2174818597151309], 'false': [-1.4802973661668753e-16, 0.2110020478779761], 'false,false': [0.20747550193111886, 0.2203708680462237], 'false,false,false': [0.22027348394768081, 0.22222222222222224], 'false,false,true': [0.19146722164412083, 0.21054606868080403], 'false,true': [0.0, 0.0], 'false,true,false': [0.0, 1.4802973661668753e-16], 'true': [-2.9605947323337506e-16, 0.0]}
{'': [0.0, 0.205042357495727], 'false': [7.401486830834377e-17, 0.20156469852218656], 'false,false': [0.19244585219149687, 0.22774424277855426], 'false,false,false': [0.24297810117209376, 0.22222222222222285], 'false,false,true': [4.386540451215217e-06, 3.9382446973395955e-06], 'false,true': [0.0, 0.0], 'true': [0.0, -9.868649107779169e-17], 'false,true,false': [nan, 0.0]}
{'': [0.06222222222222206, 0.16503630718666343], 'false': [0.14601384878244345, 0.21802100757857512], 'false,false': [0.22099144188605427, 0.16000000000000003], 'false,false,true': [0.13906973816385226, 0.22383497216246143], 'false,false,false': [0.16000000000000003, nan], 'false,true': [0.12841622930909669, 0.1491116545107429], 'false,true,false': [0.0013928698698964699, -9.516197353929913e-17], 'true': [0.12244897959183677, -1.1102230246251565e-16]}
{'': [0.00030165111426350144, 0.12508371378425628], 'false': [0.09522180893127252, 0.20277632994067168], 'false,false': [1.422800028044735e-05, 0.2029304326510935], 'false,false,false': [0.16010498432923936, 0.21975425330812848], 'false,true': [0.0785956855988627, 0.09259160722862583], 'false,true,true': [0.0, 0.0981782052687353], 'true': [0.00027372045553542, 0.0002956180919782447], 'false,false,true': [0.0, 0.0]}
{'': [0.00023940689947486517, 0.11668145701240948], 'false': [0.08650858491385849, 0.21412909637605276], 'false,false': [7.225347692985107e-06, 0.2183149039356346], 'false,false,false': [0.22030934581287254, 0.1875], 'true': [1.0847419687820547e-06, 9.042203892616218e-05], 'false,false,true': [0.0, 0.0], 'true,true': [1.0847419687820547e-06, nan]}
{'': [0.001600401680231091, 0.12145446764669683], 'false': [0.04319641048941803, 0.1278624824523376], 'false,false': [0.18415751373761508, 0.125970315560469], 'false,false,false': [0.09306219295909292, 0.14303645726091346], 'true': [0.0013669825280298825, 0.0013317994278685566], 'true,true': [0.00012427868884696638, 0.0], 'true,false': [0.0014218502535787991, 0.001033410402464426], 'true,false,true': [0.0011238352719300237, 0.0]}
{'': [0.13283604626119389, 0.09314367518547033], 'true': [0.06189932226447208, 0.006634622854722494], 'false': [0.00011564139263346984, 0.09535803831926253], 'false,false': [0.09535803831926253, nan], 'true,true': [0.0008891334203095434, 0.05102606480229314], 'true,true,false': [0.0, 0.04928188814181424], 'true,true,true': [0.0010361215403053385, 6.824733601064337e-06]}
{'': [0.0002809604108577018, 0.08930918784203967], 'false': [0.0716207382659603, 0.14151269623722623], 'false,false': [5.217074844444947e-06, 0.1448386608355091], 'false,false,false': [0.1448386608355091, nan], 'false,true': [0.021224051539984013, 0.0003448970486773284], 'false,true,true': [nan, 0.021224051539983982], 'true': [6.796653164400923e-05, 0.00026609602392928407], 'false,false,true': [5.217074844444947e-06, nan]}
{'': [0.00014481045113146074, 0.07699314978372125], 'false': [0.025040248747759536, 0.09918840317991635], 'false,false': [0.14029509233011694, 0.09759196200276185], 'false,false,false': [0.06461242754678283, 0.1610822694469997], 'false,true': [0.015016566553075743, 0.02642392132965824], 'false,true,false': [0.0, 0.02553441316045392], 'true': [7.052839268820475e-05, 0.00027850548736860214], 'true,false': [0.0, 0.0001532070017542242]}
{'': [0.00010533301726926252, 0.06675759308060598], 'false': [0.020563470632040618, 0.0905676336182998], 'false,false': [6.879260331273396e-05, 0.09255101789591838], 'false,false,false': [0.06134556050693522, 0.1508417903638698], 'true': [5.7735737244349325e-05, 0.00021657153932747378], 'true,true': [2.7362115006961812e-05, 0.0], 'true,true,true': [4.9249015698499266e-06, 1.1680083292789356e-05], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 7.884
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.1953582374250924;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.12481560176617883;  // std dev = 5.416, 150.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8376526509463638;  // std dev = 0.045, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15937344022844527;  // std dev = 0.124, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | | else if ( enzyme(A, J), phenotype(A, K) )
%   | | | then return 0.07303504336033162;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.20396794025067544;  // std dev = 3.294, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.49965525818475776;  // std dev = 0.253, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.017048773827879872;  // std dev = 1.302, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.2450593941623202;  // std dev = 1.384, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6636901159406866;  // std dev = 1.003, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.14063832417525743;  // std dev = 0.068, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.13289584682145497;  // std dev = 1.856, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.031006295325831598;  // std dev = 1.893, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2327606022602296;  // std dev = 2.229, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.41324221124382265;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.442975584147582;  // std dev = 0.016, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.439962940189109;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6008627465036036;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.11491274660980613;  // std dev = 0.062, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.07979692743366108;  // std dev = 4.068, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.5966127820285636;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5472627378887168;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.021605575571846867;  // std dev = 2.630, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.10697693019552926;  // std dev = 2.728, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.32733723128350656;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then return 0.3374118296912301;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3575610265066773;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(G, A) )
%   | then return 0.06334928712384078;  // std dev = 0.305, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.4488690049649515;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4115295978503213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.03728322441397898;  // std dev = 1.937, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.13184510372675864;  // std dev = 3.095, 41.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.28426836177920384;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3346699611031455;  // std dev = 0.062, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.4381069612851747;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(I, F), interaction(J, I) )
%   | | | then return 0.033852163800734074;  // std dev = 3.889, 111.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=29 */
%   | | | else return -0.08748478752966202;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.04810175635982707;  // std dev = 2.136, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.005125843780352795;  // std dev = 0.794, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(N, A), phenotype(N, P) )
%   | | | then return 0.052103355464043474;  // std dev = 1.785, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | | else return 0.13209620490531218;  // std dev = 1.983, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.24840593121087412;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.251332690591909;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.606134668280013;  // std dev = 1.206, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | else return -0.1891337314896622;  // std dev = 0.067, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.26877973111817194;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.43900714572535887;  // std dev = 0.999, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.15226670862147698;  // std dev = 0.015, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0334263309172578;  // std dev = 2.156, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.2649572323423771;  // std dev = 0.514, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17018926257543704;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.16560479009737086;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.21728830545281874;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then return 0.3778828374595737;  // std dev = 0.144, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.11980381428510714;  // std dev = 0.180, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | | else return -0.15196419021025162;  // std dev = 0.205, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.21521435116284743;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.004516431164666531;  // std dev = 2.235, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | | else return 0.04867856661261573;  // std dev = 2.232, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15758691952474763;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.18826173929710505;  // std dev = 0.038, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return -0.04062938258289525;  // std dev = 0.277, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.1403368684684102;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.03934667950331794;  // std dev = 1.417, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( location(A, H), interaction(A, I) )
%   | | then if ( phenotype(A, J), phenotype(I, J) )
%   | | | then return -0.058268068304954325;  // std dev = 1.071, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.12998799182675935;  // std dev = 2.557, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | else if ( location(A, K) )
%   | | | then return 0.016538543551610066;  // std dev = 2.481, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return -0.08507189367660922;  // std dev = 1.023, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.09257315483854058;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else return 0.16490848248128476;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.2430566038560359;  // std dev = 0.161, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.09900223330372468;  // std dev = 0.086, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.03913173301529885;  // std dev = 0.642, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.02680271613777013;  // std dev = 0.580, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.18193333052867405;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.07425513933194347;  // std dev = 2.492, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.012259383301666982;  // std dev = 2.952, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.264', 'seconds']
Refined model CLL: -0.173738


******************************************
Best model found
******************************************
Results 

CLL : -0.190336 

AUC ROC : 0.982706 

AUC PR : 0.225646 

Precision : 0.13224 

Recall : 0.931408 

F1 : 0.231598 

Total Learning Time : 7.884 

Total Inference Time : 7.3586530685424805 

Total revision time: 27.0889801864624
Best scored revision CLL: -0.173738


Results 

CLL : -0.190336 

AUC ROC : 0.982706 

AUC PR : 0.225646 

Precision : 0.13224 

Recall : 0.931408 

F1 : 0.231598 

Total Learning Time : 27.135167348861692 

Total Inference Time : 7.3586530685424805 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.501
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.06449814144871872;  // std dev = 3.212, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   | | | else return 0.14919371121891478;  // std dev = 5.258, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.26723984419042146;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4813730497173963;  // std dev = 0.881, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.805050406764923;  // std dev = 1.377, 54.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=52 */
%   | | | else return -0.15677637425916796;  // std dev = 0.066, 150.000 (wgt'ed) examples reached here.  /* #neg=150 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.12105005075650155;  // std dev = 1.875, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.09578049099915789;  // std dev = 2.263, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5588443971225469;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3885860069349682;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07274057916211805;  // std dev = 2.747, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6688410156609733;  // std dev = 0.998, 43.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=42 */
%   | | | else return -0.14093053664107555;  // std dev = 2.98e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6943731847387155;  // std dev = 0.147, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08166554505377463;  // std dev = 2.494, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.05397960750506507;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.16588006255566978;  // std dev = 1.223, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.35929529757355283;  // std dev = 0.896, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5373396209585248;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49372909101976964;  // std dev = 0.692, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.04371527655140416;  // std dev = 4.350, 194.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.46851643529886633;  // std dev = 0.050, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5935866532701308;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.021083337606619814;  // std dev = 1.969, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.07457877243716995;  // std dev = 2.216, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3557120850688861;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.39250982444069266;  // std dev = 0.064, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.05857968905467732;  // std dev = 4.404, 197.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3234174596909869;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4176497214734037;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.06690218751719895;  // std dev = 2.514, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.05641262439257511;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2956845349436702;  // std dev = 0.009, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30105429642061005;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2570175645921605;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30906132510888235;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35782733717666426;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.03133974573413131;  // std dev = 1.233, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.14545561831029455;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.02635507020647773;  // std dev = 2.328, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.08237756801417276;  // std dev = 4.394, 149.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2531212918203109;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.2361580024639962;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.26998482432845744;  // std dev = 0.039, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.596573040630057;  // std dev = 0.772, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | else return -0.1771161963469131;  // std dev = 0.528, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.04569432953129082;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.06096812675100832;  // std dev = 3.361, 98.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.19672904352957998;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.21449922824531314;  // std dev = 0.164, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.42130673771327926;  // std dev = 1.515, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1418752325902515;  // std dev = 0.194, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.17440796812849213;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.20732984407234722;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.11163137190909436;  // std dev = 2.302, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.1579371028162841;  // std dev = 0.069, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.1943851049056785;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.17734253369689823;  // std dev = 0.043, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.0976335768436353;  // std dev = 0.315, 22.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.2420062360480569;  // std dev = 0.164, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03338895948965892;  // std dev = 1.448, 84.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2420030238280851;  // std dev = 0.025, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.030253269587166228;  // std dev = 2.925, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return -0.03860168348619423;  // std dev = 2.544, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.13316038251616394;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15791801026528046;  // std dev = 0.037, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.13605079794376718;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.1563664464562114;  // std dev = 0.013, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.16062856989909638;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.017372874558091153;  // std dev = 1.626, 95.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20045176697092618;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.0391243877364036;  // std dev = 2.670, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return -0.005227303199296133;  // std dev = 2.499, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.255', 'seconds']
Parameter learned model CLL:-0.179801 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [3.212, 50, 13], 'false,false,true,false': [5.258, 95, 39], 'false,false,false,true': [2.306, 13, 9], 'false,false,false,false': [1.449, 7, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [0.881, 1, 3], 'false,false,true,true': [1.377, 2, 52], 'false,false,true,false': [0.066, 150, 0], 'false,false,false,true': [1.875, 12, 5], 'false,false,false,false': [2.263, 19, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.057, 0, 11], 'true,false': [0.869, 1, 4], 'false,true,true': [2.747, 42, 14], 'false,true,false,true': [0.998, 1, 42], 'false,true,false,false': [2.98e-08, 84, 0], 'false,false,true,true': [0.147, 0, 3], 'false,false,true,false': [2.494, 23, 9], 'false,false,false,true': [1.519, 10, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [1.223, 2, 6], 'true,false': [0.896, 1, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.692, 1, 6], 'false,true,false': [4.35, 145, 49], 'false,false,true,true': [0.05, 0, 2], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.969, 17, 5], 'false,false,false,false': [2.216, 18, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.069, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.064, 0, 6], 'false,true': [4.404, 141, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.041, 0, 2], 'false,false,false,true': [2.514, 22, 9], 'false,false,false,false': [1.5, 9, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.009, 0, 5], 'true,true,false': [0.109, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.129, 0, 3], 'true,false,false': [0.091, 0, 4], 'false,true': [1.233, 20, 5], 'false,false,true': [0.888, 1, 5], 'false,false,false,true': [2.328, 38, 13], 'false,false,false,false': [4.394, 102, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.18, 0, 13], 'true,true,true,false': [0.044, 0, 3], 'true,true,false,true': [0.039, 0, 3], 'true,true,false,false': [0.772, 0, 33], 'true,false': [0.528, 90, 0], 'false,true': [0.856, 1, 3], 'false,false,true': [3.361, 67, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.164, 0, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.515, 2, 56], 'false,true,false': [0.194, 115, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.028, 0, 2], 'false,false,false,true': [2.302, 19, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.069, 0, 10], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.043, 0, 5], 'false,true,true': [0.315, 21, 1], 'false,true,false,true': [0.164, 0, 6], 'false,true,false,false': [1.448, 67, 17], 'false,false,true': [0.025, 0, 3], 'false,false,false,true': [2.925, 62, 31], 'false,false,false,false': [2.544, 40, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.038, 0, 8], 'true,true,true,false': [0.037, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.013, 0, 2], 'true,false': [0.032, 0, 3], 'false,true': [1.626, 71, 24], 'false,false,true': [0.022, 0, 3], 'false,false,false,true': [2.67, 64, 31], 'false,false,false,false': [2.499, 34, 12]}]
{'': [0.05859374999999978, 0.20983104559454546], 'false': [0.10937499999999978, 0.2013691577201058], 'false,false': [0.19428483083820847, 0.2343749999999995], 'false,false,false': [0.24173553719008264, 0.20999999999999988], 'false,false,true': [0.16376921138825848, 0.20633771441301027], 'false,true': [0.0, 0.12244897959183662], 'false,true,false': [0.18750000000000006, 1.4802973661668753e-16], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0003624995143289548, 0.1969872278605855], 'false': [0.11436836921285842, 0.19140316649121833], 'false,false': [0.18937186042295348, 0.20098791393729318], 'false,false,false': [0.20681023242288574, 0.19692856313191476], 'false,false,true': [0.03509545886549609, 2.9105858449713177e-05], 'false,true': [0.0, 0.14184792249650868], 'false,true,false': [0.0, 0.19387462287157514], 'true': [0.0, 0.00044937956321764653]}
{'': [0.05367092182252253, 0.16005439399612506], 'false': [0.1493605265986342, 0.20082068900305186], 'false,false': [0.20775013052235217, 0.17747403425342834], 'false,false,true': [0.007177365917939493, 0.19437577134159095], 'false,false,false': [0.17747403425342834, nan], 'false,true': [0.13472615007500557, 0.15469327376624104], 'false,true,false': [0.02317362608846055, 1.057355261547768e-17], 'true': [0.0002941318011921384, 0.15117066526182982]}
{'': [0.13695696566612683, 0.12080481336172942], 'true': [0.18710789303445957, 0.08020980015500594], 'false': [0.10394583938025774, 0.1887243474221697], 'false,false': [0.004316749482704811, 0.18776213639677597], 'false,false,false': [0.1763038538948921, 0.19650587703993116], 'false,true': [0.060149719294778914, 0.09753608335501798], 'false,true,true': [0.0, 0.06850480154669783], 'false,false,true': [0.0012609377495973184, 0.0]}
{'': [0.0009187692716542332, 0.11642223786163998], 'false': [0.0984566820777781, 0.19279612708861263], 'false,false': [0.0025286213241855573, 0.19929750748737313], 'false,false,false': [0.20383191778117418, 0.18750428960115662], 'false,false,true': [0.0, 0.0008330255994017377], 'true': [0.0005348036322050634, 0.0006822735571027824], 'true,true': [0.0005348036322050634, nan]}
{'': [0.0031314800327783138, 0.11869013204110605], 'false': [0.06082572614473267, 0.12459348357739487], 'false,false': [0.13151863404112465, 0.12421140414380337], 'false,false,false': [0.10627323780898819, 0.12955099075973356], 'true': [0.0015089335079910837, 0.004326518295765483], 'true,false': [0.004658374099347773, 0.0020864665808102423], 'true,false,true': [0.0, 0.005534027213616548], 'true,true': [1.6983024513406163e-05, 0.003977496185671022]}
{'': [0.11396157437656795, 0.11797163139950899], 'false': [0.18337627169289528, 0.1152929056610883], 'false,false': [0.1152929056610883, nan], 'true': [0.039549658907060116, 0.003096567452748639], 'true,true': [0.002191739564821847, 0.024760250608737877], 'true,true,false': [0.0004996917391163295, 0.018077434041599758], 'true,true,true': [0.0024953733623735985, 0.0006421936453129273]}
{'': [0.0018480786682877116, 0.09675797063913853], 'false': [0.08417243992147504, 0.1564431259799718], 'false,false': [0.0004938530953914703, 0.170901616698681], 'false,false,false': [0.170901616698681, nan], 'false,true': [0.03957614301318404, 0.0003287163178440954], 'false,true,true': [nan, 0.039576143013184135], 'true': [0.0, 0.0024358994176494546], 'false,false,true': [0.0, 0.00037949633786635295]}
{'': [0.0005447011802615503, 0.0701082247958421], 'false': [0.02470632901514429, 0.10372064535589627], 'false,false': [0.0002100316824864649, 0.10472903304577548], 'false,false,false': [0.09201701370631708, 0.12442320847378761], 'false,true': [0.0045101935142313814, 0.028302837694479555], 'false,true,false': [0.004471157108886986, 0.024948933011766677], 'true': [0.00047323663819130447, 0.00035450983717225104], 'true,false': [0.0, 0.00037700359903898307]}
{'': [0.00040767988139334826, 0.06816957919837748], 'false': [0.027834725520599218, 0.0939495761929023], 'false,false': [0.00015954238420788636, 0.09530126531471719], 'false,false,false': [0.07506915133150527, 0.13575964644774582], 'true': [0.00035141433855798366, 0.00033081122912808253], 'true,true': [0.00038133654436890984, 0.0001502495151808105], 'true,true,true': [0.0001806777468556578, 0.0006936196290108845], 'true,true,false': [0.0, 8.77990812774912e-05]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.494
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( enzyme(A, J) )
%   | | | then return 0.18072958026080266;  // std dev = 2.603, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return -0.026466449515872327;  // std dev = 2.304, 52.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=6 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.18891816586874274;  // std dev = 5.364, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
%   | | | else return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7641072739982948;  // std dev = 0.063, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8347824560454048;  // std dev = 0.038, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.16255968587805883;  // std dev = 0.109, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.03057905430308801;  // std dev = 2.395, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.16588399292849224;  // std dev = 1.793, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4928664367462845;  // std dev = 0.242, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return -0.04828151940778091;  // std dev = 1.577, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | | else return 0.06772329209299677;  // std dev = 2.263, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6315585310036339;  // std dev = 1.389, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14745411512219872;  // std dev = 0.313, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8304319076863512;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.16956809231364892;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3053664367462845;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.06253806876865595;  // std dev = 2.596, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43278710319860436;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6739324490030366;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.49321897142245075;  // std dev = 0.703, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return -0.012522875062876105;  // std dev = 2.446, 98.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=17 */
%   | | | else return 0.10951889008920433;  // std dev = 3.299, 93.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.4792647031913867;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.4792647031913867;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.04708767319509728;  // std dev = 2.188, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | | else return 0.15552049385321093;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.33108632205311395;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E) )
%   | | then return 0.33108632205311395;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.08108632205311395;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.42717114179967847;  // std dev = 0.100, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, A) )
%   | | | then return -0.04873161807181294;  // std dev = 1.210, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | | else return 0.05980009634961598;  // std dev = 4.070, 162.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=48 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.3630262067547152;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.02510747964461777;  // std dev = 2.396, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.27219137098148105;  // std dev = 1.360, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2803736769697221;  // std dev = 0.048, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.28520071017630605;  // std dev = 0.016, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), phenotype(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( complex(F, I) )
%   | | | then return 0.5122497379217055;  // std dev = 0.439, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.42806534805815394;  // std dev = 1.047, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.13849050482649236;  // std dev = 0.019, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( phenotype(K, L), location(K, J) )
%   | | | then return 0.010467907587432428;  // std dev = 2.206, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return -0.059825875918290715;  // std dev = 1.337, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.078899812715377;  // std dev = 2.202, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.02265959138168665;  // std dev = 2.019, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2293865260316616;  // std dev = 0.032, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return 0.4714876532806053;  // std dev = 0.286, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else return -0.15448424646359488;  // std dev = 0.066, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.33316180814370727;  // std dev = 0.251, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.1348991160646586;  // std dev = 0.009, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6356989905631705;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1742410334392135;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.05192438955069249;  // std dev = 1.067, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.17749798828648541;  // std dev = 0.790, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17593679623726122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.157271778483564;  // std dev = 0.026, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.13168790408456935;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.29069723887447135;  // std dev = 0.918, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.40324504970144043;  // std dev = 0.819, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.1185560651652732;  // std dev = 0.024, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.19156595602637005;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.031926188166122464;  // std dev = 1.585, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.0645076057817485;  // std dev = 1.828, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then return -0.00321873800093031;  // std dev = 0.926, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.15270567171723756;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.17073910562428204;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), interaction(A, H) )
%   | then if ( enzyme(A, I), phenotype(A, J) )
%   | | then return 0.052707450901198986;  // std dev = 0.165, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return -0.08876962867648587;  // std dev = 1.010, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.012026275609286187;  // std dev = 1.148, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | then return 0.16793444259740783;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 4.6623505257341536E-4;  // std dev = 1.922, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.0423595667827554;  // std dev = 2.640, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.15009349281435852;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.15876555658694871;  // std dev = 0.034, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.13729505174496104;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.07992703616411866;  // std dev = 0.012, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, G), location(A, H) )
%   | | | then return 0.03368621980881239;  // std dev = 0.798, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.00865946415935538;  // std dev = 1.263, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1458116723709464;  // std dev = 0.030, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.020145909540717426;  // std dev = 1.579, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.04197734316434579;  // std dev = 2.785, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '43.338', 'seconds']
Refined model CLL: -0.161742


******************************************
Best model found
******************************************
Results 

CLL : -0.178687 

AUC ROC : 0.983959 

AUC PR : 0.217863 

Precision : 0.145729 

Recall : 0.922261 

F1 : 0.251688 

Total Learning Time : 8.494 

Total Inference Time : 8.322489738464355 

Total revision time: 29.306079978942872
Best scored revision CLL: -0.161742


Results 

CLL : -0.178687 

AUC ROC : 0.983959 

AUC PR : 0.217863 

Precision : 0.145729 

Recall : 0.922261 

F1 : 0.251688 

Total Learning Time : 29.352267141342164 

Total Inference Time : 8.322489738464355 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.915
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7470378239884012;  // std dev = 0.943, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.14762261931003723;  // std dev = 4.842, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | | | else return 0.17957750652808252;  // std dev = 4.943, 112.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=36 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.011995088945666036;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7413433124639606;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.6325953523627581;  // std dev = 0.963, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.28881117365523334;  // std dev = 0.609, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6889653137463961;  // std dev = 3.193, 81.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=69 */
%   | | | else return -0.16260402894125914;  // std dev = 0.028, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.3402080765247373;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.3566824985653688;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5936399269823256;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5856593938143208;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.13896901664703856;  // std dev = 4.157, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6408789307762911;  // std dev = 1.664, 40.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=37 */
%   | | | else return -0.14392982205562183;  // std dev = 7.60e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16881693303995213;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.06539014796799852;  // std dev = 1.399, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4358804668388488;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.30638054865308817;  // std dev = 0.948, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6203092636142056;  // std dev = 0.965, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | else return 0.0555203628325007;  // std dev = 4.973, 213.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=57 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6201820106767337;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.20141417744448928;  // std dev = 1.278, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1300554879893114;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3667685804437986;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.34219914653029193;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then return 0.049734079392641975;  // std dev = 5.443, 251.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=71 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4675802543884956;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return -0.049040346056812276;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.009411805311517708;  // std dev = 1.250, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2714125283895985;  // std dev = 0.040, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.20912123122415952;  // std dev = 1.029, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.30018391406724354;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.3549292728619443;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.019911837161832684;  // std dev = 2.275, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.020367846299246123;  // std dev = 0.852, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.020089699197771774;  // std dev = 3.043, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | | | else return 0.06056000614264717;  // std dev = 4.213, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2851205131390771;  // std dev = 0.315, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.27840830509443193;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5503249549798964;  // std dev = 1.101, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.19657124441361046;  // std dev = 0.519, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2624242793940886;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.07041880878764774;  // std dev = 3.999, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.1739834682413183;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.20527156576490047;  // std dev = 0.036, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.43483602653536635;  // std dev = 2.160, 77.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=71 */
%   | | else return -0.1548352426411812;  // std dev = 0.261, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2260451107254049;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.008284660912504118;  // std dev = 1.422, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.186435028333221;  // std dev = 0.180, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.20244952899095672;  // std dev = 0.080, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.05829241594647873;  // std dev = 1.578, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3077095153530587;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.012262353291237987;  // std dev = 1.595, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1823097708538808;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.017057222082562544;  // std dev = 3.515, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
%   | | | else return 0.0166312111477488;  // std dev = 1.397, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1391871538620236;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.3091651332408323;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17207719485195508;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then return -0.01524775299630148;  // std dev = 2.368, 101.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=29 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return -0.09059527297920872;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.02017312510037333;  // std dev = 3.338, 136.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=40 */
%   | | | else return -0.07724253142724989;  // std dev = 1.507, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.994', 'seconds']
Parameter learned model CLL:-0.194779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.943, 1, 8], 'true,false': [2.11e-08, 0, 3], 'false,true,true': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.842, 81, 33], 'false,false,true,false': [4.943, 76, 36], 'false,false,false,true': [1.095, 3, 2], 'false,false,false,false': [1.301, 11, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 2], 'true,false': [0.963, 1, 9], 'false,true,true': [0.816, 1, 2], 'false,true,false,true': [0.0, 1, 0], 'false,true,false,false': [0.609, 1, 1], 'false,false,true,true': [3.193, 12, 69], 'false,false,true,false': [0.028, 168, 0], 'false,false,false,true': [1.212, 3, 3], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.036, 0, 8], 'true,false': [0.022, 0, 3], 'false,true,true': [4.157, 69, 34], 'false,true,false,true': [1.664, 3, 37], 'false,true,false,false': [7.6e-08, 83, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [1.095, 3, 2], 'false,false,false,true': [1.399, 8, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.026, 0, 5], 'true,false': [0.948, 1, 6], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [0.965, 1, 14], 'false,true,false': [4.973, 156, 57], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.278, 4, 3], 'false,false,false,false': [0.816, 2, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.065, 0, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [5.443, 180, 71], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.218, 6, 2], 'false,false,false,false': [1.25, 7, 2]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.04, 0, 4], 'true,true,false': [1.029, 1, 5], 'true,false,true,true': [0.0, 0, 0], 'true,false,true,false': [0.0, 0, 1], 'true,false,false': [0.0, 0, 1], 'false,true': [2.275, 36, 12], 'false,false,true': [0.852, 1, 3], 'false,false,false,true': [3.043, 60, 20], 'false,false,false,false': [4.213, 95, 41]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.315, 0, 10], 'true,true,true,false': [0.0, 0, 1], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.101, 1, 33], 'true,false': [0.519, 80, 0], 'false,true': [0.021, 0, 3], 'false,false,true': [3.999, 83, 40], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.029, 0, 3], 'true,false': [0.036, 0, 8], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.16, 6, 71], 'false,true,false': [0.261, 154, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.422, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.18, 0, 8], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.08, 0, 3], 'false,true,true': [1.578, 36, 11], 'false,true,false,true': [0.0, 0, 1], 'false,true,false,false': [1.595, 44, 17], 'false,false,true': [0.016, 0, 3], 'false,false,false,true': [3.515, 90, 40], 'false,false,false,false': [1.397, 10, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'false': 'interaction(A, F), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'interaction(I, A)'}, {'true,true,true,true': [0.035, 0, 7], 'true,true,true,false': [0.0, 0, 1], 'true,true,false': [0.0, 0, 0], 'true,false': [0.071, 0, 3], 'false,true': [2.368, 72, 29], 'false,false,true': [0.857, 1, 3], 'false,false,false,true': [3.338, 96, 40], 'false,false,false,false': [1.507, 18, 4]}]
{'': [0.07638888888888877, 0.2130177514792901], 'false': [1.4802973661668753e-16, 0.20967145928513972], 'false,false': [0.2120957005247085, 0.17283950617283936], 'false,false,true': [0.20567867036011217, 0.21811224489796038], 'false,false,false': [0.24000000000000005, 0.13017751479289943], 'true': [0.09876543209876527, 1.4802973661668753e-16], 'false,true': [nan, 1.4802973661668753e-16], 'false,true,false': [0.0, 0.0]}
{'': [0.07892516503635101, 0.20372264876401897], 'false': [0.20804835918123965, 0.2031477453716868], 'false,true': [0.22222222222222224, 0.16486218997139987], 'false,false': [0.200121137885585, 0.24613583816006662], 'false,false,false': [0.24477993256802902, 0.24999999999999997], 'false,false,true': [0.1259060659310627, 4.617661182987079e-06], 'false,true,false': [0.0, 0.18546996371782487], 'true': [0.0, 0.09273917823925908]}
{'': [0.00017594924735606844, 0.1649787151222915], 'false': [0.16247934231791464, 0.19964153848135727], 'false,false': [0.23999999999999994, 0.17795393953613564], 'false,false,true': [nan, 0.23999999999999994], 'false,false,false': [0.17795393953613564, nan], 'false,true': [0.16779523973173424, 0.15767871794746452], 'false,true,false': [0.06923802014949895, 6.955614130181704e-17], 'true': [0.00016440554309582467, 0.00016041325170087126]}
{'': [0.07895249410489129, 0.13717610801272942], 'false': [0.13214476567273972, 0.22599174328247348], 'false,false': [0.0, 0.23097687960710628], 'false,false,false': [0.23320125686097132, 0.22222222222222218], 'false,true': [0.06207051192736965, 0.1160936181662231], 'true': [0.00013140514852478803, 0.12826567659331792], 'false,true,true': [nan, 0.06207051192736965], 'false,false,true': [nan, 0.0]}
{'': [0.00059719941244064, 0.12251695285054141], 'false': [0.11804754871152855, 0.18248336631041356], 'false,false': [0.0, 0.1795699160027231], 'false,false,false': [0.18547667151885827, 0.17358044489429356], 'true': [0.0006056989910676761, 0.00019817973349678386], 'true,true': [0.0006056989910676761, nan], 'false,false,true': [nan, 0.0]}
{'': [0.09043185067967467, 0.12376534950256991], 'false': [0.10785116550307174, 0.12648024576489103], 'false,false': [0.18168561469750788, 0.12544637504278258], 'false,false,false': [0.11577535242045367, 0.13052860234455368], 'true': [0.10691073908912174, 0.0007492635773901218], 'true,true': [0.00040285795706157534, 0.17636391089614065], 'true,false': [0.0, 0.0], 'true,false,true': [nan, 0.0]}
{'': [0.12448488284861159, 0.12780559787552773], 'false': [0.00015169810495765934, 0.13004134332262945], 'false,false': [0.13004134332262945, nan], 'true': [0.042202676638290665, 0.0033636149236840607], 'true,true': [0.009007855935345416, 0.03567036264809703], 'true,true,false': [nan, 0.03567036264809703], 'true,true,true': [0.009904545734622272, 0.0]}
{'': [0.0003881551418088739, 0.10022286130719789], 'false': [0.09776165164262512, 0.1377893572556814], 'false,false': [0.0, 0.144470146635668], 'false,false,false': [0.144470146635668, nan], 'false,true': [0.06058929614068632, 0.00044376082950128235], 'false,true,true': [nan, 0.06058929614068602], 'true': [0.00027294069229447565, 0.0001643755476553599], 'false,false,true': [0.0, nan]}
{'': [0.0035707260565536396, 0.07709827480642377], 'false': [0.0483634409120196, 0.09785816938924786], 'false,false': [9.059471178904839e-05, 0.09933740007880382], 'false,false,false': [0.09501897916476246, 0.1394368590111342], 'false,true': [0.05298929257577119, 0.04241054380056342], 'false,true,false': [0.0, 0.041697911107766356], 'true': [0.004038163563033527, 0.0021377065983163948], 'true,false': [nan, 0.0021377065983163948]}
{'': [0.002893088755014307, 0.07601724564268868], 'false': [0.05552074788739279, 0.08865054852175784], 'false,false': [0.18351995549680436, 0.08601549125756161], 'false,false,false': [0.08191446153755601, 0.1031988671765634], 'true': [0.003314300583447973, 0.0016712720183010104], 'true,true': [0.003314300583447973, nan], 'true,true,true': [0.00017620791115628104, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true


Refining candidate
***************************
Model training time 17.663
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.10814893509951236;  // std dev = 2.739, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1914822684328469;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
%   | | | else return 0.07027014722072439;  // std dev = 2.348, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else return 0.7491519349671747;  // std dev = 0.027, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return -0.28052658778904555;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6776700416917638;  // std dev = 3.296, 82.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=69 */
%   | | | else return -0.1620072958375033;  // std dev = 0.139, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.18052878470580044;  // std dev = 1.415, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.04937786220183642;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.4610221303880066;  // std dev = 0.303, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else return 0.6154537516076436;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.10417560829740624;  // std dev = 3.993, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   | | | else return 0.013300737076659649;  // std dev = 1.665, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7168035103796676;  // std dev = 0.171, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return -0.1425932146304467;  // std dev = 0.050, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return 0.3220276986621411;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.12835368516037005;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.15813164462361126;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.46224764519576855;  // std dev = 0.048, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.45107344435649055;  // std dev = 0.074, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(F, H), interaction(A, H) )
%   | | | then return -0.022208137854141434;  // std dev = 1.371, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.08217558594497855;  // std dev = 2.661, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
%   | | else if ( location(A, I) )
%   | | | then return 0.10039853695083052;  // std dev = 4.586, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.22301729722348732;  // std dev = 0.691, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5234886901050008;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.10222406376413126;  // std dev = 0.460, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.3397139891951976;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3607207874785254;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then if ( complex(A, G), phenotype(A, H) )
%   | | | then return -0.09799183519790272;  // std dev = 0.656, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.06591329160477129;  // std dev = 4.266, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.21306800731836492;  // std dev = 1.284, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.08074384560268819;  // std dev = 2.951, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.39425415811566233;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.2060625090242621;  // std dev = 1.296, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.1172850235392638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.2836748236129579;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1978694687420185;  // std dev = 0.787, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.28122715203894605;  // std dev = 0.024, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), interaction(G, G) )
%   | | then if ( interaction(A, H), interaction(I, A) )
%   | | | then return 0.045973130888071354;  // std dev = 3.409, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
%   | | | else return 0.0969450843817594;  // std dev = 4.096, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
%   | | else return -0.07623804598945996;  // std dev = 0.258, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | else if ( interaction(A, J), interaction(J, A) )
%   | | then return -0.04059863313060723;  // std dev = 0.289, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.02432155843167863;  // std dev = 0.515, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01883720002207276;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2585347836729476;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, E), interaction(F, A) )
%   | | | then return 0.6096532915862392;  // std dev = 0.250, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5307075779947352;  // std dev = 1.222, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.19817939938775025;  // std dev = 0.083, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2618654286164873;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.04038428855824849;  // std dev = 1.546, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.028919217854598698;  // std dev = 1.899, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07288198628945323;  // std dev = 2.951, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.1835134009635886;  // std dev = 0.662, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.18679874779901154;  // std dev = 0.040, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.19266853582208648;  // std dev = 0.019, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.480926992224746;  // std dev = 0.978, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return 0.29092507938844697;  // std dev = 2.829, 51.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=40 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.14319968736118738;  // std dev = 0.201, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | | else return -0.17895879771832054;  // std dev = 0.185, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.20367516079236325;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return -0.12040096660865471;  // std dev = 0.752, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.19118678482324167;  // std dev = 1.041, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.17607235650732003;  // std dev = 0.058, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.16830601712123447;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( interaction(G, A), interaction(G, G) )
%   | | | then return -0.0639032682389365;  // std dev = 1.283, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.07338070519946466;  // std dev = 1.115, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return -0.12505853756565583;  // std dev = 0.848, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return -8.374995553233751E-4;  // std dev = 1.558, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.18385667176462964;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), enzyme(A, K) )
%   | | | then return 0.05650082575186531;  // std dev = 1.939, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
%   | | | else return -0.007464297755496579;  // std dev = 3.233, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15247230860214905;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.040769073147887885;  // std dev = 0.647, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(H, A) )
%   | | | then return 0.2145318094473097;  // std dev = 1.115, 21.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | else return 0.33139490877085076;  // std dev = 1.514, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | else return -0.1653140110721172;  // std dev = 0.091, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.03075679048835633;  // std dev = 0.904, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.0903883601568296;  // std dev = 0.387, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.11689280384383362;  // std dev = 2.048, 41.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=19 */
%   | | | else return -8.81655680552523E-4;  // std dev = 2.182, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '59.504', 'seconds']
Refined model CLL: -0.193846


******************************************
Best model found
******************************************
Results 

CLL : -0.194206 

AUC ROC : 0.988336 

AUC PR : 0.292839 

Precision : 0.192996 

Recall : 0.879433 

F1 : 0.316528 

Total Learning Time : 17.663 

Total Inference Time : 17.582901000976562 

Total revision time: 55.79526989746094
Best scored revision CLL: -0.193846


Results 

CLL : -0.194206 

AUC ROC : 0.988336 

AUC PR : 0.292839 

Precision : 0.192996 

Recall : 0.879433 

F1 : 0.316528 

Total Learning Time : 65.92148940849304 

Total Inference Time : 17.582901000976562 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 5.971
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.6081489350995123;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.1101814554247144;  // std dev = 4.815, 123.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=31 */
%   | | | else return 0.18903128804068797;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.124815601766179;  // std dev = 1.713, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.3385005336652932;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | else return 0.6902079284101078;  // std dev = 0.958, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.3861400788776212;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7115177960858181;  // std dev = 3.099, 87.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=76 */
%   | | | else return -0.16115669549144848;  // std dev = 0.071, 179.000 (wgt'ed) examples reached here.  /* #neg=179 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09226581259110073;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.17559914592443404;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.6441753809483648;  // std dev = 0.145, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6195509521636963;  // std dev = 0.018, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.07794075285608727;  // std dev = 4.356, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.624944140146691;  // std dev = 1.921, 52.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=48 */
%   | | | else return -0.14527821285346976;  // std dev = 8.69e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8175126098993586;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.11342011083200149;  // std dev = 1.567, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.49781892567111174;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.09361947177423335;  // std dev = 1.596, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4728709833647957;  // std dev = 0.177, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5078810771647149;  // std dev = 1.808, 26.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | else return 0.029007768384097;  // std dev = 5.037, 251.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=58 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.5272124691629925;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.09869543041969754;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.42138659357465946;  // std dev = 0.767, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.23275134273414405;  // std dev = 1.129, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.37719114377894236;  // std dev = 0.138, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A) )
%   | then return 0.043223108588680594;  // std dev = 5.833, 298.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=82 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.39693440602082875;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.023754755152013165;  // std dev = 1.675, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.3520880782785065;  // std dev = 0.091, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.20044564943729393;  // std dev = 1.314, 12.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else return 0.33185737184954567;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then return 0.028756641588680548;  // std dev = 2.721, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.18558064086408527;  // std dev = 0.885, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( complex(A, I), interaction(J, A) )
%   | | | then return 0.002733903707463411;  // std dev = 2.191, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | else return 0.0773938772496618;  // std dev = 4.630, 151.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.3316615277788244;  // std dev = 0.342, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.20175677312589452;  // std dev = 0.626, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23532227264849892;  // std dev = 5.27e-09, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.48315128012091907;  // std dev = 1.683, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | else return -0.18756214495221432;  // std dev = 0.947, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.26323226847895054;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.057870364083413804;  // std dev = 4.369, 155.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=47 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.23056126330084414;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15779289443275665;  // std dev = 0.842, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4225868354107313;  // std dev = 2.485, 90.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=82 */
%   | | else return -0.14697825912686788;  // std dev = 0.410, 221.000 (wgt'ed) examples reached here.  /* #neg=221 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2798330404758125;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return -0.02309356766484417;  // std dev = 1.453, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.2271930802867785;  // std dev = 0.160, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.15060478229925955;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.22479041904040464;  // std dev = 0.123, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.038251632658707194;  // std dev = 1.790, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.09941747499168943;  // std dev = 1.057, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return -0.06890168830687421;  // std dev = 1.629, 66.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.19039730394040394;  // std dev = 0.067, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.027392197775495515;  // std dev = 3.767, 152.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=47 */
%   | | | else return 0.015427995581153018;  // std dev = 1.391, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.17680514089940083;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.19944783879571493;  // std dev = 0.143, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.3339799323879861;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.1748902158035089;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.028420654311666342;  // std dev = 2.540, 130.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=32 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.16290481122166706;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 6.503513687047633E-4;  // std dev = 3.857, 173.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=47 */
%   | | | else return 0.012693294707056017;  // std dev = 1.389, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.771', 'seconds']
Parameter learned model CLL:-0.194254 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [1.732, 4, 12], 'true,false': [0.913, 1, 5], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [2.11e-08, 0, 3], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [4.815, 92, 31], 'false,false,true,false': [5.487, 91, 45], 'false,false,false,true': [1.713, 11, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [1.309, 3, 4], 'true,false': [0.958, 1, 13], 'false,true,true': [0.0, 0, 4], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [0.0, 0, 1], 'false,false,true,true': [3.099, 11, 76], 'false,false,true,false': [0.071, 179, 0], 'false,false,false,true': [1.225, 6, 2], 'false,false,false,false': [1.155, 4, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)'}, {'true,true': [0.145, 0, 11], 'true,false': [0.018, 0, 6], 'false,true,true': [4.356, 96, 34], 'false,true,false,true': [1.921, 4, 48], 'false,true,false,false': [8.69e-08, 88, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [1.567, 9, 4], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.144, 0, 10], 'true,false': [1.596, 4, 7], 'false,true,true,true': [0.177, 0, 3], 'false,true,true,false': [1.808, 5, 21], 'false,true,false': [5.037, 193, 58], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.195, 5, 2], 'false,false,false,false': [0.767, 1, 2]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [1.129, 2, 7], 'true,true,false': [0.0, 0, 0], 'true,false': [0.138, 0, 10], 'false,true': [5.833, 216, 82], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.675, 10, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'false': 'interaction(A, G), interaction(G, A)', 'false,false': 'interaction(H, A), recursion_proteinclass(H, B)', 'false,false,false': 'complex(A, I), interaction(J, A)'}, {'true,true,true': [0.091, 0, 5], 'true,true,false': [1.314, 3, 9], 'true,false,true': [0.0, 0, 0], 'true,false,false': [0.035, 0, 2], 'false,true': [2.721, 52, 19], 'false,false,true': [0.885, 1, 8], 'false,false,false,true': [2.191, 41, 11], 'false,false,false,false': [4.63, 101, 50]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.342, 0, 15], 'true,true,true,false': [0.626, 1, 1], 'true,true,false,true': [5.27e-09, 0, 3], 'true,true,false,false': [1.683, 3, 33], 'true,false': [0.947, 115, 0], 'false,true': [0.086, 0, 5], 'false,false,true': [4.369, 108, 47], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.842, 1, 13], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [2.485, 8, 82], 'false,true,false': [0.41, 221, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [1.453, 12, 4], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.16, 0, 9], 'true,false,true': [0.695, 1, 2], 'true,false,false': [0.123, 0, 5], 'false,true,true': [1.79, 45, 13], 'false,true,false,true': [1.057, 2, 8], 'false,true,false,false': [1.629, 55, 11], 'false,false,true': [0.067, 0, 5], 'false,false,false,true': [3.767, 105, 47], 'false,false,false,false': [1.391, 11, 4]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.053, 0, 7], 'true,true,true,false': [0.143, 0, 6], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.0, 1, 0], 'true,false': [0.097, 0, 3], 'false,true': [2.54, 98, 32], 'false,false,true': [0.06, 0, 5], 'false,false,false,true': [3.857, 126, 47], 'false,false,false,false': [1.389, 11, 4]}]
{'': [0.17561983471074338, 0.21375109231139472], 'false': [-2.5376526277146434e-16, 0.20672385316213013], 'false,false': [0.20733143513066324, 0.1955555555555554], 'false,false,true': [0.18851212902373046, 0.22139922145328833], 'false,false,false': [0.1955555555555554, nan], 'true': [0.18749999999999967, 0.1388888888888887], 'false,true': [0.0, 0.0], 'false,true,false': [1.4802973661668753e-16, 0.0]}
{'': [0.15285659493412215, 0.20709503209775126], 'false': [0.10937500000000006, 0.20375037782224176], 'false,false': [0.20373225397147485, 0.2040816326530613], 'false,false,false': [0.18749999999999994, 0.22222222222222218], 'false,false,true': [0.1103682613699252, 2.837849017289784e-05], 'true': [0.24489795918367346, 0.0656032156366182], 'false,true': [0.0, 0.1875], 'false,true,false': [0.22222222222222224, 0.0]}
{'': [0.0014023129807743118, 0.1594274847603893], 'false': [0.15675394054691102, 0.20830042824799458], 'false,false': [0.20830042824799458, nan], 'false,false,true': [0.0, 0.18891309188158806], 'false,true': [0.14598265603552893, 0.1648531122036591], 'false,true,false': [0.07094003330550812, 8.57899609937621e-17], 'true': [0.0019236005944996263, 5.426682094370842e-05]}
{'': [0.16303365959294225, 0.12753317602356476], 'true': [0.0020602316383408594, 0.23157447358474945], 'false': [0.12337998715816713, 0.21233730750405425], 'false,false': [0.0, 0.22356819113581486], 'false,false,false': [0.20408163265306123, 0.19614611685076203], 'false,true': [0.11385840986249202, 0.10108702641072145], 'false,true,true': [0.010418493927809172, 0.1256669875365277], 'false,false,true': [nan, 0.0]}
{'': [0.07327738144420912, 0.1180856942943717], 'false': [0.1141746636421136, 0.1957569681234618], 'false,false': [0.0, 0.200455405248871], 'false,false,false': [0.200455405248871, nan], 'true': [0.14159383637322623, 0.0019101664747912307], 'true,true': [0.14159383637322623, nan], 'false,false,true': [nan, 0.0]}
{'': [0.0963527082240089, 0.12313445522448768], 'false': [0.10428371106171319, 0.12914179558097436], 'false,false': [0.08698307877445934, 0.13032281667681672], 'false,false,false': [0.09230465998879561, 0.14198731076640875], 'true': [0.10682109077155644, 0.0006285845167558757], 'true,true': [0.0016708454208580249, 0.1438703323466429], 'true,false': [nan, 0.0006285845167558757]}
{'': [0.10864142964243116, 0.12060165911409185], 'false': [0.001462353221093271, 0.12312694028696498], 'false,false': [0.12312694028696498, nan], 'true': [0.07970993744479814, 0.007803499025367877], 'true,true': [0.05946811989734375, 0.07696854209141717], 'true,true,false': [9.25185853854297e-18, 0.07865803211610443], 'true,true,true': [0.0077812632279787115, 0.196059176911631]}
{'': [0.04026797945426023, 0.08932291621543526], 'false': [0.08710707386331161, 0.12935287898246958], 'false,false': [0.0, 0.13203952039419142], 'false,false,false': [0.13203952039419142, nan], 'false,true': [0.0686098756998194, 0.0007607835713675288], 'false,true,true': [nan, 0.0686098756998194], 'true': [0.0, 0.0505963974394757], 'false,false,true': [0.0, nan]}
{'': [0.051470156647291584, 0.07810738331365309], 'false': [0.05390949324508078, 0.0945507663462442], 'false,false': [0.0009103801657560417, 0.09657174980802267], 'false,false,false': [0.0933679901963647, 0.12890622881659383], 'false,true': [0.05525720366457732, 0.05284968442391582], 'false,true,false': [0.11181190622520285, 0.0401882064627701], 'true': [0.0028606921667771023, 0.09530321910037218], 'true,false': [0.16103814440159803, 0.0030166799738190362]}
{'': [0.016946359240615494, 0.07269180458341971], 'false': [0.049616087044285724, 0.08776399281913666], 'false,false': [0.0007084395982916714, 0.08940532026401246], 'false,false,false': [0.08599602353781415, 0.1285924150960138], 'true': [0.019800514923990792, 0.003117774921938682], 'true,true': [0.0019174530429599994, 0.0], 'true,true,true': [0.00040516270459056307, 0.0034057269728910203], 'true,true,false': [nan, 0.0]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 30.158
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, F), interaction(F, D) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.12005369700427426;  // std dev = 2.849, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return -0.02756535061477346;  // std dev = 1.882, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return 0.1496062215316742;  // std dev = 6.411, 199.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=58 */
%   | | | else return 0.2956489350995123;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, D) )
%   | | then return 0.7194734122109543;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5730340463557628;  // std dev = 0.859, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7655897560500442;  // std dev = 2.358, 82.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | | else return -0.15934547885824288;  // std dev = 0.125, 189.000 (wgt'ed) examples reached here.  /* #neg=189 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.35065920785787524;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.019699302725017104;  // std dev = 1.284, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3053664367462846;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.12684017579351314;  // std dev = 3.649, 84.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=27 */
%   | | | else return 0.022965249761854663;  // std dev = 1.924, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.562304466810244;  // std dev = 2.601, 56.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=48 */
%   | | | else return -0.14206216477720135;  // std dev = 0.279, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | else if ( recursion_proteinclass(I, B) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.47947949957289787;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.10312687851811746;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.1738116524979721;  // std dev = 0.034, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.44221403177154056;  // std dev = 0.030, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.4329513639165791;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.02986380796492529;  // std dev = 1.119, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16283189928220262;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.12785472952472307;  // std dev = 3.595, 86.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=31 */
%   | | | else return 0.0658916197181438;  // std dev = 4.673, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5660345362245832;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.009452462768761521;  // std dev = 1.200, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.3755314386529491;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.19135634813146613;  // std dev = 0.330, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.2959299268983876;  // std dev = 0.264, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   else if ( interaction(E, A) )
%   | then if ( phenotype(A, F), location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.3055550073099284;  // std dev = 3.646, 81.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=51 */
%   | | | else return -0.15277643773830776;  // std dev = 0.255, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0357705125315747;  // std dev = 3.216, 94.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=25 */
%   | | | else return 0.007253178147943059;  // std dev = 1.639, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4254732948344607;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07025101720905583;  // std dev = 1.162, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.4081202591352054;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.29382668547387525;  // std dev = 0.270, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(F, D), complex(E, G) )
%   | | | then return 0.48536531181435705;  // std dev = 0.965, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.41731567026810634;  // std dev = 0.293, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(E, D), interaction(A, H) )
%   | | | then return -0.11656284827363977;  // std dev = 1.267, 49.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=4 */
%   | | | else return 0.030605850956609944;  // std dev = 3.295, 116.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=31 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( enzyme(I, K), complex(I, L) )
%   | | | then return 0.033843227754182366;  // std dev = 1.140, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.16807692092069723;  // std dev = 1.969, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.3161881856265706;  // std dev = 0.125, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.025809412160060895;  // std dev = 2.622, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2953351730110973;  // std dev = 0.087, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return -0.11602746776321364;  // std dev = 1.146, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.4354269324500853;  // std dev = 1.467, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.1667953948578856;  // std dev = 0.082, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2547505259549999;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5278970070525355;  // std dev = 0.205, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.16527246187182992;  // std dev = 0.415, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.08989236763943245;  // std dev = 3.203, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
%   | | | else return 0.02034379583427469;  // std dev = 1.503, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17426151013051927;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, E), interaction(A, F) )
%   | | then return 0.29372545978708847;  // std dev = 0.135, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1971357652561609;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(A, I), location(A, J) )
%   | | | then return 0.2951097514889877;  // std dev = 2.421, 60.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=51 */
%   | | | else return 0.3814780186166807;  // std dev = 1.774, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | else return -0.13888200734678838;  // std dev = 0.031, 187.000 (wgt'ed) examples reached here.  /* #neg=187 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.21165477827863022;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.1615582684585348;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18618576399485778;  // std dev = 0.910, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.15234544847992795;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.25152982073792085;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.2258986199946784;  // std dev = 1.007, 21.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=17 */
%   | | | else return -0.05790886866335608;  // std dev = 1.633, 90.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=13 */
%   | | else if ( complex(A, J) )
%   | | | then return -0.038397996404476456;  // std dev = 0.281, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.10115513214674585;  // std dev = 0.509, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.17941713882745158;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return -0.17809375118805776;  // std dev = 0.711, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.0026010498462950287;  // std dev = 3.749, 169.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=50 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.11503077500934958;  // std dev = 0.197, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return -0.43700795828565175;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #neg=1 */
%   | else return 0.15649820138715675;  // std dev = 0.038, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(I, G), interaction(A, I) )
%   | | | then return -0.025183115447441954;  // std dev = 1.333, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return -0.07655507005694259;  // std dev = 1.023, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | else return 0.0025246729805510864;  // std dev = 0.189, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.1547164456211767;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.02502995717241684;  // std dev = 2.726, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   | | | else return -0.025067458592236146;  // std dev = 2.729, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '57.913', 'seconds']
Refined model CLL: -0.187862


******************************************
Best model found
******************************************
Results 

CLL : -0.173589 

AUC ROC : 0.989065 

AUC PR : 0.368967 

Precision : 0.295664 

Recall : 0.849057 

F1 : 0.438596 

Total Learning Time : 30.158 

Total Inference Time : 293.0272879600525 

Total revision time: 346.18576102638247
Best scored revision CLL: -0.187862


Results 

CLL : -0.173589 

AUC ROC : 0.989065 

AUC PR : 0.368967 

Precision : 0.295664 

Recall : 0.849057 

F1 : 0.438596 

Total Learning Time : 356.31198053741457 

Total Inference Time : 293.0272879600525 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.279
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7581489350995123;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.15444523139580865;  // std dev = 2.373, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.14020021715079337;  // std dev = 5.620, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.1974346493852266;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7392070123615109;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.6273668522711771;  // std dev = 0.957, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7505511758931249;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8399154682742263;  // std dev = 0.005, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.1602616907866217;  // std dev = 0.009, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.09429054466897469;  // std dev = 1.910, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1657099562736049;  // std dev = 3.162, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5845951528236646;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5833025561980193;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.01786061356355009;  // std dev = 2.127, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6839991978880006;  // std dev = 0.244, 48.000 (wgt'ed) examples reached here.  /* #pos=48 */
%   | | | else return -0.13942649677645502;  // std dev = 1.25e-07, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6282305288604311;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.10533977686733473;  // std dev = 3.703, 67.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=20 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04373051693801654;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.43696626080775824;  // std dev = 0.034, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.44288466658177705;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.37925788594247545;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5850641261370723;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.05751640752389293;  // std dev = 4.193, 188.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=52 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4741238120356046;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.5214768050685035;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.06325390035725091;  // std dev = 1.918, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.11717818170069712;  // std dev = 3.179, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.3371293242536203;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.33447996846699835;  // std dev = 0.030, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then return 0.05879466724621419;  // std dev = 4.181, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return -0.1369496704839226;  // std dev = 0.702, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.3928097685435177;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.04829504852026753;  // std dev = 3.715, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.2756642774037936;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.26211436166721136;  // std dev = 0.021, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3594084363885304;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.4115355429129396;  // std dev = 0.028, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.27885969803191535;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.31539322887168714;  // std dev = 0.056, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.09442564124388661;  // std dev = 0.965, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.263778741133855;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.0619784228889567;  // std dev = 2.674, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | | | else return 0.04610171312381961;  // std dev = 4.798, 162.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=46 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.23921588211577738;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.27029360683711157;  // std dev = 0.041, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.23075671450067403;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.644000271110211;  // std dev = 0.803, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | else return -0.18263871128803458;  // std dev = 0.555, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.21284683352598596;  // std dev = 0.001, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then return 0.0710590915303556;  // std dev = 3.263, 109.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17425029948215454;  // std dev = 0.000621, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.1838753134697003;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.40385544471120705;  // std dev = 1.501, 58.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=56 */
%   | | else return -0.1418254958850897;  // std dev = 0.199, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.2205655218467144;  // std dev = 0.035, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, I) )
%   | | | then return 0.10758798438077953;  // std dev = 2.924, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.165629548237742;  // std dev = 0.069, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.13133383880081917;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else return 0.1688631609314012;  // std dev = 0.011, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.12804238472286092;  // std dev = 0.787, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.1882527190023352;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.016529449836981867;  // std dev = 1.426, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1538691309100504;  // std dev = 0.000916, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.014803627113924587;  // std dev = 2.797, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | | else return 0.018873706833681447;  // std dev = 3.089, 66.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.1341353360964676;  // std dev = 0.010, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.1685285805329866;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1308669770592995;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14038061378440653;  // std dev = 0.028, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.017130487625349595;  // std dev = 1.346, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.1348849232475451;  // std dev = 0.000821, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.016997805929731723;  // std dev = 2.770, 120.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=36 */
%   | | | else return 0.030543441080470066;  // std dev = 3.042, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.878', 'seconds']
Parameter learned model CLL:-0.17656 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.949, 1, 9], 'true,false': [0.0, 0, 5], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.816, 1, 2], 'false,true,false,false': [2.11e-08, 0, 3], 'false,false,true,true': [2.373, 19, 8], 'false,false,true,false': [5.62, 112, 44], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 5], 'true,false': [0.957, 1, 9], 'false,true,true': [0.062, 0, 4], 'false,true,false,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 2], 'false,false,true,true': [0.005, 0, 52], 'false,false,true,false': [0.009, 126, 0], 'false,false,false,true': [1.91, 14, 5], 'false,false,false,false': [3.162, 30, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.031, 0, 6], 'true,false': [0.031, 0, 8], 'false,true,true': [2.127, 33, 8], 'false,true,false,true': [0.244, 0, 48], 'false,true,false,false': [1.25e-07, 109, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [3.703, 47, 20], 'false,false,false,true': [0.866, 3, 1], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.034, 0, 9], 'true,false': [0.027, 0, 5], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.125, 0, 3], 'false,true,false': [4.193, 136, 52], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [1.918, 14, 5], 'false,false,false,false': [3.179, 31, 15]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.026, 0, 5], 'true,true,false': [0.0, 0, 0], 'true,false': [0.03, 0, 9], 'false,true': [4.181, 135, 56], 'false,false,true,true': [0.702, 1, 1], 'false,false,true,false': [0.0, 0, 1], 'false,false,false,true': [3.715, 51, 19], 'false,false,false,false': [0.707, 1, 1]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.021, 0, 6], 'true,true,false': [0.0, 0, 1], 'true,false,true,true': [0.028, 0, 2], 'true,false,true,false': [0.0, 0, 2], 'true,false,false': [0.056, 0, 3], 'false,true': [0.965, 28, 3], 'false,false,true': [0.019, 0, 6], 'false,false,false,true': [2.674, 53, 23], 'false,false,false,false': [4.798, 116, 46]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.134, 0, 12], 'true,true,true,false': [0.041, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.803, 0, 36], 'true,false': [0.555, 118, 0], 'false,true': [0.001, 0, 5], 'false,false,true': [3.263, 73, 36], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.000621, 0, 5], 'true,false': [0.016, 0, 9], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.501, 2, 56], 'false,true,false': [0.199, 114, 0], 'false,false,true,true': [0.035, 0, 2], 'false,false,true,false': [0.0, 0, 0], 'false,false,false,true': [2.924, 32, 20], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.069, 0, 9], 'true,false,true': [0.0, 0, 1], 'true,false,false': [0.011, 0, 4], 'false,true,true': [0.787, 13, 1], 'false,true,false,true': [0.0, 0, 2], 'false,true,false,false': [1.426, 36, 14], 'false,false,true': [0.000916, 0, 5], 'false,false,false,true': [2.797, 87, 36], 'false,false,false,false': [3.089, 46, 20]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.01, 0, 5], 'true,true,true,false': [0.033, 0, 3], 'true,true,false,true': [0.0, 0, 2], 'true,true,false,false': [0.0, 0, 0], 'true,false': [0.028, 0, 4], 'false,true': [1.346, 54, 17], 'false,false,true': [0.000821, 0, 5], 'false,false,false,true': [2.77, 84, 36], 'false,false,false,false': [3.042, 42, 20]}]
{'': [0.06222222222222188, 0.21559573361082263], 'false': [0.12244897959183662, 0.20950052512870096], 'false,false': [0.2034100749499843, 0.22592152199762144], 'false,false,false': [0.22417091836734643, 0.25], 'false,false,true': [0.2085048010973938, 0.20249835634451108], 'false,true': [0.0, 0.1388888888888887], 'false,true,false': [0.22222222222222224, 1.4802973661668753e-16], 'true': [0.08999999999999977, 0.0]}
{'': [0.06389436982824322, 0.2124813974650318], 'false': [0.0008585132404309211, 0.20887457494669281], 'false,false': [0.20686597377445062, 0.2143445486363116], 'false,false,false': [0.1921004482333099, 0.222222222222222], 'false,false,true': [4.807691766746285e-07, 6.850856136707428e-07], 'true': [0.0, 0.09167214760602108], 'false,true': [0.0009658273954848973, 0.0], 'false,true,false': [nan, 0.0]}
{'': [0.0001355373733674194, 0.1564164696936201], 'false': [0.13873556077570845, 0.2048412985626054], 'false,false': [0.2055945789590159, 0.18750000000000003], 'false,false,true': [0.0, 0.20464234978614046], 'false,false,false': [0.18750000000000003, nan], 'false,true': [0.11036452348159781, 0.1442968955758428], 'false,true,false': [0.001236979162122065, 1.4259745270414855e-16], 'true': [0.00015535245252307206, 0.00011996000427072495]}
{'': [0.00014086589844947945, 0.12646590754621673], 'false': [0.09645096772986654, 0.21092297938030394], 'false,false': [0.0005605764872934349, 0.21270549680983225], 'false,false,false': [0.19358223874878439, 0.21975425330812862], 'false,true': [0.011865509201563484, 0.0935284176660204], 'false,true,true': [0.0, 0.005231626809658903], 'false,false,true': [0.0, 0.0], 'true': [0.00012668451258848436, 0.00014387469713126322]}
{'': [0.0001135756610213098, 0.12242315868818485], 'false': [0.09153144393674899, 0.20107763372749599], 'false,false': [0.2266453790772025, 0.20000334211616788], 'false,false,true': [0.24641971420291434, 0.0], 'false,false,false': [0.19713884489209957, 0.25], 'true': [0.0001353149376963847, 9.899146863208881e-05], 'true,true': [0.0001353149376963847, nan]}
{'': [0.0030520342652693433, 0.1163711300261115], 'false': [0.030012318888550805, 0.12477859655574082], 'false,false': [5.8570475280258126e-05, 0.12681127917109106], 'false,false,false': [0.09406075417183214, 0.14209523008451933], 'true': [0.0012193723316886729, 0.003293607325849585], 'true,false': [0.004600287766106478, 0.001043765733874454], 'true,false,true': [0.00039913562476617814, 0.0], 'true,true': [7.029577136855036e-05, 0.0]}
{'': [0.12165710597336198, 0.0942204517087859], 'true': [0.04647064244008228, 0.0026113468307486652], 'false': [2.7801053468223815e-07, 0.09766073399977124], 'false,false': [0.09766073399977124, nan], 'true,true': [0.001523736033712697, 0.02190089194623996], 'true,true,false': [0.0, 0.017893838242903668], 'true,true,true': [0.0015028604696283217, 0.0008211394406289346]}
{'': [3.9321446101263966e-05, 0.0996153514485198], 'false': [0.07987329410609784, 0.15881190414815655], 'false,false': [0.0006231861278866782, 0.16442334768559064], 'false,false,false': [0.16442334768559064, nan], 'false,true': [0.038826692181198524, 0.0003466183409635355], 'false,true,true': [nan, 0.03882669218119849], 'false,false,true': [0.0006231861278866782, nan], 'true': [7.725033140393301e-08, 2.8037743420059355e-05]}
{'': [0.00043483535339466917, 0.0788092999216748], 'false': [0.04380514001962299, 0.08998453665328629], 'false,false': [1.678960595830059e-07, 0.09187677840936556], 'false,false,false': [0.06358455037504965, 0.14459242262834646], 'false,true': [0.0442518336033284, 0.0406613484538398], 'false,true,false': [0.0, 0.0406748894429728], 'true': [0.0005311209728445817, 0.0002497877231141643], 'true,false': [0.0, 3.054464997650705e-05]}
{'': [0.00033316440024374776, 0.07324747967689833], 'false': [0.025500191520011258, 0.09089595683163251], 'false,false': [1.3488212236012487e-07, 0.09305002801093136], 'false,false,false': [0.06394622277113518, 0.14925899502207723], 'true': [0.00038427607976348197, 0.00019703539859566507], 'true,true': [0.0004280783155862118, 0.0], 'true,true,true': [2.0713740509437084e-05, 0.00036770973475365454], 'true,true,false': [0.0, nan]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
0;false,true,false;interaction(A, G), interaction(G, E).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
2;false,false;interaction(A, H), interaction(H, I).;true;true
2;false,false,true;recursion_proteinclass(I, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,true;recursion_proteinclass(D, B).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
5;false;interaction(A, H), interaction(H, A).;true;true
5;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;true;interaction(C, D), recursion_proteinclass(D, B).;true;true
8;true,false;interaction(A, E), interaction(E, A).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,true;interaction(G, A), interaction(G, F).;true;true
8;false,true,false;interaction(H, F), recursion_proteinclass(H, B).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 6.979
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A), interaction(A, H) )
%   | | then if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.1018510649004878;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.08395538671241559;  // std dev = 3.292, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   | | | else return 0.1637044906550669;  // std dev = 6.180, 180.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.7194734122109545;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.5194734122109546;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8391093578053799;  // std dev = 0.041, 52.000 (wgt'ed) examples reached here.  /* #pos=52 */
%   | | | else return -0.15809428118422417;  // std dev = 0.127, 148.000 (wgt'ed) examples reached here.  /* #neg=148 */
%   | | else if ( location(A, I) )
%   | | | then return 0.16394209633738346;  // std dev = 3.494, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | | | else return 0.3370302362622086;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5553664367462845;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5553664367462845;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( interaction(G, A), interaction(A, G) )
%   | | | then return -0.08677353752853398;  // std dev = 0.813, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.1639569141551558;  // std dev = 1.749, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6437086478507339;  // std dev = 1.397, 50.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=48 */
%   | | | else return -0.1386664923167312;  // std dev = 0.089, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.6040520610480189;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.16398651003571127;  // std dev = 3.568, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | else return 0.8134148297011667;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4175135841583098;  // std dev = 1.29e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.44489203412223166;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.6289196795045539;  // std dev = 0.121, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, A), interaction(G, G) )
%   | | | then return 0.015598667528952436;  // std dev = 1.757, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.0810011280530609;  // std dev = 3.716, 148.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=46 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return -0.06978548851172456;  // std dev = 0.742, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | | else return 0.5642407579850283;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( location(A, J) )
%   | | | then return 0.1440646725557357;  // std dev = 3.392, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.042526045710186054;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3207118471601497;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G), interaction(E, H) )
%   | | | then return 0.07401923157800432;  // std dev = 1.215, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.12277190310973264;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.3795790235606548;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04551696585992946;  // std dev = 3.975, 176.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=48 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(K, J) )
%   | | | then return 0.47205691588362597;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.42412812260573796;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07279068172028662;  // std dev = 1.838, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.11609459140828626;  // std dev = 3.231, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.2605450506222762;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then return 0.30105113408444817;  // std dev = 0.047, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.050472317039122305;  // std dev = 0.840, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(G, A) )
%   | then if ( interaction(A, H), enzyme(H, I) )
%   | | then return -0.11393223886612605;  // std dev = 0.011, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.11050400398728755;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07502974171934235;  // std dev = 0.843, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.2551722425694894;  // std dev = 7.45e-09, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.07940859951769605;  // std dev = 2.965, 85.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return 0.03694960327727588;  // std dev = 4.570, 145.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.23650997229767043;  // std dev = 0.037, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.20975771563253554;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.590000378948443;  // std dev = 1.382, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | else if ( interaction(F, A), complex(A, G) )
%   | | then return -0.12896469739091193;  // std dev = 0.018, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else return -0.23933949746114933;  // std dev = 0.124, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.043091048965868885;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, K), enzyme(K, L) )
%   | | | then return 0.11309721756838366;  // std dev = 2.053, 36.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=14 */
%   | | | else return 0.024665863233997568;  // std dev = 1.976, 48.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=13 */
%   | | else return 0.04199969060190807;  // std dev = 0.293, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.17246326549220614;  // std dev = 5.27e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.18851095233601656;  // std dev = 0.016, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.3331485842092786;  // std dev = 0.334, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return 0.4940683280260986;  // std dev = 0.261, 36.000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | else if ( interaction(A, H), complex(A, I) )
%   | | | then return -0.11749323769560012;  // std dev = 0.167, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return -0.15589047902810454;  // std dev = 0.377, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.25567592072675954;  // std dev = 0.014, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.036480453141703846;  // std dev = 2.957, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | | else return 0.17566169740619442;  // std dev = 0.822, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.15629254688914176;  // std dev = 0.018, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.17199567518073128;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.040812025185294996;  // std dev = 0.355, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0733599810174253;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.20713826389625067;  // std dev = 0.021, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.014123951905622278;  // std dev = 1.319, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17393547953334976;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K) )
%   | | | then return 0.02652626435285616;  // std dev = 3.928, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
%   | | | else return -0.10594049989413716;  // std dev = 1.027, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.14221746577636976;  // std dev = 0.023, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.1384966595472881;  // std dev = 0.024, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( complex(A, G), phenotype(A, H) )
%   | | then if ( complex(I, G), interaction(I, I) )
%   | | | then return -0.09584610861510322;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04880460417303085;  // std dev = 0.803, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return -0.016779045034413416;  // std dev = 1.040, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return -0.05896395710478113;  // std dev = 0.354, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.150341652288547;  // std dev = 3.73e-09, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.020634984887882252;  // std dev = 2.517, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.11404370023034749;  // std dev = 2.850, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.384', 'seconds']
Refined model CLL: -0.183019


******************************************
Best model found
******************************************
Results 

CLL : -0.194766 

AUC ROC : 0.981916 

AUC PR : 0.209609 

Precision : 0.135347 

Recall : 0.808664 

F1 : 0.231884 

Total Learning Time : 6.979 

Total Inference Time : 7.600586891174316 

Total revision time: 26.394929988861083
Best scored revision CLL: -0.17656


Results 

CLL : -0.194766 

AUC ROC : 0.981916 

AUC PR : 0.209609 

Precision : 0.135347 

Recall : 0.808664 

F1 : 0.231884 

Total Learning Time : 36.521149499893184 

Total Inference Time : 7.600586891174316 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 4.42
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( interaction(A, G), interaction(G, E) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, A) )
%   | | | then return 0.07848791815035983;  // std dev = 3.184, 59.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else return 0.18046298468628857;  // std dev = 5.141, 121.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=39 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return 0.13939893509951237;  // std dev = 2.543, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.7324548349452545;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then return 0.7670719622367217;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(G, A), interaction(E, H) )
%   | | | then return 0.7432726872238381;  // std dev = 0.034, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.5170719622367217;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6633643395047321;  // std dev = 3.016, 63.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=52 */
%   | | | else return -0.16017164476261064;  // std dev = 0.072, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.22173837512273623;  // std dev = 1.752, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.0980392699904436;  // std dev = 2.264, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.47522123375785835;  // std dev = 0.962, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else return 0.5825147748355338;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then return 0.039955744230791575;  // std dev = 2.887, 70.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=14 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6703192965697751;  // std dev = 1.382, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.14433911239655475;  // std dev = 6.99e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.6979731263882748;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10401430849743738;  // std dev = 2.484, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.17202246317262126;  // std dev = 1.371, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.4360599261302156;  // std dev = 0.004, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4428741022385816;  // std dev = 0.084, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5395727185773715;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.516616595718056;  // std dev = 0.731, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.05622593084949946;  // std dev = 4.487, 188.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=49 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, H) )
%   | | | then return 0.4631624447680473;  // std dev = 0.044, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return 0.13102328068358177;  // std dev = 0.718, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return 0.1352175397995329;  // std dev = 1.813, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.02569753282139476;  // std dev = 2.289, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then if ( interaction(D, A) )
%   | | then return 0.33200533492971745;  // std dev = 0.006, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19469398083019943;  // std dev = 0.962, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A) )
%   | then return 0.07859008699193554;  // std dev = 4.558, 180.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=56 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.3238013970430136;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.014667260777288554;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.03187467183990912;  // std dev = 2.577, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.257071539468366;  // std dev = 1.226, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.10233434564645376;  // std dev = 0.918, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.30304103411162486;  // std dev = 0.103, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(C, G), recursion_proteinclass(F, B) )
%   | | | then return 0.2572792875442057;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.30935639161691736;  // std dev = 0.118, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.46531181476072425;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.0664234927140274;  // std dev = 1.309, 36.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.13856799136903114;  // std dev = 0.901, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.04619423238399352;  // std dev = 2.297, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.010172285482925652;  // std dev = 4.881, 195.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then if ( interaction(E, A), interaction(E, D) )
%   | | | then return 0.2607070798020997;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.325599491720091;  // std dev = 0.206, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.2522120761731436;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5279970553421299;  // std dev = 1.699, 37.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=33 */
%   | else return -0.17530422360982995;  // std dev = 0.700, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.29671837930232836;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(H, A) )
%   | | then return 0.050980650658982676;  // std dev = 3.529, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
%   | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.20037531872969838;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.11414934285583496;  // std dev = 1.021, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E), interaction(A, F) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.4396281576165272;  // std dev = 1.867, 59.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=56 */
%   | | else return -0.14115534638531577;  // std dev = 0.182, 139.000 (wgt'ed) examples reached here.  /* #neg=139 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.1620522892176659;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.3125363919286656;  // std dev = 0.137, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( interaction(A, I) )
%   | | | then return 0.08240415879386467;  // std dev = 2.402, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.08582894591807838;  // std dev = 0.809, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(A, E), interaction(E, A) )
%   | | then return -0.3122751718738501;  // std dev = 0.708, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else return 0.12794189568019984;  // std dev = 0.522, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(F, A), interaction(A, G) )
%   | then if ( interaction(G, A), interaction(G, F) )
%   | | then return -0.09239157123903313;  // std dev = 0.310, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | else if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.16933008446300724;  // std dev = 0.717, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.01301167356014968;  // std dev = 1.483, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21863503876937387;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.06356052027530755;  // std dev = 2.767, 93.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=31 */
%   | | | else return 0.10995476766814109;  // std dev = 2.274, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.14966691874339683;  // std dev = 0.025, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.15859543151274197;  // std dev = 0.039, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else if ( complex(C, F), interaction(D, C) )
%   | | | then return 0.1821703872476821;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return -0.10632410099322602;  // std dev = 0.754, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return -0.030270862730862408;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), interaction(H, A) )
%   | then return -0.016695383011701544;  // std dev = 1.837, 96.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=24 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.183594446545477;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.036347458936937076;  // std dev = 2.916, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | else return 0.024482637831558154;  // std dev = 2.420, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '32.989', 'seconds']
Parameter learned model CLL:-0.184858 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'interaction(A, F), interaction(F, A)', 'false,true,false': 'interaction(A, G), interaction(G, E)', 'false,false': 'interaction(H, A)', 'false,false,true': 'interaction(I, H), interaction(I, A)', 'false,false,false': 'interaction(A, J), interaction(J, K)'}, {'true,true': [0.0, 0, 12], 'true,false': [0.866, 1, 3], 'false,true,true': [0.0, 0, 1], 'false,true,false,true': [0.866, 1, 3], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.184, 46, 13], 'false,false,true,false': [5.141, 82, 39], 'false,false,false,true': [2.543, 23, 9], 'false,false,false,false': [1.309, 4, 3]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, C), complex(A, D)', 'false': 'interaction(A, E), recursion_proteinclass(E, B)', 'false,true': 'complex(A, F), complex(E, F)', 'false,true,false': 'interaction(G, A), interaction(E, H)', 'false,false': 'interaction(I, A)', 'false,false,true': 'interaction(I, J), recursion_proteinclass(J, B)', 'false,false,false': 'complex(A, K)'}, {'true,true': [0.0, 0, 4], 'true,false': [0.07, 0, 11], 'false,true,true': [0.0, 0, 2], 'false,true,false,true': [0.034, 0, 2], 'false,true,false,false': [0.866, 1, 3], 'false,false,true,true': [3.016, 11, 52], 'false,false,true,false': [0.072, 120, 0], 'false,false,false,true': [1.752, 8, 5], 'false,false,false,false': [2.264, 20, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), interaction(D, A)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), interaction(F, A)', 'false,true,false': 'interaction(E, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), interaction(H, I)', 'false,false,true': 'recursion_proteinclass(I, B)', 'false,false,false': 'interaction(A, J)'}, {'true,true': [0.962, 1, 11], 'true,false': [0.061, 0, 4], 'false,true,true': [2.887, 56, 14], 'false,true,false,true': [1.382, 2, 42], 'false,true,false,false': [6.99e-08, 93, 0], 'false,false,true,true': [0.163, 0, 3], 'false,false,true,false': [2.484, 22, 9], 'false,false,false,true': [1.371, 5, 3], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(A, D), complex(C, D)', 'false': 'interaction(E, A)', 'false,true': 'interaction(F, E), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false': 'interaction(A, H), recursion_proteinclass(H, B)', 'false,false,true': 'interaction(A, I), interaction(I, H)', 'false,false,false': 'complex(A, J), interaction(A, K)'}, {'true,true': [0.004, 0, 6], 'true,false': [0.084, 0, 9], 'false,true,true,true': [0.0, 0, 1], 'false,true,true,false': [0.731, 1, 6], 'false,true,false': [4.487, 139, 49], 'false,false,true,true': [0.044, 0, 2], 'false,false,true,false': [0.718, 1, 1], 'false,false,false,true': [1.813, 9, 5], 'false,false,false,false': [2.289, 24, 7]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'interaction(A, D), interaction(D, C)', 'true,true': 'interaction(D, A)', 'false': 'interaction(E, A)', 'false,false': 'interaction(A, F), recursion_proteinclass(F, B)', 'false,false,true': 'interaction(F, G), interaction(G, F)', 'false,false,false': 'interaction(A, H), interaction(H, I)'}, {'true,true,true': [0.006, 0, 9], 'true,true,false': [0.0, 0, 0], 'true,false': [0.962, 1, 6], 'false,true': [4.558, 124, 56], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.979, 2, 2], 'false,false,false,true': [2.577, 28, 9], 'false,false,false,false': [1.226, 3, 3]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(D, A), complex(D, E)', 'true,true': 'recursion_proteinclass(D, B)', 'true,false': 'interaction(C, F), interaction(F, C)', 'true,false,true': 'complex(C, G), recursion_proteinclass(F, B)', 'false': 'interaction(A, H), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'complex(A, J), interaction(K, A)'}, {'true,true,true': [0.918, 1, 5], 'true,true,false': [0.103, 0, 3], 'true,false,true,true': [0.0, 0, 1], 'true,false,true,false': [0.118, 0, 3], 'true,false,false': [0.173, 0, 4], 'false,true': [1.309, 31, 5], 'false,false,true': [0.901, 1, 5], 'false,false,false,true': [2.297, 37, 13], 'false,false,false,false': [4.881, 148, 47]}]
['proteinclass(A, B)', {'': 'interaction(A, C)', 'true': 'interaction(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,true': 'interaction(E, A), interaction(E, D)', 'true,true,false': 'interaction(F, A), recursion_proteinclass(F, B)', 'false': 'interaction(G, A), recursion_proteinclass(G, B)', 'false,false': 'interaction(H, A)'}, {'true,true,true,true': [0.18, 0, 13], 'true,true,true,false': [0.206, 0, 3], 'true,true,false,true': [0.028, 0, 3], 'true,true,false,false': [1.699, 4, 33], 'true,false': [0.7, 106, 0], 'false,true': [0.018, 0, 3], 'false,false,true': [3.529, 80, 31], 'false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(C, A), recursion_proteinclass(C, B)', 'true': 'complex(C, D), interaction(A, C)', 'false': 'interaction(E, A)', 'false,true': 'interaction(E, F), recursion_proteinclass(F, B)', 'false,true,true': 'interaction(F, E), interaction(A, F)', 'false,false': 'interaction(A, G), recursion_proteinclass(G, B)', 'false,false,true': 'complex(A, H)', 'false,false,false': 'interaction(A, I)'}, {'true,true': [0.0, 0, 4], 'true,false': [1.021, 1, 11], 'false,true,true,true': [0.0, 0, 0], 'false,true,true,false': [1.867, 3, 56], 'false,true,false': [0.182, 139, 0], 'false,false,true,true': [0.0, 0, 1], 'false,false,true,false': [0.137, 0, 2], 'false,false,false,true': [2.402, 24, 12], 'false,false,false,false': [0.0, 0, 0]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D), recursion_proteinclass(D, B)', 'true,false': 'interaction(A, E), interaction(E, A)', 'false': 'interaction(F, A), interaction(A, G)', 'false,true': 'interaction(G, A), interaction(G, F)', 'false,true,false': 'interaction(H, F), recursion_proteinclass(H, B)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true': [0.809, 1, 10], 'true,false,true': [0.708, 1, 1], 'true,false,false': [0.522, 1, 5], 'false,true,true': [0.31, 17, 1], 'false,true,false,true': [0.717, 1, 6], 'false,true,false,false': [1.483, 40, 17], 'false,false,true': [0.015, 0, 3], 'false,false,false,true': [2.767, 62, 31], 'false,false,false,false': [2.274, 20, 12]}]
['proteinclass(A, B)', {'': 'interaction(A, C), recursion_proteinclass(C, B)', 'true': 'interaction(C, D)', 'true,true': 'interaction(A, D)', 'true,true,true': 'interaction(E, A), recursion_proteinclass(E, B)', 'true,true,false': 'complex(C, F), interaction(D, C)', 'false': 'interaction(A, G), interaction(H, A)', 'false,false': 'interaction(I, A), recursion_proteinclass(I, B)', 'false,false,false': 'interaction(J, A)'}, {'true,true,true,true': [0.025, 0, 8], 'true,true,true,false': [0.039, 0, 2], 'true,true,false,true': [0.0, 0, 1], 'true,true,false,false': [0.754, 1, 2], 'true,false': [0.867, 1, 3], 'false,true': [1.837, 72, 24], 'false,false,true': [0.013, 0, 3], 'false,false,false,true': [2.916, 64, 31], 'false,false,false,false': [2.42, 27, 12]}]
{'': [0.05859374999999978, 0.21443136349646075], 'false': [0.17283950617283939, 0.20683471987656768], 'false,false': [0.20543209876543284, 0.21301775147928945], 'false,false,false': [0.2021484375000001, 0.24489795918367335], 'false,false,true': [0.1717897155989653, 0.21842770302575018], 'false,true': [0.0, 0.1874999999999999], 'false,true,false': [0.18750000000000006, 0.18750000000000006], 'true': [-1.4802973661668753e-16, 0.18750000000000006]}
{'': [0.0003624995143289548, 0.20922146415680878], 'false': [0.10813534771406813, 0.20383624225129449], 'false,false': [0.20284928661848367, 0.20816935869640826], 'false,false,false': [0.2360050935919072, 0.18979399052237542], 'false,false,true': [0.14441753920372552, 4.330048587184813e-05], 'false,true': [0.0, 0.1365591947158679], 'false,true,false': [0.0005664054911389549, 0.18750000000000006], 'true': [0.0, 0.00044937956321764653]}
{'': [0.06028194769700557, 0.15884307273870937], 'false': [0.14658699608872683, 0.21537600321992897], 'false,false': [0.21068842572408358, 0.23510120126477382], 'false,false,false': [0.23510120126477382, nan], 'false,false,true': [0.008847588477528756, 0.19909313844284304], 'false,true': [0.11903771075584604, 0.1586401722739598], 'false,true,false': [0.043428436374947636, 5.2526680734953645e-17], 'true': [0.07719078878005063, 0.0009214964801300685]}
{'': [0.0004788025243567103, 0.12977842548479904], 'false': [0.11386299550662797, 0.19342728661295566], 'false,false': [0.15705033371789012, 0.19206308415091045], 'false,false,false': [0.23484577277037702, 0.16901020666902583], 'false,false,true': [0.0009634387177974713, 0.257979016558619], 'false,true': [0.06679360883410335, 0.10710635651535746], 'false,true,true': [0.0, 0.07626968000616936], 'true': [2.263319438385499e-06, 0.0007779221292212806]}
{'': [0.062493012743210535, 0.1325330731237033], 'false': [0.1153952656268399, 0.19664692279820536], 'false,false': [0.206786987075728, 0.19544970491243496], 'false,false,true': [0.0, 0.23937095100370887], 'false,false,false': [0.17945868002023996, 0.25042371624334975], 'true': [4.330671552267419e-06, 0.13222999949808795], 'true,true': [4.330671552267419e-06, nan]}
{'': [0.07212534626064039, 0.1114788143619308], 'false': [0.047611931163822487, 0.11969305717141629], 'false,false': [0.13527527979913337, 0.11896121140789728], 'false,false,false': [0.10549031379542446, 0.12215047533949337], 'true': [0.10370170015909635, 0.012900482423534532], 'true,true': [0.14035856164781144, 0.0035325273185627206], 'true,false': [0.004013971190555299, 0.007510769178072169], 'true,false,true': [0.0, 0.004673955395257019]}
{'': [0.11228365993114207, 0.11079903320482944], 'true': [0.06807113802858719, 0.00462668548814846], 'false': [0.00011294088770730237, 0.11220141681132687], 'false,false': [0.11220141681132687, nan], 'true,true': [0.0053307018388429744, 0.07746401560120368], 'true,true,false': [0.0002685087936781146, 0.07801880914261702], 'true,true,true': [0.0024955891148614314, 0.014194732395745665]}
{'': [0.06652061232563888, 0.09923021125429118], 'false': [0.08833662810187796, 0.1510774860263858], 'false,false': [0.01130640542171781, 0.1602335751189268], 'false,false,false': [0.1602335751189268, nan], 'false,true': [0.05909203144538617, 0.00023839195600242557], 'true': [0.0, 0.08683542003866851], 'false,true,true': [nan, 0.05909203144538617], 'false,false,true': [0.0, 0.009411119742998464]}
{'': [0.0915469704165086, 0.0780844866431723], 'true': [0.05946666244710011, 0.13298495975331068], 'true,false': [0.25029692797479974, 0.04543320370467588], 'false': [0.03867395235659584, 0.10110162329847606], 'false,false': [7.6104882478778e-05, 0.10304563690965245], 'false,false,false': [0.0823243849781545, 0.16166537024935468], 'false,true': [0.005326581867202999, 0.044758814720406], 'false,true,false': [0.07341540066855319, 0.0385669580060253]}
{'': [0.0852530985160869, 0.07708015318710384], 'true': [0.052284568843172174, 0.18776413788281057], 'false': [0.035146998706642646, 0.10531142755573906], 'false,false': [5.872847553319016e-05, 0.10717052006653759], 'false,false,false': [0.08950261048011421, 0.1501079332773639], 'true,true': [0.00022463855406609223, 0.15781505626228826], 'true,true,false': [0.0, 0.18961280758003848], 'true,true,true': [7.640226866866343e-05, 0.0007538090234379125]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
0;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
0;true;interaction(A, D).;true;true
0;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
0;false,true;interaction(A, F), interaction(F, A).;true;true
1;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
1;true;interaction(A, C), complex(A, D).;true;true
1;false;interaction(A, E), recursion_proteinclass(E, B).;true;true
1;false,true;complex(A, F), complex(E, F).;true;true
1;false,true,false;interaction(G, A), interaction(E, H).;true;true
1;false,false;interaction(I, A).;true;true
1;false,false,true;interaction(I, J), recursion_proteinclass(J, B).;true;true
2;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
2;true;interaction(C, D), interaction(D, A).;true;true
2;false;interaction(E, A).;true;true
2;false,true;interaction(F, E), interaction(F, A).;true;true
2;false,true,false;interaction(E, G), recursion_proteinclass(G, B).;true;true
3;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
3;true;complex(A, D), complex(C, D).;true;true
3;false;interaction(E, A).;true;true
3;false,true;interaction(F, E), recursion_proteinclass(F, B).;true;true
3;false,true,true;interaction(A, G), recursion_proteinclass(G, B).;true;true
3;false,false;interaction(A, H), recursion_proteinclass(H, B).;true;true
3;false,false,true;interaction(A, I), interaction(I, H).;true;true
4;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
4;true;interaction(A, D), interaction(D, C).;true;true
4;false;interaction(E, A).;true;true
4;false,false;interaction(A, F), recursion_proteinclass(F, B).;true;true
4;false,false,true;interaction(F, G), interaction(G, F).;true;true
5;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
5;true;interaction(D, A), complex(D, E).;true;true
5;true,false;interaction(C, F), interaction(F, C).;true;true
5;true,false,true;complex(C, G), recursion_proteinclass(F, B).;true;true
6;;proteinclass(A, B) :- interaction(A, C).;true;true
6;true;interaction(D, C), recursion_proteinclass(D, B).;true;true
6;true,true;recursion_proteinclass(C, B).;true;true
6;true,true,true;interaction(E, A), interaction(E, D).;true;true
6;true,true,false;interaction(F, A), recursion_proteinclass(F, B).;true;true
6;false;interaction(G, A), recursion_proteinclass(G, B).;true;true
7;;proteinclass(A, B) :- interaction(C, A), recursion_proteinclass(C, B).;true;true
7;true;complex(C, D), interaction(A, C).;true;true
7;false;interaction(E, A).;true;true
7;false,true;interaction(E, F), recursion_proteinclass(F, B).;true;true
7;false,false;interaction(A, G), recursion_proteinclass(G, B).;true;true
7;false,false,true;complex(A, H).;true;true
8;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
8;false;interaction(F, A), interaction(A, G).;true;true
8;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true
9;;proteinclass(A, B) :- interaction(A, C), recursion_proteinclass(C, B).;true;true
9;true;interaction(C, D).;true;true
9;true,true;interaction(A, D).;true;true
9;true,true,true;interaction(E, A), recursion_proteinclass(E, B).;true;true
9;true,true,false;complex(C, F), interaction(D, C).;true;true
9;false;interaction(A, G), interaction(H, A).;true;true
9;false,false;interaction(I, A), recursion_proteinclass(I, B).;true;true


Refining candidate
***************************
Model training time 8.016
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.0803711573217346;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.18113030155913867;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, E) )
%   | | then return 0.7194734122109543;  // std dev = 1.05e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.3194734122109545;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( complex(A, G), complex(F, G) )
%   | | then return 0.7816289395752953;  // std dev = 0.000, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | else return 0.7194734122109545;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7818045127872193;  // std dev = 1.680, 55.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=52 */
%   | | | else return -0.15813471315842698;  // std dev = 0.144, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.09937475055613128;  // std dev = 2.278, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.2023434868288815;  // std dev = 1.786, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.5640384984266066;  // std dev = 0.027, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.2856282224019793;  // std dev = 1.104, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(E, A) )
%   | then if ( interaction(F, E), interaction(F, A) )
%   | | then if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.2548445207447974;  // std dev = 0.976, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.013362040090856587;  // std dev = 2.512, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6474792237599701;  // std dev = 1.377, 44.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=42 */
%   | | | else return -0.1415013466760459;  // std dev = 0.051, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5772255075446672;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.06667545939679975;  // std dev = 1.953, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.20403889816274162;  // std dev = 2.071, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.45358855073335025;  // std dev = 0.060, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.4918839958953103;  // std dev = 0.000, 1.000 (wgt'ed) examples reached here.  /* #pos=1 */
%   | | | else return 0.4501634939609769;  // std dev = 0.989, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else if ( interaction(A, G), location(A, H) )
%   | | | then return 0.003251643544449045;  // std dev = 2.483, 88.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=17 */
%   | | | else return 0.09184475408774345;  // std dev = 3.476, 99.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=32 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, I) )
%   | | | then return 0.44565100347412834;  // std dev = 0.047, 2.000 (wgt'ed) examples reached here.  /* #pos=2 */
%   | | | else return -0.08779267535565172;  // std dev = 0.707, 2.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=1 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.06549538642056706;  // std dev = 2.576, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.16008355104062255;  // std dev = 1.381, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, C) )
%   | then return 0.31104263505949903;  // std dev = 3.73e-09, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.01940864475220409;  // std dev = 0.792, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.2377032236925684;  // std dev = 0.862, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.017274903312911382;  // std dev = 0.229, 38.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=6 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.06043595606628917;  // std dev = 3.257, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | | | else return 0.13144681010252304;  // std dev = 2.432, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.3714080868590548;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.17375758783421383;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.038029993483304145;  // std dev = 2.423, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then return 0.26951344548387435;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.21537422862195157;  // std dev = 0.315, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.46857645917448953;  // std dev = 0.928, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.7824320039390643;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.18065987308623516;  // std dev = 0.075, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.03605835006772034;  // std dev = 1.114, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.3308663187886148;  // std dev = 0.808, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.10338200180365786;  // std dev = 2.039, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.014806178837272687;  // std dev = 3.546, 112.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.2500160366640703;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.28294945965979124;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.534610328109882;  // std dev = 1.230, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.17081095704664745;  // std dev = 0.092, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3524317470134686;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5154746366279731;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.15847618363495408;  // std dev = 0.036, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return -3.43703624067122E-4;  // std dev = 2.044, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.05647035895667448;  // std dev = 1.969, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(A, C) )
%   | then return 0.16440357630572244;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(E, A), phenotype(E, F) )
%   | | then return 0.22191440381334998;  // std dev = 0.064, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.08838968760980732;  // std dev = 0.717, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(G, A) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.25189357205640206;  // std dev = 1.352, 29.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=25 */
%   | | | else return 0.44745849295783563;  // std dev = 0.914, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | else return -0.13337755077907634;  // std dev = 0.034, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.20503308698990022;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return -0.008266148517860636;  // std dev = 1.886, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.13246789723788907;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.15298648033150133;  // std dev = 0.023, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.20750010770890817;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.27438795405861516;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09207893524087599;  // std dev = 0.169, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.0036066462622467627;  // std dev = 1.488, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
%   | | | else return 0.12949538185027698;  // std dev = 0.523, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.25329138474049634;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.050942746106449506;  // std dev = 1.289, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 5.046071405511504E-4;  // std dev = 3.113, 115.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=31 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(A, D) )
%   | | then return 0.14136848655082074;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.00928848733248322;  // std dev = 0.286, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.16741835341250366;  // std dev = 0.068, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.06835470618097689;  // std dev = 0.007, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.016633694020866154;  // std dev = 1.380, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.08957668416079545;  // std dev = 0.695, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.2085237644204453;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return 0.006761297145192314;  // std dev = 3.251, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
%   | | | else return -0.09374201615191474;  // std dev = 0.891, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '14.623', 'seconds']
Refined model CLL: -0.167438


******************************************
Best model found
******************************************
Results 

CLL : -0.182742 

AUC ROC : 0.988026 

AUC PR : 0.277037 

Precision : 0.170882 

Recall : 0.883392 

F1 : 0.286369 

Total Learning Time : 8.016 

Total Inference Time : 8.582511901855469 

Total revision time: 28.958769689559936
Best scored revision CLL: -0.167438


Results 

CLL : -0.182742 

AUC ROC : 0.988026 

AUC PR : 0.277037 

Precision : 0.170882 

Recall : 0.883392 

F1 : 0.286369 

Total Learning Time : 39.08498920059204 

Total Inference Time : 8.582511901855469 

