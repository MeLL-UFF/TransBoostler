Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1666595733973845;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15091244430003536;  // std dev = 5.493, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.16487100482348127;  // std dev = 5.375, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15724711191577173;  // std dev = 4.794, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.12143026209494216;  // std dev = 6.001, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10254237695160255;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.10066762301316137;  // std dev = 6.811, 218.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10092583174244031;  // std dev = 7.661, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08166757607896649;  // std dev = 7.668, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7378565986171542;  // std dev = 0.007, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2621016469381371;  // std dev = 0.009, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06606543391213772;  // std dev = 4.040, 75.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=24 */
%   | | | else return 0.09341188836531542;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.09179499556889427;  // std dev = 3.647, 90.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=35 */
%   | | | else return 0.06905912425343874;  // std dev = 5.857, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07143581830349457;  // std dev = 6.815, 238.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01968159565798456;  // std dev = 7.027, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.019', 'seconds']
Parameter learned model CLL:-0.335915 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.756, 195, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.493, 96, 44], 'false,false,false,false': [5.375, 88, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.794, 67, 35], 'false,false,false,false': [6.001, 117, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.708, 44, 20], 'false,false,false,false': [6.811, 151, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.661, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.007, 0, 35], 'true,false': [0.009, 56, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 51, 24], 'false,false,false,false': [4.266, 52, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.647, 55, 35], 'false,false,false,false': [5.857, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.815, 151, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.027, 179, 87]}]
{'': [nan, 0.21333182435491255], 'false': [nan, 0.21333182435491266], 'false,false': [nan, 0.21333182435491255], 'false,false,false': [nan, 0.21333182435491266]}
{'': [nan, 0.21797088819596758], 'false': [nan, 0.21797088819596824], 'false,false': [nan, 0.21797088819596758], 'false,false,false': [0.21551020408163418, 0.22049997086416948]}
{'': [nan, 0.21798231282940564], 'false': [nan, 0.21798231282940564], 'false,false': [nan, 0.21798231282940608], 'false,false,false': [0.22534230522875595, 0.21305734455819228]}
{'': [nan, 0.21324192276706117], 'false': [nan, 0.21324192276706117], 'false,false': [nan, 0.21324192276706105], 'false,false,false': [0.21484375000000047, 0.2127708638981196]}
{'': [nan, 0.21982254078346236], 'false': [nan, 0.21982254078346236], 'false,false': [nan, 0.2198225407834629], 'false,false,false': [nan, 0.2198225407834629]}
{'': [nan, 0.21938173669020988], 'false': [nan, 0.21938173669020988], 'false,false': [nan, 0.21938173669021002], 'false,false,false': [nan, 0.21938173669020958]}
{'': [0.23666795482868205, 0.22289644001777054], 'true': [1.3389570447941423e-06, 1.323266142819587e-06], 'false': [nan, 0.22289644001777054], 'false,false': [nan, 0.22289644001777054], 'false,false,false': [0.21760000000000002, 0.22749999999999923], 'true,true': [nan, 1.3389570447941423e-06], 'true,true,false': [nan, 1.3389570447941423e-06]}
{'': [nan, 0.19603142402199406], 'false': [nan, 0.19603142402199406], 'false,false': [nan, 0.19603142402199455], 'false,false,false': [0.14779230974173602, 0.22421592180436795]}
{'': [nan, 0.19511566352031062], 'false': [nan, 0.19511566352030937], 'false,false': [nan, 0.19511566352030937], 'false,false,false': [nan, 0.19511566352030937]}
{'': [nan, 0.18562342387686728], 'false': [nan, 0.18562342387686728], 'false,false': [nan, 0.18562342387686745], 'false,false,false': [nan, 0.18562342387686745]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.561
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, F), interaction(G, C) )
%   | | then return 0.09758555481782223;  // std dev = 0.427, 71.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=17 */
%   | | else if ( interaction(C, C), complex(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.21880467280443042;  // std dev = 3.750, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   else if ( complex(A, I), interaction(J, A) )
%   | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, L), complex(A, M) )
%   | | then return 0.15814893509951225;  // std dev = 0.458, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.24945328292559804;  // std dev = 4.054, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, A) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7405772659167964;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.15634567521576495;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.7736933991779104;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.7067072498254469;  // std dev = 1.323, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.031246193094708424;  // std dev = 2.500, 42.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=8 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.015741474297226273;  // std dev = 2.671, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.15621490412573777;  // std dev = 5.419, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6389859689651963;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), enzyme(F, D) )
%   | | then return -0.06513817299946305;  // std dev = 0.297, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(G, C), interaction(G, A) )
%   | | | then return 0.39793199248341704;  // std dev = 1.701, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.14618259168684328;  // std dev = 1.995, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.756309189310942;  // std dev = 0.202, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.18426302956076776;  // std dev = 0.130, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then return 0.06031124548751794;  // std dev = 0.401, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.12358441667690995;  // std dev = 4.330, 92.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=30 */
%   | | | else return 0.0037975181605968064;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4954305800654442;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), interaction(F, F) )
%   | | | then return -0.1453054638290927;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.03429847273133743;  // std dev = 0.950, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14203998724921588;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.07900151947971454;  // std dev = 2.228, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( enzyme(G, I) )
%   | | | then return -0.01757822823550888;  // std dev = 1.733, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | | else return 0.17704860237400966;  // std dev = 4.172, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
%   | | else if ( interaction(A, J), phenotype(A, K) )
%   | | | then return 0.1330798820093142;  // std dev = 1.650, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.03387272551426787;  // std dev = 3.731, 83.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4654376705056712;  // std dev = 0.135, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D) )
%   | | then return -0.17987959364287742;  // std dev = 0.057, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(D, F), interaction(G, D) )
%   | | | then return -0.03586446433367131;  // std dev = 2.114, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.10644692821903763;  // std dev = 2.732, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.43037102481936657;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6374247088791701;  // std dev = 0.905, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.18901435270994102;  // std dev = 0.265, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( location(A, L) )
%   | | | then return 0.052943100020473956;  // std dev = 4.529, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
%   | | | else return 0.25032644213406635;  // std dev = 1.171, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(C, C), enzyme(A, E) )
%   | then if ( complex(C, F), phenotype(A, G) )
%   | | then if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.654123348238936;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.21424632753885817;  // std dev = 0.049, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.05669370477885639;  // std dev = 0.298, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | then return 0.41925917424375425;  // std dev = 0.247, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | else if ( location(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.20745545909149074;  // std dev = 4.267, 94.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=46 */
%   | | | else return -0.1459493169702209;  // std dev = 2.389, 106.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=7 */
%   else if ( phenotype(A, K), interaction(A, L) )
%   | then return 0.08395783965009472;  // std dev = 0.310, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(A, M) )
%   | | then return 0.3089662642227107;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.25232488277616805;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5006256317181981;  // std dev = 0.145, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19362645487091323;  // std dev = 0.076, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.13105017412984504;  // std dev = 0.562, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.5430231283608522;  // std dev = 0.950, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.21853093080538127;  // std dev = 0.052, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5114449112587358;  // std dev = 1.373, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.22074445716310043;  // std dev = 0.365, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.45567721049002335;  // std dev = 0.489, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.12840854022980308;  // std dev = 2.786, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.166643904631406;  // std dev = 0.056, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3777596056881047;  // std dev = 0.153, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11610029051089674;  // std dev = 0.164, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(E, F) )
%   | | | then return -0.014893616773101642;  // std dev = 1.273, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.23847279955450526;  // std dev = 0.530, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.41191645980477487;  // std dev = 1.068, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | | else return -0.1732710493649645;  // std dev = 0.423, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.2073989272076154;  // std dev = 1.684, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return 0.06190586321884024;  // std dev = 3.508, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then return -0.0025222454887041126;  // std dev = 0.265, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( enzyme(A, F), complex(A, G) )
%   | | then if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.37189775856070284;  // std dev = 0.095, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1802263993785925;  // std dev = 0.086, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.37292497837575606;  // std dev = 1.032, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.18987099113713626;  // std dev = 0.341, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4267144778522708;  // std dev = 0.213, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17551467735574083;  // std dev = 0.151, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.2420422709492705;  // std dev = 2.040, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return 0.010611711953662359;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.08293669698536606;  // std dev = 1.840, 25.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | else return 0.3864205734053855;  // std dev = 1.539, 61.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=59 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.20803924809866756;  // std dev = 0.391, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | | else return 0.23035083195660255;  // std dev = 0.729, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return -0.16389068740190732;  // std dev = 0.073, 131.000 (wgt'ed) examples reached here.  /* #neg=131 */
%   else if ( interaction(A, A) )
%   | then return -0.045837350220556884;  // std dev = 0.215, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H), interaction(H, A) )
%   | | then return -0.13668462150223082;  // std dev = 0.496, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(I, A), interaction(J, I) )
%   | | | then return -0.1568880331239898;  // std dev = 0.930, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.1702486972243135;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '8.989', 'seconds']
Refined model CLL: -0.199676


******************************************
Best model found
******************************************
Results 

CLL : -0.188812 

AUC ROC : 0.99407 

AUC PR : 0.50645 

Precision : 0.319737 

Recall : 0.861702 

F1 : 0.466411 

Total Learning Time : 29.561 

Total Inference Time : 29.293954133987427 

Total revision time: 66.43954222679139
Best scored revision CLL: -0.199676


Results 

CLL : -0.188812 

AUC ROC : 0.99407 

AUC PR : 0.50645 

Precision : 0.319737 

Recall : 0.861702 

F1 : 0.466411 

Total Learning Time : 66.46968405723572 

Total Inference Time : 29.293954133987427 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.598
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18622464487869284;  // std dev = 8.359, 317.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1120097515635096;  // std dev = 6.127, 187.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=52 */
%   | | | else return 0.19009926881499306;  // std dev = 5.786, 146.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13233960368206088;  // std dev = 5.288, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.13135772455949388;  // std dev = 6.542, 196.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13449670170872216;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.124768849912859;  // std dev = 7.056, 223.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08126064630131133;  // std dev = 8.459, 333.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0921482692614984;  // std dev = 8.299, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7390971972566128;  // std dev = 0.039, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2611019713543553;  // std dev = 0.054, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08325608448145505;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
%   | | | else return 0.04990499143380124;  // std dev = 5.215, 125.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04546783650472706;  // std dev = 4.137, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.050543923323146354;  // std dev = 6.506, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07295531356405756;  // std dev = 7.490, 285.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031971233679883256;  // std dev = 7.628, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.770', 'seconds']
Parameter learned model CLL:-0.336887 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.359, 213, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.127, 135, 52], 'false,false,false,false': [5.786, 94, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.288, 88, 41], 'false,false,false,false': [6.542, 133, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.056, 148, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.459, 229, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.299, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.039, 0, 41], 'true,false': [0.054, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.901, 45, 23], 'false,false,false,false': [5.215, 85, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.137, 84, 41], 'false,false,false,false': [6.506, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 181, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.628, 207, 104]}]
{'': [nan, 0.2204420384320692], 'false': [nan, 0.22044203843206772], 'false,false': [nan, 0.2204420384320692], 'false,false,false': [nan, 0.22044203843206772]}
{'': [nan, 0.2147733318904443], 'false': [nan, 0.21477333189044995], 'false,false': [nan, 0.2147733318904443], 'false,false,false': [0.20074923503674783, 0.22931131544379907]}
{'': [nan, 0.2177177076659315], 'false': [nan, 0.2177177076659315], 'false,false': [nan, 0.21771770766593238], 'false,false,false': [0.2167393182124049, 0.21836126499518285]}
{'': [nan, 0.22334705898476845], 'false': [nan, 0.22334705898476845], 'false,false': [nan, 0.22334705898476742], 'false,false,false': [0.22349918875067598, 0.22326205264802546]}
{'': [nan, 0.2148994448307745], 'false': [nan, 0.2148994448307745], 'false,false': [nan, 0.21489944483077353], 'false,false,false': [nan, 0.21489944483077353]}
{'': [nan, 0.22359388305285915], 'false': [nan, 0.22359388305285915], 'false,false': [nan, 0.2235938830528583], 'false,false,false': [nan, 0.22359388305285935]}
{'': [0.22595861994147218, 0.2200496131540512], 'true': [3.6452537353720964e-05, 3.7508701463314274e-05], 'false': [nan, 0.2200496131540512], 'false,false': [nan, 0.2200496131540512], 'false,false,false': [0.22383217993079585, 0.21759999999999968], 'true,true': [nan, 3.6452537353720964e-05], 'true,true,false': [nan, 3.6452537353720964e-05]}
{'': [nan, 0.1869196499429326], 'false': [nan, 0.1869196499429326], 'false,false': [nan, 0.18691964994293309], 'false,false,false': [0.1369068420224089, 0.21930123651430447]}
{'': [nan, 0.19683126055912653], 'false': [nan, 0.19683126055912648], 'false,false': [nan, 0.19683126055912648], 'false,false,false': [nan, 0.19683126055912648]}
{'': [nan, 0.18709229589840282], 'false': [nan, 0.18709229589840282], 'false,false': [nan, 0.18709229589840246], 'false,false,false': [nan, 0.18709229589840246]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 36.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, C), interaction(D, D) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.02481560176617888;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.7470378239884007;  // std dev = 0.314, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else return -0.030739953789376575;  // std dev = 0.314, 99.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=11 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.32243464938522665;  // std dev = 2.639, 28.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=13 */
%   | | | else return 0.22596502705353397;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7274515184059416;  // std dev = 0.132, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.598486169606818;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0658671379727294;  // std dev = 4.230, 108.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=25 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6172610538743358;  // std dev = 1.148, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.13014901487901243;  // std dev = 5.162, 135.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=40 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.792063180741002;  // std dev = 0.089, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15316301640774108;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return -0.04293829751623974;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.060795440373382595;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.5055686715261979;  // std dev = 0.998, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.7391491109046202;  // std dev = 1.270, 77.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=76 */
%   | | else if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return 0.7270720175374475;  // std dev = 0.232, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13170769888845116;  // std dev = 1.224, 40.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=2 */
%   | else return -0.1703709512293651;  // std dev = 0.374, 157.000 (wgt'ed) examples reached here.  /* #neg=157 */
%   else if ( interaction(A, G) )
%   | then return 0.1789452325091887;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.03962642362437147;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 3.756922995169776E-4;  // std dev = 1.093, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else return 0.10450380705971608;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5595280748004222;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, E), interaction(F, A) )
%   | | then return -0.02044322270057572;  // std dev = 0.276, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.44845649181340685;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.12452046109531893;  // std dev = 2.104, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   else if ( phenotype(A, H), location(A, I) )
%   | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.4824432961489458;  // std dev = 0.329, 50.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=43 */
%   | | else return -0.15941579348270155;  // std dev = 0.056, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.3305604458755877;  // std dev = 0.322, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(L, A), complex(A, M) )
%   | | | then return -0.035546112302958406;  // std dev = 1.338, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.029490140739443383;  // std dev = 3.558, 97.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( phenotype(C, D) )
%   | then if ( phenotype(A, D), recursion_proteinclass(C, B) )
%   | | then return 0.36477815820342807;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.03227912786428164;  // std dev = 0.249, 88.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=20 */
%   | else return 0.18694087733477618;  // std dev = 0.609, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( complex(A, E), location(A, F) )
%   | then if ( complex(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.40565363632354784;  // std dev = 0.232, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | else return -0.1334919158180537;  // std dev = 0.293, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.34482926067788267;  // std dev = 3.163, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | | | else return -0.15535791306067417;  // std dev = 0.192, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.1914089896730569;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2684338682342901;  // std dev = 1.502, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.01939162538479215;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.35474916267646517;  // std dev = 0.100, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( phenotype(F, H) )
%   | | then if ( interaction(F, F), interaction(F, A) )
%   | | | then return -0.09357022681663323;  // std dev = 0.922, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.04371110453295848;  // std dev = 2.896, 88.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=27 */
%   | | else return -0.09692806950214586;  // std dev = 0.120, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4535244305884959;  // std dev = 0.694, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.16560476342907984;  // std dev = 0.445, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.03508261383525981;  // std dev = 3.004, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | | else return 0.10710922790097796;  // std dev = 1.436, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23205047092938216;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.3791053040381982;  // std dev = 0.135, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.13636742556485423;  // std dev = 0.051, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(A, F), phenotype(A, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then if ( phenotype(F, I), complex(F, J) )
%   | | | then return 0.07511782930127493;  // std dev = 1.355, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.002857248494032833;  // std dev = 0.997, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return 0.261185417410494;  // std dev = 0.686, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2599499550541515;  // std dev = 0.161, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.024624918888075064;  // std dev = 1.363, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.024221582210085336;  // std dev = 3.716, 130.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=37 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19825520920591566;  // std dev = 0.103, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.15372940597100723;  // std dev = 0.148, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( phenotype(C, E), enzyme(A, F) )
%   | | | then return -0.09140274322567393;  // std dev = 1.247, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return -0.02905232685140504;  // std dev = 1.849, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   else if ( complex(A, G) )
%   | then return 0.006553961333540859;  // std dev = 0.199, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.31305067536378756;  // std dev = 0.175, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0269047183071001;  // std dev = 2.299, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | else if ( location(A, K) )
%   | | | then return 0.08648744777522475;  // std dev = 2.800, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | | else return 0.22922465250476842;  // std dev = 1.127, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, E) )
%   | then return 0.2642448312658037;  // std dev = 0.069, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.1585950555108942;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | | then return 0.24259117650491824;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17048660291335016;  // std dev = 0.035, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10306878242715102;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J), enzyme(H, K) )
%   | | | then return 0.1295722303537134;  // std dev = 0.863, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return -0.014886256184254739;  // std dev = 2.608, 99.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=28 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.06047666397257919;  // std dev = 2.376, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | | | else return 0.0013286007474672882;  // std dev = 3.119, 122.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(A, E) )
%   | then return 0.21649160187013472;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.15479078747151753;  // std dev = 0.043, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G), interaction(A, F) )
%   | | then if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.09883437403397684;  // std dev = 0.688, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return -0.22163595398356517;  // std dev = 0.212, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(F, I), complex(A, J) )
%   | | | then return 0.04113009133331424;  // std dev = 1.304, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return -0.012263448415948756;  // std dev = 2.617, 85.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2621433813916837;  // std dev = 0.206, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.048087435966452624;  // std dev = 2.074, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.0063815805435392834;  // std dev = 2.882, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '19.888', 'seconds']
Refined model CLL: -0.188495


******************************************
Best model found
******************************************
Results 

CLL : -0.171344 

AUC ROC : 0.99182 

AUC PR : 0.525656 

Precision : 0.442857 

Recall : 0.701887 

F1 : 0.543066 

Total Learning Time : 36.207 

Total Inference Time : 33.63374876976013 

Total revision time: 78.83341663360596
Best scored revision CLL: -0.188495


Results 

CLL : -0.171344 

AUC ROC : 0.99182 

AUC PR : 0.525656 

Precision : 0.442857 

Recall : 0.701887 

F1 : 0.543066 

Total Learning Time : 78.8635584640503 

Total Inference Time : 33.63374876976013 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.209
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20401359675364783;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16920502623826025;  // std dev = 5.812, 151.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=51 */
%   | | | else return 0.19428854027447778;  // std dev = 5.111, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12112915362554141;  // std dev = 5.485, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.1288838886352909;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08563528079079506;  // std dev = 4.270, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | | | else return 0.09018862243768894;  // std dev = 6.763, 215.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1186910278044567;  // std dev = 7.733, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09159882640729497;  // std dev = 7.765, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7305773934913572;  // std dev = 0.019, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2696059159005015;  // std dev = 0.027, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.10368515137046028;  // std dev = 3.959, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
%   | | | else return 0.05891810051776971;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.006343356849769019;  // std dev = 4.401, 153.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=44 */
%   | | | else return 0.06707054353951354;  // std dev = 5.563, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028872933193322545;  // std dev = 7.117, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -0.0022588038202051037;  // std dev = 7.262, 309.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.987', 'seconds']
Parameter learned model CLL:-0.319666 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.812, 100, 51], 'false,false,false,false': [5.111, 72, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.485, 95, 44], 'false,false,false,false': [5.695, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.27, 61, 26], 'false,false,false,false': [6.763, 149, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.733, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.765, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.019, 0, 44], 'true,false': [0.027, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.959, 42, 25], 'false,false,false,false': [3.916, 46, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.401, 109, 44], 'false,false,false,false': [5.563, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.117, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.262, 217, 92]}]
{'': [nan, 0.22624229747300717], 'false': [nan, 0.2262422974730067], 'false,false': [nan, 0.22624229747300717], 'false,false,false': [nan, 0.2262422974730067]}
{'': [nan, 0.22704315886134344], 'false': [nan, 0.22704315886133958], 'false,false': [nan, 0.22704315886134344], 'false,false,false': [0.2236744002456012, 0.23118490093194524]}
{'': [nan, 0.217849196082266], 'false': [nan, 0.217849196082266], 'false,false': [nan, 0.21784919608226624], 'false,false,false': [0.21647704185321942, 0.21910878344017465]}
{'': [nan, 0.21181959748736082], 'false': [nan, 0.21181959748736082], 'false,false': [nan, 0.21181959748736012], 'false,false,false': [0.20953890870656533, 0.2127365081258194]}
{'': [nan, 0.22738318385088646], 'false': [nan, 0.22738318385088646], 'false,false': [nan, 0.22738318385088616], 'false,false,false': [nan, 0.22738318385088616]}
{'': [nan, 0.22584241526753648], 'false': [nan, 0.22584241526753648], 'false,false': [nan, 0.2258424152675375], 'false,false,false': [nan, 0.2258424152675367]}
{'': [0.2256770010937711, 0.228478672125444], 'false': [nan, 0.228478672125444], 'false,false': [nan, 0.228478672125444], 'false,false,false': [0.2339051013588773, 0.22222222222222168], 'true': [8.246276258202814e-06, 8.40733571688943e-06], 'true,true': [nan, 8.246276258202814e-06], 'true,true,false': [nan, 8.246276258202814e-06]}
{'': [nan, 0.17561392680300536], 'false': [nan, 0.17561392680300536], 'false,false': [nan, 0.17561392680300447], 'false,false,false': [0.12660606689400006, 0.22919702895648236]}
{'': [nan, 0.17900547805261796], 'false': [nan, 0.1790054780526181], 'false,false': [nan, 0.1790054780526181], 'false,false,false': [nan, 0.1790054780526181]}
{'': [nan, 0.17067583943818934], 'false': [nan, 0.17067583943818934], 'false,false': [nan, 0.17067583943818904], 'false,false,false': [nan, 0.17067583943818904]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.923
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.11621345122854462;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), enzyme(A, J) )
%   | | | then return 0.29814893509951235;  // std dev = 2.482, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.16991364098186437;  // std dev = 6.040, 170.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=53 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7409819160119433;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14824628322212247;  // std dev = 0.075, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, F), interaction(C, G) )
%   | | | then return 0.0421180319698597;  // std dev = 1.918, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.1398742106166203;  // std dev = 2.714, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.6100122940520397;  // std dev = 0.314, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( phenotype(I, J) )
%   | | | then return -0.16201257798575713;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0678503936789584;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2376240012102909;  // std dev = 3.361, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.1595975251294232;  // std dev = 5.104, 120.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.5571952487359395;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6647344290006844;  // std dev = 0.130, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5133156231129868;  // std dev = 0.765, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, F) )
%   | | | then return -0.1489907740088524;  // std dev = 0.115, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.08602367499516154;  // std dev = 3.175, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7837773514468122;  // std dev = 0.335, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.1879008051928835;  // std dev = 0.094, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.09525634671375512;  // std dev = 2.520, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.17114523224589764;  // std dev = 4.230, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.0579049892809004;  // std dev = 0.358, 156.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=44 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6867462929894287;  // std dev = 0.297, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17123573551023163;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6673059525849006;  // std dev = 0.274, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1891694805443405;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.3580518140456932;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.07157456814929807;  // std dev = 2.426, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2499838617080861;  // std dev = 1.348, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1419661479124176;  // std dev = 4.152, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43024891515880714;  // std dev = 0.110, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), interaction(E, E) )
%   | | then if ( interaction(A, G), complex(G, F) )
%   | | | then return -0.06105427427184407;  // std dev = 0.922, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.34846538029658825;  // std dev = 1.647, 15.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | else if ( enzyme(A, H), enzyme(D, H) )
%   | | | then return -0.12499029199337151;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.046090575214566075;  // std dev = 4.350, 115.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=33 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.705523783671922;  // std dev = 0.263, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.214333623760023;  // std dev = 0.264, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.2657236777276776;  // std dev = 1.784, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.09817000417394041;  // std dev = 2.752, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.34896947042791215;  // std dev = 0.110, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(D, E), enzyme(A, E) )
%   | | then return -0.1461594913665265;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.48836388128239744;  // std dev = 0.157, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0637747033726623;  // std dev = 3.432, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   else if ( interaction(G, A), phenotype(A, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.3479322964901825;  // std dev = 0.341, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.06130035730364121;  // std dev = 0.356, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4173072947001589;  // std dev = 3.261, 61.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=45 */
%   | | | else return -0.23189484458371215;  // std dev = 0.332, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return 0.177740974323097;  // std dev = 0.804, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4911885562772502;  // std dev = 0.183, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18168594075955832;  // std dev = 0.048, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(A, H) )
%   | | | then return 0.19162026579834737;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6341597503856953;  // std dev = 0.355, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.23652214886289782;  // std dev = 0.046, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.609033347947589;  // std dev = 0.197, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.23029221002575267;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( location(A, L) )
%   | | | then return 0.0063330413975862644;  // std dev = 3.432, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return -0.08051243728775642;  // std dev = 0.988, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), interaction(A, E) )
%   | then return -0.00927567662918701;  // std dev = 0.170, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | else if ( interaction(F, A), complex(C, G) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.41913554855752516;  // std dev = 0.770, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.13953456605879433;  // std dev = 1.100, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.054423743486899066;  // std dev = 0.288, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   else if ( interaction(A, H), phenotype(A, I) )
%   | then return -0.06895013628686864;  // std dev = 0.282, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | else if ( interaction(J, A) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.20318463982012927;  // std dev = 0.150, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.009647290261753462;  // std dev = 3.952, 133.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=38 */
%   | | else if ( location(A, K) )
%   | | | then return 0.07266333662348384;  // std dev = 1.350, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.29003065318287097;  // std dev = 0.651, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.15692763838912324;  // std dev = 0.061, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.28105612730249063;  // std dev = 0.187, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), interaction(F, G) )
%   | | | then return 0.2725866801041073;  // std dev = 0.262, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4617812723471383;  // std dev = 0.666, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.16870768773836078;  // std dev = 0.076, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2677246737694554;  // std dev = 3.162, 62.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=42 */
%   | | | else return -0.198946474475988;  // std dev = 0.224, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.08384107552711843;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.03786482098849494;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.16376554075349484;  // std dev = 0.062, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.08411109878319438;  // std dev = 0.604, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.13129658788004311;  // std dev = 0.703, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( complex(A, E) )
%   | | | then return -0.07600606874925202;  // std dev = 1.099, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.02503434339256052;  // std dev = 2.003, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.33176253042881704;  // std dev = 0.532, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14674032436883094;  // std dev = 0.150, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.04174223631847386;  // std dev = 2.224, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.0856132574189179;  // std dev = 2.204, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.281', 'seconds']
Refined model CLL: -0.204594


******************************************
Best model found
******************************************
Results 

CLL : -0.227962 

AUC ROC : 0.980731 

AUC PR : 0.311422 

Precision : 0.224515 

Recall : 0.66787 

F1 : 0.336058 

Total Learning Time : 14.923 

Total Inference Time : 9.2936429977417 

Total revision time: 31.942492277145384
Best scored revision CLL: -0.204594


Results 

CLL : -0.227962 

AUC ROC : 0.980731 

AUC PR : 0.311422 

Precision : 0.224515 

Recall : 0.66787 

F1 : 0.336058 

Total Learning Time : 31.97263410758972 

Total Inference Time : 9.2936429977417 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.09
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2472892065927253;  // std dev = 7.248, 221.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1565151009236623;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | | | else return 0.14605962682199197;  // std dev = 4.806, 106.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11307741588333692;  // std dev = 4.393, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.09965298231029038;  // std dev = 6.384, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.148364723949991;  // std dev = 3.472, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | else return 0.11105742910927859;  // std dev = 6.724, 206.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1071212649016798;  // std dev = 7.518, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10730565236569728;  // std dev = 7.404, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7182039662729123;  // std dev = 0.024, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2815030619006078;  // std dev = 0.034, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0586637352082016;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.08455134871911264;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.005404052200582509;  // std dev = 3.480, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.05733390076765542;  // std dev = 6.163, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023632497447490696;  // std dev = 7.132, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029015289458770282;  // std dev = 7.062, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.309', 'seconds']
Parameter learned model CLL:-0.34587 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.248, 135, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.897, 105, 52], 'false,false,false,false': [4.806, 72, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.393, 62, 28], 'false,false,false,false': [6.384, 137, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.472, 33, 19], 'false,false,false,false': [6.724, 139, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.518, 165, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.404, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 28], 'true,false': [0.034, 54, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [4.009, 45, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.48, 65, 28], 'false,false,false,false': [6.163, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.132, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.062, 172, 86]}]
{'': [nan, 0.2377101205954024], 'false': [nan, 0.23771012059540195], 'false,false': [nan, 0.2377101205954024], 'false,false,false': [nan, 0.23771012059540195]}
{'': [nan, 0.2200696843961909], 'false': [nan, 0.22006968439619023], 'false,false': [nan, 0.2200696843961909], 'false,false,false': [0.22151000040569815, 0.2178711285154857]}
{'': [nan, 0.2107578225887239], 'false': [nan, 0.2107578225887239], 'false,false': [nan, 0.210757822588725], 'false,false,false': [0.2144123456975202, 0.20901420948382737]}
{'': [nan, 0.2222013065637382], 'false': [nan, 0.2222013065637382], 'false,false': [nan, 0.22220130656373802], 'false,false,false': [0.23187869822485233, 0.2194779451015261]}
{'': [nan, 0.22517748701101586], 'false': [nan, 0.22517748701101586], 'false,false': [nan, 0.22517748701101667], 'false,false,false': [nan, 0.22517748701101667]}
{'': [nan, 0.2312978505625732], 'false': [nan, 0.2312978505625732], 'false,false': [nan, 0.2312978505625732], 'false,false,false': [nan, 0.23129785056257351]}
{'': [0.224755244975066, 0.22543733400466082], 'false': [nan, 0.22543733400466082], 'false,false': [nan, 0.22543733400466082], 'false,false,false': [0.22222222222222276, 0.22959183673469363], 'true': [2.0226450868346797e-05, 2.1148217186071236e-05], 'true,true': [nan, 2.0226450868346797e-05], 'true,true,false': [nan, 2.0226450868346797e-05]}
{'': [nan, 0.19252971656707765], 'false': [nan, 0.19252971656707765], 'false,false': [nan, 0.1925297165670773], 'false,false,false': [0.13020165291835134, 0.2260718554294903]}
{'': [nan, 0.19121697464476275], 'false': [nan, 0.19121697464476298], 'false,false': [nan, 0.19121697464476298], 'false,false,false': [nan, 0.19121697464476298]}
{'': [nan, 0.19330279321934224], 'false': [nan, 0.19330279321934224], 'false,false': [nan, 0.19330279321934168], 'false,false,false': [nan, 0.19330279321934168]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.857
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(D, F) )
%   | | then return 0.6795775065280832;  // std dev = 0.383, 28.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=23 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.14185106490048763;  // std dev = 8.30e-08, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.07935106490048778;  // std dev = 1.369, 32.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, L), interaction(A, M) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.11901850031690366;  // std dev = 3.648, 69.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, D) )
%   | then return 0.7395264305589855;  // std dev = 0.068, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( complex(A, E) )
%   | | then return 0.7425358548969497;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3939372973880843;  // std dev = 0.950, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.13337690424564377;  // std dev = 0.047, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, F), phenotype(G, H) )
%   | | | then return 0.7454186602326991;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4273270928449011;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(A, J) )
%   | | | then return 0.0686870144118396;  // std dev = 4.390, 140.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=33 */
%   | | | else return 0.1556027766060213;  // std dev = 4.451, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( complex(E, C) )
%   | | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5820237347859585;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7269230066659284;  // std dev = 0.333, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.17696952208133657;  // std dev = 0.086, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else return -0.14018645319338727;  // std dev = 0.122, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6017237260281014;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( phenotype(H, J), interaction(K, A) )
%   | | | then return 0.08908605503144414;  // std dev = 1.627, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.036030679950301965;  // std dev = 1.478, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.08486504424254124;  // std dev = 4.365, 117.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=31 */
%   | | | else return 0.17556478413001128;  // std dev = 2.439, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.26731608416942065;  // std dev = 0.632, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.4179353126541351;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.5077353785646215;  // std dev = 0.071, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.10973290828040784;  // std dev = 0.052, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(H, J), interaction(A, J) )
%   | | | then return 1.3881077191358736E-4;  // std dev = 1.734, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.07469468928890942;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1021016749779293;  // std dev = 5.102, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | | | else return 0.2810632111671415;  // std dev = 1.424, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( phenotype(A, E), complex(A, F) )
%   | | then return 0.3883015008721353;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3142631856817764;  // std dev = 0.035, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.4955089234722743;  // std dev = 0.293, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11112652909752228;  // std dev = 0.065, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(I, I) )
%   | | | then return 0.06761851039077028;  // std dev = 1.888, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.2103431709712974;  // std dev = 2.457, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | else if ( location(A, J) )
%   | | | then return 0.07104214557077744;  // std dev = 4.726, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
%   | | | else return 0.2802613226213371;  // std dev = 0.977, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, E) )
%   | then return 0.29423916092977387;  // std dev = 0.077, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.0851002783899849;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09506107302025672;  // std dev = 0.059, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.10727657519786166;  // std dev = 1.315, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.009832475817359076;  // std dev = 1.964, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( enzyme(H, J), interaction(A, K) )
%   | | | then return -0.0814449301123746;  // std dev = 0.987, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.05290976712195323;  // std dev = 2.070, 37.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=12 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.034184287737751624;  // std dev = 2.006, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.12242780340886596;  // std dev = 4.271, 99.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21725703410021557;  // std dev = 0.027, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.33277325806526814;  // std dev = 0.050, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5448987508110537;  // std dev = 0.370, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.16599051795593087;  // std dev = 0.094, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3055298948230649;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.48725354683196653;  // std dev = 1.923, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | | | else return -0.1901989633875461;  // std dev = 0.271, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return -0.006326311974949456;  // std dev = 1.211, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.11078742613164594;  // std dev = 3.149, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D) )
%   | then return 0.004002664988392819;  // std dev = 0.542, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2167330868213416;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, F), interaction(E, A) )
%   | | then return -0.10558790739186405;  // std dev = 0.126, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | else if ( complex(A, G), complex(E, G) )
%   | | | then return -0.04912930865412429;  // std dev = 0.976, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | | else return 0.04065384342756822;  // std dev = 2.837, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2936843453606361;  // std dev = 2.752, 63.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=44 */
%   | | | else return -0.17699105566424814;  // std dev = 0.442, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.11464162783083276;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.08048660169755495;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.1417719939511516;  // std dev = 0.054, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E) )
%   | | then return 0.2355565622682344;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.28138644758012243;  // std dev = 0.071, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.07161796937769592;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.2580934445548792;  // std dev = 0.157, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.037032249911724324;  // std dev = 2.175, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.005641619253924796;  // std dev = 4.287, 166.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=48 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.12704959633731203;  // std dev = 0.051, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.22687261721004495;  // std dev = 0.111, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( location(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A) )
%   | | | then return 0.46038865402655;  // std dev = 0.578, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return 0.18745414171426872;  // std dev = 0.428, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.18323168991619931;  // std dev = 0.056, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.365239827177115;  // std dev = 1.079, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return -0.0654869614990565;  // std dev = 2.990, 119.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=20 */
%   | | else if ( complex(A, K), phenotype(A, L) )
%   | | | then return -0.01818854792333311;  // std dev = 0.702, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.039343288972982074;  // std dev = 2.312, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '32.791', 'seconds']
Refined model CLL: -0.195973


******************************************
Best model found
******************************************
Results 

CLL : -0.212346 

AUC ROC : 0.976297 

AUC PR : 0.329573 

Precision : 0.237797 

Recall : 0.671378 

F1 : 0.351201 

Total Learning Time : 18.857 

Total Inference Time : 11.684525966644287 

Total revision time: 37.928977939605716
Best scored revision CLL: -0.195973


Results 

CLL : -0.212346 

AUC ROC : 0.976297 

AUC PR : 0.329573 

Precision : 0.237797 

Recall : 0.671378 

F1 : 0.351201 

Total Learning Time : 37.95911977005005 

Total Inference Time : 11.684525966644287 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.204
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1979926850995123;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1978901459790932;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.16354874812963086;  // std dev = 5.953, 160.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12994886407874548;  // std dev = 4.865, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.12731073014536737;  // std dev = 5.941, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11478879123668755;  // std dev = 3.055, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | else return 0.14030835312813664;  // std dev = 6.866, 206.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10137469622542877;  // std dev = 7.577, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07729497562338263;  // std dev = 7.607, 260.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7282968627045567;  // std dev = 0.005, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.27157961368733485;  // std dev = 0.007, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10730219140552642;  // std dev = 3.508, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.06994181959308707;  // std dev = 4.594, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02886427287869934;  // std dev = 3.849, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.05822367330248287;  // std dev = 5.824, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040667490109776896;  // std dev = 6.973, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03757770405974724;  // std dev = 6.921, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.812', 'seconds']
Parameter learned model CLL:-0.345389 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.644, 59, 34], 'false,false,false,false': [5.953, 107, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.865, 73, 35], 'false,false,false,false': [5.941, 110, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.055, 28, 14], 'false,false,false,false': [6.866, 133, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.577, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.607, 173, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.005, 0, 35], 'true,false': [0.007, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.508, 32, 20], 'false,false,false,false': [4.594, 62, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.849, 74, 35], 'false,false,false,false': [5.824, 97, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.973, 164, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.921, 162, 87]}]
{'': [nan, 0.2243499755859384], 'false': [nan, 0.22434997558593836], 'false,false': [nan, 0.2243499755859384], 'false,false,false': [nan, 0.22434997558593836]}
{'': [nan, 0.22562452155165708], 'false': [nan, 0.22562452155165771], 'false,false': [nan, 0.22562452155165708], 'false,false,false': [0.23193432766793934, 0.2215234375000009]}
{'': [nan, 0.21838243375495758], 'false': [nan, 0.21838243375495758], 'false,false': [nan, 0.21838243375495756], 'false,false,false': [0.21917986062614084, 0.21784803194057517]}
{'': [nan, 0.22780531521491457], 'false': [nan, 0.22780531521491457], 'false,false': [nan, 0.22780531521491454], 'false,false,false': [0.22222222222222254, 0.22883332372136048]}
{'': [nan, 0.22427253907299521], 'false': [nan, 0.22427253907299521], 'false,false': [nan, 0.22427253907299435], 'false,false,false': [nan, 0.22427253907299435]}
{'': [nan, 0.22253926040487354], 'false': [nan, 0.22253926040487354], 'false,false': [nan, 0.22253926040487385], 'false,false,false': [nan, 0.22253926040487337]}
{'': [0.20960628809063608, 0.22918360149276248], 'false': [nan, 0.22918360149276248], 'false,false': [nan, 0.22918360149276248], 'false,false,false': [0.2366863905325448, 0.22453598913535414], 'true': [7.319524969367259e-07, 6.735508746519427e-07], 'true,true': [nan, 7.319524969367259e-07], 'true,true,false': [nan, 7.319524969367259e-07]}
{'': [nan, 0.18909345151122364], 'false': [nan, 0.18909345151122364], 'false,false': [nan, 0.18909345151122367], 'false,false,false': [0.13589578367351543, 0.22764569876192223]}
{'': [nan, 0.19370731364176022], 'false': [nan, 0.19370731364175986], 'false,false': [nan, 0.19370731364175986], 'false,false,false': [nan, 0.19370731364175986]}
{'': [nan, 0.19234976668495948], 'false': [nan, 0.19234976668495948], 'false,false': [nan, 0.19234976668495948], 'false,false,false': [nan, 0.19234976668495948]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 25.75
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), phenotype(C, D) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return 0.1438632208137981;  // std dev = 0.452, 63.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=18 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), recursion_proteinclass(G, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A) )
%   | | | then return 0.07554023944733845;  // std dev = 2.798, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return 0.2227322684328443;  // std dev = 4.716, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.12130682983635441;  // std dev = 1.919, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7928142615491978;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.13884334304251092;  // std dev = 0.061, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, D), location(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6993748040857816;  // std dev = 0.878, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.10050071430608287;  // std dev = 3.807, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.07800366638836181;  // std dev = 3.230, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | | | else return 0.13884740992086125;  // std dev = 4.499, 95.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=29 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6372977639253734;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G) )
%   | | | then return 0.6318842947834056;  // std dev = 0.171, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.03762176298114467;  // std dev = 0.739, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.05714280959999444;  // std dev = 1.749, 40.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=5 */
%   | | | else return 0.12165944807172477;  // std dev = 2.846, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7649441849467742;  // std dev = 0.962, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | | else return -0.17187989621612965;  // std dev = 0.129, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.1574243307918283;  // std dev = 2.684, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return 0.24920727159078904;  // std dev = 3.439, 48.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(C, B), complex(D, E) )
%   | then return 0.5104591444657711;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(D, C), complex(D, F) )
%   | | then return -0.050216950406575166;  // std dev = 0.257, 44.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | | else return 0.07849462912990594;  // std dev = 0.420, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7376436063012038;  // std dev = 0.070, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.20153292974433307;  // std dev = 0.054, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6896481243072606;  // std dev = 0.450, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.18630809455572694;  // std dev = 0.202, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.27824261401709804;  // std dev = 2.179, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.09066269907748353;  // std dev = 1.399, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4235250949609258;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(A, E), enzyme(E, F) )
%   | | | then return -0.13386535958306406;  // std dev = 0.756, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.002017687086990275;  // std dev = 1.200, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.2935934351963705;  // std dev = 0.659, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.003721193280861071;  // std dev = 1.550, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.4380414580405174;  // std dev = 1.926, 35.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=29 */
%   | | | else return -0.15802784946032858;  // std dev = 0.372, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.06713133533586736;  // std dev = 2.655, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.18293484285172523;  // std dev = 3.361, 49.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.14903570398517121;  // std dev = 0.688, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3775796725689986;  // std dev = 0.239, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.5829917107221811;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.398720635216749;  // std dev = 0.210, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.13123979587865892;  // std dev = 0.151, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( complex(A, K), interaction(L, A) )
%   | | then if ( complex(L, M), enzyme(A, N) )
%   | | | then return 0.22426117081848335;  // std dev = 1.243, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.007800376847695227;  // std dev = 2.725, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else if ( interaction(P, A), interaction(P, P) )
%   | | | then return -0.05784109531769441;  // std dev = 2.191, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | | else return 0.008233039838623146;  // std dev = 4.183, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.39660618322390034;  // std dev = 0.161, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return 0.6002877770321386;  // std dev = 0.112, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.18488827157488688;  // std dev = 0.095, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.23909188746660953;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.11386271808956491;  // std dev = 0.085, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.026588950889898204;  // std dev = 2.216, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5408574531322226;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08560499878793991;  // std dev = 3.660, 83.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=31 */
%   | | else return -0.06933938405073033;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E) )
%   | | then return 0.303780022837171;  // std dev = 0.115, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(D, F), enzyme(F, G) )
%   | | | then return 0.38716142905946677;  // std dev = 0.321, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.6166889888628856;  // std dev = 0.358, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.1710371631539335;  // std dev = 0.067, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(A, H), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, I) )
%   | | | then return 0.15996364294931903;  // std dev = 0.060, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4395523553989601;  // std dev = 0.462, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.16425817527330328;  // std dev = 0.309, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.0690050145671065;  // std dev = 3.646, 93.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=36 */
%   | else return 0.49627763348614645;  // std dev = 0.886, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), phenotype(A, D) )
%   | then return 0.11810044762555844;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.22137848191036083;  // std dev = 0.127, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.4123108785278828;  // std dev = 1.613, 71.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=69 */
%   | | | else return -0.16219606106218123;  // std dev = 1.300, 33.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=4 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.10918840729441807;  // std dev = 0.285, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | | else return -0.2227353926875107;  // std dev = 0.634, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then return 0.07869567308610222;  // std dev = 0.707, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.29950378541685524;  // std dev = 0.848, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.15563679251347443;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, F) )
%   | | then if ( interaction(C, G), enzyme(A, H) )
%   | | | then return -0.05349204128514275;  // std dev = 0.380, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.037603784560401254;  // std dev = 0.868, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | else return -0.10051087176464621;  // std dev = 0.191, 30.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=3 */
%   else if ( interaction(I, A), location(A, J) )
%   | then if ( phenotype(A, K), phenotype(I, L) )
%   | | then return -0.024409099892526494;  // std dev = 0.191, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | else if ( location(I, J), interaction(M, I) )
%   | | | then return 0.06084605853544619;  // std dev = 2.563, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return -0.025713974770949503;  // std dev = 1.910, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | else if ( enzyme(A, N) )
%   | | then return 0.005505932304568653;  // std dev = 0.146, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.4071905406440902;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '25.885', 'seconds']
Refined model CLL: -0.207164


******************************************
Best model found
******************************************
Results 

CLL : -0.21794 

AUC ROC : 0.988638 

AUC PR : 0.440682 

Precision : 0.16968 

Recall : 0.865248 

F1 : 0.283721 

Total Learning Time : 25.75 

Total Inference Time : 16.996243000030518 

Total revision time: 50.305295948028565
Best scored revision CLL: -0.207164


Results 

CLL : -0.21794 

AUC ROC : 0.988638 

AUC PR : 0.440682 

Precision : 0.16968 

Recall : 0.865248 

F1 : 0.283721 

Total Learning Time : 50.367779973983765 

Total Inference Time : 16.996243000030518 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.494
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16493359586647444;  // std dev = 8.491, 339.000 (wgt'ed) examples reached here.  /* #neg=235 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.20352917046380936;  // std dev = 4.572, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
%   | | | else return 0.1640514438893086;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17094360739402356;  // std dev = 5.125, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.22568828873977145;  // std dev = 6.073, 152.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11246161364413126;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.10320057566761769;  // std dev = 7.878, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10035031392360014;  // std dev = 8.281, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0949780104897241;  // std dev = 8.192, 294.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7285276680806705;  // std dev = 0.028, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27229631067742754;  // std dev = 0.045, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.05671374322271986;  // std dev = 3.711, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | | else return 0.05117938964640759;  // std dev = 5.302, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030794350176433685;  // std dev = 4.144, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.044095443569557365;  // std dev = 6.461, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0358715268478132;  // std dev = 7.625, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0040205137874338125;  // std dev = 7.811, 331.000 (wgt'ed) examples reached here.  /* #neg=227 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.871', 'seconds']
Parameter learned model CLL:-0.335069 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.491, 235, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.572, 57, 33], 'false,false,false,false': [6.912, 146, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.125, 73, 41], 'false,false,false,false': [6.073, 89, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.828, 24, 12], 'false,false,false,false': [7.878, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.281, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.192, 190, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.028, 0, 41], 'true,false': [0.045, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.711, 40, 21], 'false,false,false,false': [5.302, 85, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.144, 87, 41], 'false,false,false,false': [6.461, 124, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.625, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.811, 227, 104]}]
{'': [nan, 0.2126678326850637], 'false': [nan, 0.21266783268506256], 'false,false': [nan, 0.2126678326850637], 'false,false,false': [nan, 0.21266783268506256]}
{'': [nan, 0.22400237668303594], 'false': [nan, 0.22400237668304232], 'false,false': [nan, 0.22400237668303594], 'false,false,false': [0.23222222222222275, 0.22013633757353152]}
{'': [nan, 0.23815063116742743], 'false': [nan, 0.23815063116742743], 'false,false': [nan, 0.2381506311674255], 'false,false,false': [0.23041049566463684, 0.2426713127363824]}
{'': [nan, 0.21961754853843243], 'false': [nan, 0.21961754853843243], 'false,false': [nan, 0.21961754853842802], 'false,false,false': [0.2222222222222222, 0.21927653294207797]}
{'': [nan, 0.2248266029919717], 'false': [nan, 0.2248266029919717], 'false,false': [nan, 0.22482660299197246], 'false,false,false': [nan, 0.22482660299197246]}
{'': [nan, 0.22825755443375154], 'false': [nan, 0.22825755443375154], 'false,false': [nan, 0.22825755443375204], 'false,false,false': [nan, 0.2282575544337512]}
{'': [0.21539814529907853, 0.22277654345480583], 'false': [nan, 0.22277654345480583], 'false,false': [nan, 0.22277654345480583], 'false,false,false': [0.22574576726686335, 0.22134044268088485], 'true': [1.9410512326258846e-05, 2.2039787002804522e-05], 'true,true': [nan, 1.9410512326258846e-05], 'true,true,false': [nan, 1.9410512326258846e-05]}
{'': [nan, 0.1870848558861825], 'false': [nan, 0.1870848558861825], 'false,false': [nan, 0.1870848558861831], 'false,false,false': [0.13416431233362464, 0.22323665252160907]}
{'': [nan, 0.18632576309676074], 'false': [nan, 0.18632576309676022], 'false,false': [nan, 0.18632576309676022], 'false,false,false': [nan, 0.18632576309676022]}
{'': [nan, 0.18430289941311367], 'false': [nan, 0.18430289941311367], 'false,false': [nan, 0.1843028994131131], 'false,false,false': [nan, 0.1843028994131131]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 34.013
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), phenotype(D, E) )
%   | then if ( interaction(C, A) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.8581489350995122;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7043027812533584;  // std dev = 1.301, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.0838800504077341;  // std dev = 1.941, 69.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=4 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1683093629070002;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
%   | | | else return 0.24703782398840118;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then return 0.6756918466928042;  // std dev = 0.337, 73.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=63 */
%   | | else if ( phenotype(A, F) )
%   | | | then return -0.15190636903953958;  // std dev = 0.082, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.5573016345026164;  // std dev = 2.726, 45.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=34 */
%   | else return -0.1574174079184582;  // std dev = 0.235, 156.000 (wgt'ed) examples reached here.  /* #neg=156 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.7900519043338656;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.17327635496662788;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.08640110749972862;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.034722828371972304;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.03640110749972862;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5329038996770876;  // std dev = 0.244, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, E) )
%   | | | then return 0.6111085104920537;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.3283660709595858;  // std dev = 0.164, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return -0.0745487294871701;  // std dev = 1.481, 57.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=4 */
%   | | | else return 0.1834738741025268;  // std dev = 1.313, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.48478579776752584;  // std dev = 1.466, 16.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=12 */
%   | | | else return 0.09491060959264996;  // std dev = 5.278, 179.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=50 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return 0.08135900189648038;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3934986914152596;  // std dev = 1.410, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(D, D) )
%   | | then return 0.44346404893267294;  // std dev = 0.034, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.2715201131488103;  // std dev = 0.827, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.5114871762201948;  // std dev = 0.065, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, E), recursion_proteinclass(F, B) )
%   | | then return 0.49272457104961415;  // std dev = 0.193, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1547926794511159;  // std dev = 0.463, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return 0.09403678654027983;  // std dev = 5.461, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then return 0.00955615605753043;  // std dev = 0.784, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.06532089873845928;  // std dev = 0.678, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.3740726368322627;  // std dev = 1.336, 12.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B), phenotype(C, D) )
%   | then return 0.3626037410795742;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(C, E), phenotype(A, E) )
%   | | then return -0.027260665081142475;  // std dev = 0.259, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | else return 0.053949886964325657;  // std dev = 0.276, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   else if ( complex(A, F), location(A, G) )
%   | then if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.5531156242394436;  // std dev = 0.143, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.16805982266917074;  // std dev = 0.051, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6700697279125837;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.16834494889911214;  // std dev = 0.001, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.24544738059759583;  // std dev = 1.603, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.09930619438480627;  // std dev = 4.402, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2513243340522042;  // std dev = 0.305, 42.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=35 */
%   | else if ( interaction(A, D) )
%   | | then return -0.12589503433922086;  // std dev = 0.051, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.17940099821207828;  // std dev = 1.672, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.03319657935348413;  // std dev = 4.645, 159.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=46 */
%   else if ( phenotype(A, H), interaction(I, A) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.05614426602297573;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.2771890673103576;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return -0.0715252648459004;  // std dev = 0.303, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( phenotype(A, M), enzyme(A, N) )
%   | | | then return -0.03827708195331991;  // std dev = 1.194, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.04443152830459694;  // std dev = 1.604, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3607933007345371;  // std dev = 0.140, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1462725643100806;  // std dev = 0.095, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.38302415113105637;  // std dev = 0.204, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.15384881184006713;  // std dev = 0.305, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.02467904973141926;  // std dev = 1.683, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.27887468174614854;  // std dev = 0.797, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.06826298142791135;  // std dev = 3.922, 101.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=33 */
%   | | else if ( location(A, K) )
%   | | | then return 0.05852969993402598;  // std dev = 2.199, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | else return -0.048082384541131715;  // std dev = 1.010, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.27787857976400665;  // std dev = 0.112, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.11930855479694197;  // std dev = 0.060, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), interaction(I, H) )
%   | | | then return 0.1445410006643324;  // std dev = 1.179, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.5492951770076276;  // std dev = 0.928, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | else return -0.18869839840503483;  // std dev = 0.381, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4379265665499199;  // std dev = 1.771, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.22123091961048116;  // std dev = 0.396, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.3940366478109481;  // std dev = 0.726, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1991837678985709;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( enzyme(A, E), complex(D, F) )
%   | then return -0.016674260501057116;  // std dev = 0.229, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( complex(A, G), interaction(H, D) )
%   | | then return 0.009713902722466444;  // std dev = 0.163, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | else return 0.07005035626987785;  // std dev = 0.309, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
%   else if ( interaction(A, I), location(I, J) )
%   | then if ( location(A, J), complex(I, K) )
%   | | then return -0.07908389308432162;  // std dev = 0.247, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.022104878911525735;  // std dev = 1.315, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.23897738433053614;  // std dev = 0.689, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( interaction(N, A), recursion_proteinclass(N, B) )
%   | | then return 0.17126507431236404;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, P) )
%   | | | then return -0.047823873458539425;  // std dev = 2.652, 72.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=15 */
%   | | | else return -0.13834577704765724;  // std dev = 1.210, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), enzyme(E, F) )
%   | then return -0.014212907984055502;  // std dev = 0.235, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.13057070390423126;  // std dev = 0.196, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.09249596676942509;  // std dev = 0.116, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.028647287490529905;  // std dev = 3.680, 153.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=50 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4115506313111631;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return -0.16647105068057297;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, J) )
%   | | then return -0.022785294293555688;  // std dev = 0.251, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.06615421091894427;  // std dev = 0.829, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.22109801471091597;  // std dev = 0.869, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '36.427', 'seconds']
Refined model CLL: -0.189427


******************************************
Best model found
******************************************
Results 

CLL : -0.209872 

AUC ROC : 0.990108 

AUC PR : 0.443981 

Precision : 0.305949 

Recall : 0.815094 

F1 : 0.444902 

Total Learning Time : 34.013 

Total Inference Time : 26.062437057495117 

Total revision time: 68.8266361064911
Best scored revision CLL: -0.189427


Results 

CLL : -0.209872 

AUC ROC : 0.990108 

AUC PR : 0.443981 

Precision : 0.305949 

Recall : 0.815094 

F1 : 0.444902 

Total Learning Time : 68.8891201324463 

Total Inference Time : 26.062437057495117 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.22322830017887768;  // std dev = 7.643, 252.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.14807455701718641;  // std dev = 5.086, 119.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=38 */
%   | | | else return 0.20116061902819557;  // std dev = 5.821, 145.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11229162312162538;  // std dev = 5.514, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   | | | else return 0.1539482375061271;  // std dev = 5.571, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12191639037427292;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.11098912190902523;  // std dev = 6.729, 203.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10037367463342958;  // std dev = 7.786, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06659936138367244;  // std dev = 7.877, 282.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7326776335845014;  // std dev = 0.027, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26711951963727104;  // std dev = 0.041, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.004936149883427579;  // std dev = 3.187, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.07774130899159692;  // std dev = 4.672, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.046017781057637805;  // std dev = 4.253, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.06759763811704465;  // std dev = 5.558, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03924531046417346;  // std dev = 7.022, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03862692454390932;  // std dev = 6.991, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.763', 'seconds']
Parameter learned model CLL:-0.337216 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.643, 160, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.086, 81, 38], 'false,false,false,false': [5.821, 91, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.514, 98, 44], 'false,false,false,false': [5.571, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [6.729, 135, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.786, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.877, 190, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 44], 'true,false': [0.041, 100, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.187, 37, 14], 'false,false,false,false': [4.672, 61, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.253, 87, 44], 'false,false,false,false': [5.558, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.022, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.991, 170, 92]}]
{'': [nan, 0.2317964222726142], 'false': [nan, 0.23179642227261354], 'false,false': [nan, 0.2317964222726142], 'false,false,false': [nan, 0.23179642227261354]}
{'': [nan, 0.227043158861338], 'false': [nan, 0.2270431588613418], 'false,false': [nan, 0.227043158861338], 'false,false,false': [0.21735753124779247, 0.2337217598097525]}
{'': [nan, 0.22145077985400408], 'false': [nan, 0.22145077985400408], 'false,false': [nan, 0.22145077985400408], 'false,false,false': [0.21413785363731958, 0.22819997243423518]}
{'': [nan, 0.22284048659992411], 'false': [nan, 0.22284048659992411], 'false,false': [nan, 0.22284048659992367], 'false,false,false': [0.22222222222222276, 0.22302851003623603]}
{'': [nan, 0.22451119386685073], 'false': [nan, 0.22451119386685073], 'false,false': [nan, 0.22451119386685162], 'false,false,false': [nan, 0.22451119386685162]}
{'': [nan, 0.22000075677957337], 'false': [nan, 0.22000075677957337], 'false,false': [nan, 0.22000075677957284], 'false,false,false': [nan, 0.2200007567795738]}
{'': [0.21212208053039844, 0.22030370854893225], 'false': [nan, 0.22030370854893225], 'false,false': [nan, 0.22030370854893225], 'false,false,false': [0.19915417147251063, 0.22980609418282458], 'true': [1.6932845859362157e-05, 1.6739303430792774e-05], 'true,true': [nan, 1.6932845859362157e-05], 'true,true,false': [nan, 1.6932845859362157e-05]}
{'': [nan, 0.18422765260417334], 'false': [nan, 0.18422765260417334], 'false,false': [nan, 0.18422765260417265], 'false,false,false': [0.13806864533883084, 0.22878964189512482]}
{'': [nan, 0.18126416261172154], 'false': [nan, 0.18126416261172118], 'false,false': [nan, 0.18126416261172118], 'false,false,false': [nan, 0.18126416261172118]}
{'': [nan, 0.18655971982673725], 'false': [nan, 0.18655971982673725], 'false,false': [nan, 0.1865597198267377], 'false,false,false': [nan, 0.1865597198267377]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 30.165
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( complex(A, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(F, A), interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.01604367194161748;  // std dev = 1.589, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return 0.09451257146314873;  // std dev = 3.151, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else return 0.1592242039167156;  // std dev = 6.256, 186.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=56 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.7194734122109543;  // std dev = 5.96e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.05986956815116813;  // std dev = 0.409, 74.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=16 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then return 0.12598424229780555;  // std dev = 0.417, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(E, I) )
%   | | | then return 0.5166699609055949;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3376404724806323;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7677550312137775;  // std dev = 0.967, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return -0.16235952751936789;  // std dev = 0.000, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.26792498439650214;  // std dev = 2.978, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.15412596067957263;  // std dev = 4.279, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(A, C), enzyme(A, E) )
%   | | then return 0.5898643969587355;  // std dev = 0.120, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.25770486320101016;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6522207324615795;  // std dev = 0.061, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), enzyme(A, G) )
%   | then if ( interaction(F, A), location(F, H) )
%   | | then return -0.09300832424380535;  // std dev = 0.228, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16979849190851629;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.027295674069290943;  // std dev = 2.879, 50.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=11 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.4766667400805796;  // std dev = 0.868, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15759955614152726;  // std dev = 0.013, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.1102602338058884;  // std dev = 6.046, 189.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=56 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.44628680753756217;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5938631396061034;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5077971768790458;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13191714363909524;  // std dev = 0.034, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, F), interaction(G, A) )
%   | | | then return 0.07848175023436338;  // std dev = 3.629, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
%   | | | else return 0.1263871113883732;  // std dev = 5.766, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.34027240666998015;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, C), location(C, E) )
%   | | then return -0.05505654949894238;  // std dev = 0.238, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | else if ( enzyme(A, F), complex(C, D) )
%   | | | then return 0.006374879994588953;  // std dev = 1.458, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.18837407202161405;  // std dev = 3.437, 54.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=23 */
%   else if ( phenotype(A, G), complex(A, H) )
%   | then return -0.04525361413499406;  // std dev = 0.324, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(I, K), interaction(I, L) )
%   | | | then return 0.26726180220594464;  // std dev = 1.417, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.1265117742075698;  // std dev = 2.871, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1470688889939491;  // std dev = 1.889, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.046039279964924976;  // std dev = 4.136, 91.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.2742345004334758;  // std dev = 0.113, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4105755691472414;  // std dev = 0.169, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( enzyme(A, G), complex(A, H) )
%   | | then if ( interaction(F, F) )
%   | | | then return -0.0578237704892401;  // std dev = 1.285, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.15813064211956734;  // std dev = 0.090, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.0945612419062748;  // std dev = 1.984, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.2033750508815149;  // std dev = 0.086, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.33693252996810513;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.08644918303357987;  // std dev = 3.105, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.028273126896478273;  // std dev = 5.745, 183.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=50 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5712391636721695;  // std dev = 0.236, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.21032776029987704;  // std dev = 0.044, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5615275493350399;  // std dev = 0.335, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.30172604219424637;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11386876279179563;  // std dev = 0.382, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.09863477152787267;  // std dev = 1.620, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.34084878661718176;  // std dev = 1.304, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.05088754907980639;  // std dev = 3.975, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
%   | | | else return 0.14544138038743643;  // std dev = 1.900, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E), complex(A, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.21745722742143517;  // std dev = 0.700, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.5847522020698531;  // std dev = 0.574, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | else if ( complex(A, G) )
%   | | | then return -0.1748509884160581;  // std dev = 0.264, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.3605497435184482;  // std dev = 3.601, 67.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | else if ( complex(A, H) )
%   | | then return -0.17937567992472905;  // std dev = 0.315, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.2513890076332841;  // std dev = 0.336, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(A, A) )
%   | then return -0.06246313338797092;  // std dev = 0.362, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return -0.09959519303517166;  // std dev = 0.400, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), complex(A, F) )
%   | then return 0.09667431373871951;  // std dev = 0.295, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | else return -0.031531521267455266;  // std dev = 0.296, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( location(H, I), location(G, I) )
%   | | then if ( interaction(J, H), complex(J, K) )
%   | | | then return 0.0016537853501833433;  // std dev = 2.246, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | | else return 0.11974383550471845;  // std dev = 2.079, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
%   | | else return -0.11374695301551367;  // std dev = 0.157, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( location(A, L), interaction(A, M) )
%   | | then if ( interaction(M, N), enzyme(N, P) )
%   | | | then return -0.051120566617535355;  // std dev = 1.912, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.11655259778318293;  // std dev = 2.528, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | else if ( interaction(Q, A), complex(Q, R) )
%   | | | then return 0.02343138362080342;  // std dev = 0.853, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.22239342790399907;  // std dev = 1.553, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.4156554267030407;  // std dev = 1.270, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | | else return -0.325154673562925;  // std dev = 0.265, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.29694007524118676;  // std dev = 0.199, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return -0.18916615482662183;  // std dev = 0.050, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( complex(A, G) )
%   | then return 0.01866401337590229;  // std dev = 0.274, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.02551166095818917;  // std dev = 1.445, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.23565866721986548;  // std dev = 0.622, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1273529765471009;  // std dev = 3.088, 55.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=24 */
%   | | | else return 0.0073542709780924365;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '6.797', 'seconds']
Refined model CLL: -0.231865


******************************************
Best model found
******************************************
Results 

CLL : -0.221736 

AUC ROC : 0.98044 

AUC PR : 0.301915 

Precision : 0.262868 

Recall : 0.516245 

F1 : 0.348356 

Total Learning Time : 30.165 

Total Inference Time : 29.342746019363403 

Total revision time: 67.12980792045593
Best scored revision CLL: -0.231865


Results 

CLL : -0.221736 

AUC ROC : 0.98044 

AUC PR : 0.301915 

Precision : 0.262868 

Recall : 0.516245 

F1 : 0.348356 

Total Learning Time : 67.19229194641113 

Total Inference Time : 29.342746019363403 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.046
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21352083592595908;  // std dev = 7.446, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1311954381641551;  // std dev = 4.424, 93.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | else return 0.15056215829722536;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18720965190613076;  // std dev = 4.172, 74.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=28 */
%   | | | else return 0.1420996150920549;  // std dev = 6.219, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.07073546353354691;  // std dev = 2.527, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.11996508552239717;  // std dev = 7.149, 229.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10872027944056109;  // std dev = 7.502, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07123612942717862;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7252396134276381;  // std dev = 0.034, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27610874287196635;  // std dev = 0.042, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.072943877193174;  // std dev = 3.543, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.04185674766243775;  // std dev = 5.180, 125.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.034496194275628514;  // std dev = 3.403, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.04662497810070989;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027959944493865796;  // std dev = 7.165, 266.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.012915865122235233;  // std dev = 7.200, 277.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.547', 'seconds']
Parameter learned model CLL:-0.331975 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.446, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.424, 65, 28], 'false,false,false,false': [6.278, 123, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.172, 46, 28], 'false,false,false,false': [6.219, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.527, 22, 9], 'false,false,false,false': [7.149, 152, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.502, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 28], 'true,false': [0.042, 54, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.543, 37, 19], 'false,false,false,false': [5.18, 86, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.403, 57, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.165, 180, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.2, 191, 86]}]
{'': [nan, 0.22908271292944557], 'false': [nan, 0.22908271292944524], 'false,false': [nan, 0.22908271292944557], 'false,false,false': [nan, 0.22908271292944524]}
{'': [nan, 0.2153551068250842], 'false': [nan, 0.21535510682508407], 'false,false': [nan, 0.2153551068250842], 'false,false,false': [0.21042895132385214, 0.2177589206678677]}
{'': [nan, 0.22653002410590342], 'false': [nan, 0.22653002410590342], 'false,false': [nan, 0.22653002410590312], 'false,false,false': [0.23517306627664789, 0.22224705504576606]}
{'': [nan, 0.22139042709112003], 'false': [nan, 0.22139042709112003], 'false,false': [nan, 0.22139042709112075], 'false,false,false': [0.20603537981269532, 0.22318009553726578]}
{'': [nan, 0.22603569787083136], 'false': [nan, 0.22603569787083136], 'false,false': [nan, 0.22603569787083194], 'false,false,false': [nan, 0.22603569787083194]}
{'': [nan, 0.2205446238226753], 'false': [nan, 0.2205446238226753], 'false,false': [nan, 0.22054462382267584], 'false,false,false': [nan, 0.220544623822676]}
{'': [0.22550774312166788, 0.21780633362622048], 'true': [4.029122289285679e-05, 3.192812522293901e-05], 'false': [nan, 0.21780633362622048], 'false,false': [nan, 0.21780633362622048], 'false,false,false': [0.22417091836734696, 0.21465600000000015], 'true,true': [nan, 4.029122289285679e-05], 'true,true,false': [nan, 4.029122289285679e-05]}
{'': [nan, 0.19272767605174157], 'false': [nan, 0.19272767605174157], 'false,false': [nan, 0.1927276760517414], 'false,false,false': [0.1362486259572477, 0.21965046474624847]}
{'': [nan, 0.1930160834853354], 'false': [nan, 0.1930160834853352], 'false,false': [nan, 0.1930160834853352], 'false,false,false': [nan, 0.1930160834853352]}
{'': [nan, 0.18716520259133576], 'false': [nan, 0.18716520259133576], 'false,false': [nan, 0.18716520259133546], 'false,false,false': [nan, 0.18716520259133546]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.435
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.35814893509951223;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.1005731775237548;  // std dev = 3.482, 66.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=16 */
%   | | | else return 0.2361016910050233;  // std dev = 5.464, 127.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8232178828180118;  // std dev = 0.113, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16381405835610596;  // std dev = 0.032, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7373269569258903;  // std dev = 0.138, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.056509262309026025;  // std dev = 3.170, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | | else return 0.15436342174516246;  // std dev = 5.667, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5509535346988009;  // std dev = 2.98e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6907310119713083;  // std dev = 0.019, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.7225593027519907;  // std dev = 0.398, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.05707366290141292;  // std dev = 4.131, 105.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=25 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.20369257277870606;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.042481847733002266;  // std dev = 4.542, 117.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=28 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4142485427498759;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5282252074133044;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.12006641275746771;  // std dev = 0.633, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.03369395396847549;  // std dev = 0.806, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6819008945620745;  // std dev = 0.041, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15353230625570982;  // std dev = 0.127, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.5152970426635018;  // std dev = 0.285, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.18503400899874162;  // std dev = 3.745, 63.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=25 */
%   | | | else return 0.06639229248337969;  // std dev = 4.989, 133.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3785838068213368;  // std dev = 0.204, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.4483853134920548;  // std dev = 0.181, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.10566508450626291;  // std dev = 2.393, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return -0.03059962178740787;  // std dev = 3.580, 108.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=17 */
%   else if ( interaction(A, H) )
%   | then return 0.4247721160809966;  // std dev = 0.728, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7121971872006192;  // std dev = 0.395, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.21196987849571833;  // std dev = 0.104, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0519455376147075;  // std dev = 2.999, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | | | else return 0.23713871908942263;  // std dev = 1.949, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.33220817547904313;  // std dev = 0.136, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1188310823802245;  // std dev = 0.035, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, E), location(A, F) )
%   | | | then return 0.15095543635738573;  // std dev = 2.199, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.05228431704520197;  // std dev = 3.716, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
%   else if ( enzyme(A, G) )
%   | then return 0.0810532428093992;  // std dev = 0.358, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.771771149329445;  // std dev = 0.018, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22292262145899483;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.10151302256258549;  // std dev = 2.825, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.24220304491763392;  // std dev = 1.212, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4618425730764173;  // std dev = 0.268, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.19373219127206537;  // std dev = 0.073, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return -0.006447254530084401;  // std dev = 0.325, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | else if ( location(A, G), location(E, G) )
%   | | | then return -0.10075024285566961;  // std dev = 1.538, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 5.054735812232217E-4;  // std dev = 0.980, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.40789627865403605;  // std dev = 0.502, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.008573542232746211;  // std dev = 2.316, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.013864188629168122;  // std dev = 3.344, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.06999574828252539;  // std dev = 2.424, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2050712096206437;  // std dev = 0.094, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then if ( complex(D, F) )
%   | | | then return 0.4115533258740568;  // std dev = 0.373, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.29025392066914374;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.10307696917036752;  // std dev = 0.209, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.01611783426547409;  // std dev = 4.133, 114.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=33 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4920754214451564;  // std dev = 0.711, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17863455791376448;  // std dev = 0.143, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( location(A, I) )
%   | | | then return 0.11127660641202505;  // std dev = 3.233, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | else return 0.3222487996978213;  // std dev = 0.832, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.162160300241856;  // std dev = 0.100, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( phenotype(A, D) )
%   | then if ( interaction(E, A), complex(A, F) )
%   | | then if ( complex(E, G) )
%   | | | then return -0.022818899902767885;  // std dev = 1.783, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.11639894024506153;  // std dev = 0.378, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.48104555778108093;  // std dev = 2.202, 43.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=37 */
%   | | | else return -0.22150410451370794;  // std dev = 0.481, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.08853671908731961;  // std dev = 1.000, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.19656158343386215;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return -0.03173569369630802;  // std dev = 1.173, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13295686340965646;  // std dev = 2.523, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.07848833317902809;  // std dev = 0.576, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return 0.4462645941038322;  // std dev = 1.864, 46.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=42 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.29782959401677145;  // std dev = 1.725, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.03889120590369962;  // std dev = 2.171, 49.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return -0.1543056105963172;  // std dev = 0.060, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.2250118826674242;  // std dev = 0.050, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(A, J) )
%   | then if ( interaction(J, K) )
%   | | then return -0.1419771461033409;  // std dev = 0.565, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.09261461995000612;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return -0.2256554152034914;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '38.270', 'seconds']
Refined model CLL: -0.209728


******************************************
Best model found
******************************************
Results 

CLL : -0.222192 

AUC ROC : 0.975136 

AUC PR : 0.284863 

Precision : 0.226551 

Recall : 0.55477 

F1 : 0.321721 

Total Learning Time : 21.435 

Total Inference Time : 17.350313901901245 

Total revision time: 46.06617694473266
Best scored revision CLL: -0.209728


Results 

CLL : -0.222192 

AUC ROC : 0.975136 

AUC PR : 0.284863 

Precision : 0.226551 

Recall : 0.55477 

F1 : 0.321721 

Total Learning Time : 46.12866097068786 

Total Inference Time : 17.350313901901245 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.244
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18964849273749107;  // std dev = 5.316, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.1626941462709497;  // std dev = 5.364, 130.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14867246703403172;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.1331471804146956;  // std dev = 5.915, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10178064209269;  // std dev = 3.681, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return 0.12790667821727286;  // std dev = 6.631, 195.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07789447140116187;  // std dev = 7.713, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07296147914864254;  // std dev = 7.660, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7327712954590277;  // std dev = 0.000475, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2672441515132496;  // std dev = 0.000662, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06395384728740908;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.11945406480392536;  // std dev = 4.155, 73.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08438022587372135;  // std dev = 3.651, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | | else return 0.0731802699154962;  // std dev = 5.777, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039973474597088006;  // std dev = 6.947, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07101192637550971;  // std dev = 6.682, 227.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.109', 'seconds']
Parameter learned model CLL:-0.35659 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.316, 79, 44], 'false,false,false,false': [5.364, 87, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 67, 35], 'false,false,false,false': [5.915, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.681, 42, 20], 'false,false,false,false': [6.631, 128, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.713, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.66, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.000475, 0, 35], 'true,false': [0.000662, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [4.155, 45, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 56, 35], 'false,false,false,false': [5.777, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.947, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.682, 140, 87]}]
{'': [nan, 0.2251999503999017], 'false': [nan, 0.22519995039990162], 'false,false': [nan, 0.2251999503999017], 'false,false,false': [nan, 0.22519995039990162]}
{'': [nan, 0.225624521551658], 'false': [nan, 0.2256245215516573], 'false,false': [nan, 0.225624521551658], 'false,false,false': [0.2297574195254152, 0.22136094674556248]}
{'': [nan, 0.22217280308213555], 'false': [nan, 0.22217280308213555], 'false,false': [nan, 0.22217280308213494], 'false,false,false': [0.22539033478689188, 0.22001452873903737]}
{'': [nan, 0.22391155734132412], 'false': [nan, 0.22391155734132412], 'false,false': [nan, 0.22391155734132448], 'false,false,false': [0.2185223725286159, 0.22546037510774125]}
{'': [nan, 0.21634927399125087], 'false': [nan, 0.21634927399125087], 'false,false': [nan, 0.21634927399124995], 'false,false,false': [nan, 0.21634927399124995]}
{'': [nan, 0.21973254674849216], 'false': [nan, 0.21973254674849216], 'false,false': [nan, 0.21973254674849338], 'false,false,false': [nan, 0.21973254674849207]}
{'': [0.21694885704653244, 0.23015123172082114], 'false': [nan, 0.23015123172082114], 'false,false': [nan, 0.23015123172082114], 'false,false,false': [0.22222222222222174, 0.23644210921373668], 'true': [6.442441653169745e-09, 5.845919434458816e-09], 'true,true': [nan, 6.442441653169745e-09], 'true,true,false': [nan, 6.442441653169745e-09]}
{'': [nan, 0.19792050992115076], 'false': [nan, 0.19792050992115076], 'false,false': [nan, 0.19792050992114993], 'false,false,false': [0.14651568962094802, 0.23013309767639395]}
{'': [nan, 0.19149686001716684], 'false': [nan, 0.19149686001716615], 'false,false': [nan, 0.19149686001716615], 'false,false,false': [nan, 0.19149686001716615]}
{'': [nan, 0.1966817069039847], 'false': [nan, 0.1966817069039847], 'false,false': [nan, 0.1966817069039862], 'false,false,false': [nan, 0.1966817069039862]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.348
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), complex(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.11572469267526898;  // std dev = 5.024, 132.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=34 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.28672036367094095;  // std dev = 2.928, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
%   | | | else return 0.15226658215833566;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, A) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.8323057175587709;  // std dev = 0.046, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.17163949252209074;  // std dev = 0.050, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(H, I), interaction(J, A) )
%   | | | then return 0.41058033599965255;  // std dev = 0.757, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.7561337978940016;  // std dev = 0.090, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.0881894770866158;  // std dev = 3.669, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else return 0.17015350401733492;  // std dev = 5.265, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.5748527713738516;  // std dev = 0.078, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.6870961027354618;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.7869468665011246;  // std dev = 0.162, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.16418019483405166;  // std dev = 0.278, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5988973916822512;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13047878659439524;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.15478798475643704;  // std dev = 5.863, 160.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=55 */
%   | | | else return -0.030854955434511604;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.5703163394873525;  // std dev = 0.074, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(E, G), enzyme(G, H) )
%   | | | then return 0.6934440529179493;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.7972079248385671;  // std dev = 0.018, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16647787666465266;  // std dev = 0.040, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.4385388327263646;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, J), phenotype(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.6299160116915014;  // std dev = 0.221, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.15296436466973498;  // std dev = 0.145, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.048862722272717964;  // std dev = 2.107, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.15237311193593375;  // std dev = 4.188, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, C) )
%   | then return 0.18594724900640291;  // std dev = 0.485, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.3909522769354107;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.5069981766822477;  // std dev = 0.961, 32.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=31 */
%   | | | else return 0.07899146255573894;  // std dev = 0.699, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return -0.15477480116600284;  // std dev = 0.053, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( enzyme(A, J) )
%   | | | then return -0.010299684401334414;  // std dev = 0.394, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.3152538200107388;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.032585249789780224;  // std dev = 2.414, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.1261510845272291;  // std dev = 3.918, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2564678712802581;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(C, E), location(C, D) )
%   | | then return -0.05565532831193465;  // std dev = 0.247, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | | else if ( complex(A, F), interaction(C, C) )
%   | | | then return 0.18183715826467647;  // std dev = 0.846, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.011880727050699043;  // std dev = 2.768, 72.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=18 */
%   else if ( phenotype(A, G) )
%   | then return 0.03571164445882492;  // std dev = 0.298, 52.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=17 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.479046689721536;  // std dev = 0.963, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.19338107518262063;  // std dev = 0.102, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.1445794074848544;  // std dev = 3.293, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | | else return 0.41807864762371033;  // std dev = 0.809, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3928963898010051;  // std dev = 0.159, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.15764744047728207;  // std dev = 0.062, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.45249628871106745;  // std dev = 0.233, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.18743413661293123;  // std dev = 0.377, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.07295959258700552;  // std dev = 2.332, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.526201065982217;  // std dev = 0.308, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.1872022628140727;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.05856720093066725;  // std dev = 1.698, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return -0.01475773618861355;  // std dev = 3.222, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( complex(A, E) )
%   | then return 0.05219387171709375;  // std dev = 0.190, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | else if ( complex(C, F) )
%   | | then if ( interaction(C, G) )
%   | | | then return -0.1536646852478972;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17742348185120477;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.013175652485928205;  // std dev = 0.269, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   else if ( interaction(H, A), phenotype(A, I) )
%   | then return 0.006732003423009115;  // std dev = 0.251, 96.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=30 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L) )
%   | | | then return 0.07736465426784456;  // std dev = 1.168, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.4454990964938488;  // std dev = 0.813, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.04206351783134989;  // std dev = 3.847, 92.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=31 */
%   | | | else return -0.03756877074625708;  // std dev = 0.949, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20545744128973895;  // std dev = 0.147, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then if ( interaction(D, A) )
%   | | | then return -0.3099099809253933;  // std dev = 0.517, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.01205591534929893;  // std dev = 0.350, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return 0.045532484032015375;  // std dev = 1.302, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.013256399804833592;  // std dev = 2.336, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.11667850365521086;  // std dev = 0.907, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4699660955886267;  // std dev = 0.747, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.023070078694555424;  // std dev = 1.893, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.037379445615636754;  // std dev = 3.570, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.21908307525438273;  // std dev = 0.280, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1316681673857982;  // std dev = 0.049, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( enzyme(C, F), complex(C, G) )
%   | | | then return 0.22189797307265255;  // std dev = 0.628, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.0030422727833695077;  // std dev = 3.482, 122.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=38 */
%   else if ( enzyme(A, H) )
%   | then return 0.009855330125225735;  // std dev = 0.236, 38.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=12 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(J, K) )
%   | | | then return -0.025975690514442068;  // std dev = 2.459, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | | else return -0.12089670271852436;  // std dev = 1.828, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.1341170739294266;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.2996928038744245;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '24.846', 'seconds']
Refined model CLL: -0.218828


******************************************
Best model found
******************************************
Results 

CLL : -0.218301 

AUC ROC : 0.961049 

AUC PR : 0.423655 

Precision : 0.400966 

Recall : 0.588652 

F1 : 0.477011 

Total Learning Time : 18.348 

Total Inference Time : 9.766151905059814 

Total revision time: 35.78861712646484
Best scored revision CLL: -0.218828


Results 

CLL : -0.218301 

AUC ROC : 0.961049 

AUC PR : 0.423655 

Precision : 0.400966 

Recall : 0.588652 

F1 : 0.477011 

Total Learning Time : 35.836027137756346 

Total Inference Time : 9.766151905059814 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.459
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17913658942050048;  // std dev = 8.403, 324.000 (wgt'ed) examples reached here.  /* #neg=220 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15590182458317395;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | | else return 0.17478345130793804;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13961850075126295;  // std dev = 5.248, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.1318572458950563;  // std dev = 6.539, 196.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12340261647663671;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.11500917931993491;  // std dev = 7.110, 230.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10346471159009908;  // std dev = 8.321, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08787236206241748;  // std dev = 8.300, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7325361724054475;  // std dev = 0.006, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2674017416395099;  // std dev = 0.008, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06962023418044912;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | | else return 0.09624072717133195;  // std dev = 5.045, 110.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04171925036990966;  // std dev = 4.121, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.059081032278057555;  // std dev = 6.437, 184.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02640297487426046;  // std dev = 7.735, 323.000 (wgt'ed) examples reached here.  /* #neg=219 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06749927478710678;  // std dev = 7.419, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.843', 'seconds']
Parameter learned model CLL:-0.343591 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.403, 220, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.942, 110, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.248, 84, 41], 'false,false,false,false': [6.539, 133, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [7.11, 155, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.321, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.3, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 41], 'true,false': [0.008, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.916, 46, 23], 'false,false,false,false': [5.045, 70, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 83, 41], 'false,false,false,false': [6.437, 121, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.735, 219, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.419, 177, 104]}]
{'': [nan, 0.2179545800944997], 'false': [nan, 0.21795458009449842], 'false,false': [nan, 0.2179545800944997], 'false,false,false': [nan, 0.21795458009449842]}
{'': [nan, 0.2211539430587035], 'false': [nan, 0.2211539430587035], 'false,false': [nan, 0.2211539430587035], 'false,false,false': [0.21795458009449536, 0.2243581528471931]}
{'': [nan, 0.21898955568681466], 'false': [nan, 0.21898955568681466], 'false,false': [nan, 0.21898955568681464], 'false,false,false': [0.22030221187146884, 0.21812894570216285]}
{'': [nan, 0.22047139429569068], 'false': [nan, 0.22047139429569068], 'false,false': [nan, 0.22047139429569063], 'false,false,false': [0.22222222222222193, 0.21978978980207234]}
{'': [nan, 0.2226074445069759], 'false': [nan, 0.2226074445069759], 'false,false': [nan, 0.2226074445069748], 'false,false,false': [nan, 0.2226074445069748]}
{'': [nan, 0.22365379641276403], 'false': [nan, 0.22365379641276403], 'false,false': [nan, 0.22365379641276478], 'false,false,false': [nan, 0.2236537964127639]}
{'': [0.22400143457094493, 0.22803311261950754], 'false': [nan, 0.22803311261950754], 'false,false': [nan, 0.22803311261950754], 'false,false,false': [0.22222222222222268, 0.2314049586776866], 'true': [8.759424235488662e-07, 8.191347735886367e-07], 'true,true': [nan, 8.759424235488662e-07], 'true,true,false': [nan, 8.759424235488662e-07]}
{'': [nan, 0.18974809489767866], 'false': [nan, 0.18974809489767866], 'false,false': [nan, 0.18974809489767866], 'false,false,false': [0.13698401395469198, 0.2251851417450039]}
{'': [nan, 0.18522280395674143], 'false': [nan, 0.18522280395674107], 'false,false': [nan, 0.18522280395674107], 'false,false,false': [nan, 0.18522280395674107]}
{'': [nan, 0.19589125055522894], 'false': [nan, 0.19589125055522894], 'false,false': [nan, 0.19589125055522805], 'false,false,false': [nan, 0.19589125055522805]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.971
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6081489350995117;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=21 */
%   | | | else return 0.06489998995183253;  // std dev = 6.235, 237.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=49 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7355753267521834;  // std dev = 0.127, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.21128861337454805;  // std dev = 1.923, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.07187996020193946;  // std dev = 3.646, 81.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=20 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return -0.06486886280761411;  // std dev = 1.269, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | | else return 0.07902622415395479;  // std dev = 1.606, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.14993639438987225;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.145549213788303;  // std dev = 2.641, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.21404321719902503;  // std dev = 4.602, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.12003286485996867;  // std dev = 2.674, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5513868557646902;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.15614850459083357;  // std dev = 0.106, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( phenotype(C, E), phenotype(A, E) )
%   | | | then return 0.0066698948764195055;  // std dev = 1.616, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.13030792268251404;  // std dev = 3.043, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.6666465345580022;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.08495584098941854;  // std dev = 2.331, 28.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=8 */
%   | | | else return -0.03516873819606044;  // std dev = 1.594, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.23367415491746893;  // std dev = 2.203, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 0.12461038213167999;  // std dev = 5.660, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return 0.41456846220767185;  // std dev = 1.05e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.1941162785541093;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then return 0.5952479071779371;  // std dev = 0.154, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5087165231188469;  // std dev = 0.122, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5272164954823195;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), location(A, K) )
%   | | | then return 0.07232349612020463;  // std dev = 5.273, 152.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=41 */
%   | | | else return 0.013076117650106392;  // std dev = 3.867, 93.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=20 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.450620195251011;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.10698762328426147;  // std dev = 3.431, 55.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.1490721086588843;  // std dev = 0.759, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.47465886923766754;  // std dev = 0.183, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3745130592407833;  // std dev = 0.040, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.04947028609772856;  // std dev = 0.772, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.41127006216909084;  // std dev = 0.194, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, H), location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3152248393041257;  // std dev = 3.085, 42.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=23 */
%   | | | else return -0.1930298637205023;  // std dev = 0.269, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.09465704446456391;  // std dev = 5.869, 165.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=51 */
%   | | | else return 0.32402455745682984;  // std dev = 1.634, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(C, A), interaction(D, C) )
%   | | then return 0.44817256416783097;  // std dev = 0.336, 31.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=28 */
%   | | else return 0.019333965549607722;  // std dev = 0.409, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else return -0.0933833424918501;  // std dev = 0.331, 118.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=19 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.6658150871720935;  // std dev = 0.239, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else return -0.2189752361408378;  // std dev = 0.228, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6334339659909413;  // std dev = 1.044, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.23050543154334235;  // std dev = 0.183, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.12287669156963735;  // std dev = 3.334, 51.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | else return 0.012400103848219664;  // std dev = 1.194, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.04771300018737641;  // std dev = 0.325, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 3.0456006545109826E-5;  // std dev = 1.022, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.5992458355143904;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.19471500379840395;  // std dev = 0.050, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.030706851474727816;  // std dev = 3.068, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8067685060238765;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17181029178652502;  // std dev = 0.015, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.35091827887548543;  // std dev = 0.994, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08988617884329138;  // std dev = 4.058, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.19064093673945656;  // std dev = 0.028, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, D), complex(A, E) )
%   | | then return 0.312823116040162;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.22742729007496812;  // std dev = 0.047, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( complex(A, G), enzyme(F, H) )
%   | | then return 0.2892412607420726;  // std dev = 0.557, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.010214395700934787;  // std dev = 2.154, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | | | else return -0.21177733653997968;  // std dev = 0.888, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.35215772424665304;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06949134862261441;  // std dev = 4.547, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
%   | | | else return 0.014385050913754135;  // std dev = 3.795, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.20501151522225022;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1704058416712764;  // std dev = 0.047, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, E), interaction(E, A) )
%   | | | then return 0.043496694800051715;  // std dev = 1.927, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return -0.0583211567829052;  // std dev = 2.069, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   else if ( location(A, F), complex(A, G) )
%   | then return 0.010942434472789255;  // std dev = 0.326, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.34514030509842225;  // std dev = 0.250, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0010419572594361371;  // std dev = 2.701, 55.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=16 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.16218995202425635;  // std dev = 2.818, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
%   | | | else return 0.07880451043311235;  // std dev = 3.067, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return -8.027126228136727E-4;  // std dev = 0.861, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.1940613464179967;  // std dev = 0.057, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.3777753457242658;  // std dev = 0.223, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | else if ( interaction(F, H), interaction(A, H) )
%   | | | then return -0.14767798638663523;  // std dev = 1.778, 73.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=6 */
%   | | | else return -0.028655229007280993;  // std dev = 2.487, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( complex(I, K), enzyme(I, L) )
%   | | | then return 0.1781551021961194;  // std dev = 2.021, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.03166745317026978;  // std dev = 3.933, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.06939142536883416;  // std dev = 1.086, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.06810288807521953;  // std dev = 1.947, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '30.788', 'seconds']
Refined model CLL: -0.267662


******************************************
Best model found
******************************************
Results 

CLL : -0.280372 

AUC ROC : 0.865735 

AUC PR : 0.184225 

Precision : 0.229607 

Recall : 0.286792 

F1 : 0.255034 

Total Learning Time : 20.971 

Total Inference Time : 14.401535987854004 

Total revision time: 44.25208704948425
Best scored revision CLL: -0.267662


Results 

CLL : -0.280372 

AUC ROC : 0.865735 

AUC PR : 0.184225 

Precision : 0.229607 

Recall : 0.286792 

F1 : 0.255034 

Total Learning Time : 44.29949706077576 

Total Inference Time : 14.401535987854004 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.294
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18908418689807358;  // std dev = 7.846, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1668718295408501;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | | | else return 0.18698677206958572;  // std dev = 5.149, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12420983058981089;  // std dev = 5.485, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.1552976415221055;  // std dev = 5.596, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1358207792418698;  // std dev = 4.121, 75.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=26 */
%   | | | else return 0.08202489294830337;  // std dev = 6.802, 221.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10876654737849029;  // std dev = 7.788, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0875670562659577;  // std dev = 7.796, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7313327344149858;  // std dev = 0.022, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2686760142725175;  // std dev = 0.033, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.053608864869919386;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | | else return 0.06247515574853198;  // std dev = 3.916, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.049552563061262156;  // std dev = 4.244, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.06733607037711517;  // std dev = 5.597, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04123965070798891;  // std dev = 7.031, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return -9.019988475428343E-4;  // std dev = 7.220, 307.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.041', 'seconds']
Parameter learned model CLL:-0.321497 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.846, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.831, 102, 51], 'false,false,false,false': [5.149, 75, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.485, 95, 44], 'false,false,false,false': [5.596, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.121, 49, 26], 'false,false,false,false': [6.802, 155, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.788, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.796, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 44], 'true,false': [0.033, 103, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.122, 53, 25], 'false,false,false,false': [3.916, 46, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.244, 84, 44], 'false,false,false,false': [5.597, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.031, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.22, 215, 92]}]
{'': [nan, 0.22141711091558536], 'false': [nan, 0.221417110915585], 'false,false': [nan, 0.22141711091558536], 'false,false,false': [nan, 0.221417110915585]}
{'': [nan, 0.22503834938710582], 'false': [nan, 0.22503834938710074], 'false,false': [nan, 0.22503834938710582], 'false,false,false': [0.22222222222222213, 0.22852259215219967]}
{'': [nan, 0.22190122280441835], 'false': [nan, 0.22190122280441835], 'false,false': [nan, 0.22190122280442046], 'false,false,false': [0.21643471350912105, 0.22692237399346227]}
{'': [nan, 0.21426097862849208], 'false': [nan, 0.21426097862849208], 'false,false': [nan, 0.21426097862849236], 'false,false,false': [0.22648888888888877, 0.20937795896374206]}
{'': [nan, 0.22466348558879495], 'false': [nan, 0.22466348558879495], 'false,false': [nan, 0.2246634855887946], 'false,false,false': [nan, 0.2246634855887946]}
{'': [nan, 0.22426523641618928], 'false': [nan, 0.22426523641618928], 'false,false': [nan, 0.22426523641618823], 'false,false,false': [nan, 0.22426523641618906]}
{'': [0.20974164676583293, 0.21988701326441004], 'false': [nan, 0.21988701326441004], 'false,false': [nan, 0.21988701326441004], 'false,false,false': [0.2177843523997364, 0.22222222222222215], 'true': [1.0556102778235367e-05, 1.0545514808109726e-05], 'true,true': [nan, 1.0556102778235367e-05], 'true,true,false': [nan, 1.0556102778235367e-05]}
{'': [nan, 0.18552914428017608], 'false': [nan, 0.18552914428017608], 'false,false': [nan, 0.18552914428017608], 'false,false,false': [0.14069108717891357, 0.22696588485040978]}
{'': [nan, 0.18105724515617644], 'false': [nan, 0.18105724515617605], 'false,false': [nan, 0.18105724515617605], 'false,false,false': [nan, 0.18105724515617605]}
{'': [nan, 0.16982043455999274], 'false': [nan, 0.16982043455999274], 'false,false': [nan, 0.16982043455999207], 'false,false,false': [nan, 0.16982043455999207]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.707
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(D, A), interaction(D, D) )
%   | | then if ( location(A, E), location(D, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.03461952333480645;  // std dev = 2.223, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   | | | else return 0.19322746913092462;  // std dev = 6.523, 191.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=64 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7573032122991374;  // std dev = 0.053, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, E), location(C, E) )
%   | | then return 0.022387461740090223;  // std dev = 0.392, 109.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=21 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8187766374424351;  // std dev = 0.106, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.1670371875244962;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.7619251061473901;  // std dev = 0.214, 21.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=20 */
%   | | else return -0.16590427516418724;  // std dev = 0.179, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.776218112343229;  // std dev = 0.113, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, J), interaction(K, A) )
%   | | | then return 0.05812285668216329;  // std dev = 1.697, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.26271361925424286;  // std dev = 3.849, 60.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5554594710196343;  // std dev = 0.159, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( location(D, E), location(A, E) )
%   | | then if ( complex(D, F), enzyme(D, G) )
%   | | | then return -0.0628449792358511;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.11294195438859775;  // std dev = 1.131, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | else if ( complex(A, H), phenotype(A, I) )
%   | | | then return 0.4568038090091497;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.04832886476754503;  // std dev = 1.145, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.6988623432282808;  // std dev = 0.004, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.04598113155005339;  // std dev = 3.124, 60.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=13 */
%   | | | else return 0.11991291465042295;  // std dev = 5.670, 165.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.46780267660707586;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(C, D), complex(A, E) )
%   | | then if ( recursion_proteinclass(D, B) )
%   | | | then return 0.6064510487558822;  // std dev = 0.295, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08622871301781693;  // std dev = 1.615, 37.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=4 */
%   | | else if ( enzyme(D, F), complex(A, G) )
%   | | | then return 0.20771943661343453;  // std dev = 2.340, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.05304888785258848;  // std dev = 4.118, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J), interaction(K, I) )
%   | | | then return 0.372613506613254;  // std dev = 1.477, 13.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=9 */
%   | | | else return 0.6584179924772671;  // std dev = 1.523, 27.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=24 */
%   | | else return -0.1975624260167308;  // std dev = 0.229, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | else return 0.4394590114409638;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3459279818928522;  // std dev = 0.250, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(C, D) )
%   | | then if ( complex(A, D) )
%   | | | then return -0.10799793658878142;  // std dev = 0.005, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.036720403626320855;  // std dev = 1.700, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else return -0.09964939804382336;  // std dev = 0.283, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.38825186238129805;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, F), complex(A, G) )
%   | | then if ( interaction(F, F), enzyme(A, H) )
%   | | | then return 0.4007204260760645;  // std dev = 1.245, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.06069649750133216;  // std dev = 2.224, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | else if ( enzyme(A, I), interaction(J, A) )
%   | | | then return 0.018412971646892647;  // std dev = 3.041, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | | else return 0.08135579454731162;  // std dev = 4.483, 116.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=38 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.27194852834421346;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.05109523399336436;  // std dev = 0.353, 34.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=6 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, F) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.2663475333812441;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.031502595672314;  // std dev = 1.872, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.42524610510906746;  // std dev = 1.377, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.13527648845292292;  // std dev = 2.540, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.31439412691506186;  // std dev = 0.146, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A), interaction(I, I) )
%   | | | then return -0.0366781918186417;  // std dev = 1.385, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.060041246624231825;  // std dev = 4.509, 128.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=42 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2121229118044398;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.6431020301650198;  // std dev = 0.681, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.49295932620081345;  // std dev = 0.981, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | else return -0.19453736095076787;  // std dev = 0.076, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.255830041073407;  // std dev = 0.146, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.15229842186694983;  // std dev = 1.545, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.012931993419731596;  // std dev = 3.014, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.04479152951277284;  // std dev = 2.085, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.14172159614334245;  // std dev = 2.629, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.15398274996411615;  // std dev = 0.013, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.25099710500812633;  // std dev = 0.182, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.23409572466404596;  // std dev = 0.097, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( complex(G, H), enzyme(A, I) )
%   | | | then return -0.10402397321914109;  // std dev = 1.470, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return -0.019030763595730932;  // std dev = 2.665, 76.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=16 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06161706444128494;  // std dev = 2.926, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return -0.008345069543419544;  // std dev = 4.156, 126.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16624717669139238;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), location(D, F) )
%   | | then if ( location(A, F), complex(A, G) )
%   | | | then return -0.07615969803352388;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.13921588768991203;  // std dev = 0.737, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.06557222764867333;  // std dev = 1.230, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.005295215464909282;  // std dev = 1.405, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), interaction(L, J) )
%   | | | then return 0.05780925709921418;  // std dev = 2.600, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | else return -0.023804920258395843;  // std dev = 3.261, 90.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=22 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.00800703528404604;  // std dev = 2.389, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.08688223546660151;  // std dev = 2.785, 50.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.11682670876357662;  // std dev = 0.010, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.14988394341440822;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.2096258850423248;  // std dev = 0.076, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.518235913111276;  // std dev = 1.954, 60.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=58 */
%   | | | else return -0.001347015377549558;  // std dev = 2.807, 58.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=18 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.1570015967490769;  // std dev = 0.376, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | | else return -0.24282776887660096;  // std dev = 0.343, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1357575680469435;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.11544207621433358;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '24.878', 'seconds']
Refined model CLL: -0.221573


******************************************
Best model found
******************************************
Results 

CLL : -0.233174 

AUC ROC : 0.973594 

AUC PR : 0.240549 

Precision : 0.262357 

Recall : 0.498195 

F1 : 0.343711 

Total Learning Time : 20.707 

Total Inference Time : 15.918742895126343 

Total revision time: 44.53391177749634
Best scored revision CLL: -0.221573


Results 

CLL : -0.233174 

AUC ROC : 0.973594 

AUC PR : 0.240549 

Precision : 0.262357 

Recall : 0.498195 

F1 : 0.343711 

Total Learning Time : 44.58132178878785 

Total Inference Time : 15.918742895126343 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.099
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20916934326277806;  // std dev = 7.471, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17283820171281686;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
%   | | | else return 0.14848994790071468;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11748336444281067;  // std dev = 4.391, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.13242190345882696;  // std dev = 6.254, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07822834199377263;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.12093944567743758;  // std dev = 6.674, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09233601072586348;  // std dev = 7.614, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06581921231532557;  // std dev = 7.668, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7423474396674082;  // std dev = 0.009, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.25725195265605233;  // std dev = 0.010, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.040741122686008956;  // std dev = 4.777, 107.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=33 */
%   | | | else return 0.07954139414012476;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.058269584701652395;  // std dev = 3.391, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.06616169760949038;  // std dev = 6.173, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07166416291163806;  // std dev = 6.910, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03941663551554767;  // std dev = 7.000, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.553', 'seconds']
Parameter learned model CLL:-0.349626 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.471, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.849, 100, 52], 'false,false,false,false': [4.816, 73, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.391, 62, 28], 'false,false,false,false': [6.254, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [6.674, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.614, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.668, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 28], 'true,false': [0.01, 53, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.777, 74, 33], 'false,false,false,false': [4.054, 48, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.391, 54, 28], 'false,false,false,false': [6.173, 111, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.91, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.0, 163, 86]}]
{'': [nan, 0.22780508121616078], 'false': [nan, 0.2278050812161605], 'false,false': [nan, 0.22780508121616078], 'false,false,false': [nan, 0.2278050812161605]}
{'': [nan, 0.22179156542090722], 'false': [nan, 0.22179156542090728], 'false,false': [nan, 0.22179156542090722], 'false,false,false': [0.22506925207755976, 0.21678749235741143]}
{'': [nan, 0.217933676600637], 'false': [nan, 0.217933676600637], 'false,false': [nan, 0.21793367660063723], 'false,false,false': [0.21424373449757558, 0.2197244358904234]}
{'': [nan, 0.2191504721152812], 'false': [nan, 0.2191504721152812], 'false,false': [nan, 0.2191504721152816], 'false,false,false': [0.2068639053254441, 0.22269615162551834]}
{'': [nan, 0.21957889690295448], 'false': [nan, 0.21957889690295448], 'false,false': [nan, 0.21957889690295407], 'false,false,false': [nan, 0.21957889690295407]}
{'': [nan, 0.2161531391630047], 'false': [nan, 0.2161531391630047], 'false,false': [nan, 0.21615313916300516], 'false,false,false': [nan, 0.21615313916300352]}
{'': [0.22600611088082836, 0.21847841509705607], 'true': [2.6990627066680872e-06, 2.0352753054134985e-06], 'false': [nan, 0.21847841509705607], 'false,false': [nan, 0.21847841509705607], 'false,false,false': [0.21329373744431812, 0.22518296115593928], 'true,true': [nan, 2.6990627066680872e-06], 'true,true,false': [nan, 2.6990627066680872e-06]}
{'': [nan, 0.1976258066714903], 'false': [nan, 0.1976258066714903], 'false,false': [nan, 0.19762580667148996], 'false,false,false': [0.14023588795445788, 0.22545145450197174]}
{'': [nan, 0.20232022111436643], 'false': [nan, 0.2023202211143665], 'false,false': [nan, 0.2023202211143665], 'false,false,false': [nan, 0.2023202211143665]}
{'': [nan, 0.19676546125693647], 'false': [nan, 0.19676546125693647], 'false,false': [nan, 0.1967654612569362], 'false,false,false': [nan, 0.1967654612569362]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 17.572
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, A), enzyme(A, G) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.12377393509951236;  // std dev = 3.533, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18029658610622332;  // std dev = 5.704, 149.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then return 0.08518600085553603;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.7699629646093874;  // std dev = 0.081, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.0481671461654477;  // std dev = 3.080, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | | else return 0.1871393485828102;  // std dev = 5.809, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then if ( complex(C, E), phenotype(D, F) )
%   | | then return 0.6386875239472716;  // std dev = 0.171, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5691132419547879;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2505060825573188;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360636;  // std dev = 9.13e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( location(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), location(I, G) )
%   | | | then return 0.11710117833373208;  // std dev = 4.201, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.02607650399502347;  // std dev = 2.735, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.224687232624237;  // std dev = 2.957, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.12308998617182138;  // std dev = 3.509, 57.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return 0.14781012445770422;  // std dev = 1.032, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.5372326578974395;  // std dev = 0.073, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.4122903909713587;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.4690755613092055;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10159632948783635;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(A, H) )
%   | | | then return 0.19102412962115026;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5452281048227456;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, I), interaction(A, J) )
%   | | | then return 0.05139046847153796;  // std dev = 3.972, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.15415633075690494;  // std dev = 5.209, 117.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=43 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.38775864474970434;  // std dev = 0.066, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, E) )
%   | | then if ( interaction(A, F), phenotype(D, G) )
%   | | | then return 0.00973346629442755;  // std dev = 2.048, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else return 0.18787711881949687;  // std dev = 2.157, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return -0.03444524268136999;  // std dev = 3.634, 90.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=17 */
%   | | | else return 0.1885731606689162;  // std dev = 1.565, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(J, K) )
%   | | | then return 0.6313501669265336;  // std dev = 1.072, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.25235055931498435;  // std dev = 2.302, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | else return -0.21436435373992635;  // std dev = 0.042, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return 0.5084042733867312;  // std dev = 0.864, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.26582884587596817;  // std dev = 0.065, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( interaction(F, D), interaction(F, A) )
%   | | then if ( phenotype(A, G), interaction(H, F) )
%   | | | then return 0.155326351276168;  // std dev = 1.170, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.04164358248360598;  // std dev = 1.654, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( interaction(A, I), interaction(D, I) )
%   | | | then return 0.047098402705831516;  // std dev = 1.398, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.2506481304791522;  // std dev = 2.394, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(A, L), complex(A, K) )
%   | | | then return -0.09518518524818302;  // std dev = 0.801, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.12694271010022326;  // std dev = 2.814, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return -0.052522944562088655;  // std dev = 1.464, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.02597398796813827;  // std dev = 4.238, 104.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.518894524369058;  // std dev = 0.247, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.21490486934112812;  // std dev = 0.102, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( interaction(G, E), interaction(G, A) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return -0.028544684857864395;  // std dev = 0.246, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.19419190954238158;  // std dev = 1.438, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( phenotype(E, I) )
%   | | | then return -0.026854356170170995;  // std dev = 2.283, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return -0.12041135460081835;  // std dev = 1.560, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.19611892786305848;  // std dev = 0.085, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return 0.010007755756915501;  // std dev = 2.805, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | else return 0.06774362606947738;  // std dev = 3.586, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(D, D) )
%   | | then return 0.4472093777080796;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, A) )
%   | | | then return 0.03178638581933802;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.19114500821772212;  // std dev = 1.726, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( phenotype(D, G), interaction(D, D) )
%   | | then return -0.0582436687709094;  // std dev = 0.618, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.008541638399733603;  // std dev = 0.716, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.13504050929675665;  // std dev = 0.234, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.20158240596849203;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return -0.03944393224391541;  // std dev = 2.095, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.026600332270245386;  // std dev = 5.158, 150.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=43 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A) )
%   | then return 0.1782952978622254;  // std dev = 0.085, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.024770953116589278;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), phenotype(G, I) )
%   | | | then return 0.38324169833321414;  // std dev = 0.804, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.6374285976329401;  // std dev = 0.491, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.29108318897916063;  // std dev = 0.084, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5942672595038816;  // std dev = 0.168, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.22340589016934054;  // std dev = 0.253, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, M) )
%   | | | then return 0.010749442775422616;  // std dev = 4.845, 154.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=42 */
%   | | | else return -0.09354948440593319;  // std dev = 1.407, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( complex(C, E), phenotype(A, F) )
%   | then if ( interaction(G, C), interaction(C, G) )
%   | | then if ( phenotype(G, F), complex(G, E) )
%   | | | then return -0.040727845717315914;  // std dev = 1.724, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.06886921347997679;  // std dev = 1.491, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else return 0.2895127386660312;  // std dev = 0.917, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return -0.10876150620132335;  // std dev = 0.292, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else return -0.0227191264638696;  // std dev = 0.361, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   else if ( interaction(A, J), complex(J, K) )
%   | then return -0.025487937682287232;  // std dev = 0.287, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( interaction(A, L), interaction(L, L) )
%   | | then return 0.39975903386713385;  // std dev = 0.735, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.04888080871154562;  // std dev = 1.945, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.19746354385512763;  // std dev = 0.962, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.715', 'seconds']
Refined model CLL: -0.261364


******************************************
Best model found
******************************************
Results 

CLL : -0.274321 

AUC ROC : 0.941019 

AUC PR : 0.245033 

Precision : 0.285714 

Recall : 0.452297 

F1 : 0.350205 

Total Learning Time : 17.572 

Total Inference Time : 9.263030052185059 

Total revision time: 34.16921710586548
Best scored revision CLL: -0.261364


Results 

CLL : -0.274321 

AUC ROC : 0.941019 

AUC PR : 0.245033 

Precision : 0.285714 

Recall : 0.452297 

F1 : 0.350205 

Total Learning Time : 34.21662711715698 

Total Inference Time : 9.263030052185059 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.18
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17109857538728196;  // std dev = 7.731, 278.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17710436069685842;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.17195658937902897;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1537374402837922;  // std dev = 4.795, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.12393243148208753;  // std dev = 5.976, 166.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14914460339534977;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.1201195193697517;  // std dev = 6.698, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10048998344562675;  // std dev = 7.614, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06882193773514826;  // std dev = 7.688, 272.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7299133141390085;  // std dev = 0.020, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2696995011255564;  // std dev = 0.029, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08140471914122693;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.06895212884547532;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.037187263546189675;  // std dev = 3.812, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.06650468935035339;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027056087463387755;  // std dev = 7.074, 273.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022648383272739863;  // std dev = 7.070, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.183', 'seconds']
Parameter learned model CLL:-0.326227 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 191, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.344, 85, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.795, 67, 35], 'false,false,false,false': [5.976, 114, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.568, 35, 20], 'false,false,false,false': [6.698, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.614, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.688, 185, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 35], 'true,false': [0.029, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.971, 46, 24], 'false,false,false,false': [4.333, 57, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.812, 72, 35], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.074, 186, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.07, 184, 87]}]
{'': [nan, 0.21501216293152609], 'false': [nan, 0.2150121629315262], 'false,false': [nan, 0.21501216293152609], 'false,false,false': [nan, 0.2150121629315262]}
{'': [nan, 0.22392466199336852], 'false': [nan, 0.223924661993368], 'false,false': [nan, 0.22392466199336852], 'false,false,false': [0.22474610900787198, 0.22308349609375053]}
{'': [nan, 0.21925486988001233], 'false': [nan, 0.21925486988001233], 'false,false': [nan, 0.2192548698800125], 'false,false,false': [0.22540334344632662, 0.21513879314624676]}
{'': [nan, 0.22337702869204834], 'false': [nan, 0.22337702869204834], 'false,false': [nan, 0.223377028692048], 'false,false,false': [0.2314049586776856, 0.2210223805425127]}
{'': [nan, 0.2221383006388222], 'false': [nan, 0.2221383006388222], 'false,false': [nan, 0.22213830063882303], 'false,false,false': [nan, 0.22213830063882303]}
{'': [nan, 0.21730963195146868], 'false': [nan, 0.21730963195146868], 'false,false': [nan, 0.21730963195146866], 'false,false,false': [nan, 0.21730963195146913]}
{'': [0.2199473871500855, 0.22292807568899375], 'false': [nan, 0.22292807568899375], 'false,false': [nan, 0.22292807568899375], 'false,false,false': [0.22530612244897977, 0.2208996539792386], 'true': [1.1088854816015166e-05, 1.1311138154668221e-05], 'true,true': [nan, 1.1088854816015166e-05], 'true,true,false': [nan, 1.1088854816015166e-05]}
{'': [nan, 0.18840493092885222], 'false': [nan, 0.18840493092885222], 'false,false': [nan, 0.18840493092885227], 'false,false,false': [0.13579322659354992, 0.22508571399955396]}
{'': [nan, 0.1833036799241452], 'false': [nan, 0.18330367992414529], 'false,false': [nan, 0.18330367992414529], 'false,false,false': [nan, 0.18330367992414529]}
{'': [nan, 0.18445685575657458], 'false': [nan, 0.18445685575657458], 'false,false': [nan, 0.18445685575657492], 'false,false,false': [nan, 0.18445685575657492]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.186
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then if ( interaction(D, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.10814893509951223;  // std dev = 1.500, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(A, G), phenotype(D, H) )
%   | | | then return 0.07243464938522651;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.16584124279182005;  // std dev = 2.882, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.35814893509951234;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.12285481745245355;  // std dev = 2.572, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return 0.20636322081379704;  // std dev = 5.042, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7624402433497068;  // std dev = 0.143, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.13591688988616263;  // std dev = 0.063, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8393148463668046;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.20138404138423158;  // std dev = 2.489, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.10940125447582773;  // std dev = 5.218, 136.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=38 */
%   | | | else return 0.2054285149064801;  // std dev = 3.943, 67.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=25 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( phenotype(A, E), interaction(F, C) )
%   | then if ( recursion_proteinclass(F, B), phenotype(C, G) )
%   | | then return 0.6957949623223243;  // std dev = 0.106, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.08188360394110289;  // std dev = 0.437, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   | else if ( interaction(C, C) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.4092330468430288;  // std dev = 0.959, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08190616457032895;  // std dev = 1.710, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.07984288683539191;  // std dev = 0.443, 118.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then return 0.5223819128801411;  // std dev = 0.761, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5090237085722414;  // std dev = 1.168, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return -0.19081476941929212;  // std dev = 0.011, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 3.06048687885907E-4;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4892406522451951;  // std dev = 0.105, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, H) )
%   | | | then return -0.010470098531765809;  // std dev = 0.772, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.19585754761042362;  // std dev = 0.010, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.15423685846523785;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.1359106494877191;  // std dev = 4.971, 114.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=40 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B), interaction(J, I) )
%   | | | then return 0.7590267668489852;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.006276614074907045;  // std dev = 1.727, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return 0.15616028118132447;  // std dev = 2.407, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.28227851412134075;  // std dev = 3.002, 38.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E) )
%   | then if ( interaction(D, D) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.5245031935773966;  // std dev = 1.024, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.21209621948873458;  // std dev = 0.121, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(D, G) )
%   | | | then return 0.06420410315667675;  // std dev = 1.045, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.24042446470492618;  // std dev = 2.691, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | else return 0.050736372498646085;  // std dev = 0.425, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.43473491654783053;  // std dev = 0.156, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then return -0.006964062722491906;  // std dev = 0.398, 104.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=24 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.44955376091154964;  // std dev = 0.748, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.08869827768506824;  // std dev = 3.773, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.24355854586668255;  // std dev = 0.054, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4665749942195091;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.16346177867914782;  // std dev = 0.055, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.34446486292550893;  // std dev = 1.945, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | else return 0.060596804934188404;  // std dev = 6.018, 176.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=55 */
%   | else if ( enzyme(A, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.038010367809448345;  // std dev = 1.387, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.2469362952319228;  // std dev = 0.245, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return -0.1278006103005258;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.1559857897047802;  // std dev = 1.237, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6144834278610106;  // std dev = 0.178, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.23076721676842737;  // std dev = 0.337, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( location(A, F), location(E, F) )
%   | | then return -0.019741790232858766;  // std dev = 0.319, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | else if ( location(A, G) )
%   | | | then return -0.21670588080821934;  // std dev = 0.887, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07404017917535392;  // std dev = 0.963, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6839810550433841;  // std dev = 0.342, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2531432823073401;  // std dev = 0.141, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.14586571880651744;  // std dev = 3.729, 57.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=24 */
%   | | | else return 0.025492416286045094;  // std dev = 1.080, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( enzyme(D, C), location(A, E) )
%   | then return -0.03439073859862343;  // std dev = 0.188, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( location(A, F), location(D, F) )
%   | | then if ( complex(D, G), interaction(H, D) )
%   | | | then return 0.029550656195173258;  // std dev = 1.816, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.11389088070334771;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | else if ( phenotype(D, I), phenotype(A, J) )
%   | | | then return 0.49964084272096115;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.22624542457407512;  // std dev = 1.361, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.18503349267832606;  // std dev = 0.084, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, L) )
%   | | then return -0.008840590581233659;  // std dev = 0.373, 172.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=47 */
%   | | else if ( interaction(A, M), interaction(M, A) )
%   | | | then return -0.04216547948731286;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.30246950898551794;  // std dev = 0.839, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.2007787724225292;  // std dev = 0.097, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then if ( interaction(H, E) )
%   | | | then return -0.1101555400338758;  // std dev = 0.801, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.055746922646851355;  // std dev = 0.684, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.46743104518154976;  // std dev = 1.111, 30.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=28 */
%   | | | else return -0.2114396090441134;  // std dev = 0.435, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(J, L), location(A, K) )
%   | | | then return 0.11635480097465355;  // std dev = 2.590, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.013990439599689873;  // std dev = 3.826, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.06592044796888592;  // std dev = 0.637, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.4183721758053885;  // std dev = 0.696, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.17205828405135762;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( enzyme(D, G), interaction(E, E) )
%   | | | then return -0.11943186731036744;  // std dev = 0.099, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.10298145383685278;  // std dev = 0.875, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( complex(A, H), interaction(I, A) )
%   | | | then return -0.09194080701473976;  // std dev = 1.081, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return -0.1321976005489779;  // std dev = 1.030, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(L, J), enzyme(A, M) )
%   | | | then return -0.015816836667394002;  // std dev = 2.312, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   | | | else return 0.058262841876175205;  // std dev = 3.054, 61.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=21 */
%   | | else if ( interaction(A, N), interaction(P, A) )
%   | | | then return 0.04757513428736225;  // std dev = 1.923, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return -0.040459224849001586;  // std dev = 3.462, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.748', 'seconds']
Refined model CLL: -0.290866


******************************************
Best model found
******************************************
Results 

CLL : -0.280072 

AUC ROC : 0.944869 

AUC PR : 0.226281 

Precision : 0.222222 

Recall : 0.539007 

F1 : 0.3147 

Total Learning Time : 21.186 

Total Inference Time : 12.501050233840942 

Total revision time: 41.336098972320556
Best scored revision CLL: -0.290866


Results 

CLL : -0.280072 

AUC ROC : 0.944869 

AUC PR : 0.226281 

Precision : 0.222222 

Recall : 0.539007 

F1 : 0.3147 

Total Learning Time : 51.41424423789978 

Total Inference Time : 12.501050233840942 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.489
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20025419825740765;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18572435102165738;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.19060354407819033;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1348028067868994;  // std dev = 5.239, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.15392106956219775;  // std dev = 6.399, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1118621975266818;  // std dev = 4.409, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return 0.09144736051036925;  // std dev = 7.181, 240.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0950730194467337;  // std dev = 8.333, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07856618176065402;  // std dev = 8.326, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7307149049534885;  // std dev = 0.009, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2693186493239557;  // std dev = 0.012, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.025242041624824532;  // std dev = 4.168, 94.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=23 */
%   | | | else return 0.09948488313120427;  // std dev = 5.018, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02824890292028869;  // std dev = 4.165, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.06474884937823072;  // std dev = 6.420, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03890640570914823;  // std dev = 7.666, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04816140431019567;  // std dev = 7.542, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.067', 'seconds']
Parameter learned model CLL:-0.340574 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.239, 83, 41], 'false,false,false,false': [6.399, 117, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.409, 59, 29], 'false,false,false,false': [7.181, 165, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.333, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.326, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 41], 'true,false': [0.012, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.168, 71, 23], 'false,false,false,false': [5.018, 68, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.165, 89, 41], 'false,false,false,false': [6.42, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 191, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756287], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756287]}
{'': [nan, 0.22931131544380062], 'false': [nan, 0.22931131544379965], 'false,false': [nan, 0.22931131544380062], 'false,false,false': [0.22860845018279674, 0.23001189060642344]}
{'': [nan, 0.22506766943242434], 'false': [nan, 0.22506766943242434], 'false,false': [nan, 0.2250676694324286], 'false,false,false': [0.22133016658572474, 0.22749330483784622]}
{'': [nan, 0.21658087951432803], 'false': [nan, 0.21658087951432803], 'false,false': [nan, 0.21658087951432722], 'false,false,false': [0.2209452479338838, 0.21486879594078853]}
{'': [nan, 0.22185895283913884], 'false': [nan, 0.22185895283913884], 'false,false': [nan, 0.22185895283913834], 'false,false,false': [nan, 0.22185895283913834]}
{'': [nan, 0.2221766990453417], 'false': [nan, 0.2221766990453417], 'false,false': [nan, 0.22217669904534235], 'false,false,false': [nan, 0.22217669904534157]}
{'': [0.2320806126236223, 0.2145513397076568], 'true': [1.9288202956775464e-06, 1.8852272597974272e-06], 'false': [nan, 0.2145513397076568], 'false,false': [nan, 0.2145513397076568], 'false,false,false': [0.1848121321865099, 0.23319615912208555], 'true,true': [nan, 1.9288202956775464e-06], 'true,true,false': [nan, 1.9288202956775464e-06]}
{'': [nan, 0.18801885507835223], 'false': [nan, 0.18801885507835223], 'false,false': [nan, 0.18801885507835248], 'false,false,false': [0.13346100873221992, 0.22643364278749303]}
{'': [nan, 0.1889601089031202], 'false': [nan, 0.18896010890312098], 'false,false': [nan, 0.18896010890312098], 'false,false,false': [nan, 0.18896010890312098]}
{'': [nan, 0.19282622469796118], 'false': [nan, 0.19282622469796118], 'false,false': [nan, 0.19282622469796085], 'false,false,false': [nan, 0.19282622469796085]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 33.858
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, E), interaction(A, F) )
%   | | | then return 0.06085163780221508;  // std dev = 3.458, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | | else return 0.1736829156820376;  // std dev = 6.670, 206.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=65 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( phenotype(C, E), interaction(A, F) )
%   | | then return 0.11947341221095438;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( location(A, G) )
%   | | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.4822864242338524;  // std dev = 5.299, 124.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=81 */
%   | | | else return -0.16076902930474676;  // std dev = 0.075, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.23566449140913068;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.032092092637790004;  // std dev = 1.809, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5951876881222141;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11231637819360638;  // std dev = 7.45e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(A, D) )
%   | | | then return 0.17037329470552;  // std dev = 2.924, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | | else return 0.43274258003481225;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.7004769494669503;  // std dev = 0.214, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | else return -0.17633721625192492;  // std dev = 0.264, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, I), location(A, J) )
%   | | | then return 0.05118259356980506;  // std dev = 2.552, 44.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=11 */
%   | | | else return 0.1579014648558929;  // std dev = 4.729, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(E, D) )
%   | then if ( interaction(A, F), complex(C, G) )
%   | | then return 0.6502166524561269;  // std dev = 0.130, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | else return 0.3794217054323348;  // std dev = 0.302, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( interaction(A, C) )
%   | | then return -0.19777066706280952;  // std dev = 0.074, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | else if ( enzyme(A, H), interaction(C, D) )
%   | | | then return 0.17956461663063222;  // std dev = 2.579, 43.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=18 */
%   | | | else return 0.06854802692012248;  // std dev = 4.775, 145.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=41 */
%   else if ( complex(A, I), phenotype(A, J) )
%   | then return 0.49936260606704247;  // std dev = 0.740, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2635119561567883;  // std dev = 1.321, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return -0.14739690620398901;  // std dev = 0.054, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.47455134945823646;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.32674843160855394;  // std dev = 0.058, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.37821595152815174;  // std dev = 0.067, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.14032001404767014;  // std dev = 0.585, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.13071675681690442;  // std dev = 0.705, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.531874024981093;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( complex(I, J) )
%   | | | then return -0.01458871382018227;  // std dev = 2.892, 94.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=17 */
%   | | | else return 0.1414719118342716;  // std dev = 1.518, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.018183742764395404;  // std dev = 3.446, 80.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=21 */
%   | | | else return 0.11442343188290309;  // std dev = 4.310, 103.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=37 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.3155746153560873;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.10249264145739251;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, A) )
%   | | | then return 0.2772522907994852;  // std dev = 0.097, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5998102442949519;  // std dev = 0.421, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | else return -0.16236388721330589;  // std dev = 0.060, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.02368964404513177;  // std dev = 0.620, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.17993511784105026;  // std dev = 1.784, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.05764808346420128;  // std dev = 2.313, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.11510478007725526;  // std dev = 4.225, 99.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=36 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.349432108275617;  // std dev = 0.211, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.1492303219545552;  // std dev = 0.054, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.3736944903857409;  // std dev = 0.318, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6417017847147062;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1555964415521074;  // std dev = 0.189, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), interaction(A, K) )
%   | | | then return -0.0040648217765890116;  // std dev = 2.452, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.055147466635485386;  // std dev = 4.312, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.07131346973220905;  // std dev = 1.231, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.2468174159437679;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1500395239077802;  // std dev = 0.156, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( location(A, F), location(E, F) )
%   | | then if ( recursion_proteinclass(E, B), interaction(A, G) )
%   | | | then return 0.3979276614298458;  // std dev = 0.435, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return -0.01848633479160528;  // std dev = 4.561, 196.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=43 */
%   | | else if ( phenotype(E, H), phenotype(D, H) )
%   | | | then return 0.11341038172898936;  // std dev = 1.877, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.3848251916727333;  // std dev = 0.655, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.32287973215517;  // std dev = 0.126, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19451290836045257;  // std dev = 0.286, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.050475215725414406;  // std dev = 0.937, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.002433548060506213;  // std dev = 1.337, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then return -0.012642081844906962;  // std dev = 0.235, 172.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=50 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( phenotype(E, G), interaction(H, E) )
%   | | then if ( interaction(H, H), phenotype(A, I) )
%   | | | then return 0.054153325570254304;  // std dev = 2.128, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return 0.12652186407897512;  // std dev = 2.920, 51.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.049649285086820656;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.41306313605964295;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(K, A), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.4530751486057484;  // std dev = 0.907, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.26186262730688814;  // std dev = 0.178, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.05883844856296099;  // std dev = 0.889, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.015242167113515531;  // std dev = 1.223, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.27180242215209455;  // std dev = 0.108, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(A, C) )
%   | | | then return -0.13903474114673825;  // std dev = 0.620, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | | else return -0.0035233715713979255;  // std dev = 1.576, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | | else if ( enzyme(C, F), enzyme(D, F) )
%   | | | then return 0.10243102434127663;  // std dev = 1.896, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return -0.0034484231022819407;  // std dev = 4.375, 143.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=47 */
%   else if ( enzyme(A, G), complex(A, H) )
%   | then return -0.0946424050762626;  // std dev = 0.348, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3964819504846116;  // std dev = 0.338, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14465901077947568;  // std dev = 0.085, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.05529781231095682;  // std dev = 1.087, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '48.620', 'seconds']
Refined model CLL: -0.236943


******************************************
Best model found
******************************************
Results 

CLL : -0.236158 

AUC ROC : 0.974257 

AUC PR : 0.390839 

Precision : 0.168975 

Recall : 0.690566 

F1 : 0.271513 

Total Learning Time : 33.858 

Total Inference Time : 16.819355964660645 

Total revision time: 59.635802146911615
Best scored revision CLL: -0.236943


Results 

CLL : -0.236158 

AUC ROC : 0.974257 

AUC PR : 0.390839 

Precision : 0.168975 

Recall : 0.690566 

F1 : 0.271513 

Total Learning Time : 69.71394741249084 

Total Inference Time : 16.819355964660645 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.298
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1855510703308291;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1983138602084994;  // std dev = 5.694, 140.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=51 */
%   | | | else return 0.11293971054863391;  // std dev = 5.437, 147.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15358635714612107;  // std dev = 5.376, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
%   | | | else return 0.151274111462891;  // std dev = 5.628, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.19216295507655587;  // std dev = 3.908, 63.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=26 */
%   | | | else return 0.12796261277261148;  // std dev = 6.600, 195.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09053218973777254;  // std dev = 7.850, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06392717905056398;  // std dev = 7.910, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7044569363037093;  // std dev = 0.976, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.27166607548077987;  // std dev = 0.123, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03246994320334178;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.08746439256036838;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06070432493187053;  // std dev = 4.199, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.08488573816983169;  // std dev = 5.539, 133.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06576955909601923;  // std dev = 6.904, 249.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01920206184004558;  // std dev = 7.083, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.814', 'seconds']
Parameter learned model CLL:-0.336853 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.694, 89, 51], 'false,false,false,false': [5.437, 106, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.376, 84, 44], 'false,false,false,false': [5.628, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.908, 37, 26], 'false,false,false,false': [6.6, 129, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.85, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.91, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.976, 1, 44], 'true,false': [0.123, 69, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.169, 57, 25], 'false,false,false,false': [3.886, 44, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.199, 79, 44], 'false,false,false,false': [5.539, 85, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.904, 157, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.083, 185, 92]}]
{'': [nan, 0.22020997707729253], 'false': [nan, 0.22020997707729223], 'false,false': [nan, 0.22020997707729253], 'false,false,false': [nan, 0.22020997707729223]}
{'': [nan, 0.21780038606757599], 'false': [nan, 0.21780038606757288], 'false,false': [nan, 0.21780038606757599], 'false,false,false': [0.23158163265305914, 0.2011199037438114]}
{'': [nan, 0.22520917379659328], 'false': [nan, 0.22520917379659328], 'false,false': [nan, 0.22520917379659391], 'false,false,false': [0.22579248365052537, 0.22467710023379478]}
{'': [nan, 0.22877209729116593], 'false': [nan, 0.22877209729116593], 'false,false': [nan, 0.22877209729116574], 'false,false,false': [0.24237843285462338, 0.22336974655377592]}
{'': [nan, 0.22086823796390956], 'false': [nan, 0.22086823796390956], 'false,false': [nan, 0.2208682379639101], 'false,false,false': [nan, 0.2208682379639101]}
{'': [nan, 0.21802746800497008], 'false': [nan, 0.21802746800497008], 'false,false': [nan, 0.2180274680049703], 'false,false,false': [nan, 0.21802746800497058]}
{'': [0.2361398517294897, 0.2187519673963107], 'true': [0.02118283497946594, 0.0002175785840243547], 'false': [nan, 0.2187519673963107], 'false,false': [nan, 0.2187519673963107], 'false,false,false': [0.21192742415229096, 0.22543996435731747], 'true,true': [nan, 0.02118283497946594], 'true,true,false': [nan, 0.02118283497946594]}
{'': [nan, 0.18887365663750158], 'false': [nan, 0.18887365663750158], 'false,false': [nan, 0.18887365663750277], 'false,false,false': [0.14335921189254042, 0.23068501302444278]}
{'': [nan, 0.19143770045655065], 'false': [nan, 0.191437700456551], 'false,false': [nan, 0.191437700456551], 'false,false,false': [nan, 0.191437700456551]}
{'': [nan, 0.18111974178002135], 'false': [nan, 0.18111974178002135], 'false,false': [nan, 0.18111974178002177], 'false,false,false': [nan, 0.18111974178002177]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.533
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(F, H) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.19522758678490423;  // std dev = 4.460, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.06569610491083312;  // std dev = 2.952, 53.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=11 */
%   | | | else return 0.14884660951811612;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7296731015021901;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( enzyme(D, E), enzyme(A, E) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(D, D) )
%   | | | then return 0.019422262350898833;  // std dev = 2.391, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.14964403031064455;  // std dev = 5.752, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | else if ( phenotype(A, F) )
%   | | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7314833458501379;  // std dev = 0.949, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1673156607859439;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.20859119098304818;  // std dev = 1.717, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.07538003596631357;  // std dev = 2.306, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5753254816154084;  // std dev = 0.260, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14738710448076356;  // std dev = 0.139, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(D, D), enzyme(D, F) )
%   | | | then return 0.4583587667575985;  // std dev = 1.125, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.06819086645585672;  // std dev = 2.794, 46.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=12 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.6357467890593851;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.04433534100294637;  // std dev = 2.043, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.41944254318889546;  // std dev = 0.701, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.3054152292977142;  // std dev = 1.660, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.1532161399302526;  // std dev = 5.470, 139.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=47 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E) )
%   | then return 0.08417088596257981;  // std dev = 0.408, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7369642138913254;  // std dev = 0.232, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18145438230007355;  // std dev = 0.070, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( complex(D, I) )
%   | | | then return 0.13343621833106908;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07830310576858428;  // std dev = 1.027, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(L, K) )
%   | | | then return 0.5186727085096795;  // std dev = 3.159, 55.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=41 */
%   | | | else return -0.1952953173000564;  // std dev = 0.021, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.20115086767405008;  // std dev = 0.123, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | else return 0.32372381072244305;  // std dev = 1.003, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.39545069564748064;  // std dev = 0.102, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(C, D) )
%   | | then return -0.14187671797141096;  // std dev = 0.152, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( enzyme(C, E) )
%   | | | then return -0.10616640299690393;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.019274565860991334;  // std dev = 1.529, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.49326748012243743;  // std dev = 0.151, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6806609127782665;  // std dev = 0.390, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.1927394112864497;  // std dev = 0.235, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return -0.009792721003380536;  // std dev = 1.478, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.09130913195477457;  // std dev = 5.432, 162.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3213246550135919;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( phenotype(D, F), interaction(E, D) )
%   | | then if ( phenotype(A, G), interaction(D, D) )
%   | | | then return -0.0255007833610415;  // std dev = 1.533, 24.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=5 */
%   | | | else return 0.26487458392222596;  // std dev = 1.879, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(H, A), phenotype(E, I) )
%   | | | then return -0.16193815793104394;  // std dev = 0.780, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return -0.008096472510437793;  // std dev = 3.721, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5290064433359409;  // std dev = 0.858, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.17278060039517854;  // std dev = 0.233, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return -0.03777984202492319;  // std dev = 1.802, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.09351021034245253;  // std dev = 3.263, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2515146082226646;  // std dev = 0.133, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.542042450875247;  // std dev = 0.138, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.17904734492602806;  // std dev = 0.085, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.6072481288545161;  // std dev = 0.148, 33.000 (wgt'ed) examples reached here.  /* #pos=33 */
%   | | else return -0.20780630998439742;  // std dev = 0.342, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( location(A, J), interaction(H, K) )
%   | | | then return 0.14306025387879776;  // std dev = 1.725, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.48700325217321905;  // std dev = 0.869, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.41955946181849424;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.43671807024944104;  // std dev = 0.805, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.17585542637342122;  // std dev = 0.220, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return 0.5411042429860282;  // std dev = 0.110, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.15226333036205592;  // std dev = 0.215, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, G), phenotype(A, H) )
%   | | | then return 0.05705761744534494;  // std dev = 0.947, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09227018662638622;  // std dev = 2.155, 46.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=8 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3740297822365065;  // std dev = 0.730, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.14765203366776142;  // std dev = 0.702, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | else if ( location(A, K) )
%   | | | then return 0.06881055030387725;  // std dev = 3.555, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
%   | | | else return -0.08512510798383695;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.1609520302855432;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2447805650522564;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.546739791633862;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(D, G), phenotype(E, H) )
%   | | | then return 0.021885859738897964;  // std dev = 1.404, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.09760195217495463;  // std dev = 1.760, 66.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.17621808302098516;  // std dev = 0.019, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.13764064338592635;  // std dev = 0.151, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.004287741112951067;  // std dev = 2.210, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.0424984266522827;  // std dev = 3.664, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.17510418790817867;  // std dev = 0.177, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(A, C) )
%   | | then return -0.10602317634328037;  // std dev = 0.051, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.020149880014040368;  // std dev = 0.287, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
%   else if ( location(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3847085929961544;  // std dev = 0.324, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16113354010162012;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5316225853739517;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2793526319581513;  // std dev = 0.179, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return -0.07821284926727382;  // std dev = 2.238, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | | else return 0.008474594400759428;  // std dev = 1.137, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '53.768', 'seconds']
Refined model CLL: -0.205341


******************************************
Best model found
******************************************
Results 

CLL : -0.214176 

AUC ROC : 0.985973 

AUC PR : 0.309312 

Precision : 0.251378 

Recall : 0.823105 

F1 : 0.385135 

Total Learning Time : 18.533 

Total Inference Time : 9.562319278717041 

Total revision time: 36.01960936164856
Best scored revision CLL: -0.205341


Results 

CLL : -0.214176 

AUC ROC : 0.985973 

AUC PR : 0.309312 

Precision : 0.251378 

Recall : 0.823105 

F1 : 0.385135 

Total Learning Time : 46.097754627227786 

Total Inference Time : 9.562319278717041 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.232
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19806988371611348;  // std dev = 7.534, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13113854737270556;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
%   | | | else return 0.12288626325835249;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2378937488695774;  // std dev = 4.015, 66.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=28 */
%   | | | else return 0.16733181102435568;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08077697097938395;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.1205947059845759;  // std dev = 6.674, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10331410846478148;  // std dev = 7.536, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06407316455097413;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7260231918079105;  // std dev = 0.016, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2737672427484098;  // std dev = 0.022, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01614207215939537;  // std dev = 4.867, 117.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=33 */
%   | | | else return 0.04819853342574736;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.01085016018050692;  // std dev = 3.479, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
%   | | | else return 0.06041981431737924;  // std dev = 6.226, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03202448618737721;  // std dev = 7.169, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04709982756802789;  // std dev = 7.029, 252.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.406', 'seconds']
Parameter learned model CLL:-0.335145 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.534, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.038, 122, 52], 'false,false,false,false': [4.911, 83, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.015, 38, 28], 'false,false,false,false': [6.123, 106, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [6.674, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.536, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.016, 0, 28], 'true,false': [0.022, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.867, 84, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.479, 66, 28], 'false,false,false,false': [6.226, 117, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.169, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.029, 166, 86]}]
{'': [nan, 0.22437469730819184], 'false': [nan, 0.22437469730819165], 'false,false': [nan, 0.22437469730819184], 'false,false,false': [nan, 0.22437469730819165]}
{'': [nan, 0.20819310116791304], 'false': [nan, 0.20819310116791231], 'false,false': [nan, 0.20819310116791304], 'false,false,false': [0.20953890870656605, 0.20615092409964192]}
{'': [nan, 0.23410623389290966], 'false': [nan, 0.23410623389290966], 'false,false': [nan, 0.23410623389291027], 'false,false,false': [0.24420030030484094, 0.22861523484186164]}
{'': [nan, 0.2206019479973506], 'false': [nan, 0.2206019479973506], 'false,false': [nan, 0.22060194799735003], 'false,false,false': [0.21253902185223672, 0.2227262717996673]}
{'': [nan, 0.22444645062670351], 'false': [nan, 0.22444645062670351], 'false,false': [nan, 0.22444645062670374], 'false,false,false': [nan, 0.22444645062670374]}
{'': [nan, 0.21747454544115163], 'false': [nan, 0.21747454544115163], 'false,false': [nan, 0.21747454544115138], 'false,false,false': [nan, 0.21747454544115166]}
{'': [0.21817551009735353, 0.20775955597361745], 'true': [8.641996717351219e-06, 8.126962163543768e-06], 'false': [nan, 0.20775955597361745], 'false,false': [nan, 0.20775955597361745], 'false,false,false': [0.20249835634451047, 0.21484374999999994], 'true,true': [nan, 8.641996717351219e-06], 'true,true,false': [nan, 8.641996717351219e-06]}
{'': [nan, 0.18968153696154766], 'false': [nan, 0.18968153696154766], 'false,false': [nan, 0.18968153696154774], 'false,false,false': [0.12879464432518242, 0.22152786387919163]}
{'': [nan, 0.19106220889038228], 'false': [nan, 0.19106220889038297], 'false,false': [nan, 0.19106220889038297], 'false,false,false': [nan, 0.19106220889038297]}
{'': [nan, 0.19607498941598184], 'false': [nan, 0.19607498941598184], 'false,false': [nan, 0.1960749894159824], 'false,false,false': [nan, 0.1960749894159824]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.252
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.7748156017661789;  // std dev = 0.276, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.19905802600860326;  // std dev = 3.144, 44.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=15 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.054870246574922205;  // std dev = 0.398, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.07243464938522651;  // std dev = 0.410, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.17560925255982957;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.35814893509951234;  // std dev = 2.646, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7733815211891288;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(D, C), location(A, E) )
%   | | then if ( enzyme(D, F), enzyme(A, F) )
%   | | | then return 0.24366247993691478;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.06045839357180098;  // std dev = 1.271, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | else if ( interaction(D, G), phenotype(G, H) )
%   | | | then return 0.4063196364184366;  // std dev = 1.316, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.09560862917600527;  // std dev = 1.497, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.7520109040841187;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12827293014539248;  // std dev = 0.024, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.07106965230306546;  // std dev = 4.974, 140.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=34 */
%   | | | else return 0.12625405126568215;  // std dev = 4.061, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.5831578805973779;  // std dev = 0.121, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6950307270192086;  // std dev = 0.076, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then return 0.21672779094790431;  // std dev = 0.946, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, H), interaction(E, H) )
%   | | | then return -0.12528569965308609;  // std dev = 0.050, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.08039698396770832;  // std dev = 1.283, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( location(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.2902749887813593;  // std dev = 3.022, 37.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=18 */
%   | | | else return -0.18353423748835548;  // std dev = 0.140, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.10747351810407321;  // std dev = 3.480, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | | else return 0.19863711228169809;  // std dev = 4.144, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.47123161903016864;  // std dev = 0.088, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.2801051125838818;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.5829447142997757;  // std dev = 0.191, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.6737654005022714;  // std dev = 2.081, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return -0.17557657349352765;  // std dev = 0.372, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( complex(H, J), location(A, K) )
%   | | | then return -0.15503753926156635;  // std dev = 0.179, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -3.9282335320781477E-4;  // std dev = 2.258, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.3172054358066144;  // std dev = 1.486, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.03392413046478131;  // std dev = 2.959, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( phenotype(A, E) )
%   | then if ( complex(C, F), interaction(C, G) )
%   | | then if ( phenotype(C, H), phenotype(G, E) )
%   | | | then return 0.14384144672676977;  // std dev = 1.161, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 2.873349815982169E-4;  // std dev = 1.628, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( enzyme(C, I) )
%   | | | then return 0.2204741862244095;  // std dev = 0.784, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.11798467533139184;  // std dev = 0.693, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.5943146158982459;  // std dev = 0.333, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.2744118828505082;  // std dev = 0.265, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then return -0.051676154286519345;  // std dev = 0.196, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.2801126401362271;  // std dev = 1.116, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.04141630366506046;  // std dev = 5.435, 184.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=49 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then if ( complex(A, E) )
%   | | then return 0.2854106858568385;  // std dev = 0.105, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.24775450085075346;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(A, F) )
%   | | then return 0.31759264830269146;  // std dev = 0.124, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.42408356944659953;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1076425132027126;  // std dev = 0.041, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( enzyme(A, G), interaction(H, A) )
%   | | then if ( interaction(I, H), interaction(A, I) )
%   | | | then return -0.13325709148574433;  // std dev = 1.189, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.0456672305886069;  // std dev = 3.250, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.12684016918336166;  // std dev = 2.733, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | | else return 0.047664400517999736;  // std dev = 4.051, 111.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.46492353706296846;  // std dev = 0.292, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.17628412568179888;  // std dev = 0.082, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.29917409118266297;  // std dev = 0.233, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, H) )
%   | | | then return -0.08484356932384984;  // std dev = 1.516, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | | else return 0.035566636846752264;  // std dev = 1.397, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( phenotype(I, K), interaction(L, I) )
%   | | | then return 0.10704151117083897;  // std dev = 2.002, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | else return 0.657874206554013;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.024763253036506165;  // std dev = 1.288, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.11335797625970141;  // std dev = 3.597, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( phenotype(A, E) )
%   | then if ( enzyme(A, F), phenotype(D, E) )
%   | | then return -0.03934939121743718;  // std dev = 0.365, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else return 0.05070184162613807;  // std dev = 0.353, 103.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=38 */
%   | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.3080929425029138;  // std dev = 0.229, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( location(D, C), interaction(H, D) )
%   | | | then return -0.09362938727908475;  // std dev = 2.823, 64.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=11 */
%   | | | else return 0.06402625750532574;  // std dev = 1.537, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, J) )
%   | | | then return 0.07730759981289904;  // std dev = 1.190, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.6321390600649087;  // std dev = 0.293, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return -0.1648083801764684;  // std dev = 0.053, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else return 0.2938205415036045;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(D, E), phenotype(A, E) )
%   | | then if ( complex(A, F), interaction(G, A) )
%   | | | then return 0.24835088892551177;  // std dev = 1.006, 15.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=13 */
%   | | | else return 0.48257702814435205;  // std dev = 1.088, 41.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=40 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.21488089010173805;  // std dev = 0.600, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.2744248431308554;  // std dev = 2.653, 45.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=30 */
%   | else if ( complex(A, I) )
%   | | then return -0.1298950251341617;  // std dev = 0.041, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.21935414605647083;  // std dev = 0.059, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, J) )
%   | then if ( interaction(J, K) )
%   | | then return -0.09463245217598275;  // std dev = 0.688, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.12443176182471456;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else return -0.1573748049723437;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.11589833179064651;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2125563326302451;  // std dev = 0.159, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A) )
%   | then if ( location(A, F), phenotype(E, G) )
%   | | then if ( phenotype(A, G) )
%   | | | then return -0.055511796891775746;  // std dev = 1.478, 39.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=7 */
%   | | | else return 0.031777912851103186;  // std dev = 3.581, 116.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=37 */
%   | | else if ( location(A, H), location(E, H) )
%   | | | then return -0.019473971054327424;  // std dev = 1.712, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return -0.13150026026814166;  // std dev = 1.283, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( interaction(J, J) )
%   | | | then return 0.07956538196003574;  // std dev = 1.094, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.01608426733700458;  // std dev = 1.213, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else return 0.30288622387034914;  // std dev = 0.650, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '6', 'minutes', 'and', '14.843', 'seconds']
Refined model CLL: -0.22273


******************************************
Best model found
******************************************
Results 

CLL : -0.249361 

AUC ROC : 0.959433 

AUC PR : 0.235806 

Precision : 0.162451 

Recall : 0.590106 

F1 : 0.254767 

Total Learning Time : 27.252 

Total Inference Time : 19.182031869888306 

Total revision time: 53.94887784385681
Best scored revision CLL: -0.22273


Results 

CLL : -0.249361 

AUC ROC : 0.959433 

AUC PR : 0.235806 

Precision : 0.162451 

Recall : 0.590106 

F1 : 0.254767 

Total Learning Time : 64.02702310943604 

Total Inference Time : 19.182031869888306 

Run: 2
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.199
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1666595733973845;  // std dev = 7.756, 282.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.23302312641071773;  // std dev = 5.153, 111.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=44 */
%   | | | else return 0.17789657128416228;  // std dev = 5.322, 126.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.148491315074448;  // std dev = 4.799, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.15388924947055152;  // std dev = 5.826, 150.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11094912121700898;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.1197993485310091;  // std dev = 6.665, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11738966174475392;  // std dev = 7.484, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08411745362934367;  // std dev = 7.549, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7229386541171877;  // std dev = 0.027, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2759698386273764;  // std dev = 0.043, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01238081027100298;  // std dev = 4.110, 81.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=24 */
%   | | | else return 0.04176419192467885;  // std dev = 4.381, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.029226439622953983;  // std dev = 3.811, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.007015970114655;  // std dev = 6.073, 179.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0571762144940304;  // std dev = 6.917, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.024042267161871207;  // std dev = 7.021, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.252', 'seconds']
Parameter learned model CLL:-0.333275 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.756, 195, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.153, 67, 44], 'false,false,false,false': [5.322, 83, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.799, 67, 35], 'false,false,false,false': [5.826, 98, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [6.665, 132, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.484, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.549, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 35], 'true,false': [0.043, 86, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.11, 57, 24], 'false,false,false,false': [4.381, 61, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.811, 73, 35], 'false,false,false,false': [6.073, 127, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.917, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.021, 178, 87]}]
{'': [nan, 0.21333182435491255], 'false': [nan, 0.21333182435491266], 'false,false': [nan, 0.21333182435491255], 'false,false,false': [nan, 0.21333182435491266]}
{'': [nan, 0.2323345617689488], 'false': [nan, 0.2323345617689488], 'false,false': [nan, 0.2323345617689488], 'false,false,false': [0.23926629332034827, 0.22480473670949921]}
{'': [nan, 0.226080242421444], 'false': [nan, 0.226080242421444], 'false,false': [nan, 0.2260802424214435], 'false,false,false': [0.22579970981417474, 0.2262592107651563]}
{'': [nan, 0.22300422862774183], 'false': [nan, 0.22300422862774183], 'false,false': [nan, 0.22300422862774225], 'false,false,false': [0.22222222222222235, 0.22322186431294613]}
{'': [nan, 0.22953193331870952], 'false': [nan, 0.22953193331870952], 'false,false': [nan, 0.22953193331871005], 'false,false,false': [nan, 0.22953193331871005]}
{'': [nan, 0.22612311988635614], 'false': [nan, 0.22612311988635614], 'false,false': [nan, 0.22612311988635728], 'false,false,false': [nan, 0.2261231198863559]}
{'': [0.20515964999582434, 0.21245007439850744], 'false': [nan, 0.21245007439850744], 'false,false': [nan, 0.21245007439850744], 'false,false,false': [0.208504801097394, 0.21562933972983256], 'true': [2.0975615085205847e-05, 2.122731679450628e-05], 'true,true': [nan, 2.0975615085205847e-05], 'true,true,false': [nan, 2.0975615085205847e-05]}
{'': [nan, 0.17922499420635216], 'false': [nan, 0.17922499420635216], 'false,false': [nan, 0.17922499420635202], 'false,false,false': [0.13447515484749828, 0.20603926336256068]}
{'': [nan, 0.19449578019378977], 'false': [nan, 0.19449578019378852], 'false,false': [nan, 0.19449578019378852], 'false,false,false': [nan, 0.19449578019378852]}
{'': [nan, 0.18601843795373701], 'false': [nan, 0.18601843795373701], 'false,false': [nan, 0.18601843795373726], 'false,false,false': [nan, 0.18601843795373726]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 29.952
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( complex(E, G) )
%   | | | then return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.10304689428318584;  // std dev = 3.010, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | else return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(J, A), phenotype(I, K) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.13446472457319622;  // std dev = 3.898, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
%   | | | else return 0.22596502705353397;  // std dev = 4.498, 87.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | | then return 0.8205918853624764;  // std dev = 0.112, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.09037516750882998;  // std dev = 0.434, 147.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=38 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.8062915913115233;  // std dev = 0.101, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.15357711158958967;  // std dev = 0.037, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.17373164794835572;  // std dev = 1.583, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.00764631594218317;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.14041938263777273;  // std dev = 2.355, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | | else return 0.29395583135778086;  // std dev = 3.254, 43.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( complex(C, E) )
%   | | then return 0.5553664367462846;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.6480318438784085;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( enzyme(A, F), phenotype(C, G) )
%   | | then if ( interaction(A, H), interaction(H, A) )
%   | | | then return 0.08946455888253535;  // std dev = 1.318, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.22323835342017495;  // std dev = 3.154, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | else if ( phenotype(A, I), phenotype(C, J) )
%   | | | then return 0.01717704500301167;  // std dev = 3.204, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | | else return 0.08897251835312096;  // std dev = 5.026, 124.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=36 */
%   else if ( enzyme(A, K) )
%   | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | then return 0.7783617069859942;  // std dev = 0.111, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.18988903919515085;  // std dev = 0.015, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.5468360401794575;  // std dev = 0.884, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, F), complex(C, G) )
%   | | then return 0.28011936026009654;  // std dev = 0.444, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return 0.7217477940270998;  // std dev = 0.094, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16196622803560048;  // std dev = 0.072, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(H, C), phenotype(H, I) )
%   | | | then return 0.08699586399303147;  // std dev = 5.072, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   | | | else return -0.03471847397502518;  // std dev = 1.373, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.618772808838942;  // std dev = 0.331, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then return -0.09606135287478276;  // std dev = 0.249, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.010958077241800025;  // std dev = 1.615, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.1419078294601775;  // std dev = 3.648, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.34481116040874743;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.6005831550123062;  // std dev = 0.311, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1436407666459751;  // std dev = 0.099, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(E, A), location(E, F) )
%   | | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.5027488127146569;  // std dev = 1.297, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | else return 0.0669714701591748;  // std dev = 6.104, 192.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=55 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.08714269915784971;  // std dev = 1.362, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.14495486582934916;  // std dev = 1.303, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.3874064938820835;  // std dev = 0.256, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else return -0.11061000484433987;  // std dev = 0.314, 67.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=8 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(F, G) )
%   | | | then return 0.08279864788812201;  // std dev = 1.242, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.24370169604035016;  // std dev = 1.401, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(E, I), complex(E, J) )
%   | | | then return -0.08899936336630834;  // std dev = 1.431, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.07000304867075417;  // std dev = 5.178, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.3869694244567717;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.18883795588287852;  // std dev = 1.110, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03295618870838434;  // std dev = 1.202, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2643277648037022;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6399536205259759;  // std dev = 0.154, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.21902047316623513;  // std dev = 0.075, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.29281047440778957;  // std dev = 0.411, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( enzyme(F, I), location(A, J) )
%   | | | then return -0.02385840690131863;  // std dev = 2.299, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.1035020648439958;  // std dev = 4.472, 93.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | else if ( interaction(A, K) )
%   | | then return 0.04944639345041909;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.18010525657912474;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.08932872154022524;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.2522085608557627;  // std dev = 0.194, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return -0.07322357469523685;  // std dev = 0.214, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | else if ( interaction(A, G), interaction(H, D) )
%   | | | then return 0.12227846885730528;  // std dev = 2.485, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.020920467460075195;  // std dev = 5.018, 136.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=42 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.47061578457096565;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2477687977855032;  // std dev = 0.147, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.15876802270917983;  // std dev = 1.218, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.22169095354453722;  // std dev = 0.217, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.14735423574961562;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.17180665167418893;  // std dev = 0.216, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, F), enzyme(F, G) )
%   | | then return -0.10565977335735276;  // std dev = 0.198, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else return -0.001539422897060629;  // std dev = 0.354, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   else if ( complex(A, H) )
%   | then if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5081530791351958;  // std dev = 0.519, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1945926825011078;  // std dev = 0.092, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else return -0.07376989270299515;  // std dev = 0.302, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( interaction(L, L), complex(L, N) )
%   | | | then return 0.27503148536598004;  // std dev = 1.487, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.08088027719209137;  // std dev = 4.272, 91.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=35 */
%   | | else return -0.08857317165122999;  // std dev = 0.436, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), interaction(E, A) )
%   | then return -0.06074610754645762;  // std dev = 0.232, 54.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=15 */
%   | else if ( complex(A, D) )
%   | | then return -0.06589805274969311;  // std dev = 0.190, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(F, C), interaction(F, F) )
%   | | | then return -0.00630485283312847;  // std dev = 2.928, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.07323846231327028;  // std dev = 2.683, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   else if ( interaction(A, G), interaction(G, G) )
%   | then return -0.04184126176410685;  // std dev = 0.255, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( enzyme(H, J) )
%   | | | then return 0.06489212301053095;  // std dev = 0.607, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.4273146839719302;  // std dev = 1.187, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.05648648887623477;  // std dev = 3.330, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.1856192186925849;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.048', 'seconds']
Refined model CLL: -0.294217


******************************************
Best model found
******************************************
Results 

CLL : -0.278559 

AUC ROC : 0.889516 

AUC PR : 0.187738 

Precision : 0.173103 

Recall : 0.460993 

F1 : 0.251694 

Total Learning Time : 29.952 

Total Inference Time : 14.638093948364258 

Total revision time: 52.16220710372925
Best scored revision CLL: -0.294217


Results 

CLL : -0.278559 

AUC ROC : 0.889516 

AUC PR : 0.187738 

Precision : 0.173103 

Recall : 0.460993 

F1 : 0.251694 

Total Learning Time : 52.26758811569214 

Total Inference Time : 14.638093948364258 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.508
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19691115008322616;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17231893292611164;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
%   | | | else return 0.19107034153553243;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1535330213555206;  // std dev = 5.173, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   | | | else return 0.10811252147479443;  // std dev = 6.626, 208.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10066038655170612;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.08514983675377147;  // std dev = 7.251, 251.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09465263307234437;  // std dev = 8.378, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06135142087403454;  // std dev = 8.475, 337.000 (wgt'ed) examples reached here.  /* #neg=233 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7348992359427735;  // std dev = 0.002, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.265083094013235;  // std dev = 0.002, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09006198429471665;  // std dev = 3.886, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.09719842397904853;  // std dev = 5.083, 113.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.022400634804844062;  // std dev = 4.207, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
%   | | | else return 0.060979233543678055;  // std dev = 6.474, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06718961670713046;  // std dev = 7.539, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03807987497268753;  // std dev = 7.613, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.027', 'seconds']
Parameter learned model CLL:-0.33572 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 101, 52], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.173, 77, 41], 'false,false,false,false': [6.626, 145, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.445, 62, 29], 'false,false,false,false': [7.251, 176, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.378, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.475, 233, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 41], 'true,false': [0.002, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.886, 44, 23], 'false,false,false,false': [5.083, 73, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.207, 94, 41], 'false,false,false,false': [6.474, 125, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.539, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.613, 202, 104]}]
{'': [nan, 0.22400237668304385], 'false': [nan, 0.22400237668304232], 'false,false': [nan, 0.22400237668304385], 'false,false,false': [nan, 0.22400237668304232]}
{'': [nan, 0.22719697310931736], 'false': [nan, 0.2271969731093194], 'false,false': [nan, 0.22719697310931736], 'false,false,false': [0.2243581528471946, 0.23001189060642005]}
{'': [nan, 0.21725931550661604], 'false': [nan, 0.21725931550661604], 'false,false': [nan, 0.21725931550661748], 'false,false,false': [0.22679261490584987, 0.21110426346880548]}
{'': [nan, 0.21154279638008247], 'false': [nan, 0.21154279638008247], 'false,false': [nan, 0.2115427963800837], 'false,false,false': [0.21712353580485497, 0.2094554871937198]}
{'': [nan, 0.21932341283091686], 'false': [nan, 0.21932341283091686], 'false,false': [nan, 0.21932341283091922], 'false,false,false': [nan, 0.21932341283091922]}
{'': [nan, 0.21313451770382916], 'false': [nan, 0.21313451770382916], 'false,false': [nan, 0.21313451770382813], 'false,false,false': [nan, 0.2131345177038294]}
{'': [0.2346521687773893, 0.22748515387362833], 'true': [8.258156799040701e-08, 7.764192210726067e-08], 'false': [nan, 0.22748515387362833], 'false,false': [nan, 0.22748515387362833], 'false,false,false': [0.22543996435731758, 0.22867883154514693], 'true,true': [nan, 8.258156799040701e-08], 'true,true,false': [nan, 8.258156799040701e-08]}
{'': [nan, 0.18494881198323693], 'false': [nan, 0.18494881198323693], 'false,false': [nan, 0.18494881198323676], 'false,false,false': [0.1311288627102059, 0.22297406762989316]}
{'': [nan, 0.19599717143147116], 'false': [nan, 0.19599717143147075], 'false,false': [nan, 0.19599717143147075], 'false,false,false': [nan, 0.19599717143147075]}
{'': [nan, 0.18939996385436267], 'false': [nan, 0.18939996385436267], 'false,false': [nan, 0.18939996385436247], 'false,false,false': [nan, 0.18939996385436247]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.262
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.6697431379980635;  // std dev = 3.248, 69.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=56 */
%   | | | else return -0.14185106490048763;  // std dev = 8.94e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.08314893509951236;  // std dev = 4.574, 120.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6164540537090129;  // std dev = 0.311, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, D) )
%   | | | then return 0.7712882536218857;  // std dev = 0.152, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.16182004731756128;  // std dev = 0.098, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.7302664973147038;  // std dev = 0.026, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.029229234465366807;  // std dev = 2.756, 82.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=10 */
%   | else if ( phenotype(A, G), location(A, H) )
%   | | then if ( phenotype(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.7032547200048506;  // std dev = 1.376, 38.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=36 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04879609173981047;  // std dev = 1.997, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | | else return 0.20920203855365677;  // std dev = 3.416, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(D, F) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.6010790256512019;  // std dev = 0.041, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.1268416081629732;  // std dev = 0.586, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( complex(A, G), interaction(D, H) )
%   | | | then return 0.6314373934879166;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7584880247653673;  // std dev = 0.335, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.1451083279745812;  // std dev = 0.331, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.5838656502125992;  // std dev = 0.141, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5986623944650511;  // std dev = 0.049, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.033796263866519204;  // std dev = 3.211, 95.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=21 */
%   | | | else return 0.09868195430612232;  // std dev = 4.095, 114.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=32 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), enzyme(F, G) )
%   | | then return 0.3948064443264901;  // std dev = 0.165, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return 0.5781938580342463;  // std dev = 0.102, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.13494332427919228;  // std dev = 0.060, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, H), enzyme(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.562061660071929;  // std dev = 0.244, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, K), interaction(A, K) )
%   | | | then return -0.08940176756529951;  // std dev = 0.983, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.17159029046281976;  // std dev = 1.762, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4412579314959701;  // std dev = 0.048, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.006957801492665864;  // std dev = 1.494, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return 0.08869416925020603;  // std dev = 4.483, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, C), interaction(C, D) )
%   | | then return 0.4579664195135797;  // std dev = 0.176, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | | else if ( phenotype(C, E) )
%   | | | then return 0.0018224673757302387;  // std dev = 0.613, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.40382903806332276;  // std dev = 0.224, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, C) )
%   | | then return -0.14446669424785666;  // std dev = 0.065, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( interaction(F, C), phenotype(F, G) )
%   | | | then return 0.041266210673700024;  // std dev = 4.482, 199.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=53 */
%   | | | else return 0.21913297053601125;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   else if ( enzyme(A, H) )
%   | then return 0.01894045116364098;  // std dev = 0.227, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then return -0.04485450996642974;  // std dev = 0.740, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.029174533300132734;  // std dev = 0.508, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B), complex(C, D) )
%   | then return 0.3092814981881505;  // std dev = 0.052, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(C, D), interaction(C, C) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.11222411667786583;  // std dev = 0.029, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return -0.12973415282746997;  // std dev = 0.868, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(C, A), interaction(C, C) )
%   | | | then return 0.08801414234173119;  // std dev = 1.127, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.01769515464580736;  // std dev = 1.886, 62.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=14 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.29026082104584666;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.1898163986165914;  // std dev = 0.810, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, G), interaction(H, A) )
%   | | | then return 0.06728773966498895;  // std dev = 4.563, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
%   | | | else return 0.005908855025226484;  // std dev = 1.836, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.39823051142929733;  // std dev = 0.155, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1358879847459728;  // std dev = 0.047, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( phenotype(A, E), enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( location(G, H), location(A, H) )
%   | | | then return 0.27336495735188776;  // std dev = 0.177, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.007327701938255031;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.13572736377738007;  // std dev = 0.090, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.39433553643124397;  // std dev = 0.423, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.05355654941054093;  // std dev = 1.785, 43.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.08515408966284439;  // std dev = 3.546, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | | else return 0.1602984036906118;  // std dev = 1.406, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B), interaction(E, C) )
%   | then return 0.2040611717396569;  // std dev = 0.149, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(C, F), phenotype(C, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.008236949077488311;  // std dev = 0.879, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.08355955164686463;  // std dev = 1.644, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | else if ( interaction(A, I), enzyme(I, D) )
%   | | | then return 0.043577469088425046;  // std dev = 0.835, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.06793281564649804;  // std dev = 2.413, 63.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=13 */
%   else if ( interaction(J, A), enzyme(A, K) )
%   | then return 0.012965320795553275;  // std dev = 0.238, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.31236816515087146;  // std dev = 2.370, 55.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=43 */
%   | | | else return -0.1573766378691029;  // std dev = 0.520, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return 0.2674388178006061;  // std dev = 0.953, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.02690847346131109;  // std dev = 0.251, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.18763401767518811;  // std dev = 0.075, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.2940648773526334;  // std dev = 0.495, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.06763529704051156;  // std dev = 0.743, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else return -0.08450041268804924;  // std dev = 0.197, 129.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=11 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( location(I, K), location(A, K) )
%   | | | then return 0.009392439649033402;  // std dev = 3.058, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.1014061411982486;  // std dev = 2.067, 28.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.02895450499934268;  // std dev = 1.170, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.0731805729756595;  // std dev = 1.317, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.25877499590883996;  // std dev = 0.135, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.12180573291045123;  // std dev = 0.047, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), interaction(A, I) )
%   | | then return -0.045952717836514924;  // std dev = 0.156, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.40283018781052105;  // std dev = 1.326, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.18606261364965954;  // std dev = 0.351, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( location(A, K), interaction(A, L) )
%   | | then if ( enzyme(A, M) )
%   | | | then return 0.04831014661910634;  // std dev = 0.524, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.180372614284201;  // std dev = 1.167, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.011046206380051608;  // std dev = 3.065, 83.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=24 */
%   | | | else return 0.17613743922619846;  // std dev = 0.762, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '44.721', 'seconds']
Refined model CLL: -0.173029


******************************************
Best model found
******************************************
Results 

CLL : -0.175529 

AUC ROC : 0.979939 

AUC PR : 0.478521 

Precision : 0.345238 

Recall : 0.656604 

F1 : 0.452536 

Total Learning Time : 27.262 

Total Inference Time : 23.82523512840271 

Total revision time: 60.02200724601745
Best scored revision CLL: -0.173029


Results 

CLL : -0.175529 

AUC ROC : 0.979939 

AUC PR : 0.478521 

Precision : 0.345238 

Recall : 0.656604 

F1 : 0.452536 

Total Learning Time : 60.12738825798034 

Total Inference Time : 23.82523512840271 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.308
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2161255887960106;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13514175098015324;  // std dev = 5.952, 167.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=51 */
%   | | | else return 0.12471655820024541;  // std dev = 5.376, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16813847221282144;  // std dev = 5.316, 123.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=44 */
%   | | | else return 0.13711785503247914;  // std dev = 5.686, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10353855771433057;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.11118754001583515;  // std dev = 6.680, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11564988388513078;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09072768156026845;  // std dev = 7.762, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6819926987081268;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | else return -0.27452303126362493;  // std dev = 0.003, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07710929360159574;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.05588114764587837;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036276463635443;  // std dev = 4.340, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.02715786875454187;  // std dev = 5.757, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.030959429641630634;  // std dev = 7.161, 284.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02950466306816016;  // std dev = 7.127, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.111', 'seconds']
Parameter learned model CLL:-0.323529 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.952, 116, 51], 'false,false,false,false': [5.376, 98, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.316, 79, 44], 'false,false,false,false': [5.686, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.68, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.762, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.383, 2, 44], 'true,false': [0.003, 92, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 47, 25], 'false,false,false,false': [3.943, 48, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.34, 90, 44], 'false,false,false,false': [5.757, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.161, 192, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.127, 187, 92]}]
{'': [nan, 0.229829369104757], 'false': [nan, 0.22982936910475638], 'false,false': [nan, 0.229829369104757], 'false,false,false': [nan, 0.22982936910475638]}
{'': [nan, 0.21026101072237272], 'false': [nan, 0.21026101072237205], 'false,false': [nan, 0.21026101072237272], 'false,false,false': [0.21212664491376562, 0.20796025050463257]}
{'': [nan, 0.22464247679991928], 'false': [nan, 0.22464247679991928], 'false,false': [nan, 0.2246424767999186], 'false,false,false': [0.2297889155530288, 0.21989790154193953]}
{'': [nan, 0.21851688687528378], 'false': [nan, 0.21851688687528378], 'false,false': [nan, 0.2185168868752844], 'false,false,false': [0.21795458009449878, 0.21872352745868665]}
{'': [nan, 0.2270461504762289], 'false': [nan, 0.2270461504762289], 'false,false': [nan, 0.22704615047623092], 'false,false,false': [nan, 0.22704615047623092]}
{'': [nan, 0.22564925615823322], 'false': [nan, 0.22564925615823322], 'false,false': [nan, 0.2256492561582324], 'false,false,false': [nan, 0.22564925615823322]}
{'': [0.21718505351166503, 0.2229709762463708], 'false': [nan, 0.2229709762463708], 'false,false': [nan, 0.2229709762463708], 'false,false,false': [0.22665895061728436, 0.21900416584011095], 'true': [0.04160678577841474, 7.34838257103646e-08], 'true,true': [nan, 0.04160678577841474], 'true,true,false': [nan, 0.04160678577841474]}
{'': [nan, 0.17987547970461432], 'false': [nan, 0.17987547970461432], 'false,false': [nan, 0.17987547970461296], 'false,false,false': [0.14059617305304392, 0.21379452043196462]}
{'': [nan, 0.18054647360751333], 'false': [nan, 0.1805464736075147], 'false,false': [nan, 0.1805464736075147], 'false,false,false': [nan, 0.1805464736075147]}
{'': [nan, 0.1820710650801554], 'false': [nan, 0.1820710650801554], 'false,false': [nan, 0.18207106508015514], 'false,false,false': [nan, 0.18207106508015514]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.529
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(E, D) )
%   | | then return 0.858148935099512;  // std dev = 1.03e-07, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return -0.14185106490048766;  // std dev = 5.96e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.13314893509951237;  // std dev = 2.824, 40.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else return 0.20189893509951157;  // std dev = 5.374, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7304865328997829;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.15841182625763203;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.08823083370296485;  // std dev = 1.423, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.3341034952181263;  // std dev = 1.729, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.13805142457359512;  // std dev = 6.366, 206.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=63 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5665794957580575;  // std dev = 0.082, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.5387652643835169;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(E, G), interaction(D, G) )
%   | | | then return -0.11726903151089545;  // std dev = 0.832, 26.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=1 */
%   | | | else return 0.04198212113443967;  // std dev = 2.974, 58.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=14 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6784757431504115;  // std dev = 0.129, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return -0.1413891663146287;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.04234509008093623;  // std dev = 2.316, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.14190891447536588;  // std dev = 5.140, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.42031097913037;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, D), complex(C, E) )
%   | | then return -0.07367179953549591;  // std dev = 0.302, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else return -7.593563007277196E-4;  // std dev = 0.397, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6060083329476735;  // std dev = 0.148, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | else return -0.1640463372649118;  // std dev = 0.312, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( interaction(J, I) )
%   | | | then return 0.14924178904429392;  // std dev = 1.214, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.019050749077443176;  // std dev = 1.397, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return 0.07458649115008491;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.2097998645584202;  // std dev = 4.358, 80.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A), phenotype(A, F) )
%   | | then return 0.007331258245709904;  // std dev = 0.708, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.32131139384298774;  // std dev = 0.164, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.4725605036114916;  // std dev = 0.306, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.11210909487026288;  // std dev = 0.066, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3610749149666623;  // std dev = 0.091, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7437742650970982;  // std dev = 0.108, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16025616953366642;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.020148351560883907;  // std dev = 3.141, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.10874559062329468;  // std dev = 4.780, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.23818965476584208;  // std dev = 0.111, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3704791991994203;  // std dev = 0.158, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.002087362559074953;  // std dev = 0.609, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3495056410430562;  // std dev = 0.074, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( enzyme(A, H), complex(A, I) )
%   | | | then return 0.040795146000602155;  // std dev = 1.132, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return -0.06957978024542782;  // std dev = 2.331, 51.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.10721238176216115;  // std dev = 3.137, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
%   | | | else return 0.027908539662943713;  // std dev = 4.618, 131.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.38721052855210386;  // std dev = 0.183, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.15056159601164;  // std dev = 0.053, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G) )
%   | | then if ( phenotype(G, H), location(G, E) )
%   | | | then return 0.006612391758078106;  // std dev = 2.283, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.06836671832746576;  // std dev = 2.587, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | else if ( location(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.28757271405527124;  // std dev = 0.709, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2441715144159835;  // std dev = 0.026, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.2706628606319513;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.04692911745133184;  // std dev = 2.489, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.09262675227768816;  // std dev = 2.999, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.18690911996807186;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.25944679780841284;  // std dev = 0.179, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.5507212778383539;  // std dev = 0.624, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.16483757864491985;  // std dev = 0.068, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return -0.019745389514577133;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), phenotype(K, L) )
%   | | | then return 0.19887949367759314;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.04646164928833427;  // std dev = 1.740, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.11389001475583094;  // std dev = 2.552, 41.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | else return 0.014630018981009322;  // std dev = 3.544, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(A, D) )
%   | then return 1.241221629382418E-4;  // std dev = 0.174, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | else if ( location(A, E), phenotype(A, F) )
%   | | then return 0.1363273430293618;  // std dev = 0.440, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return 0.5395181540894566;  // std dev = 0.492, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, G), interaction(G, H) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.2826315863195771;  // std dev = 0.418, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1261194729636253;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return -0.027920591439105247;  // std dev = 3.125, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return -0.03298804060745186;  // std dev = 0.140, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.005630395130277872;  // std dev = 3.065, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.03588733063888238;  // std dev = 2.895, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), location(D, F) )
%   | then if ( location(A, F) )
%   | | then return 0.010986752155608456;  // std dev = 0.296, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | else return 0.09010983105988137;  // std dev = 0.441, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | else return -0.02836807062361206;  // std dev = 0.277, 74.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=22 */
%   else if ( interaction(A, G), phenotype(G, H) )
%   | then if ( interaction(G, I), interaction(J, A) )
%   | | then return 0.15109898406432837;  // std dev = 0.660, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(G, G), phenotype(A, H) )
%   | | | then return -0.24398667362092188;  // std dev = 0.729, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.01285111998221539;  // std dev = 2.209, 38.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=11 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then return 0.013773615943191056;  // std dev = 0.248, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return 0.03745431381293736;  // std dev = 1.409, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.11644459564505626;  // std dev = 2.805, 35.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '42.631', 'seconds']
Refined model CLL: -0.2489


******************************************
Best model found
******************************************
Results 

CLL : -0.242418 

AUC ROC : 0.967331 

AUC PR : 0.285604 

Precision : 0.235974 

Recall : 0.516245 

F1 : 0.323896 

Total Learning Time : 14.529 

Total Inference Time : 6.53016996383667 

Total revision time: 29.107633935928344
Best scored revision CLL: -0.2489


Results 

CLL : -0.242418 

AUC ROC : 0.967331 

AUC PR : 0.285604 

Precision : 0.235974 

Recall : 0.516245 

F1 : 0.323896 

Total Learning Time : 29.213014947891235 

Total Inference Time : 6.53016996383667 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.151
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18267723698630525;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15942557508957705;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.21220335286735648;  // std dev = 4.600, 90.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17736173093578989;  // std dev = 4.203, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.13349949819848397;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1279954547183324;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.09551323684943866;  // std dev = 6.797, 215.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09072877339659545;  // std dev = 7.621, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06739056000808562;  // std dev = 7.656, 271.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7286683016273438;  // std dev = 0.010, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2715013419116711;  // std dev = 0.016, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07807572649521641;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.09689921324729839;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.023377616878670043;  // std dev = 3.465, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.04973561312484143;  // std dev = 6.250, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05337813878111767;  // std dev = 7.036, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04298100816026819;  // std dev = 7.016, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.460', 'seconds']
Parameter learned model CLL:-0.343384 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.925, 108, 52], 'false,false,false,false': [4.6, 56, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.203, 48, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [6.797, 148, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.621, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 185, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 28], 'true,false': [0.016, 66, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [3.993, 44, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.465, 61, 28], 'false,false,false,false': [6.25, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.036, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.016, 163, 86]}]
{'': [nan, 0.21920968316126813], 'false': [nan, 0.21920968316126796], 'false,false': [nan, 0.21920968316126813], 'false,false,false': [nan, 0.21920968316126796]}
{'': [nan, 0.22566400000000042], 'false': [nan, 0.2256640000000002], 'false,false': [nan, 0.22566400000000042], 'false,false,false': [0.21937500000000015, 0.23506172839506106]}
{'': [nan, 0.22390746715654794], 'false': [nan, 0.22390746715654794], 'false,false': [nan, 0.2239074671565483], 'false,false,false': [0.23242737558113513, 0.2196940996872792]}
{'': [nan, 0.21732906795823606], 'false': [nan, 0.21732906795823606], 'false,false': [nan, 0.21732906795823653], 'false,false,false': [0.2261157024793394, 0.21486639759067422]}
{'': [nan, 0.2191592087451838], 'false': [nan, 0.2191592087451838], 'false,false': [nan, 0.21915920874518374], 'false,false,false': [nan, 0.21915920874518374]}
{'': [nan, 0.21628260094168186], 'false': [nan, 0.21628260094168186], 'false,false': [nan, 0.21628260094168117], 'false,false,false': [nan, 0.2162826009416815]}
{'': [0.2092190494814822, 0.2259311668949239], 'false': [nan, 0.2259311668949239], 'false,false': [nan, 0.2259311668949239], 'false,false,false': [0.22222222222222157, 0.23104389834068473], 'true': [3.5234606357649667e-06, 3.7381957313458774e-06], 'true,true': [nan, 3.5234606357649667e-06], 'true,true,false': [nan, 3.5234606357649667e-06]}
{'': [nan, 0.19140147647291333], 'false': [nan, 0.19140147647291333], 'false,false': [nan, 0.191401476472914], 'false,false,false': [0.13490565580978572, 0.21941780548244044]}
{'': [nan, 0.19962533350697467], 'false': [nan, 0.19962533350697462], 'false,false': [nan, 0.19962533350697462], 'false,false,false': [nan, 0.19962533350697462]}
{'': [nan, 0.19768479270087666], 'false': [nan, 0.19768479270087666], 'false,false': [nan, 0.1976847927008766], 'false,false,false': [nan, 0.1976847927008766]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.965
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(E, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( complex(C, F) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(H, G) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return 0.30259337954395676;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.15665639778607962;  // std dev = 6.488, 201.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=60 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( phenotype(A, E), interaction(F, A) )
%   | then if ( phenotype(D, E), phenotype(F, E) )
%   | | then return 0.10082938502097118;  // std dev = 0.430, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( complex(D, G), interaction(D, H) )
%   | | | then return 0.497722047155974;  // std dev = 1.161, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.2496299634174881;  // std dev = 1.261, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then return 0.060211610840799255;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.1637587168349838;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.23798938861857702;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | then return 0.7290358010362374;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(M, A), interaction(A, N) )
%   | | then return 0.03832454259845919;  // std dev = 0.390, 74.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=15 */
%   | | else return 0.1215853324459052;  // std dev = 0.450, 151.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5800837288428509;  // std dev = 0.180, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.7294922738081863;  // std dev = 0.101, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.19754491699375928;  // std dev = 2.298, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return -0.06367216826499784;  // std dev = 2.477, 67.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=7 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.054130582179008783;  // std dev = 2.317, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.15698646160513463;  // std dev = 5.219, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.42477231320318665;  // std dev = 0.132, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.5668305289145972;  // std dev = 0.130, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.12637495569994053;  // std dev = 0.041, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.4488024817976854;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.010322342054606793;  // std dev = 3.124, 62.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=12 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.03480163402902118;  // std dev = 3.035, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.15512677122220034;  // std dev = 5.132, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.1393401193402793;  // std dev = 0.962, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, F), interaction(F, C) )
%   | | then if ( complex(F, G), interaction(F, A) )
%   | | | then return 0.31173064282557517;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.36254891758795693;  // std dev = 0.110, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.45451489062076555;  // std dev = 0.103, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1184360277532476;  // std dev = 0.062, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( phenotype(H, J), enzyme(A, K) )
%   | | | then return 0.11333917517661352;  // std dev = 2.429, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.03445624222863206;  // std dev = 4.120, 98.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=24 */
%   | | else if ( location(A, L), complex(A, M) )
%   | | | then return 0.06278421774716061;  // std dev = 2.436, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.1217318793899052;  // std dev = 4.106, 76.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.23959024947085683;  // std dev = 0.273, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( interaction(A, F), interaction(E, E) )
%   | | then if ( enzyme(F, G), phenotype(E, H) )
%   | | | then return -0.24347702019896605;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.038251968881452075;  // std dev = 1.950, 34.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=5 */
%   | | else if ( recursion_proteinclass(E, B), interaction(A, I) )
%   | | | then return 0.6914101586490993;  // std dev = 0.377, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.0224119255821439;  // std dev = 4.627, 114.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return -0.0520114480834577;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.16880213024784926;  // std dev = 2.686, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.01322111225163131;  // std dev = 2.512, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return 0.1295088243444817;  // std dev = 1.965, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24267601375411305;  // std dev = 0.044, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(F, A), phenotype(A, G) )
%   | | | then return 0.6451547691890045;  // std dev = 0.598, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7766331222334394;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.21202986120192194;  // std dev = 0.053, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2813862018650713;  // std dev = 0.074, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6961053891857136;  // std dev = 0.199, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.08482562642602061;  // std dev = 3.238, 79.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=13 */
%   | | else if ( enzyme(A, L), phenotype(A, M) )
%   | | | then return 0.17733668661731994;  // std dev = 2.038, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.05702365190268258;  // std dev = 3.826, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(A, A), recursion_proteinclass(C, B) )
%   | then return 0.1823672692142339;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( phenotype(A, D), complex(A, E) )
%   | | then if ( phenotype(C, D) )
%   | | | then return -0.03898572971140867;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.2244898204952051;  // std dev = 0.700, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return -0.07897762296510356;  // std dev = 0.243, 31.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.2760775920653274;  // std dev = 0.195, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.593325899671386;  // std dev = 0.121, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.2087771459546702;  // std dev = 0.114, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return -0.024381130275477635;  // std dev = 2.210, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.05926448443325632;  // std dev = 5.434, 158.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.21353397656939826;  // std dev = 0.179, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5637929377096748;  // std dev = 1.873, 47.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=43 */
%   | | else if ( interaction(G, A), interaction(G, D) )
%   | | | then return 0.3710960216436458;  // std dev = 2.076, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | | else return -0.14010128115449208;  // std dev = 2.092, 48.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=6 */
%   | else if ( interaction(A, H), location(H, C) )
%   | | then if ( interaction(H, H) )
%   | | | then return -0.152372561397916;  // std dev = 0.206, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return -0.20725350487057642;  // std dev = 0.163, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else return -0.2570229770604551;  // std dev = 0.043, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( enzyme(A, I) )
%   | then return 0.060446510431870444;  // std dev = 0.518, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.2206484392773227;  // std dev = 0.986, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.13967066730503638;  // std dev = 0.044, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( phenotype(A, E), interaction(F, D) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return -0.025278574117649718;  // std dev = 1.327, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return -0.1266836555274546;  // std dev = 0.820, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else if ( interaction(I, D), recursion_proteinclass(I, B) )
%   | | | then return 0.4199797543745194;  // std dev = 0.221, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.005871745346754122;  // std dev = 3.810, 127.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=34 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.2807243654662407;  // std dev = 0.083, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.010711767801921393;  // std dev = 2.535, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.07536578285307728;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.11637136540593426;  // std dev = 1.890, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '28.024', 'seconds']
Refined model CLL: -0.232693


******************************************
Best model found
******************************************
Results 

CLL : -0.23048 

AUC ROC : 0.965397 

AUC PR : 0.25933 

Precision : 0.268132 

Recall : 0.431095 

F1 : 0.330623 

Total Learning Time : 22.965 

Total Inference Time : 17.463099718093872 

Total revision time: 47.91350061035156
Best scored revision CLL: -0.232693


Results 

CLL : -0.23048 

AUC ROC : 0.965397 

AUC PR : 0.25933 

Precision : 0.268132 

Recall : 0.431095 

F1 : 0.330623 

Total Learning Time : 48.01888162231445 

Total Inference Time : 17.463099718093872 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.16
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19021000380180236;  // std dev = 7.623, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19897362596672824;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.1688252660919494;  // std dev = 5.935, 158.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16763240229556597;  // std dev = 4.729, 97.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=35 */
%   | | | else return 0.13390054028425366;  // std dev = 5.915, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11758115830457934;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.1028010160138309;  // std dev = 7.052, 229.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09122678567728636;  // std dev = 7.653, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05874130641496471;  // std dev = 7.738, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7315458522701298;  // std dev = 0.026, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26891436950999825;  // std dev = 0.038, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.07476259404514625;  // std dev = 3.636, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | | else return 0.07149572665718061;  // std dev = 4.631, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05566551444640378;  // std dev = 3.755, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
%   | | | else return 0.02918172101985428;  // std dev = 6.016, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04055832116363762;  // std dev = 7.003, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02754870482943149;  // std dev = 7.043, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.258', 'seconds']
Parameter learned model CLL:-0.325122 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.623, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.644, 59, 34], 'false,false,false,false': [5.935, 105, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.729, 62, 35], 'false,false,false,false': [5.915, 107, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [7.052, 156, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.653, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.738, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 35], 'true,false': [0.038, 73, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.636, 39, 20], 'false,false,false,false': [4.631, 65, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.755, 65, 35], 'false,false,false,false': [6.016, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.003, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.043, 181, 87]}]
{'': [nan, 0.22179651535458392], 'false': [nan, 0.22179651535458392], 'false,false': [nan, 0.22179651535458392], 'false,false,false': [nan, 0.22179651535458392]}
{'': [nan, 0.2264725956730856], 'false': [nan, 0.22647259567308595], 'false,false': [nan, 0.2264725956730856], 'false,false,false': [0.2319343276679385, 0.22292100624900096]}
{'': [nan, 0.22430458503141587], 'false': [nan, 0.22430458503141587], 'false,false': [nan, 0.2243045850314163], 'false,false,false': [0.23057241571963913, 0.22004967998368283]}
{'': [nan, 0.2183409118025503], 'false': [nan, 0.2183409118025503], 'false,false': [nan, 0.21834091180254991], 'false,false,false': [0.22486615110053573, 0.21713946508497575]}
{'': [nan, 0.22020239085298712], 'false': [nan, 0.22020239085298712], 'false,false': [nan, 0.22020239085298807], 'false,false,false': [nan, 0.22020239085298807]}
{'': [nan, 0.21384464176364906], 'false': [nan, 0.21384464176364906], 'false,false': [nan, 0.21384464176364892], 'false,false,false': [nan, 0.21384464176364937]}
{'': [0.21927090471753005, 0.22220531717641884], 'false': [nan, 0.22220531717641884], 'false,false': [nan, 0.22220531717641884], 'false,false,false': [0.22407354208560784, 0.22106493782548564], 'true': [1.8759622921444523e-05, 1.9361592431762786e-05], 'true,true': [nan, 1.8759622921444523e-05], 'true,true,false': [nan, 1.8759622921444523e-05]}
{'': [nan, 0.1857332812766032], 'false': [nan, 0.1857332812766032], 'false,false': [nan, 0.1857332812766032], 'false,false,false': [0.14099586708067388, 0.21163669581741668]}
{'': [nan, 0.18368673085056164], 'false': [nan, 0.18368673085056217], 'false,false': [nan, 0.18368673085056217], 'false,false,false': [nan, 0.18368673085056217]}
{'': [nan, 0.1850980207047809], 'false': [nan, 0.1850980207047809], 'false,false': [nan, 0.1850980207047801], 'false,false,false': [nan, 0.1850980207047801]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 38.409
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 2.582, 30.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | else if ( interaction(A, H), location(H, I) )
%   | | | then return 0.09952824544433964;  // std dev = 3.991, 87.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=21 */
%   | | | else return 0.16926004621062252;  // std dev = 5.379, 135.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.6177538495937955;  // std dev = 0.376, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.15408900233591694;  // std dev = 0.077, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.20474294475866064;  // std dev = 3.455, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | else return 0.502937646480443;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8206979708000666;  // std dev = 0.154, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.1669733970640798;  // std dev = 0.115, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5898710455542403;  // std dev = 2.601, 37.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=28 */
%   | | | else return -0.16372902018622362;  // std dev = 0.000, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return 0.08966187522975963;  // std dev = 0.424, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.735891589995869;  // std dev = 0.072, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1583258044863773;  // std dev = 0.322, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( interaction(E, A), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.6601404441847486;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.10180808210381216;  // std dev = 2.467, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.258314278385828;  // std dev = 1.974, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6597450164470635;  // std dev = 0.145, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14212964521758156;  // std dev = 1.49e-08, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.07209407592251194;  // std dev = 1.331, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.1964089935799301;  // std dev = 3.096, 50.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5144906572661603;  // std dev = 0.102, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( complex(D, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.03446693418589482;  // std dev = 1.464, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.1075079004511042;  // std dev = 1.418, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( phenotype(A, H), phenotype(D, I) )
%   | | | then return -0.13643101768688012;  // std dev = 0.082, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.00869784491475056;  // std dev = 1.243, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | else if ( phenotype(A, J), complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5947297279896899;  // std dev = 0.520, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15295483651005393;  // std dev = 0.215, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1373323283807486;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.14510214889529427;  // std dev = 4.701, 132.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(D, F), phenotype(D, G) )
%   | | | then return 0.38512992661488527;  // std dev = 1.711, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.5578191670224447;  // std dev = 1.506, 53.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=50 */
%   | | else if ( interaction(A, H), interaction(D, H) )
%   | | | then return 0.6068367940433623;  // std dev = 0.198, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2186518375362056;  // std dev = 0.572, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else return -0.16083213236400742;  // std dev = 0.459, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
%   else if ( interaction(A, I), interaction(I, A) )
%   | then return 0.13070388011200684;  // std dev = 0.917, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return 0.43909790267857196;  // std dev = 0.820, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3422005373136017;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, F), enzyme(C, G) )
%   | | then if ( interaction(F, H), complex(A, I) )
%   | | | then return 0.023455383504921032;  // std dev = 0.622, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.12920944678552704;  // std dev = 0.182, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(C, J) )
%   | | | then return 0.2204994971387078;  // std dev = 0.986, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.03394496364729994;  // std dev = 1.071, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(K, A) )
%   | then if ( phenotype(A, L), recursion_proteinclass(K, B) )
%   | | then return 0.24224039727008165;  // std dev = 0.065, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.33224031195669074;  // std dev = 1.239, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return -0.001617378574818346;  // std dev = 4.112, 198.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=49 */
%   | else return -0.08954917055288072;  // std dev = 0.295, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.18239862708810836;  // std dev = 0.094, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.4237099274359161;  // std dev = 0.120, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.13501314251618013;  // std dev = 0.286, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | then if ( recursion_proteinclass(H, B), location(A, I) )
%   | | | then return 0.16989384981197758;  // std dev = 0.038, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3881598239845904;  // std dev = 0.333, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), interaction(A, J) )
%   | | | then return -0.12803333468425446;  // std dev = 1.224, 38.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=2 */
%   | | | else return 0.029308308851053917;  // std dev = 3.454, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | else if ( interaction(A, K) )
%   | | then return 0.1253777205404473;  // std dev = 0.997, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3018722564982019;  // std dev = 0.573, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then return -0.022191212210138252;  // std dev = 0.244, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, G) )
%   | | then if ( phenotype(F, H), phenotype(G, H) )
%   | | | then return 0.07398151353443289;  // std dev = 0.679, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.34825602726657723;  // std dev = 0.322, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(E, I), location(F, I) )
%   | | | then return 0.019475036351053226;  // std dev = 3.518, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
%   | | | else return 0.11287695743865636;  // std dev = 1.115, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(K, K) )
%   | | | then return -0.23441977314458992;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.010414980521876109;  // std dev = 0.346, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.02727125133287787;  // std dev = 1.212, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.06649679928042844;  // std dev = 0.684, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.14479973913772745;  // std dev = 0.045, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.29208217317849927;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( complex(A, G), interaction(A, H) )
%   | | then if ( complex(H, F), interaction(E, H) )
%   | | | then return -0.04364822799663497;  // std dev = 0.813, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else return 0.11117288299748783;  // std dev = 1.180, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.06152942238320748;  // std dev = 1.508, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return -0.007724462821262904;  // std dev = 2.237, 85.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=23 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.23678020029596641;  // std dev = 2.211, 46.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=33 */
%   | | | else return -0.15923287293844274;  // std dev = 0.270, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | else return 0.338445810720688;  // std dev = 0.829, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return 0.13620503740193482;  // std dev = 0.050, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.30194566311144094;  // std dev = 0.114, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else return -0.11492422573592771;  // std dev = 0.208, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(F, F), phenotype(F, H) )
%   | | then if ( interaction(A, F), complex(F, I) )
%   | | | then return -0.07696175589081282;  // std dev = 0.258, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.0518756029072824;  // std dev = 1.467, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(J, F), recursion_proteinclass(J, B) )
%   | | | then return 0.07290401872240247;  // std dev = 1.171, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.04118572118658242;  // std dev = 3.474, 172.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=39 */
%   | else if ( interaction(A, K) )
%   | | then return 7.044385503174877E-4;  // std dev = 0.699, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.2397147503609293;  // std dev = 0.494, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '51.620', 'seconds']
Refined model CLL: -0.182794


******************************************
Best model found
******************************************
Results 

CLL : -0.193857 

AUC ROC : 0.990959 

AUC PR : 0.444106 

Precision : 0.380952 

Recall : 0.737589 

F1 : 0.502415 

Total Learning Time : 38.409 

Total Inference Time : 25.38901400566101 

Total revision time: 71.16227721595764
Best scored revision CLL: -0.182794


Results 

CLL : -0.193857 

AUC ROC : 0.990959 

AUC PR : 0.444106 

Precision : 0.380952 

Recall : 0.737589 

F1 : 0.502415 

Total Learning Time : 71.28809904479981 

Total Inference Time : 25.38901400566101 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.46
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18519296025674564;  // std dev = 8.366, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.131375008748395;  // std dev = 4.816, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.1597657848455902;  // std dev = 6.919, 218.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11105157699729352;  // std dev = 5.362, 137.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=41 */
%   | | | else return 0.15096828725442824;  // std dev = 6.454, 186.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.1727644794786442;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.11713427182509184;  // std dev = 7.866, 281.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08186254930695987;  // std dev = 8.456, 333.000 (wgt'ed) examples reached here.  /* #neg=229 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11097783021211592;  // std dev = 8.180, 292.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7123683428570243;  // std dev = 0.987, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2638308441670272;  // std dev = 0.022, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1243460497253124;  // std dev = 3.582, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | | | else return 0.08887101509722056;  // std dev = 5.189, 117.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04084574720000242;  // std dev = 4.191, 126.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=41 */
%   | | | else return 0.057696776960826784;  // std dev = 6.418, 182.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03407254307774518;  // std dev = 7.706, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01696668895489715;  // std dev = 7.769, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.112', 'seconds']
Parameter learned model CLL:-0.334693 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.366, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.816, 78, 33], 'false,false,false,false': [6.919, 147, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.362, 96, 41], 'false,false,false,false': [6.454, 123, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.739, 20, 12], 'false,false,false,false': [7.866, 189, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.456, 229, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.18, 188, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.987, 1, 41], 'true,false': [0.022, 87, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.582, 33, 21], 'false,false,false,false': [5.189, 75, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.191, 85, 41], 'false,false,false,false': [6.418, 119, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.706, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.769, 218, 104]}]
{'': [nan, 0.22008623076619002], 'false': [nan, 0.22008623076618863], 'false,false': [nan, 0.22008623076619002], 'false,false,false': [nan, 0.22008623076618863]}
{'': [nan, 0.21618425550392326], 'false': [nan, 0.21618425550392337], 'false,false': [nan, 0.21618425550392326], 'false,false,false': [0.2089116143170193, 0.21961535224307982]}
{'': [nan, 0.21836914557933154], 'false': [nan, 0.21836914557933154], 'false,false': [nan, 0.21836914557932813], 'false,false,false': [0.20986356958989996, 0.22395819077845502]}
{'': [nan, 0.2219239931955905], 'false': [nan, 0.2219239931955905], 'false,false': [nan, 0.22192399319559375], 'false,false,false': [0.23437500000000017, 0.22018969184799742]}
{'': [nan, 0.21471723383479963], 'false': [nan, 0.21471723383479963], 'false,false': [nan, 0.2147172338348024], 'false,false,false': [nan, 0.2147172338348024]}
{'': [nan, 0.22917361872451034], 'false': [nan, 0.22917361872451034], 'false,false': [nan, 0.22917361872450964], 'false,false,false': [nan, 0.22917361872451017]}
{'': [0.21679988531376607, 0.23276554216228615], 'false': [nan, 0.23276554216228615], 'false,false': [nan, 0.23276554216228615], 'false,false,false': [0.23765432098765457, 0.23011176857330692], 'true': [0.02317619816015953, 5.762981308554044e-06], 'true,true': [nan, 0.02317619816015953], 'true,true,false': [nan, 0.02317619816015953]}
{'': [nan, 0.19083317757168938], 'false': [nan, 0.19083317757168938], 'false,false': [nan, 0.19083317757168938], 'false,false,false': [0.1393948842220597, 0.22632813942609029]}
{'': [nan, 0.18971289171604994], 'false': [nan, 0.18971289171604996], 'false,false': [nan, 0.18971289171604996], 'false,false,false': [nan, 0.18971289171604996]}
{'': [nan, 0.18745981007305956], 'false': [nan, 0.18745981007305956], 'false,false': [nan, 0.18745981007305926], 'false,false,false': [nan, 0.18745981007305926]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 34.574
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(C, D), complex(A, D) )
%   | | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.19148226843284571;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   else if ( interaction(A, E), phenotype(A, F) )
%   | then return 0.1273797043302816;  // std dev = 0.444, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | else if ( phenotype(A, G), enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.137652040689574;  // std dev = 5.694, 161.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then if ( enzyme(C, E), enzyme(A, E) )
%   | | then return 0.5263394517212514;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.8085019269917568;  // std dev = 0.225, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1553371299577788;  // std dev = 0.139, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   | | else if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.10549685086794668;  // std dev = 2.648, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return 0.187036678213965;  // std dev = 5.807, 155.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=55 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then return 0.59158188071911;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.09192486198490857;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(L, A), enzyme(A, M) )
%   | | | then return 0.17388627025504785;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.2953478323877498;  // std dev = 1.652, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(C, C) )
%   | then return 0.28328797188417276;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(C, E), phenotype(C, F) )
%   | | then return 0.35283641312668185;  // std dev = 0.611, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7290899843046266;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, G) )
%   | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.723780767837081;  // std dev = 0.058, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.16956582893504543;  // std dev = 0.375, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5869708539828336;  // std dev = 1.284, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1622279715439515;  // std dev = 0.110, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.14863885258998777;  // std dev = 5.187, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
%   | | | else return 0.37373853845892785;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then if ( interaction(A, A) )
%   | | then return 0.41967870606433355;  // std dev = 0.118, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.15118962865935923;  // std dev = 0.893, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( phenotype(A, D) )
%   | | then return 0.6987961295050082;  // std dev = 0.000913, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5473710954515842;  // std dev = 0.063, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6318348811496212;  // std dev = 0.073, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, H), interaction(H, F) )
%   | | | then return 0.02801982419348776;  // std dev = 3.476, 113.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=26 */
%   | | | else return -0.10122684206437092;  // std dev = 1.572, 33.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.08541898521620798;  // std dev = 3.008, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.1867214822845545;  // std dev = 4.177, 86.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.10868879866536052;  // std dev = 0.904, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.4079609676931903;  // std dev = 0.091, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( phenotype(A, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.6159428840506476;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.030529472652970336;  // std dev = 3.029, 67.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=17 */
%   | | else if ( phenotype(F, J) )
%   | | | then return -0.016093519684257197;  // std dev = 2.350, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | | else return -0.15950301129386865;  // std dev = 0.059, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.45706480649802783;  // std dev = 0.173, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0010406838013062416;  // std dev = 2.447, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | | | else return 0.10616511481744491;  // std dev = 4.564, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( complex(A, D), phenotype(A, E) )
%   | then return 0.05209037490825653;  // std dev = 0.272, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( phenotype(C, F), phenotype(A, G) )
%   | | then return -0.05187153607276156;  // std dev = 0.291, 25.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( interaction(A, H) )
%   | | | then return -0.01632185006673553;  // std dev = 1.180, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.007341038675764612;  // std dev = 1.759, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.3833272182473339;  // std dev = 0.088, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( location(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L), recursion_proteinclass(L, B) )
%   | | | then return 0.32922569565228;  // std dev = 1.208, 14.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | else return -0.028005552726130468;  // std dev = 2.817, 80.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.13139864575100021;  // std dev = 4.508, 101.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=41 */
%   | | | else return -0.06376278356479512;  // std dev = 1.881, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.29178386995912614;  // std dev = 0.091, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.32858441238168845;  // std dev = 0.198, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5056207958930865;  // std dev = 0.447, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.15684760341610182;  // std dev = 0.383, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3325796762058441;  // std dev = 0.236, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( enzyme(H, I) )
%   | | | then return -0.00520956872529719;  // std dev = 0.801, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.1469405056792714;  // std dev = 1.773, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.017166979339631305;  // std dev = 1.285, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.06122320132403028;  // std dev = 5.190, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( enzyme(C, D) )
%   | then return 0.0010097603335176113;  // std dev = 0.227, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | else if ( interaction(E, A), interaction(C, E) )
%   | | then return 0.44443538957772377;  // std dev = 0.681, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.10503038580029299;  // std dev = 0.324, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(A, H), interaction(G, A) )
%   | | then return -0.022763895978038344;  // std dev = 0.254, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( interaction(F, G), phenotype(F, I) )
%   | | | then return 0.09068546625284758;  // std dev = 4.521, 114.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=45 */
%   | | | else return -0.0170957991440774;  // std dev = 2.622, 57.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=16 */
%   | else if ( complex(A, J) )
%   | | then return -0.10441161188468291;  // std dev = 0.222, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.015332401056318223;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0336402642038911;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, E) )
%   | then return 0.09030862738777426;  // std dev = 0.271, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | else return 0.26624604952847336;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(G, H), interaction(I, A) )
%   | | | then return 0.18400148880977746;  // std dev = 1.622, 26.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=17 */
%   | | | else return 0.5523630570208241;  // std dev = 1.308, 39.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=38 */
%   | | else return -0.20850986343920735;  // std dev = 0.085, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.45267809005703813;  // std dev = 0.957, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.2549072143498426;  // std dev = 0.417, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.23658310103584174;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.028223855912992524;  // std dev = 3.425, 86.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(D, F), location(F, C) )
%   | | | then return 0.2309349637263799;  // std dev = 2.099, 53.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=47 */
%   | | | else return 0.5191012309826641;  // std dev = 1.097, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.25241313845165064;  // std dev = 0.896, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | | else return 0.18788608054179198;  // std dev = 0.657, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then return -0.1223540568565566;  // std dev = 0.238, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | | else return -0.22075394186086592;  // std dev = 0.062, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(J, A), enzyme(J, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.5665886882520845;  // std dev = 0.397, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.2712401179277565;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return 0.573179204594209;  // std dev = 0.287, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.621', 'seconds']
Refined model CLL: -0.207113


******************************************
Best model found
******************************************
Results 

CLL : -0.205129 

AUC ROC : 0.986617 

AUC PR : 0.449132 

Precision : 0.453659 

Recall : 0.701887 

F1 : 0.551111 

Total Learning Time : 34.574 

Total Inference Time : 29.180466175079346 

Total revision time: 72.57376440429687
Best scored revision CLL: -0.207113


Results 

CLL : -0.205129 

AUC ROC : 0.986617 

AUC PR : 0.449132 

Precision : 0.453659 

Recall : 0.701887 

F1 : 0.551111 

Total Learning Time : 72.69958623313903 

Total Inference Time : 29.180466175079346 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.256
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.18695826277820804;  // std dev = 4.950, 107.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=38 */
%   | | | else return 0.14946513468585118;  // std dev = 6.070, 170.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16168444721499273;  // std dev = 5.327, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.13944464626308892;  // std dev = 5.665, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.10605396200535175;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.1668436080919077;  // std dev = 6.485, 178.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0598741289597943;  // std dev = 8.005, 303.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05071858521620835;  // std dev = 7.993, 301.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7354898452345583;  // std dev = 0.015, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26468959033548256;  // std dev = 0.021, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return -7.48402465397817E-4;  // std dev = 3.199, 52.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=14 */
%   | | | else return 0.04365263620234816;  // std dev = 4.856, 111.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.034467665329025225;  // std dev = 4.315, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.09562317450924004;  // std dev = 5.515, 131.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027494748709022753;  // std dev = 7.153, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.062143022806970726;  // std dev = 6.918, 253.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.798', 'seconds']
Parameter learned model CLL:-0.328008 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.95, 69, 38], 'false,false,false,false': [6.07, 116, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.327, 80, 44], 'false,false,false,false': [5.665, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [6.485, 110, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.005, 211, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.993, 209, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.015, 0, 44], 'true,false': [0.021, 85, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.199, 38, 14], 'false,false,false,false': [4.856, 77, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 94, 44], 'false,false,false,false': [5.515, 83, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.153, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.918, 161, 92]}]
{'': [nan, 0.22543996435731922], 'false': [nan, 0.22543996435731875], 'false,false': [nan, 0.22543996435731922], 'false,false,false': [nan, 0.22543996435731875]}
{'': [nan, 0.22181965097942213], 'false': [nan, 0.2218196509794223], 'false,false': [nan, 0.22181965097942213], 'false,false,false': [0.22901563455323762, 0.21674740484429164]}
{'': [nan, 0.22488133521903006], 'false': [nan, 0.22488133521903006], 'false,false': [nan, 0.22488133521902826], 'false,false,false': [0.22881516633717425, 0.22128923328243555]}
{'': [nan, 0.2324920818914763], 'false': [nan, 0.2324920818914763], 'false,false': [nan, 0.23249208189147538], 'false,false,false': [0.22067930193282004, 0.23626189668939868]}
{'': [nan, 0.21148003524837558], 'false': [nan, 0.21148003524837558], 'false,false': [nan, 0.21148003524837658], 'false,false,false': [nan, 0.21148003524837658]}
{'': [nan, 0.2122499248415424], 'false': [nan, 0.2122499248415424], 'false,false': [nan, 0.21224992484154206], 'false,false,false': [nan, 0.21224992484154231]}
{'': [0.2248318963407321, 0.2078905889331535], 'true': [5.097681944767694e-06, 5.139451186785075e-06], 'false': [nan, 0.2078905889331535], 'false,false': [nan, 0.2078905889331535], 'false,false,false': [0.19674556213017708, 0.21248275302329298], 'true,true': [nan, 5.097681944767694e-06], 'true,true,false': [nan, 5.097681944767694e-06]}
{'': [nan, 0.1831964978266978], 'false': [nan, 0.1831964978266978], 'false,false': [nan, 0.1831964978266969], 'false,false,false': [0.13490608473538268, 0.23214865485750028]}
{'': [nan, 0.1758153451870527], 'false': [nan, 0.175815345187053], 'false,false': [nan, 0.175815345187053], 'false,false,false': [nan, 0.175815345187053]}
{'': [nan, 0.1891906142081774], 'false': [nan, 0.1891906142081774], 'false,false': [nan, 0.18919061420817648], 'false,false,false': [nan, 0.18919061420817648]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.775
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( phenotype(A, F), enzyme(A, G) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.08921948595311936;  // std dev = 0.973, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | else if ( interaction(H, A), enzyme(A, I) )
%   | | | then return 0.23996711691769368;  // std dev = 3.603, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | | | else return 0.13401100406502886;  // std dev = 5.896, 174.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( enzyme(F, G), enzyme(A, G) )
%   | | | then return -0.15430741385036487;  // std dev = 0.063, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.05415019946698058;  // std dev = 3.534, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.21944398247686708;  // std dev = 3.506, 52.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=20 */
%   | | | else return 0.13661952440526598;  // std dev = 5.028, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( location(A, D), location(C, D) )
%   | then return 0.11142260587450338;  // std dev = 0.429, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
%   | else if ( phenotype(C, E), location(C, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.6004495216418796;  // std dev = 0.896, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1770814145204591;  // std dev = 1.934, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | else return 0.13032636819640206;  // std dev = 0.444, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   else if ( enzyme(A, H), phenotype(A, I) )
%   | then return 0.07081086798288755;  // std dev = 0.417, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7686045206633727;  // std dev = 0.238, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17808595835735513;  // std dev = 1.05e-08, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.3603755801041831;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.17485521811323299;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.5277103389847625;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.3025439249793398;  // std dev = 0.872, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( complex(E, F), interaction(A, E) )
%   | | then if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.18657847746422743;  // std dev = 0.310, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.048597955754878866;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.2463534245296186;  // std dev = 1.731, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.055418318972037306;  // std dev = 3.765, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.4888166235724116;  // std dev = 0.141, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return 0.03248540558131115;  // std dev = 2.529, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | | else return 0.1230921892353927;  // std dev = 4.967, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4035880965409427;  // std dev = 0.095, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(E, C), complex(E, F) )
%   | | then if ( complex(C, G), phenotype(E, D) )
%   | | | then return 0.01665249300258572;  // std dev = 2.475, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.21696400250610276;  // std dev = 2.457, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | else return -0.05260847603540692;  // std dev = 0.376, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4065797342818702;  // std dev = 0.067, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return -0.03929840334601207;  // std dev = 1.471, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.08763774187163632;  // std dev = 2.058, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.2448819808341686;  // std dev = 1.815, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.11599934220549522;  // std dev = 4.268, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, A) )
%   | then return 0.3597444940928459;  // std dev = 0.111, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.2978011518057321;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.3330071558771038;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14610404272433627;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.04405326123959422;  // std dev = 2.200, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | | else return 0.058202224787928934;  // std dev = 6.699, 219.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=66 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.25184339414470847;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), complex(F, G) )
%   | | | then return 0.7261982543540051;  // std dev = 0.239, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.6516573395639534;  // std dev = 0.882, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.2220114685753386;  // std dev = 0.056, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2841717139093629;  // std dev = 0.063, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( interaction(K, J), interaction(J, K) )
%   | | | then return -0.02142610980142112;  // std dev = 1.223, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.12280635485539906;  // std dev = 1.363, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.0828899287139574;  // std dev = 3.018, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.03300849567506642;  // std dev = 4.142, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( enzyme(C, D) )
%   | then return 0.023904685565252288;  // std dev = 0.323, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.4261452795398139;  // std dev = 0.229, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A) )
%   | | | then return 0.026014257664238826;  // std dev = 2.303, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.2425631195595321;  // std dev = 2.569, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
%   else if ( complex(A, G) )
%   | then return 0.042290785174874605;  // std dev = 0.363, 52.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=18 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return -0.0827676229032208;  // std dev = 2.013, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.03231115718444856;  // std dev = 1.646, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.01474967156013281;  // std dev = 2.344, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.11167342948768458;  // std dev = 1.703, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), enzyme(A, F) )
%   | then if ( interaction(A, G) )
%   | | then return 0.12553806688675048;  // std dev = 0.372, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0.49367317626866686;  // std dev = 0.885, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(C, C) )
%   | | | then return 0.057185635513645104;  // std dev = 1.236, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.21405032711129587;  // std dev = 1.442, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else return 0.01584895004849846;  // std dev = 0.375, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.19231554938940112;  // std dev = 0.046, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( location(A, K), enzyme(A, L) )
%   | | then return 0.0055495528384449525;  // std dev = 0.378, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.23159879176233675;  // std dev = 0.146, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0660559540253124;  // std dev = 4.358, 121.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=27 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.16894940368968148;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(C, E), interaction(C, C) )
%   | | then return 0.028254967612979482;  // std dev = 0.365, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else return -0.058983467173971134;  // std dev = 0.341, 98.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=21 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5620759902066979;  // std dev = 0.167, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.2637365110260441;  // std dev = 0.066, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( location(A, J), location(H, J) )
%   | | | then return 0.2799957499154492;  // std dev = 1.222, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.11712971365300247;  // std dev = 1.882, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return -0.007078035569455491;  // std dev = 1.364, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.10177115931635582;  // std dev = 2.890, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '33.066', 'seconds']
Refined model CLL: -0.275305


******************************************
Best model found
******************************************
Results 

CLL : -0.284732 

AUC ROC : 0.857638 

AUC PR : 0.159032 

Precision : 0.195021 

Recall : 0.33935 

F1 : 0.247694 

Total Learning Time : 13.775 

Total Inference Time : 6.509623050689697 

Total revision time: 27.994721990585326
Best scored revision CLL: -0.275305


Results 

CLL : -0.284732 

AUC ROC : 0.857638 

AUC PR : 0.159032 

Precision : 0.195021 

Recall : 0.33935 

F1 : 0.247694 

Total Learning Time : 28.12054381942749 

Total Inference Time : 6.509623050689697 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.196731612264867;  // std dev = 7.542, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.1824746918231263;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.1839898433382803;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11641821450725195;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.15469442336425773;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11990378173669684;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.1362588940919186;  // std dev = 7.049, 217.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12097222062899939;  // std dev = 7.404, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06847501495171099;  // std dev = 7.574, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7276797612641926;  // std dev = 0.009, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27248136290603414;  // std dev = 0.012, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.011486755911980867;  // std dev = 3.667, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.10122590237065651;  // std dev = 4.908, 102.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08799020352627648;  // std dev = 3.233, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.07874258652393867;  // std dev = 6.022, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.022137007371981765;  // std dev = 7.063, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03186127239703233;  // std dev = 6.973, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.202', 'seconds']
Parameter learned model CLL:-0.362272 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.542, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.266, 52, 28], 'false,false,false,false': [6.133, 107, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.392, 62, 28], 'false,false,false,false': [6.143, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.449, 18, 9], 'false,false,false,false': [7.049, 140, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.404, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.574, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 28], 'true,false': [0.012, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.667, 46, 19], 'false,false,false,false': [4.908, 63, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.233, 43, 28], 'false,false,false,false': [6.022, 97, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.063, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.973, 161, 86]}]
{'': [nan, 0.2239444478888966], 'false': [nan, 0.22394444788889642], 'false,false': [nan, 0.2239444478888966], 'false,false,false': [nan, 0.22394444788889642]}
{'': [nan, 0.2278050812161584], 'false': [nan, 0.22780508121615844], 'false,false': [nan, 0.2278050812161584], 'false,false,false': [0.2274999999999993, 0.22795224977042972]}
{'': [nan, 0.22308497251724158], 'false': [nan, 0.22308497251724158], 'false,false': [nan, 0.2230849725172417], 'false,false,false': [0.2143175988335044, 0.2273233048613729]}
{'': [nan, 0.2282585008249622], 'false': [nan, 0.2282585008249622], 'false,false': [nan, 0.22825850082496282], 'false,false,false': [0.22222222222222202, 0.22897995926119652]}
{'': [nan, 0.2312857389506503], 'false': [nan, 0.2312857389506503], 'false,false': [nan, 0.23128573895064994], 'false,false,false': [nan, 0.23128573895064994]}
{'': [nan, 0.2223737944784419], 'false': [nan, 0.2223737944784419], 'false,false': [nan, 0.22237379447844227], 'false,false,false': [nan, 0.2223737944784423]}
{'': [0.21965148716497065, 0.22667127308059187], 'false': [nan, 0.22667127308059187], 'false,false': [nan, 0.22667127308059187], 'false,false,false': [0.20686390532544432, 0.23615916955017247], 'true': [2.72715640381449e-06, 2.4977173113231385e-06], 'true,true': [nan, 2.72715640381449e-06], 'true,true,false': [nan, 2.72715640381449e-06]}
{'': [nan, 0.20672555401283513], 'false': [nan, 0.20672555401283513], 'false,false': [nan, 0.20672555401283474], 'false,false,false': [0.14721201202201556, 0.23395972942163124]}
{'': [nan, 0.1933635576776274], 'false': [nan, 0.19336355767762695], 'false,false': [nan, 0.19336355767762695], 'false,false,false': [nan, 0.19336355767762695]}
{'': [nan, 0.19684356512502255], 'false': [nan, 0.19684356512502255], 'false,false': [nan, 0.1968435651250227], 'false,false,false': [nan, 0.1968435651250227]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.321
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(E, G), phenotype(A, G) )
%   | | | then return -0.016851064900487787;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return 0.22656998773109124;  // std dev = 2.103, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.6081489350995123;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.18314893509951125;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.23314893509951234;  // std dev = 2.739, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | | else return 0.12575456890232922;  // std dev = 3.730, 71.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7445033049084915;  // std dev = 0.129, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7401919213324014;  // std dev = 0.072, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( enzyme(F, G), interaction(F, F) )
%   | | | then return -0.04196601027228337;  // std dev = 2.091, 43.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=5 */
%   | | | else return 0.12200590624134229;  // std dev = 4.036, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
%   | | else if ( location(A, H) )
%   | | | then return 0.20497885898205717;  // std dev = 4.632, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
%   | | | else return 0.0374726478703973;  // std dev = 1.266, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return 0.29957763427476497;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.5674003111934718;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( interaction(A, H), interaction(H, H) )
%   | | then return -0.03773410775607657;  // std dev = 0.312, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | | else if ( interaction(F, F), complex(A, I) )
%   | | | then return 0.32490185418177897;  // std dev = 0.982, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08034698533160178;  // std dev = 4.916, 124.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=34 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( complex(A, K), phenotype(A, L) )
%   | | | then return 0.3245133437514645;  // std dev = 1.016, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.05941029148838965;  // std dev = 2.111, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | else if ( enzyme(A, M), complex(A, N) )
%   | | | then return 0.05124895654516963;  // std dev = 1.233, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.22199423187488487;  // std dev = 3.353, 48.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then if ( complex(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.434902900645047;  // std dev = 0.072, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5744336785605892;  // std dev = 0.156, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.12438593614703482;  // std dev = 0.696, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.556278297482971;  // std dev = 0.165, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.12897653532682735;  // std dev = 0.036, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( enzyme(A, F) )
%   | | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.7663733637431258;  // std dev = 0.427, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return -0.21498355184370024;  // std dev = 0.326, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( interaction(A, H), complex(H, I) )
%   | | | then return -0.018730181590030523;  // std dev = 2.254, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | | | else return 0.09021554895721699;  // std dev = 4.970, 123.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=37 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(D, E), phenotype(C, F) )
%   | then return 0.06656663162720622;  // std dev = 0.354, 66.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=22 */
%   | else return 0.1602686783111642;  // std dev = 0.420, 61.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=25 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( complex(G, H) )
%   | | then return 0.45228346060411123;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, G), enzyme(I, J) )
%   | | | then return 0.30253005447362846;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.055394584194010894;  // std dev = 1.446, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else if ( interaction(K, A) )
%   | | then if ( interaction(L, K), interaction(M, L) )
%   | | | then return 0.029177516075977055;  // std dev = 2.849, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.08929409424197932;  // std dev = 2.799, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.04980315111921857;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.015227264375718166;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( location(A, E), location(C, E) )
%   | then if ( interaction(F, C), interaction(F, A) )
%   | | then return -0.0259024835868926;  // std dev = 0.286, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else return 0.03884982088786866;  // std dev = 0.370, 46.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=14 */
%   | else if ( complex(A, G) )
%   | | then return 0.3120913210177217;  // std dev = 0.636, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.07599951162436984;  // std dev = 0.929, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.2597949457631585;  // std dev = 0.289, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return -0.05335969653596855;  // std dev = 2.020, 37.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | else return 0.11075028835556625;  // std dev = 1.128, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.009976945796200676;  // std dev = 2.217, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | | else return 0.10607766122191373;  // std dev = 4.410, 91.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5519502484110521;  // std dev = 0.186, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.21254269259807096;  // std dev = 0.080, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.11851720022427564;  // std dev = 0.296, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7053624686000604;  // std dev = 0.148, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20871531655058145;  // std dev = 0.061, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5548353738440267;  // std dev = 1.687, 36.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=33 */
%   | | | else return -0.23130662293802487;  // std dev = 0.452, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.04495474550533605;  // std dev = 2.456, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | | else return 0.34494228224062706;  // std dev = 1.254, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then if ( phenotype(A, E), complex(A, D) )
%   | | then return 0.24176402237649486;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.1523589493176869;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.261150514814931;  // std dev = 0.103, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G), interaction(H, A) )
%   | | then return 0.03784659043889285;  // std dev = 0.771, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.32066714517206374;  // std dev = 0.072, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), interaction(I, A) )
%   | | then if ( complex(A, J) )
%   | | | then return -0.13677785125770486;  // std dev = 0.102, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 3.335567392311042E-4;  // std dev = 1.486, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.0024720241485528785;  // std dev = 3.544, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | | | else return 0.05742792358230411;  // std dev = 3.785, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), phenotype(C, F) )
%   | | then return 0.21154167858680709;  // std dev = 0.119, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.06129818385496258;  // std dev = 0.648, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.2352021073430039;  // std dev = 0.035, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(G, A), interaction(G, G) )
%   | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | then if ( enzyme(A, I), complex(G, J) )
%   | | | then return 0.414178597872773;  // std dev = 0.061, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5832799568309681;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.17142312891625466;  // std dev = 0.067, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.2151325829816769;  // std dev = 0.109, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(L, A) )
%   | | | then return -0.0014945045019068356;  // std dev = 4.576, 164.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=44 */
%   | | | else return 0.07022275284293412;  // std dev = 2.384, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.16464765390519145;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(G, D), enzyme(G, H) )
%   | | | then return 0.08797414384297203;  // std dev = 1.021, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return -0.020336834282204615;  // std dev = 2.018, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.13439002179009807;  // std dev = 0.692, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | | else return -0.06195755144264713;  // std dev = 0.876, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then if ( phenotype(A, J) )
%   | | | then return -0.07627335401605846;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.24480283148853835;  // std dev = 0.410, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, K) )
%   | | | then return 0.027644219773567118;  // std dev = 4.626, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
%   | | | else return 0.21293523089840083;  // std dev = 0.975, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.127', 'seconds']
Refined model CLL: -0.242421


******************************************
Best model found
******************************************
Results 

CLL : -0.257565 

AUC ROC : 0.951016 

AUC PR : 0.237656 

Precision : 0.27533 

Recall : 0.441696 

F1 : 0.339213 

Total Learning Time : 15.321 

Total Inference Time : 6.614089012145996 

Total revision time: 29.357229928970337
Best scored revision CLL: -0.242421


Results 

CLL : -0.257565 

AUC ROC : 0.951016 

AUC PR : 0.237656 

Precision : 0.27533 

Recall : 0.441696 

F1 : 0.339213 

Total Learning Time : 29.4830517578125 

Total Inference Time : 6.614089012145996 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.281
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18645082189196507;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.11777452794207928;  // std dev = 5.613, 155.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=44 */
%   | | | else return 0.19831033986116048;  // std dev = 5.228, 118.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14813706283551484;  // std dev = 4.820, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   | | | else return 0.1143189736047289;  // std dev = 6.017, 171.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16411350463188187;  // std dev = 3.549, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | | | else return 0.13790303618979094;  // std dev = 6.610, 192.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10610968680149671;  // std dev = 7.579, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08559045311795953;  // std dev = 7.583, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7247963523565568;  // std dev = 0.032, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2741182551131931;  // std dev = 0.043, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03381339824592878;  // std dev = 4.120, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.07538186393720381;  // std dev = 4.266, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0564114453964377;  // std dev = 3.721, 98.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | else return 0.0641351246033629;  // std dev = 5.845, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.016662874965120096;  // std dev = 7.100, 279.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014834276030178032;  // std dev = 7.093, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.239', 'seconds']
Parameter learned model CLL:-0.327447 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.613, 111, 44], 'false,false,false,false': [5.228, 75, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.82, 69, 35], 'false,false,false,false': [6.017, 119, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.549, 34, 20], 'false,false,false,false': [6.61, 125, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.579, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.583, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.032, 0, 35], 'true,false': [0.043, 70, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.12, 58, 24], 'false,false,false,false': [4.266, 52, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.721, 63, 35], 'false,false,false,false': [5.845, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.1, 192, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.093, 189, 87]}]
{'': [nan, 0.22051975792096917], 'false': [nan, 0.2205197579209692], 'false,false': [nan, 0.22051975792096917], 'false,false,false': [nan, 0.2205197579209692]}
{'': [nan, 0.21712353580485347], 'false': [nan, 0.21712353580485497], 'false,false': [nan, 0.21712353580485347], 'false,false,false': [0.20328824141519294, 0.23161447859810447]}
{'': [nan, 0.21637496020660202], 'false': [nan, 0.21637496020660202], 'false,false': [nan, 0.21637496020660257], 'false,false,false': [0.2233520420218985, 0.21169907619722333]}
{'': [nan, 0.2289420216577971], 'false': [nan, 0.2289420216577971], 'false,false': [nan, 0.22894202165779595], 'false,false,false': [0.2331961591220851, 0.22759474310807215]}
{'': [nan, 0.22528883682554926], 'false': [nan, 0.22528883682554926], 'false,false': [nan, 0.22528883682554976], 'false,false,false': [nan, 0.22528883682554976]}
{'': [nan, 0.2246091296889503], 'false': [nan, 0.2246091296889503], 'false,false': [nan, 0.22460912968894986], 'false,false,false': [nan, 0.2246091296889503]}
{'': [0.22176703083826732, 0.21756531204990515], 'true': [2.885086395230425e-05, 2.598981994384226e-05], 'false': [nan, 0.21756531204990515], 'false,false': [nan, 0.21756531204990515], 'false,false,false': [0.20701963117192126, 0.2274999999999998], 'true,true': [nan, 2.885086395230425e-05], 'true,true,false': [nan, 2.885086395230425e-05]}
{'': [nan, 0.1920673086489434], 'false': [nan, 0.1920673086489434], 'false,false': [nan, 0.1920673086489436], 'false,false,false': [0.14126947587697183, 0.22479515808970332]}
{'': [nan, 0.1806863158911627], 'false': [nan, 0.1806863158911633], 'false,false': [nan, 0.1806863158911633], 'false,false,false': [nan, 0.1806863158911633]}
{'': [nan, 0.18229832372270813], 'false': [nan, 0.18229832372270813], 'false,false': [nan, 0.18229832372270688], 'false,false,false': [nan, 0.18229832372270688]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.8
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995115;  // std dev = 2.38e-07, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( complex(A, I), phenotype(G, J) )
%   | | | then return 0.14075763075168626;  // std dev = 3.054, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | else return 0.0414822684328457;  // std dev = 2.997, 60.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7306318776577896;  // std dev = 0.084, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4184394143923263;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( location(G, F), location(A, F) )
%   | | | then return 0.7973660118516136;  // std dev = 0.196, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.2649863602396666;  // std dev = 1.251, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.08939242171068196;  // std dev = 1.594, 51.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=3 */
%   | | | else return 0.12961565781500523;  // std dev = 3.126, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(J, K), interaction(I, J) )
%   | | | then return 0.2632424137566531;  // std dev = 3.350, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | | else return 0.12786630568440674;  // std dev = 3.312, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
%   | | else return 0.7994425991133259;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D) )
%   | then if ( recursion_proteinclass(E, B), enzyme(E, C) )
%   | | then return 0.5655659574007534;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F), interaction(D, F) )
%   | | | then return -0.07441805813435487;  // std dev = 0.849, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.09533892794571486;  // std dev = 3.192, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | else return -0.11230835352368433;  // std dev = 0.710, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H) )
%   | | then return 0.5492991921112369;  // std dev = 0.015, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7170477103046008;  // std dev = 0.088, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4422175448146704;  // std dev = 3.932, 71.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=46 */
%   | | | else return -0.1752685473144533;  // std dev = 0.285, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.31800529149874135;  // std dev = 1.176, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, A), phenotype(A, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.4149602077372145;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return -0.1211338720823642;  // std dev = 0.031, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.5426475739778852;  // std dev = 0.113, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(E, H), interaction(H, A) )
%   | | | then return -0.08559517892212698;  // std dev = 0.789, 16.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=1 */
%   | | | else return 0.23544339665651487;  // std dev = 2.545, 38.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=18 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( phenotype(A, K), location(I, L) )
%   | | | then return 0.23380893343947792;  // std dev = 2.342, 31.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | else return 0.13864514750882836;  // std dev = 2.815, 44.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=16 */
%   | | else if ( interaction(A, M), location(M, N) )
%   | | | then return 0.14702152207910674;  // std dev = 1.090, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.06563445434209363;  // std dev = 3.296, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.45325243011445576;  // std dev = 0.280, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.3036216244140072;  // std dev = 0.244, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.49037794132394985;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.16227531215702284;  // std dev = 0.582, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | | else return 0.047807599732886924;  // std dev = 5.402, 188.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=53 */
%   | else if ( enzyme(A, G) )
%   | | then if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.2517561628099052;  // std dev = 0.608, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37027581926292674;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.1278637856782012;  // std dev = 1.224, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return -0.03440883334787532;  // std dev = 0.801, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then return 3.684036436848429E-5;  // std dev = 0.318, 116.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5535406185435953;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.20112293323033278;  // std dev = 0.037, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, J), interaction(J, A) )
%   | | | then return -0.009588682709902246;  // std dev = 0.988, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.22687652418582788;  // std dev = 2.601, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( interaction(K, A), interaction(L, K) )
%   | | then if ( interaction(K, L), complex(L, M) )
%   | | | then return 0.01459153622329004;  // std dev = 2.515, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.1347939401427455;  // std dev = 2.271, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return -0.15951447660209325;  // std dev = 0.782, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.02192170640855005;  // std dev = 1.168, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.11299996759547727;  // std dev = 0.999, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(F, A), complex(F, G) )
%   | | | then return 0.5022447962507707;  // std dev = 0.648, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return 0.5968440404007945;  // std dev = 0.324, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.19397555489245963;  // std dev = 0.058, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3295351001834535;  // std dev = 0.280, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.07726647168123205;  // std dev = 0.809, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.03049271555805048;  // std dev = 0.972, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.015721825497961934;  // std dev = 2.594, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | | | else return 0.08365277756512055;  // std dev = 3.628, 79.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=27 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.20598200440501443;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.042555184261969255;  // std dev = 1.667, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | else return 0.1757000173041072;  // std dev = 1.311, 17.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.19750838486323818;  // std dev = 1.052, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.01003110166082261;  // std dev = 4.483, 167.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=38 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.05478194788654454;  // std dev = 1.014, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.19523363078377454;  // std dev = 0.065, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.025213706659733253;  // std dev = 0.717, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.1379841215256302;  // std dev = 1.266, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( interaction(E, C) )
%   | then return 0.0038427114258142475;  // std dev = 0.289, 89.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=30 */
%   | else return -0.21691917549265827;  // std dev = 0.526, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( phenotype(A, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.28250036251832983;  // std dev = 0.302, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.39362630474389515;  // std dev = 1.431, 21.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=18 */
%   | | | else return -0.17926886430799552;  // std dev = 0.381, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.0021236006307337437;  // std dev = 1.188, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.10520822018032108;  // std dev = 2.105, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.05291338658469821;  // std dev = 1.793, 23.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=9 */
%   | | | else return -0.047658970582037025;  // std dev = 2.548, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.17264590381449832;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, C) )
%   | | then return -0.08314487377121427;  // std dev = 0.190, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | else if ( phenotype(A, D), complex(A, E) )
%   | | | then return 0.23203852488426452;  // std dev = 0.742, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.011404706055571553;  // std dev = 1.975, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.27723852412660227;  // std dev = 0.242, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else return -0.1652463883579772;  // std dev = 0.160, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3432819062304775;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.019448344228067124;  // std dev = 1.575, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.06915177724276515;  // std dev = 3.934, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '46.020', 'seconds']
Refined model CLL: -0.235509


******************************************
Best model found
******************************************
Results 

CLL : -0.247221 

AUC ROC : 0.973638 

AUC PR : 0.340882 

Precision : 0.305206 

Recall : 0.602837 

F1 : 0.405244 

Total Learning Time : 22.8 

Total Inference Time : 14.007435083389282 

Total revision time: 44.493326812744144
Best scored revision CLL: -0.235509


Results 

CLL : -0.247221 

AUC ROC : 0.973638 

AUC PR : 0.340882 

Precision : 0.305206 

Recall : 0.602837 

F1 : 0.405244 

Total Learning Time : 44.544683843612674 

Total Inference Time : 14.007435083389282 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.478
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20714222369011687;  // std dev = 8.228, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.213370733542859;  // std dev = 5.667, 136.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=52 */
%   | | | else return 0.18236914371773977;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15397332100382857;  // std dev = 5.147, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | | else return 0.14256981827173018;  // std dev = 6.446, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08824979752462181;  // std dev = 4.456, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
%   | | | else return 0.10561682904063265;  // std dev = 7.105, 229.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08409705683874243;  // std dev = 8.377, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06329559408082741;  // std dev = 8.409, 325.000 (wgt'ed) examples reached here.  /* #neg=221 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7060200611978464;  // std dev = 0.989, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.27030773345430037;  // std dev = 0.010, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03869372057202361;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.048940444039723;  // std dev = 5.235, 127.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.09180904575223198;  // std dev = 3.946, 104.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=41 */
%   | | | else return 0.08075578463005184;  // std dev = 6.360, 176.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02671060009113555;  // std dev = 7.722, 319.000 (wgt'ed) examples reached here.  /* #neg=215 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03184392577231078;  // std dev = 7.657, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.425', 'seconds']
Parameter learned model CLL:-0.337926 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.228, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.667, 84, 52], 'false,false,false,false': [5.808, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.147, 75, 41], 'false,false,false,false': [6.446, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.456, 63, 29], 'false,false,false,false': [7.105, 154, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.377, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.409, 221, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.989, 1, 41], 'true,false': [0.01, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.981, 51, 23], 'false,false,false,false': [5.235, 87, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.946, 63, 41], 'false,false,false,false': [6.36, 113, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.722, 215, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.657, 203, 104]}]
{'': [nan, 0.2271969731093216], 'false': [nan, 0.22719697310931994], 'false,false': [nan, 0.2271969731093216], 'false,false,false': [nan, 0.22719697310931994]}
{'': [nan, 0.23209680618924972], 'false': [nan, 0.23209680618924777], 'false,false': [nan, 0.23209680618924972], 'false,false,false': [0.23615916955017255, 0.2279035792549302]}
{'': [nan, 0.2260894736831641], 'false': [nan, 0.2260894736831641], 'false,false': [nan, 0.22608947368316185], 'false,false,false': [0.22840620899172878, 0.22458670299550798]}
{'': [nan, 0.21920568449786196], 'false': [nan, 0.21920568449786196], 'false,false': [nan, 0.21920568449785943], 'false,false,false': [0.21585538752362934, 0.22046521150881684]}
{'': [nan, 0.2193058629349096], 'false': [nan, 0.2193058629349096], 'false,false': [nan, 0.21930586293490867], 'false,false,false': [nan, 0.21930586293490867]}
{'': [nan, 0.21758672045966787], 'false': [nan, 0.21758672045966787], 'false,false': [nan, 0.21758672045966854], 'false,false,false': [nan, 0.21758672045966818]}
{'': [0.22229634021022135, 0.215213111142722], 'true': [0.023280629514312423, 1.2942054781825864e-06], 'false': [nan, 0.215213111142722], 'false,false': [nan, 0.215213111142722], 'false,false,false': [0.21420745069393782, 0.21576043152086433], 'true,true': [nan, 0.023280629514312423], 'true,true,false': [nan, 0.023280629514312423]}
{'': [nan, 0.2001028593839007], 'false': [nan, 0.2001028593839007], 'false,false': [nan, 0.20010285938390066], 'false,false,false': [0.1497307812375238, 0.22982279915833057]}
{'': [nan, 0.18693041629968843], 'false': [nan, 0.18693041629968873], 'false,false': [nan, 0.18693041629968873], 'false,false,false': [nan, 0.18693041629968873]}
{'': [nan, 0.19095399303384605], 'false': [nan, 0.19095399303384605], 'false,false': [nan, 0.19095399303384641], 'false,false,false': [nan, 0.19095399303384641]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 44.163
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.834339411289988;  // std dev = 0.152, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, E), complex(E, F) )
%   | then if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, G), enzyme(H, I) )
%   | | | then return 0.07554023944733843;  // std dev = 1.978, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.19148226843284566;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( location(A, J), location(E, J) )
%   | | | then return 0.039967116917694;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.10814893509951219;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.10452574669371527;  // std dev = 3.579, 69.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=17 */
%   | | | else return 0.17522210583121858;  // std dev = 4.214, 82.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.7523157203253154;  // std dev = 0.052, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.3834183136958035;  // std dev = 0.929, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.8020538660394742;  // std dev = 0.136, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, H), interaction(I, A) )
%   | | | then return -0.04962453548945863;  // std dev = 2.148, 62.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=6 */
%   | | | else return 0.17248837099400546;  // std dev = 1.510, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( complex(K, L), phenotype(K, M) )
%   | | | then return 0.05060260649720077;  // std dev = 3.405, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   | | | else return 0.13746284944404355;  // std dev = 2.019, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(N, A), phenotype(A, P) )
%   | | | then return 0.12653833133503042;  // std dev = 4.253, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.16992060940545378;  // std dev = 3.563, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return 0.4108662929967621;  // std dev = 0.362, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.667618881727813;  // std dev = 0.060, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(F, G), enzyme(A, G) )
%   | | then return -0.0668017589748851;  // std dev = 0.247, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( interaction(F, F), phenotype(F, H) )
%   | | | then return -0.024896422683960896;  // std dev = 1.003, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.12852686935109792;  // std dev = 3.018, 56.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=18 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( interaction(K, I), interaction(I, K) )
%   | | | then return 0.17135465281528267;  // std dev = 5.116, 122.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=43 */
%   | | | else return 9.979217998859063E-4;  // std dev = 1.359, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.19119657315334898;  // std dev = 1.731, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.04946810850316059;  // std dev = 3.105, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, C), phenotype(A, E) )
%   | | then return 0.48197176373688067;  // std dev = 0.108, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.1114680766694814;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5472437013287845;  // std dev = 0.120, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, A) )
%   | then return -0.15006714490194098;  // std dev = 0.134, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.43109317626262206;  // std dev = 4.843, 121.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=81 */
%   | | | else return -0.1737004819874209;  // std dev = 0.336, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return -0.06582826858610609;  // std dev = 1.624, 21.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.07416747424393072;  // std dev = 1.396, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(C, D) )
%   | then return 0.117041763053646;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.40528237042278203;  // std dev = 0.076, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12203104801049242;  // std dev = 0.087, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(F, G), interaction(G, F) )
%   | | | then return 0.06759777221218108;  // std dev = 3.598, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
%   | | | else return -0.052432919614512324;  // std dev = 1.594, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5434922438417279;  // std dev = 1.526, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.1929352655233991;  // std dev = 0.314, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.04007024088719177;  // std dev = 1.858, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.15890102009635304;  // std dev = 3.709, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), complex(D, G) )
%   | | | then return 0.2712748985619644;  // std dev = 1.836, 37.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=29 */
%   | | | else return 0.536080799900001;  // std dev = 2.400, 70.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=63 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.24123974486664895;  // std dev = 0.389, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.5662851027577547;  // std dev = 0.324, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.15416058438759403;  // std dev = 0.426, 168.000 (wgt'ed) examples reached here.  /* #neg=168 */
%   else if ( interaction(I, A), complex(I, J) )
%   | then return 0.2843649810894638;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.19433720133481902;  // std dev = 0.393, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37821495749896145;  // std dev = 0.110, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1247202771457166;  // std dev = 0.053, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4038173285886123;  // std dev = 0.657, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.1535410509736267;  // std dev = 0.188, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(E, E) )
%   | | | then return -0.09197892904853905;  // std dev = 1.375, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.03165868775651707;  // std dev = 4.041, 131.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=42 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5653083251364909;  // std dev = 0.031, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.17006603932801972;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return 0.3590179815667188;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3433946076471011;  // std dev = 0.229, 72.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=64 */
%   | else return -0.1600914358432142;  // std dev = 0.084, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.3535338932373153;  // std dev = 0.163, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3114791583884785;  // std dev = 1.867, 30.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=24 */
%   | | | else return -0.16273427509348729;  // std dev = 0.411, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.16478062996333312;  // std dev = 0.663, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.16806616650161035;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.12923100195128662;  // std dev = 1.004, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.02686640259642272;  // std dev = 0.687, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.1256691034821679;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.15253152152263708;  // std dev = 0.051, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( location(A, F), phenotype(A, G) )
%   | then if ( location(H, F), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, G) )
%   | | | then return 0.31709418272919665;  // std dev = 1.361, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | | else return -0.19691654569423772;  // std dev = 0.460, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else return -0.10893569418204366;  // std dev = 0.298, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.3719710471216885;  // std dev = 0.267, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.09463196670606178;  // std dev = 0.036, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.022342783135100654;  // std dev = 2.789, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return -0.17616203810692907;  // std dev = 0.167, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(C, E), interaction(A, C) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.004032137852066575;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.1841669019843095;  // std dev = 0.152, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.02140442122529104;  // std dev = 0.224, 125.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=38 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then if ( interaction(A, I), interaction(I, G) )
%   | | then return 0.20901078891430241;  // std dev = 0.605, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, J), complex(G, K) )
%   | | | then return 9.328056857798246E-4;  // std dev = 0.617, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.08109694032310326;  // std dev = 1.619, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | else if ( interaction(L, A), phenotype(A, M) )
%   | | then return 0.01464147668136928;  // std dev = 0.214, 73.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=27 */
%   | | else if ( enzyme(A, N) )
%   | | | then return -0.14810987404420808;  // std dev = 1.081, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.03203499955408354;  // std dev = 2.166, 47.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=15 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '20.785', 'seconds']
Refined model CLL: -0.170387


******************************************
Best model found
******************************************
Results 

CLL : -0.170436 

AUC ROC : 0.994485 

AUC PR : 0.572658 

Precision : 0.394148 

Recall : 0.864151 

F1 : 0.541371 

Total Learning Time : 44.163 

Total Inference Time : 46.46668314933777 

Total revision time: 99.46642014122008
Best scored revision CLL: -0.170387


Results 

CLL : -0.170436 

AUC ROC : 0.994485 

AUC PR : 0.572658 

Precision : 0.394148 

Recall : 0.864151 

F1 : 0.541371 

Total Learning Time : 99.51777717208861 

Total Inference Time : 46.46668314933777 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17321742825019726;  // std dev = 7.938, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1948833360849405;  // std dev = 5.717, 142.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=51 */
%   | | | else return 0.15111302189209008;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12235192247870978;  // std dev = 5.499, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.1288164363226078;  // std dev = 5.718, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1387887464850686;  // std dev = 4.107, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
%   | | | else return 0.12794075731841145;  // std dev = 6.616, 196.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12847961210567196;  // std dev = 7.667, 255.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06585191034116246;  // std dev = 7.896, 286.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7084643943080766;  // std dev = 0.994, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2694247582150679;  // std dev = 0.046, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0744912337565406;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
%   | | | else return 0.08434877787877028;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0405534535647079;  // std dev = 4.316, 133.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=44 */
%   | | | else return 0.02330030126066082;  // std dev = 5.764, 156.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05110709325664023;  // std dev = 7.036, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01236611407457917;  // std dev = 7.198, 290.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.846', 'seconds']
Parameter learned model CLL:-0.323242 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.938, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.717, 91, 51], 'false,false,false,false': [5.298, 89, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.499, 97, 44], 'false,false,false,false': [5.718, 103, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.107, 48, 26], 'false,false,false,false': [6.616, 130, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.667, 163, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.896, 194, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.994, 1, 44], 'true,false': [0.046, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.04, 47, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.316, 89, 44], 'false,false,false,false': [5.764, 108, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.036, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.198, 198, 92]}]
{'': [nan, 0.2158003377744429], 'false': [nan, 0.21580033777444269], 'false,false': [nan, 0.2158003377744429], 'false,false,false': [nan, 0.21580033777444269]}
{'': [nan, 0.22383217993080015], 'false': [nan, 0.2238321799307951], 'false,false': [nan, 0.22383217993080015], 'false,false,false': [0.23016266613767009, 0.21591715976331302]}
{'': [nan, 0.21553796030805605], 'false': [nan, 0.21553796030805605], 'false,false': [nan, 0.21553796030805622], 'false,false,false': [0.21447085628680512, 0.21651421580035948]}
{'': [nan, 0.22460120581625714], 'false': [nan, 0.22460120581625714], 'false,false': [nan, 0.2246012058162576], 'false,false,false': [0.22790357925493146, 0.22332213862766911]}
{'': [nan, 0.23053137504289553], 'false': [nan, 0.23053137504289553], 'false,false': [nan, 0.2305313750428942], 'false,false,false': [nan, 0.2305313750428942]}
{'': [nan, 0.21801145032878574], 'false': [nan, 0.21801145032878574], 'false,false': [nan, 0.21801145032878452], 'false,false,false': [nan, 0.2180114503287857]}
{'': [0.23073159809351398, 0.22686694925810558], 'true': [0.021946549111920097, 2.7328298135622594e-05], 'false': [nan, 0.22686694925810558], 'false,false': [nan, 0.22686694925810558], 'false,false,false': [0.22665895061728403, 0.22704315886134055], 'true,true': [nan, 0.021946549111920097], 'true,true,false': [nan, 0.021946549111920097]}
{'': [nan, 0.17948966033587752], 'false': [nan, 0.17948966033587752], 'false,false': [nan, 0.17948966033587685], 'false,false,false': [0.1400287536244269, 0.21299562227079116]}
{'': [nan, 0.18679629010552465], 'false': [nan, 0.1867962901055234], 'false,false': [nan, 0.1867962901055234], 'false,false,false': [nan, 0.1867962901055234]}
{'': [nan, 0.1786464832997882], 'false': [nan, 0.1786464832997882], 'false,false': [nan, 0.17864648329978783], 'false,false,false': [nan, 0.17864648329978783]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 13.922
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | | then if ( complex(A, E) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, F), location(A, G) )
%   | | | then return 0.11968739663797247;  // std dev = 5.011, 130.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=34 */
%   | | | else return 0.18858371770820662;  // std dev = 5.044, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7194734122109542;  // std dev = 5.16e-08, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.14717612918593478;  // std dev = 0.059, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.13512175108043945;  // std dev = 0.716, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(D, D), phenotype(E, G) )
%   | | | then return -0.05824754343806114;  // std dev = 0.939, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | | else return 0.11567319324245463;  // std dev = 3.303, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8248748825216188;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.16572507462082445;  // std dev = 0.009, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), interaction(K, K) )
%   | | | then return 0.061607408999705494;  // std dev = 1.703, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.19354199457504032;  // std dev = 5.361, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( complex(A, E) )
%   | then if ( phenotype(C, F), phenotype(A, F) )
%   | | then return 0.09818683071695308;  // std dev = 0.355, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6459169813286832;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.19508428018868465;  // std dev = 2.299, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | else return 0.5659121945043438;  // std dev = 0.406, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then return 0.08971006080621953;  // std dev = 0.417, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7422623180872095;  // std dev = 0.360, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.16905392149933185;  // std dev = 0.071, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.4442820944915001;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.12783043783351622;  // std dev = 3.820, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.5331444159932521;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(D, A) )
%   | | then return -0.15351303931760335;  // std dev = 0.116, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else return 0.011683530203397121;  // std dev = 0.387, 75.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=16 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7024905983977636;  // std dev = 0.097, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.21573907157925368;  // std dev = 0.052, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else if ( interaction(H, A), interaction(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.18846238904576487;  // std dev = 1.534, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return -0.08051298352984966;  // std dev = 1.129, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.07577887460351666;  // std dev = 2.008, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.19244382125266749;  // std dev = 3.925, 69.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=28 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.011029155653804822;  // std dev = 0.287, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   else if ( interaction(D, A), location(D, E) )
%   | then if ( complex(D, F), interaction(G, D) )
%   | | then if ( complex(G, H) )
%   | | | then return 0.11625322106981524;  // std dev = 3.175, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.4735187907873621;  // std dev = 1.161, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( complex(A, I), interaction(J, D) )
%   | | | then return 7.63732857960984E-4;  // std dev = 2.211, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.05927491044674844;  // std dev = 3.620, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), interaction(M, K) )
%   | | | then return 0.45675987781627325;  // std dev = 1.112, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | else return 0.08399598808851734;  // std dev = 1.521, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return 0.004088912407655388;  // std dev = 1.335, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.1460989035922813;  // std dev = 2.037, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.3567508784093445;  // std dev = 0.077, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.588217209549652;  // std dev = 0.413, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( enzyme(G, H), enzyme(A, H) )
%   | | then return -0.17414303385823532;  // std dev = 0.180, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, I), complex(I, F) )
%   | | | then return -0.06689673384688577;  // std dev = 2.093, 42.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=7 */
%   | | | else return 0.028669581570324704;  // std dev = 3.129, 74.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=20 */
%   | else if ( enzyme(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K) )
%   | | | then return 0.17412723388990195;  // std dev = 1.270, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07615263246852885;  // std dev = 1.325, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.08381617962954713;  // std dev = 1.937, 21.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=8 */
%   | | | else return 0.016548889491146256;  // std dev = 4.594, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5474734965279819;  // std dev = 0.187, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.18601659247709923;  // std dev = 0.064, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( phenotype(E, G) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.10139981656311627;  // std dev = 0.701, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.14579130958600878;  // std dev = 0.733, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5118635516372332;  // std dev = 0.036, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.27340129930067025;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.4415134046421015;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.2501096978514895;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.05243696036924855;  // std dev = 4.479, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.18625355155038342;  // std dev = 0.141, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.3967280779550528;  // std dev = 0.391, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.15291388641297296;  // std dev = 0.127, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(F, F) )
%   | | | then return -0.09797829348122276;  // std dev = 1.341, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.05717879809589319;  // std dev = 1.272, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return -0.0036582655608240772;  // std dev = 1.600, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | else return 0.18495417331788014;  // std dev = 2.439, 35.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=17 */
%   | | else if ( location(A, K) )
%   | | | then return 0.025740837448010843;  // std dev = 4.568, 146.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=46 */
%   | | | else return -0.09109913993861377;  // std dev = 0.739, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.22353621032843835;  // std dev = 0.088, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, E), location(D, F) )
%   | | | then return -0.10261730370372393;  // std dev = 0.084, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.24486063144277023;  // std dev = 1.271, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | else if ( phenotype(A, G), phenotype(D, G) )
%   | | | then return -0.11067773080612948;  // std dev = 0.985, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.006846914823544269;  // std dev = 3.925, 107.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=29 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3741853857690239;  // std dev = 0.598, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.16665137270047353;  // std dev = 0.263, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.07192810147192412;  // std dev = 1.613, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return 0.14986979862957128;  // std dev = 2.843, 36.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=16 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.13904116506194014;  // std dev = 0.097, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2777739076481499;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( complex(E, F) )
%   | | then return 0.0631780857999086;  // std dev = 0.321, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.37754972181054597;  // std dev = 0.216, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( phenotype(A, I), complex(A, J) )
%   | | | then return 0.06285419213257815;  // std dev = 0.573, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.08955475398020467;  // std dev = 1.683, 32.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=4 */
%   | | else if ( interaction(K, A), phenotype(A, L) )
%   | | | then return -0.02920299684524699;  // std dev = 2.387, 77.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=18 */
%   | | | else return 0.00481170449117866;  // std dev = 4.915, 159.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=48 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.941', 'seconds']
Refined model CLL: -0.258417


******************************************
Best model found
******************************************
Results 

CLL : -0.265528 

AUC ROC : 0.916933 

AUC PR : 0.221743 

Precision : 0.269521 

Recall : 0.386282 

F1 : 0.317507 

Total Learning Time : 13.922 

Total Inference Time : 6.338453054428101 

Total revision time: 28.058533046722413
Best scored revision CLL: -0.258417


Results 

CLL : -0.265528 

AUC ROC : 0.916933 

AUC PR : 0.221743 

Precision : 0.269521 

Recall : 0.386282 

F1 : 0.317507 

Total Learning Time : 28.109890077590943 

Total Inference Time : 6.338453054428101 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.233
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.15990332106442504;  // std dev = 7.749, 285.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18654138069944232;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | | | else return 0.21117446573521004;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.2536583812375631;  // std dev = 3.945, 63.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=28 */
%   | | | else return 0.12600604236629495;  // std dev = 6.293, 183.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1485064450985414;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.12040804418725809;  // std dev = 6.676, 200.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06798862829064682;  // std dev = 7.716, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07905716154273836;  // std dev = 7.577, 259.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7120698261121702;  // std dev = 0.002, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.28790019392742144;  // std dev = 0.003, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07944347399729623;  // std dev = 4.678, 98.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=33 */
%   | | | else return 0.0900861885095058;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.037266337728149856;  // std dev = 3.342, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.0737458758371805;  // std dev = 6.142, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041060285128816605;  // std dev = 7.020, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.018514034213777886;  // std dev = 7.119, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.822', 'seconds']
Parameter learned model CLL:-0.343421 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.749, 199, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.818, 97, 52], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.945, 35, 28], 'false,false,false,false': [6.293, 125, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.676, 133, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.716, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.577, 173, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 28], 'true,false': [0.003, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.678, 65, 33], 'false,false,false,false': [4.025, 46, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.342, 53, 28], 'false,false,false,false': [6.142, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.02, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.119, 178, 86]}]
{'': [nan, 0.21069867651585175], 'false': [nan, 0.21069867651585172], 'false,false': [nan, 0.21069867651585175], 'false,false,false': [nan, 0.21069867651585172]}
{'': [nan, 0.2299305555555546], 'false': [nan, 0.2299305555555548], 'false,false': [nan, 0.2299305555555546], 'false,false,false': [0.2271969731093178, 0.23402970655718044]}
{'': [nan, 0.2273351938420991], 'false': [nan, 0.2273351938420991], 'false,false': [nan, 0.2273351938420988], 'false,false,false': [0.2470109972984389, 0.21638841619632765]}
{'': [nan, 0.22549957273866533], 'false': [nan, 0.22549957273866533], 'false,false': [nan, 0.22549957273866522], 'false,false,false': [0.23559999999999967, 0.2228165618965778]}
{'': [nan, 0.21418221515023847], 'false': [nan, 0.21418221515023847], 'false,false': [nan, 0.2141822151502385], 'false,false,false': [nan, 0.2141822151502385]}
{'': [nan, 0.22167914720835108], 'false': [nan, 0.22167914720835108], 'false,false': [nan, 0.22167914720835058], 'false,false,false': [nan, 0.22167914720835113]}
{'': [0.22353149249491075, 0.22538225798405556], 'false': [nan, 0.22538225798405556], 'false,false': [nan, 0.22538225798405556], 'false,false,false': [0.22334443981674298, 0.22812933941678257], 'true': [1.100415969774409e-07, 1.167480133416761e-07], 'true,true': [nan, 1.100415969774409e-07], 'true,true,false': [nan, 1.100415969774409e-07]}
{'': [nan, 0.19823020254593318], 'false': [nan, 0.19823020254593318], 'false,false': [nan, 0.19823020254593302], 'false,false,false': [0.13791340764442883, 0.22722548962942846]}
{'': [nan, 0.1925104430754953], 'false': [nan, 0.19251044307549536], 'false,false': [nan, 0.19251044307549536], 'false,false,false': [nan, 0.19251044307549536]}
{'': [nan, 0.19195603332047187], 'false': [nan, 0.19195603332047187], 'false,false': [nan, 0.19195603332047229], 'false,false,false': [nan, 0.19195603332047229]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.753
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( enzyme(A, F), phenotype(A, G) )
%   | | then return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.024815601766178884;  // std dev = 1.581, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( complex(J, K), interaction(L, A) )
%   | | | then return 0.3966104735610508;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.1914822684328457;  // std dev = 2.944, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.1302577786369263;  // std dev = 5.396, 147.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), phenotype(E, C) )
%   | | then if ( interaction(A, F), enzyme(A, G) )
%   | | | then return 0.6231832275650674;  // std dev = 0.902, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.7763224586222676;  // std dev = 0.181, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.8049468760588772;  // std dev = 0.160, 38.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=37 */
%   | else return -0.16500998981793757;  // std dev = 0.144, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7554270212133389;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, I) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.12544463852839138;  // std dev = 7.45e-09, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.0517679608801435;  // std dev = 3.073, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.17487478287829117;  // std dev = 2.000, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.44154144954495794;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5557381783176862;  // std dev = 0.103, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.11544817214948436;  // std dev = 0.023, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then if ( interaction(F, A), interaction(D, F) )
%   | | | then return -0.12562650250608798;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.06966429813762014;  // std dev = 3.201, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.11504978115509787;  // std dev = 4.013, 101.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | | else return 0.16910000125136326;  // std dev = 3.676, 59.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4790579796485473;  // std dev = 0.215, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(D, A) )
%   | | | then return -0.17694315345416248;  // std dev = 3.73e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.0923741917657228;  // std dev = 2.233, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.07498565841525254;  // std dev = 1.226, 31.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else return 0.04762762406139342;  // std dev = 1.671, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7036313112222535;  // std dev = 0.265, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.07435694045983794;  // std dev = 4.887, 146.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=43 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.13058999499761456;  // std dev = 1.190, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.4763142080449887;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4271917052040882;  // std dev = 0.223, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(C, F), location(A, G) )
%   | | then return -0.04344853115756335;  // std dev = 0.311, 80.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=14 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.008632939301326789;  // std dev = 0.980, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.4122991786407307;  // std dev = 0.763, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.6224455680384517;  // std dev = 1.487, 51.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=50 */
%   | | | else return -0.0931757806737575;  // std dev = 1.659, 28.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=4 */
%   | | else return -0.18153599571010268;  // std dev = 0.360, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | else if ( interaction(A, L) )
%   | | then return 0.005802739325203883;  // std dev = 0.889, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.021951518844317675;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.2492009518182726;  // std dev = 0.115, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), phenotype(E, H) )
%   | | | then return 0.5307527838406964;  // std dev = 0.219, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.6595650309729992;  // std dev = 0.252, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return -0.16133005856206742;  // std dev = 0.398, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.24314408984511832;  // std dev = 0.138, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(J, A), location(A, K) )
%   | | then if ( interaction(L, J), enzyme(L, M) )
%   | | | then return 0.1178649743685541;  // std dev = 1.828, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return 0.0355413975890214;  // std dev = 3.370, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | else if ( interaction(A, N), interaction(N, P) )
%   | | | then return 0.10183759405931224;  // std dev = 2.009, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
%   | | | else return 0.33864798819078024;  // std dev = 1.007, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3741978845824086;  // std dev = 0.199, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.15621824030371786;  // std dev = 0.069, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G) )
%   | | then return -0.06015473068473451;  // std dev = 0.272, 41.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=9 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.5443974112328752;  // std dev = 0.200, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2145618825643317;  // std dev = 0.157, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return -0.11323911661137784;  // std dev = 0.825, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.006152480185824666;  // std dev = 1.557, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.039746599695877495;  // std dev = 3.371, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | | else return 0.12246875309700274;  // std dev = 1.589, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.16460028012546898;  // std dev = 0.126, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.48025432038349497;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( interaction(A, F), interaction(F, F) )
%   | | then return -0.09161639316772392;  // std dev = 0.173, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.058458699442896465;  // std dev = 0.838, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.006164257372818626;  // std dev = 1.669, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3340586424335657;  // std dev = 0.314, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.11184073965072792;  // std dev = 0.094, 38.000 (wgt'ed) examples reached here.  /* #neg=38 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.11085862986718364;  // std dev = 2.050, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.04481261836491899;  // std dev = 3.406, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1492961403753623;  // std dev = 0.194, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( interaction(A, D), enzyme(D, E) )
%   | then if ( interaction(D, F), enzyme(F, G) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.09358638355074322;  // std dev = 0.490, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return -0.04090449534224368;  // std dev = 1.370, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
%   | | else if ( interaction(H, D), interaction(I, H) )
%   | | | then return -0.006696457804017653;  // std dev = 1.129, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return 0.11402158377424518;  // std dev = 0.669, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.43704286323554387;  // std dev = 0.372, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0013699243155021288;  // std dev = 3.394, 127.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=35 */
%   | | else if ( location(A, M) )
%   | | | then return 0.08865882359266408;  // std dev = 1.966, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return -0.05345609563763657;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( phenotype(D, E), complex(C, F) )
%   | then if ( interaction(A, G), interaction(G, H) )
%   | | then return -0.006450101116621866;  // std dev = 0.232, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( interaction(D, A), enzyme(A, I) )
%   | | | then return 0.23848604479498894;  // std dev = 0.798, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.044268054303245985;  // std dev = 1.841, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.23784425132169973;  // std dev = 0.137, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.06229275844586495;  // std dev = 0.236, 91.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=16 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.2731344333940712;  // std dev = 0.251, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(K, A), enzyme(K, L) )
%   | | then return 0.3328336177685594;  // std dev = 0.599, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, M), enzyme(M, N) )
%   | | | then return -0.017966729995222475;  // std dev = 1.531, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | | else return 0.05843797099055949;  // std dev = 2.351, 46.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '8.034', 'seconds']
Refined model CLL: -0.20736


******************************************
Best model found
******************************************
Results 

CLL : -0.221232 

AUC ROC : 0.973027 

AUC PR : 0.348049 

Precision : 0.314019 

Recall : 0.59364 

F1 : 0.410758 

Total Learning Time : 19.753 

Total Inference Time : 10.523334980010986 

Total revision time: 37.73244207954407
Best scored revision CLL: -0.20736


Results 

CLL : -0.221232 

AUC ROC : 0.973027 

AUC PR : 0.348049 

Precision : 0.314019 

Recall : 0.59364 

F1 : 0.410758 

Total Learning Time : 37.7837991104126 

Total Inference Time : 10.523334980010986 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.136
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1979926850995123;  // std dev = 7.578, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1488455107195589;  // std dev = 5.484, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.14847521871786615;  // std dev = 5.423, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10462944917567764;  // std dev = 4.970, 119.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=35 */
%   | | | else return 0.16913858911330748;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10158189031675269;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.14034558807270883;  // std dev = 6.574, 189.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08805570274794149;  // std dev = 7.673, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09242837688908595;  // std dev = 7.555, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7130706419110353;  // std dev = 0.983, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2592075061233443;  // std dev = 0.030, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07670192715704523;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.06951378979468228;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04769474421538061;  // std dev = 3.864, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.03183478380328529;  // std dev = 5.935, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07532927404325115;  // std dev = 6.820, 232.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014665210009715851;  // std dev = 7.056, 269.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.133', 'seconds']
Parameter learned model CLL:-0.34143 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.578, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.484, 95, 44], 'false,false,false,false': [5.423, 93, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.97, 84, 35], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.721, 45, 20], 'false,false,false,false': [6.574, 122, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.673, 182, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.555, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.983, 1, 35], 'true,false': [0.03, 66, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.864, 72, 35], 'false,false,false,false': [5.935, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.82, 145, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.056, 182, 87]}]
{'': [nan, 0.2243499755859384], 'false': [nan, 0.22434997558593836], 'false,false': [nan, 0.2243499755859384], 'false,false,false': [nan, 0.22434997558593836]}
{'': [nan, 0.21627768595041305], 'false': [nan, 0.21627768595041413], 'false,false': [nan, 0.21627768595041305], 'false,false,false': [0.21634490968376463, 0.21620891003460296]}
{'': [nan, 0.22094361352753758], 'false': [nan, 0.22094361352753758], 'false,false': [nan, 0.22094361352753802], 'false,false,false': [0.20761077084962806, 0.23000994387853838]}
{'': [nan, 0.2249444721835038], 'false': [nan, 0.2249444721835038], 'false,false': [nan, 0.22494447218350336], 'false,false,false': [0.21301775147928995, 0.2286617246050084]}
{'': [nan, 0.21887470569960643], 'false': [nan, 0.21887470569960643], 'false,false': [nan, 0.21887470569960576], 'false,false,false': [nan, 0.21887470569960576]}
{'': [nan, 0.22559863755457393], 'false': [nan, 0.22559863755457393], 'false,false': [nan, 0.22559863755457413], 'false,false,false': [nan, 0.22559863755457432]}
{'': [0.22537189047348882, 0.22719670771778877], 'false': [nan, 0.22719670771778877], 'false,false': [nan, 0.22719670771778877], 'false,false,false': [0.22837370242214525, 0.22618503276939478], 'true': [0.026848534208001002, 1.3311476156880616e-05], 'true,true': [nan, 0.026848534208001002], 'true,true,false': [nan, 0.026848534208001002]}
{'': [nan, 0.18719296022844492], 'false': [nan, 0.18719296022844492], 'false,false': [nan, 0.18719296022844462], 'false,false,false': [0.13953896937096974, 0.21876319733728292]}
{'': [nan, 0.20045831545304338], 'false': [nan, 0.2004583154530441], 'false,false': [nan, 0.2004583154530441], 'false,false,false': [nan, 0.2004583154530441]}
{'': [nan, 0.18509677536421054], 'false': [nan, 0.18509677536421054], 'false,false': [nan, 0.18509677536421149], 'false,false,false': [nan, 0.18509677536421149]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 28.402
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, C), enzyme(C, D) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, E) )
%   | | | then return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | | else return 0.25814893509951237;  // std dev = 2.191, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( complex(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then return 0.0702701472207245;  // std dev = 0.409, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.23314893509951234;  // std dev = 1.936, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.14614893509951143;  // std dev = 5.063, 125.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, D) )
%   | | then return 0.7962328503415326;  // std dev = 0.057, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return 0.3164690070900927;  // std dev = 1.187, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1562909951804509;  // std dev = 0.086, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8027540427408543;  // std dev = 0.102, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14406581619953593;  // std dev = 6.046, 179.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=55 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( location(A, H), location(F, H) )
%   | | then return 0.39143587717024514;  // std dev = 1.013, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.1644694494305814;  // std dev = 1.069, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.08578487415644506;  // std dev = 0.732, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else return 0.7987528934789686;  // std dev = 0.097, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5635220454812416;  // std dev = 0.238, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( phenotype(A, F), enzyme(E, G) )
%   | | then if ( phenotype(E, H), interaction(A, I) )
%   | | | then return -0.09106497502014223;  // std dev = 0.869, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.09459592537472435;  // std dev = 2.047, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | else if ( phenotype(E, J), interaction(A, K) )
%   | | | then return 0.2234422383543241;  // std dev = 2.859, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
%   | | | else return 0.14717099742730974;  // std dev = 5.264, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | else if ( interaction(L, A), enzyme(L, M) )
%   | | then if ( location(L, N) )
%   | | | then return -0.05152049032238008;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.14462675274814402;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(A, P), interaction(P, Q) )
%   | | | then return 0.16219821915849622;  // std dev = 0.925, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.005794849261417989;  // std dev = 1.653, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(C, D), recursion_proteinclass(C, B) )
%   | then return 0.5323630782234761;  // std dev = 0.309, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, E), complex(C, D) )
%   | | then return -0.1298761513650565;  // std dev = 0.218, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.3398485827479914;  // std dev = 1.491, 11.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=7 */
%   | | | else return 0.04809613095390334;  // std dev = 3.405, 71.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=18 */
%   else if ( interaction(A, G), location(G, H) )
%   | then return 0.0802218202085174;  // std dev = 0.402, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6345490300418227;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.22259382710103445;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.11784415638358665;  // std dev = 3.837, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   | | | else return 0.29618425354023004;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4546641181385956;  // std dev = 0.150, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D) )
%   | then if ( interaction(D, D), enzyme(A, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.09113749682729629;  // std dev = 0.755, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.006972595871939984;  // std dev = 1.002, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5523818998176906;  // std dev = 1.045, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return -0.017239497977647584;  // std dev = 3.629, 91.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=18 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.6463277782478035;  // std dev = 0.323, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1876428652208095;  // std dev = 0.136, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.08535106266739957;  // std dev = 1.982, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.18078478654203994;  // std dev = 3.989, 70.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4254651159351411;  // std dev = 0.147, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, A) )
%   | | then return -0.13857292485045586;  // std dev = 0.112, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 0.04152374185475155;  // std dev = 0.350, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), complex(A, I) )
%   | | then return 0.4134164780394614;  // std dev = 0.837, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( phenotype(A, J), location(F, K) )
%   | | | then return 0.2593935656621347;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07874919568208424;  // std dev = 1.954, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.4082683825210901;  // std dev = 0.381, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), location(A, N) )
%   | | | then return 0.06556605312915946;  // std dev = 5.124, 144.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=46 */
%   | | | else return 0.19346706876251316;  // std dev = 1.276, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5489114888283974;  // std dev = 0.177, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.21646766400965384;  // std dev = 0.057, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G) )
%   | | | then return -0.006701251011928903;  // std dev = 0.733, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5817824651787283;  // std dev = 0.727, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else return -0.2127544787542061;  // std dev = 0.063, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.31805750067039384;  // std dev = 3.086, 48.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=30 */
%   | | | else return -0.24183507884571592;  // std dev = 0.306, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.10487665157177917;  // std dev = 0.899, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.2902523541390161;  // std dev = 0.752, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.20504138517605622;  // std dev = 0.139, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.0459889063793266;  // std dev = 0.302, 68.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=14 */
%   else if ( phenotype(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.23580528546222856;  // std dev = 0.399, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(G, E), recursion_proteinclass(G, B) )
%   | | | then return 0.36207341365607526;  // std dev = 1.649, 32.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=27 */
%   | | | else return -0.18510416459106505;  // std dev = 0.352, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.37197577069544496;  // std dev = 0.713, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.08630480952535582;  // std dev = 1.230, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return -0.005641353832338094;  // std dev = 1.548, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | | else return 0.08857937763742571;  // std dev = 3.253, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( phenotype(A, D), complex(C, E) )
%   | then return -0.04131596398095866;  // std dev = 0.139, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | else return -0.014677850486977022;  // std dev = 0.250, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(G, H) )
%   | | | then return 0.4882337157964712;  // std dev = 0.498, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return 0.27810559849432137;  // std dev = 1.218, 20.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=17 */
%   | | else return -0.1716854632963096;  // std dev = 0.281, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( enzyme(A, K), phenotype(I, L) )
%   | | | then return 0.23072569750420505;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16474985832265507;  // std dev = 1.207, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.02201865837499774;  // std dev = 3.730, 85.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=27 */
%   | | | else return 0.14925703225836787;  // std dev = 1.049, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(A, E), location(E, C) )
%   | | | then return 0.24717028060214496;  // std dev = 0.519, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return -0.16762870473082522;  // std dev = 1.044, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( complex(D, F), enzyme(A, G) )
%   | | | then return 0.17418231984588511;  // std dev = 1.052, 17.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=13 */
%   | | | else return 0.41253138371701037;  // std dev = 2.097, 59.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=51 */
%   | else if ( phenotype(A, H) )
%   | | then return -0.13229898901980156;  // std dev = 0.282, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.2096553040854276;  // std dev = 0.366, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then return 0.17244278595192386;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return -0.3142538855549409;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '43.243', 'seconds']
Refined model CLL: -0.220839


******************************************
Best model found
******************************************
Results 

CLL : -0.24253 

AUC ROC : 0.981576 

AUC PR : 0.45278 

Precision : 0.178571 

Recall : 0.762411 

F1 : 0.289367 

Total Learning Time : 28.402 

Total Inference Time : 24.33724594116211 

Total revision time: 60.23351587104798
Best scored revision CLL: -0.220839


Results 

CLL : -0.24253 

AUC ROC : 0.981576 

AUC PR : 0.45278 

Precision : 0.178571 

Recall : 0.762411 

F1 : 0.289367 

Total Learning Time : 70.36073817062379 

Total Inference Time : 24.33724594116211 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.456
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18113030155914023;  // std dev = 8.391, 322.000 (wgt'ed) examples reached here.  /* #neg=218 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14052154135742362;  // std dev = 6.008, 170.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=52 */
%   | | | else return 0.13348976312889083;  // std dev = 6.038, 174.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1426454523925638;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.1331852208676967;  // std dev = 6.554, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16840574114667672;  // std dev = 4.252, 77.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=29 */
%   | | | else return 0.11307504190413172;  // std dev = 7.145, 235.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11131315092728272;  // std dev = 8.286, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10357945241527533;  // std dev = 8.208, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7252141253436695;  // std dev = 0.036, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27320005525927166;  // std dev = 0.053, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04523672703602337;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.04348747076351707;  // std dev = 5.262, 130.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.046620535693413324;  // std dev = 4.069, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.09503301541486425;  // std dev = 6.308, 171.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032278074874866294;  // std dev = 7.689, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06854458838098594;  // std dev = 7.388, 279.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.080', 'seconds']
Parameter learned model CLL:-0.346492 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.391, 218, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.008, 118, 52], 'false,false,false,false': [6.038, 122, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.249, 84, 41], 'false,false,false,false': [6.554, 135, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.252, 48, 29], 'false,false,false,false': [7.145, 160, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.286, 202, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.208, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.036, 0, 41], 'true,false': [0.053, 76, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.981, 51, 23], 'false,false,false,false': [5.262, 90, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.069, 78, 41], 'false,false,false,false': [6.308, 108, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.689, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.388, 175, 104]}]
{'': [nan, 0.2186644033795012], 'false': [nan, 0.21866440337949986], 'false,false': [nan, 0.2186644033795012], 'false,false,false': [nan, 0.21866440337949986]}
{'': [nan, 0.2109248242293142], 'false': [nan, 0.21092482422931352], 'false,false': [nan, 0.2109248242293142], 'false,false,false': [0.21231833910034728, 0.20953890870656752]}
{'': [nan, 0.21830226525199153], 'false': [nan, 0.21830226525199153], 'false,false': [nan, 0.2183022652519885], 'false,false,false': [0.22040836227375507, 0.21693802387895003]}
{'': [nan, 0.22215905801665778], 'false': [nan, 0.22215905801665778], 'false,false': [nan, 0.22215905801665706], 'false,false,false': [0.23477820880418201, 0.21726871332582195]}
{'': [nan, 0.22435261802550807], 'false': [nan, 0.22435261802550807], 'false,false': [nan, 0.22435261802550724], 'false,false,false': [nan, 0.22435261802550724]}
{'': [nan, 0.2283883950832333], 'false': [nan, 0.2283883950832333], 'false,false': [nan, 0.2283883950832324], 'false,false,false': [nan, 0.2283883950832332]}
{'': [0.22694187713721314, 0.21345001636679367], 'true': [3.159322039571166e-05, 3.720127604247091e-05], 'false': [nan, 0.21345001636679367], 'false,false': [nan, 0.21345001636679367], 'false,false,false': [0.21420745069393712, 0.2130177514792906], 'true,true': [nan, 3.159322039571166e-05], 'true,true,false': [nan, 3.159322039571166e-05]}
{'': [nan, 0.19486747871454405], 'false': [nan, 0.19486747871454405], 'false,false': [nan, 0.1948674787145438], 'false,false,false': [0.13913259936983854, 0.2326919866240195]}
{'': [nan, 0.18768795591326745], 'false': [nan, 0.1876879559132674], 'false,false': [nan, 0.1876879559132674], 'false,false,false': [nan, 0.1876879559132674]}
{'': [nan, 0.1956367903754172], 'false': [nan, 0.1956367903754172], 'false,false': [nan, 0.19563679037541812], 'false,false,false': [nan, 0.19563679037541812]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 36.627
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7672398441904213;  // std dev = 0.287, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(C, F), interaction(G, A) )
%   | | then return -0.008517731567154341;  // std dev = 0.340, 60.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=8 */
%   | | else if ( enzyme(A, D) )
%   | | | then return 0.10814893509951219;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.20814893509951235;  // std dev = 2.133, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7812258581764353;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7470378239884009;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=40 */
%   | | | else return -0.14185106490048766;  // std dev = 6.14e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return 0.03206197857777315;  // std dev = 1.818, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.15951879811321062;  // std dev = 3.920, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7498542485820702;  // std dev = 0.165, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(A, F), complex(E, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1462938268067299;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.057709364128704;  // std dev = 2.140, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( complex(D, G), interaction(D, D) )
%   | | | then return 0.23418426525663777;  // std dev = 2.082, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.10150317928260959;  // std dev = 3.693, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   | else if ( interaction(A, H), enzyme(H, I) )
%   | | then return 0.4975430422336417;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), complex(A, K) )
%   | | | then return 0.08988352128592735;  // std dev = 2.366, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.19058267146365154;  // std dev = 4.752, 113.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), enzyme(E, F) )
%   | | then return 0.6893334946099218;  // std dev = 0.098, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.7646192685713705;  // std dev = 0.051, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.16857878010314695;  // std dev = 0.229, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( complex(G, H), complex(A, H) )
%   | | then return 0.602292265400038;  // std dev = 0.070, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.20194918737780299;  // std dev = 1.007, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.03243631004794244;  // std dev = 2.057, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | | | else return 0.16734239279560265;  // std dev = 2.554, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.18134641073947316;  // std dev = 2.478, 30.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=11 */
%   | | | else return 0.09826109133777865;  // std dev = 4.237, 103.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), interaction(E, E) )
%   | then return 0.022314097454920905;  // std dev = 0.366, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | else return 0.08882424070354612;  // std dev = 0.387, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), enzyme(H, G) )
%   | | then if ( interaction(H, I), complex(A, J) )
%   | | | then return 0.02341706180438504;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.33738382520354077;  // std dev = 0.928, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.05207249946239077;  // std dev = 2.152, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | | else return 0.1806031492414129;  // std dev = 0.802, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return 0.26392713973632453;  // std dev = 0.364, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.11744584657834478;  // std dev = 3.041, 67.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | else return 0.17794063698201443;  // std dev = 3.087, 46.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=18 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.31321029923787536;  // std dev = 1.261, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else return 0.6073547319476476;  // std dev = 2.137, 83.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=78 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.20957644338805279;  // std dev = 0.390, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.27226858845652135;  // std dev = 1.195, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | else return -0.18153084200637426;  // std dev = 0.485, 170.000 (wgt'ed) examples reached here.  /* #neg=170 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( interaction(A, I) )
%   | | then return 0.2932102188694642;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.17671445225060353;  // std dev = 0.893, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else return 0.4461766707253836;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( complex(C, D), interaction(C, C) )
%   | then if ( complex(A, D), recursion_proteinclass(C, B) )
%   | | then return 0.382723588046532;  // std dev = 0.262, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, D) )
%   | | | then return -0.13492886993492373;  // std dev = 0.125, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.016932269663211433;  // std dev = 2.178, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.3446885388154866;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5989067695417469;  // std dev = 0.136, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | | then return 0.49285032160891107;  // std dev = 0.527, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.021933633856342245;  // std dev = 4.453, 194.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=53 */
%   else if ( complex(A, G) )
%   | then return 0.5842683269005718;  // std dev = 0.172, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.0694161569768898;  // std dev = 0.709, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42852465732794687;  // std dev = 0.146, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.17385694666771218;  // std dev = 0.084, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( complex(E, G), location(A, H) )
%   | | then if ( interaction(I, A) )
%   | | | then return -0.06931125574863659;  // std dev = 1.033, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.13173886386784373;  // std dev = 0.659, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(E, J) )
%   | | | then return 0.0655169991713196;  // std dev = 1.320, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.10468095008482134;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( phenotype(A, K), enzyme(A, L) )
%   | | then return 0.1268841236331188;  // std dev = 0.255, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.06097109404623326;  // std dev = 3.646, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | | else return -0.008277348766285136;  // std dev = 1.496, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2799087717925378;  // std dev = 0.170, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( interaction(F, A) )
%   | | then if ( enzyme(F, G), interaction(D, A) )
%   | | | then return 0.04529727169200424;  // std dev = 1.199, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.0334418348507133;  // std dev = 1.525, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.12172197346721855;  // std dev = 0.686, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.3131703570696069;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.3029533449929157;  // std dev = 0.653, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.02322142598339786;  // std dev = 2.001, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | else if ( location(A, L) )
%   | | | then return 0.025673843713283535;  // std dev = 3.686, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
%   | | | else return -0.03884319303481479;  // std dev = 1.579, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2813166088061274;  // std dev = 0.178, 37.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=35 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.10190205002283553;  // std dev = 0.197, 83.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=9 */
%   | | else if ( phenotype(A, H), enzyme(D, I) )
%   | | | then return 0.0935856084498433;  // std dev = 1.532, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.010419491307359693;  // std dev = 3.443, 128.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   else if ( interaction(A, J), interaction(K, A) )
%   | then return 0.2462301754087047;  // std dev = 0.885, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, L), complex(L, M) )
%   | | then if ( complex(A, M) )
%   | | | then return 0.007081333879390384;  // std dev = 0.685, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.016633151439906582;  // std dev = 0.782, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return 0.021270784662948516;  // std dev = 0.493, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08693311396001817;  // std dev = 1.615, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19641219786903014;  // std dev = 0.177, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, F) )
%   | | | then return 0.29024364868329866;  // std dev = 0.717, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.06775276824661929;  // std dev = 0.863, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | else if ( interaction(A, H), location(H, D) )
%   | | | then return -0.09810073161118571;  // std dev = 1.786, 93.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=7 */
%   | | | else return 0.010590209688270076;  // std dev = 3.661, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.43129665334731726;  // std dev = 0.231, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.22081118114057632;  // std dev = 0.202, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.07096155682599119;  // std dev = 1.292, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.12760397170060492;  // std dev = 1.403, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '5.898', 'seconds']
Refined model CLL: -0.199991


******************************************
Best model found
******************************************
Results 

CLL : -0.198108 

AUC ROC : 0.991128 

AUC PR : 0.578895 

Precision : 0.481383 

Recall : 0.683019 

F1 : 0.564743 

Total Learning Time : 36.627 

Total Inference Time : 31.063370943069458 

Total revision time: 76.59731202888489
Best scored revision CLL: -0.199991


Results 

CLL : -0.198108 

AUC ROC : 0.991128 

AUC PR : 0.578895 

Precision : 0.481383 

Recall : 0.683019 

F1 : 0.564743 

Total Learning Time : 86.72453432846069 

Total Inference Time : 31.063370943069458 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.292
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2014325171890647;  // std dev = 7.773, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1764126704569163;  // std dev = 5.781, 148.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=51 */
%   | | | else return 0.11853136257560705;  // std dev = 5.408, 143.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1450195413506954;  // std dev = 5.407, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.10090123015847435;  // std dev = 5.834, 165.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.20819124981018003;  // std dev = 3.862, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | else return 0.1638448578937925;  // std dev = 6.447, 178.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10220042070069578;  // std dev = 7.779, 268.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07058005661637917;  // std dev = 7.853, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7185802536839158;  // std dev = 0.067, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2827224954886429;  // std dev = 0.101, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return -0.00881650946269296;  // std dev = 4.292, 95.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=25 */
%   | | | else return 0.041965515010849976;  // std dev = 4.005, 76.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.036760531284025705;  // std dev = 4.225, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.07328386688760699;  // std dev = 5.616, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04631608549306496;  // std dev = 7.009, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006083561698617257;  // std dev = 7.193, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.918', 'seconds']
Parameter learned model CLL:-0.321585 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.773, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.781, 97, 51], 'false,false,false,false': [5.408, 102, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.407, 87, 44], 'false,false,false,false': [5.834, 117, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.862, 35, 26], 'false,false,false,false': [6.447, 112, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.779, 176, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.067, 0, 44], 'true,false': [0.101, 107, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.292, 70, 25], 'false,false,false,false': [4.005, 53, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.225, 86, 44], 'false,false,false,false': [5.616, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.009, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.193, 205, 92]}]
{'': [nan, 0.22543996435731922], 'false': [nan, 0.22543996435731875], 'false,false': [nan, 0.22543996435731922], 'false,false,false': [nan, 0.22543996435731875]}
{'': [nan, 0.21619961974941354], 'false': [nan, 0.2161996197494138], 'false,false': [nan, 0.21619961974941354], 'false,false,false': [0.22584915997078256, 0.20450877793535283]}
{'': [nan, 0.2142440701404872], 'false': [nan, 0.2142440701404872], 'false,false': [nan, 0.2142440701404884], 'false,false,false': [0.22320103658159451, 0.20627135688573686]}
{'': [nan, 0.2367006699461604], 'false': [nan, 0.2367006699461604], 'false,false': [nan, 0.2367006699461615], 'false,false,false': [0.24455791453910242, 0.23350608251245109]}
{'': [nan, 0.22579986506332853], 'false': [nan, 0.22579986506332853], 'false,false': [nan, 0.22579986506332844], 'false,false,false': [nan, 0.22579986506332844]}
{'': [nan, 0.2218500020118137], 'false': [nan, 0.2218500020118137], 'false,false': [nan, 0.2218500020118133], 'false,false,false': [nan, 0.2218500020118137]}
{'': [0.20711825469579254, 0.20216028990628063], 'true': [0.00010240059786805553, 9.58283920321106e-05], 'false': [nan, 0.20216028990628063], 'false,false': [nan, 0.20216028990628063], 'false,false,false': [0.19390581717451522, 0.21104570637119088], 'true,true': [nan, 0.00010240059786805553], 'true,true,false': [nan, 0.00010240059786805553]}
{'': [nan, 0.18326897750058044], 'false': [nan, 0.18326897750058044], 'false,false': [nan, 0.18326897750057894], 'false,false,false': [0.1372980147795101, 0.22531402585813923]}
{'': [nan, 0.18263460114030322], 'false': [nan, 0.1826346011403035], 'false,false': [nan, 0.1826346011403035], 'false,false,false': [nan, 0.1826346011403035]}
{'': [nan, 0.17419595086685877], 'false': [nan, 0.17419595086685877], 'false,false': [nan, 0.17419595086685835], 'false,false,false': [nan, 0.17419595086685835]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.624
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(A, E) )
%   | | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.8258908705833826;  // std dev = 0.984, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(G, A), phenotype(G, H) )
%   | | | then return 0.06327714022771751;  // std dev = 3.566, 78.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=16 */
%   | | | else return 0.13474467978036342;  // std dev = 4.337, 94.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(C, D) )
%   | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7194734122109543;  // std dev = 2.98e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13932179982498363;  // std dev = 0.045, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(E, F) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.15619012026854148;  // std dev = 1.466, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.22270968675445896;  // std dev = 2.586, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.13595876170970408;  // std dev = 5.940, 190.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=56 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5683478489330074;  // std dev = 0.093, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5772885127505548;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G), complex(E, H) )
%   | | | then return 0.04740415258990602;  // std dev = 2.215, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | else return -0.13767742182029263;  // std dev = 0.131, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return 0.08828522469980563;  // std dev = 3.522, 73.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=20 */
%   | | | else return 0.17048316270763647;  // std dev = 5.071, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then return 0.06566714849102794;  // std dev = 0.360, 97.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=29 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( complex(E, F), phenotype(A, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.7064138570901619;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.17033503830834984;  // std dev = 0.054, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( phenotype(A, I) )
%   | | | then return -0.018904395542751983;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.05705619661319214;  // std dev = 1.697, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( enzyme(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.5889685968922084;  // std dev = 0.995, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.16029613027261957;  // std dev = 0.030, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.14598644803058708;  // std dev = 3.537, 60.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=22 */
%   | | | else return 0.2422727058709681;  // std dev = 2.610, 29.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.4383235416824578;  // std dev = 0.132, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.37805899733908865;  // std dev = 0.107, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13474811404979362;  // std dev = 0.081, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( complex(A, G), complex(F, G) )
%   | | | then return -0.07571399223211218;  // std dev = 1.090, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.05550546395193329;  // std dev = 2.589, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | else if ( interaction(H, A), complex(A, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.3598272196554627;  // std dev = 0.091, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.04161246120830449;  // std dev = 3.395, 79.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=20 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.19701124791510918;  // std dev = 2.434, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.09038243399832041;  // std dev = 3.799, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3180957205199078;  // std dev = 0.046, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then if ( interaction(A, G), interaction(E, G) )
%   | | | then return -0.1502776493180815;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.03921877997335925;  // std dev = 1.179, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( complex(E, H), complex(A, I) )
%   | | | then return 0.14216395528379153;  // std dev = 1.126, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.003650519118424365;  // std dev = 2.578, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | else if ( location(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5225417383412759;  // std dev = 0.424, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.16350714675996403;  // std dev = 0.430, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else if ( location(A, M) )
%   | | | then return 0.10357861106248478;  // std dev = 4.818, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
%   | | | else return 0.31741829559984197;  // std dev = 0.650, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49311101983661454;  // std dev = 0.210, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.1830936658702957;  // std dev = 0.058, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   else if ( interaction(A, E), interaction(F, A) )
%   | then if ( interaction(E, G), interaction(H, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.37899878622980515;  // std dev = 0.320, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03212291977605283;  // std dev = 1.452, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(I, F) )
%   | | | then return -0.1411511211602135;  // std dev = 0.448, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07049601750060308;  // std dev = 1.146, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( enzyme(A, J), phenotype(A, K) )
%   | | then return 0.2153924837120325;  // std dev = 0.669, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return -0.042242273390305694;  // std dev = 1.333, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.08221067059264091;  // std dev = 4.037, 88.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), complex(E, F) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.1741831740384157;  // std dev = 0.040, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.07583361622051579;  // std dev = 0.251, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | else if ( phenotype(C, G) )
%   | | then if ( phenotype(A, H), complex(C, I) )
%   | | | then return -0.044193110289087775;  // std dev = 0.707, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.09947352901326989;  // std dev = 1.056, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else return -0.09228451833689766;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.21666322523785253;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.23514770039806845;  // std dev = 0.090, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.042668204920918364;  // std dev = 2.840, 75.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=23 */
%   | | | else return 0.006909660303577574;  // std dev = 4.723, 142.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=41 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, C) )
%   | then return 0.14546006622859708;  // std dev = 0.028, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21578548721238694;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, G), interaction(H, A) )
%   | | | then return 0.3700453397684459;  // std dev = 0.448, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.12447166391592476;  // std dev = 1.380, 11.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=8 */
%   | | else return -0.14030941827711935;  // std dev = 0.047, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7279395954900664;  // std dev = 0.115, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.21499942274703074;  // std dev = 0.027, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.0926090613398654;  // std dev = 2.667, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.008949535868110878;  // std dev = 4.048, 94.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=28 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.21141721937156252;  // std dev = 0.155, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( location(D, E), location(C, E) )
%   | | then if ( interaction(C, D), complex(C, F) )
%   | | | then return -0.07183934916260562;  // std dev = 1.685, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.02095951541442634;  // std dev = 3.526, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
%   | | else return -0.10641720017238046;  // std dev = 0.187, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( enzyme(A, G) )
%   | then return 0.0025917979114905535;  // std dev = 0.224, 46.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=15 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I), phenotype(A, J) )
%   | | | then return -0.07911888902450125;  // std dev = 0.747, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.10804994720421351;  // std dev = 1.730, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.49162265879319583;  // std dev = 0.836, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.15540282364770858;  // std dev = 2.085, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '51.843', 'seconds']
Refined model CLL: -0.241287


******************************************
Best model found
******************************************
Results 

CLL : -0.230438 

AUC ROC : 0.946748 

AUC PR : 0.239619 

Precision : 0.228385 

Recall : 0.505415 

F1 : 0.314607 

Total Learning Time : 14.624 

Total Inference Time : 6.846462965011597 

Total revision time: 29.530388942718506
Best scored revision CLL: -0.241287


Results 

CLL : -0.230438 

AUC ROC : 0.946748 

AUC PR : 0.239619 

Precision : 0.228385 

Recall : 0.505415 

F1 : 0.314607 

Total Learning Time : 39.65761124229431 

Total Inference Time : 6.846462965011597 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.108
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284605;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16024951638878004;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.1480203060463639;  // std dev = 4.827, 108.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.17400191506594778;  // std dev = 4.221, 77.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | | | else return 0.15997738894478694;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.052900764779356915;  // std dev = 3.721, 70.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=19 */
%   | | | else return 0.13537715410480253;  // std dev = 6.595, 191.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12757810477181436;  // std dev = 7.396, 236.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0686248186484096;  // std dev = 7.599, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7315173783031313;  // std dev = 0.034, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2684910202180502;  // std dev = 0.050, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.052462759134573336;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.08722699930981226;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04903294528393366;  // std dev = 3.380, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.04695170755341626;  // std dev = 6.201, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.029441197613411352;  // std dev = 7.086, 264.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.023078735666732172;  // std dev = 7.095, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.450', 'seconds']
Parameter learned model CLL:-0.34525 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [4.827, 74, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.221, 49, 28], 'false,false,false,false': [6.143, 108, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.721, 51, 19], 'false,false,false,false': [6.595, 124, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.396, 150, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.599, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.034, 0, 28], 'true,false': [0.05, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.702, 67, 33], 'false,false,false,false': [3.993, 44, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.38, 54, 28], 'false,false,false,false': [6.201, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.086, 178, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.095, 176, 86]}]
{'': [nan, 0.22222222222222304], 'false': [nan, 0.22222222222222285], 'false,false': [nan, 0.22222222222222304], 'false,false,false': [nan, 0.22222222222222285]}
{'': [nan, 0.2183506571841366], 'false': [nan, 0.2183506571841374], 'false,false': [nan, 0.2183506571841366], 'false,false,false': [0.22008623076618694, 0.21570644718792942]}
{'': [nan, 0.2286314561168953], 'false': [nan, 0.2286314561168953], 'false,false': [nan, 0.22863145611689567], 'false,false,false': [0.2313835863160939, 0.22729254081007277]}
{'': [nan, 0.22102794547781987], 'false': [nan, 0.22102794547781987], 'false,false': [nan, 0.22102794547781937], 'false,false,false': [0.19775510204081692, 0.22773287348266089]}
{'': [nan, 0.23177739941750516], 'false': [nan, 0.23177739941750516], 'false,false': [nan, 0.2317773994175054], 'false,false,false': [nan, 0.2317773994175054]}
{'': [nan, 0.22123984300299918], 'false': [nan, 0.22123984300299918], 'false,false': [nan, 0.22123984300299968], 'false,false,false': [nan, 0.22123984300299962]}
{'': [0.2183043671620744, 0.22545190679863944], 'false': [nan, 0.22545190679863944], 'false,false': [nan, 0.22545190679863944], 'false,false,false': [0.2211000000000005, 0.23104389834068514], 'true': [4.198612335550221e-05, 4.202766856413253e-05], 'true,true': [nan, 4.198612335550221e-05], 'true,true,false': [nan, 4.198612335550221e-05]}
{'': [nan, 0.19636928170903467], 'false': [nan, 0.19636928170903467], 'false,false': [nan, 0.1963692817090349], 'false,false,false': [0.13933919406150463, 0.22355664605015]}
{'': [nan, 0.19017346636760787], 'false': [nan, 0.19017346636760807], 'false,false': [nan, 0.19017346636760807], 'false,false,false': [nan, 0.19017346636760807]}
{'': [nan, 0.19215847966316682], 'false': [nan, 0.19215847966316682], 'false,false': [nan, 0.19215847966316632], 'false,false,false': [nan, 0.19215847966316632]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.636
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.07633075328133054;  // std dev = 3.063, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   | | | else return 0.14230194056399226;  // std dev = 6.101, 183.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=52 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, D), complex(C, F) )
%   | | then return 0.4291825598117816;  // std dev = 0.711, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7804237577129306;  // std dev = 0.061, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08176758976291607;  // std dev = 5.291, 155.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=37 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.07113968842547956;  // std dev = 2.156, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.22765561516798952;  // std dev = 3.032, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C), interaction(E, D) )
%   | then return 0.563988229385118;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21700076353462086;  // std dev = 1.146, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.13527797094124727;  // std dev = 0.018, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.11968662658849458;  // std dev = 1.836, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.3286274008746482;  // std dev = 2.000, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | else if ( interaction(J, A) )
%   | | | then return 0.09615336845489024;  // std dev = 5.381, 152.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=43 */
%   | | | else return 0.20824589259927617;  // std dev = 2.924, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.43442946417148187;  // std dev = 0.093, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, E), interaction(F, D) )
%   | | | then return -0.07509703464523244;  // std dev = 1.548, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else return 0.11843574736023395;  // std dev = 1.730, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | else if ( phenotype(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.6843581514673536;  // std dev = 0.264, 42.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=39 */
%   | | else return -0.1997493954435057;  // std dev = 0.323, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.37399828320376893;  // std dev = 0.280, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then return -0.017406189547338878;  // std dev = 0.360, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.45309934000667157;  // std dev = 0.834, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09446634362663739;  // std dev = 2.932, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), location(A, E) )
%   | then if ( interaction(C, F), interaction(F, F) )
%   | | then return 0.356984824728662;  // std dev = 0.065, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.43728793617285744;  // std dev = 0.124, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G), enzyme(G, H) )
%   | | then return 0.3613000734103447;  // std dev = 0.114, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.034513625143699676;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.11831491557701061;  // std dev = 0.037, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, I), interaction(K, A) )
%   | | | then return 0.3723983194111319;  // std dev = 1.060, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.03465996143610751;  // std dev = 3.808, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.05088313850234846;  // std dev = 2.940, 53.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=14 */
%   | | | else return 0.15470938299812564;  // std dev = 3.578, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.2853381980081441;  // std dev = 0.095, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.06207611843224792;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10822933501668153;  // std dev = 0.037, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | else if ( phenotype(A, E) )
%   | | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.5449193817793899;  // std dev = 1.931, 48.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=44 */
%   | | | else return -0.18670983319776097;  // std dev = 0.279, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.018417098191987277;  // std dev = 1.881, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | else return 0.10506859426303482;  // std dev = 3.626, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), interaction(F, A) )
%   | | then return 0.3255878107447444;  // std dev = 0.323, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else return 0.571327276754732;  // std dev = 0.210, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17432524295891832;  // std dev = 0.063, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   else if ( interaction(G, A), enzyme(A, H) )
%   | then if ( interaction(A, G), phenotype(A, I) )
%   | | then return -0.051444282223689776;  // std dev = 0.474, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(G, J), interaction(K, G) )
%   | | | then return 0.1938711786468159;  // std dev = 1.959, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return 0.06089600062123105;  // std dev = 1.337, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(A, L), phenotype(A, M) )
%   | | then return -0.0159376494098689;  // std dev = 0.275, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.09948113912594349;  // std dev = 1.784, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | | else return 0.023512239825278006;  // std dev = 3.055, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.18920454701327385;  // std dev = 0.102, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.28599671747703925;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.09447264580904832;  // std dev = 0.055, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, E), interaction(F, A) )
%   | | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.43855339715658265;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.03819174396921656;  // std dev = 2.878, 85.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=18 */
%   | | else if ( location(A, H) )
%   | | | then return 0.04331976729847118;  // std dev = 4.237, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return -0.052655959583688676;  // std dev = 1.208, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18692159269138375;  // std dev = 0.057, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E) )
%   | | then if ( interaction(F, A), complex(F, G) )
%   | | | then return -0.10706821374322006;  // std dev = 0.027, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.10242579784892195;  // std dev = 0.513, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.25769296743580916;  // std dev = 0.115, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11805708893485958;  // std dev = 0.193, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.417909250269652;  // std dev = 1.502, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.16179913036110502;  // std dev = 0.252, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(K, A), location(A, L) )
%   | | | then return -0.039500773385529396;  // std dev = 3.400, 80.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=17 */
%   | | | else return 0.055170700516121676;  // std dev = 2.064, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.130555081182607;  // std dev = 0.072, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.0681764394055362;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(E, H) )
%   | | | then return -0.03647016127144817;  // std dev = 0.221, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5731134441861976;  // std dev = 0.277, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(F, I), location(A, J) )
%   | | | then return -0.005274952940104971;  // std dev = 3.679, 129.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=34 */
%   | | | else return -0.10069248510261092;  // std dev = 0.773, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.2129267116095379;  // std dev = 0.131, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.11817281169585614;  // std dev = 1.292, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.009420600610649945;  // std dev = 2.587, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.167', 'seconds']
Refined model CLL: -0.215703


******************************************
Best model found
******************************************
Results 

CLL : -0.237782 

AUC ROC : 0.934269 

AUC PR : 0.207816 

Precision : 0.125191 

Recall : 0.579505 

F1 : 0.205901 

Total Learning Time : 14.636 

Total Inference Time : 7.244134902954102 

Total revision time: 29.173736137390136
Best scored revision CLL: -0.215703


Results 

CLL : -0.237782 

AUC ROC : 0.934269 

AUC PR : 0.207816 

Precision : 0.125191 

Recall : 0.579505 

F1 : 0.205901 

Total Learning Time : 39.30095843696594 

Total Inference Time : 7.244134902954102 

Run: 3
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.241
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1953582374250937;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15383401923966744;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.17124881319334295;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1329000205458749;  // std dev = 4.865, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.15766994262154235;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10133339549993914;  // std dev = 3.708, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | else return 0.1324825984858569;  // std dev = 6.607, 192.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08745820524494505;  // std dev = 7.667, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10051384375852014;  // std dev = 7.498, 246.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7048966272977204;  // std dev = 0.982, 36.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=35 */
%   | else return -0.2679795470356236;  // std dev = 0.039, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.049978308299637494;  // std dev = 4.027, 74.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else return 0.08114781135803745;  // std dev = 4.237, 78.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07090104698389156;  // std dev = 3.743, 96.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=35 */
%   | | | else return 0.03491079534104598;  // std dev = 5.928, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06089206325959565;  // std dev = 6.840, 243.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.00757281269945562;  // std dev = 7.073, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.274', 'seconds']
Parameter learned model CLL:-0.340305 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.333, 84, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.865, 73, 35], 'false,false,false,false': [5.818, 97, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.708, 44, 20], 'false,false,false,false': [6.607, 125, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.667, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.498, 159, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.982, 1, 35], 'true,false': [0.039, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.027, 50, 24], 'false,false,false,false': [4.237, 50, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.743, 61, 35], 'false,false,false,false': [5.928, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.84, 156, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.073, 189, 87]}]
{'': [nan, 0.22349918875067695], 'false': [nan, 0.2234991887506769], 'false,false': [nan, 0.22349918875067695], 'false,false,false': [nan, 0.2234991887506769]}
{'': [nan, 0.2209452479338832], 'false': [nan, 0.22094524793388493], 'false,false': [nan, 0.2209452479338832], 'false,false,false': [0.21801907400500886, 0.2239444478888964]}
{'': [nan, 0.22396178710123352], 'false': [nan, 0.22396178710123352], 'false,false': [nan, 0.22396178710123388], 'false,false,false': [0.21914424200629423, 0.22719586514446233]}
{'': [nan, 0.22438727110928464], 'false': [nan, 0.22438727110928464], 'false,false': [nan, 0.22438727110928458], 'false,false,false': [0.21484374999999992, 0.2273258766007161]}
{'': [nan, 0.2193512203130738], 'false': [nan, 0.2193512203130738], 'false,false': [nan, 0.21935122031307266], 'false,false,false': [nan, 0.21935122031307266]}
{'': [nan, 0.22856245655709245], 'false': [nan, 0.22856245655709245], 'false,false': [nan, 0.228562456557092], 'false,false,false': [nan, 0.22856245655709242]}
{'': [0.2235143343331152, 0.2250120199943509], 'false': [nan, 0.2250120199943509], 'false,false': [nan, 0.2250120199943509], 'false,false,false': [0.2191380569758949, 0.2301117685733076], 'true': [0.026807663722635863, 2.268090160732516e-05], 'true,true': [nan, 0.026807663722635863], 'true,true,false': [nan, 0.026807663722635863]}
{'': [nan, 0.19226665142814778], 'false': [nan, 0.19226665142814778], 'false,false': [nan, 0.1922666514281482], 'false,false,false': [0.14590789283934585, 0.21959616975143637]}
{'': [nan, 0.1925066818699828], 'false': [nan, 0.19250668186998243], 'false,false': [nan, 0.19250668186998243], 'false,false,false': [nan, 0.19250668186998243]}
{'': [nan, 0.18124450772446837], 'false': [nan, 0.18124450772446837], 'false,false': [nan, 0.1812445077244678], 'false,false,false': [nan, 0.1812445077244678]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.892
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( phenotype(E, G), interaction(E, A) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.13087620782678508;  // std dev = 2.954, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( interaction(H, A) )
%   | | | then return 0.175857268432847;  // std dev = 6.451, 192.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=61 */
%   | | | else return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7969360332979993;  // std dev = 0.057, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else if ( interaction(C, A) )
%   | | then return -0.14880201322895797;  // std dev = 0.144, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.7670719622367216;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10008166676739047;  // std dev = 3.703, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8353656709836589;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.724254559872548;  // std dev = 1.333, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.16463432901634106;  // std dev = 3.33e-08, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.2067942424122306;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.33536567098365916;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), location(A, E) )
%   | then return 0.5361654893311516;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.6281791449626097;  // std dev = 0.082, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11597162755911189;  // std dev = 0.047, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.759921182952331;  // std dev = 0.299, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.17604862527945014;  // std dev = 0.357, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.13987171012924135;  // std dev = 4.966, 126.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=42 */
%   | | | else return 0.2982993981237866;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.46310987553155214;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), interaction(F, F) )
%   | | | then return -0.17198303365005665;  // std dev = 0.430, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.050813343874026466;  // std dev = 1.020, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(D, G) )
%   | | | then return 0.015070005396931924;  // std dev = 1.668, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | else return -0.013373681811024881;  // std dev = 1.307, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6900808704309697;  // std dev = 0.486, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return -0.1742085863307962;  // std dev = 0.172, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.08161283833124695;  // std dev = 4.307, 110.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=34 */
%   | | | else return 0.25642249348256535;  // std dev = 1.167, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.33380821724533083;  // std dev = 0.054, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( complex(D, E), phenotype(D, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.056027069548343106;  // std dev = 0.977, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return -0.1600590545671266;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.49119141303441066;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.006052079531547023;  // std dev = 1.740, 38.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=7 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(I, K), location(A, L) )
%   | | | then return 0.08010933038747617;  // std dev = 4.886, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
%   | | | else return 0.3325625874126587;  // std dev = 1.128, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.07810526962122821;  // std dev = 0.672, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.032376829523571495;  // std dev = 1.613, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.43040866356779767;  // std dev = 0.099, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.1353064009499315;  // std dev = 0.125, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.42180326423799963;  // std dev = 0.173, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | else if ( location(F, G), interaction(I, A) )
%   | | | then return -0.019307806760617448;  // std dev = 2.223, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   | | | else return 0.22676485561943358;  // std dev = 1.373, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3923124583284651;  // std dev = 1.181, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return -0.1652565452794142;  // std dev = 0.102, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 6.867908689690893E-4;  // std dev = 1.620, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.04850073929232368;  // std dev = 3.734, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3938167033458539;  // std dev = 0.153, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.13813371690029358;  // std dev = 0.052, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.31051496123218225;  // std dev = 0.416, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, H) )
%   | | | then return -0.11071328824462608;  // std dev = 1.203, 26.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=2 */
%   | | | else return 0.05775350963598588;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.11879544452380719;  // std dev = 2.574, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | | | else return 0.005297356725704722;  // std dev = 1.637, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( location(A, M), interaction(N, A) )
%   | | | then return 0.006518660227526257;  // std dev = 3.199, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.11735577792319644;  // std dev = 1.083, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), phenotype(D, C) )
%   | then if ( location(D, E), location(A, E) )
%   | | then return -0.01280404771622898;  // std dev = 0.255, 44.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=14 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.48303695887386144;  // std dev = 0.138, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2686985518731924;  // std dev = 0.731, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else return 0.02748453776154197;  // std dev = 0.284, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( phenotype(G, I), location(A, J) )
%   | | then if ( interaction(K, G), interaction(K, A) )
%   | | | then return 0.10854242116159878;  // std dev = 2.021, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.0263380465351589;  // std dev = 2.094, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | else if ( location(L, H), recursion_proteinclass(L, B) )
%   | | | then return 0.12649486777575036;  // std dev = 2.126, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return -0.09016093894311054;  // std dev = 2.158, 46.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | else return 0.1834840909371735;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( interaction(C, C), recursion_proteinclass(C, B) )
%   | then return 0.1420383929392259;  // std dev = 0.038, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( enzyme(C, D), phenotype(A, E) )
%   | | then if ( interaction(F, C), interaction(F, F) )
%   | | | then return -0.08007536078831684;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.2361013873325368;  // std dev = 0.932, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( location(A, G) )
%   | | | then return -0.03424543042272151;  // std dev = 1.763, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   | | | else return -0.10563302406550931;  // std dev = 0.754, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   else if ( complex(A, H), enzyme(A, I) )
%   | then return -0.008037352929736459;  // std dev = 0.170, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.03993226100751009;  // std dev = 3.306, 91.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=30 */
%   | | | else return 0.11245727894756888;  // std dev = 3.047, 49.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=21 */
%   | | else return -0.04470988108129767;  // std dev = 0.443, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), interaction(E, A) )
%   | then return -0.004786448868127444;  // std dev = 0.223, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else if ( complex(C, F), location(A, G) )
%   | | then if ( enzyme(A, H), location(C, G) )
%   | | | then return 0.4146300016989116;  // std dev = 0.452, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11745123733036911;  // std dev = 1.557, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | else return 0.08127308849525225;  // std dev = 0.335, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.23382628509893957;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( enzyme(J, L) )
%   | | | then return 0.0567247355415032;  // std dev = 1.856, 27.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | | | else return -0.013624036404068427;  // std dev = 3.919, 123.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=36 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.0011596429300185878;  // std dev = 0.612, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.24281062085914784;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.102', 'seconds']
Refined model CLL: -0.230625


******************************************
Best model found
******************************************
Results 

CLL : -0.241005 

AUC ROC : 0.958864 

AUC PR : 0.334397 

Precision : 0.302655 

Recall : 0.606383 

F1 : 0.403778 

Total Learning Time : 21.892 

Total Inference Time : 10.803422212600708 

Total revision time: 40.327418191909786
Best scored revision CLL: -0.230625


Results 

CLL : -0.241005 

AUC ROC : 0.958864 

AUC PR : 0.334397 

Precision : 0.302655 

Recall : 0.606383 

F1 : 0.403778 

Total Learning Time : 40.35991702842712 

Total Inference Time : 10.803422212600708 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.634
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18314893509951274;  // std dev = 8.379, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1457376407259278;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
%   | | | else return 0.15337880012492125;  // std dev = 5.951, 163.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12828005935518152;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
%   | | | else return 0.1290202436833111;  // std dev = 6.562, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11517772333550905;  // std dev = 4.433, 90.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=29 */
%   | | | else return 0.12534211791142993;  // std dev = 7.071, 225.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08274715187422181;  // std dev = 8.463, 334.000 (wgt'ed) examples reached here.  /* #neg=230 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1240370192054285;  // std dev = 8.109, 283.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7341233791933339;  // std dev = 0.010, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2656313210671494;  // std dev = 0.012, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04382448061295686;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.11986511407767685;  // std dev = 4.946, 103.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 6.203574499153641E-4;  // std dev = 4.287, 148.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=41 */
%   | | | else return 0.06537184200374455;  // std dev = 6.392, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03647305636090721;  // std dev = 7.691, 313.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028338060089303743;  // std dev = 7.680, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.207', 'seconds']
Parameter learned model CLL:-0.335279 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.379, 216, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.984, 115, 52], 'false,false,false,false': [5.951, 111, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.298, 89, 41], 'false,false,false,false': [6.562, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.433, 61, 29], 'false,false,false,false': [7.071, 150, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.463, 230, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.109, 179, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 41], 'true,false': [0.012, 72, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.981, 51, 23], 'false,false,false,false': [4.946, 63, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.287, 107, 41], 'false,false,false,false': [6.392, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.691, 209, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.68, 211, 104]}]
{'': [nan, 0.21937500000000196], 'false': [nan, 0.21937500000000063], 'false,false': [nan, 0.21937500000000196], 'false,false,false': [nan, 0.21937500000000063]}
{'': [nan, 0.21583103764921707], 'false': [nan, 0.21583103764921843], 'false,false': [nan, 0.21583103764921707], 'false,false,false': [0.21442145648821906, 0.21724566223794442]}
{'': [nan, 0.21620136024325404], 'false': [nan, 0.21620136024325404], 'false,false': [nan, 0.21620136024324937], 'false,false,false': [0.21591151514462537, 0.21639048980286793]}
{'': [nan, 0.2211370198461385], 'false': [nan, 0.2211370198461385], 'false,false': [nan, 0.2211370198461404], 'false,false,false': [0.21839506172839537, 0.22220428454549684]}
{'': [nan, 0.21442087786337116], 'false': [nan, 0.21442087786337116], 'false,false': [nan, 0.21442087786337088], 'false,false,false': [nan, 0.21442087786337088]}
{'': [nan, 0.23237040881210447], 'false': [nan, 0.23237040881210447], 'false,false': [nan, 0.23237040881210483], 'false,false,false': [nan, 0.23237040881210438]}
{'': [0.23107374076105158, 0.2291884958448619], 'true': [2.5090640088742144e-06, 2.0948031933778723e-06], 'false': [nan, 0.2291884958448619], 'false,false': [nan, 0.2291884958448619], 'false,false,false': [0.21420745069393776, 0.23753416910170647], 'true,true': [nan, 2.5090640088742144e-06], 'true,true,false': [nan, 2.5090640088742144e-06]}
{'': [nan, 0.1821865079128112], 'false': [nan, 0.1821865079128112], 'false,false': [nan, 0.1821865079128119], 'false,false,false': [0.12419205817457181, 0.22823958789579374]}
{'': [nan, 0.1889765472071235], 'false': [nan, 0.1889765472071235], 'false,false': [nan, 0.1889765472071235], 'false,false,false': [nan, 0.1889765472071235]}
{'': [nan, 0.1872238593471328], 'false': [nan, 0.1872238593471328], 'false,false': [nan, 0.1872238593471328], 'false,false,false': [nan, 0.1872238593471328]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 20.188
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( complex(C, D), complex(A, D) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.23814893509951232;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, F), interaction(G, A) )
%   | | then if ( interaction(F, F) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.0223280395771243;  // std dev = 3.032, 67.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=11 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.1581489350995124;  // std dev = 5.975, 170.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=51 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return 0.2730461102575979;  // std dev = 0.893, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.7347798973671382;  // std dev = 0.140, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G) )
%   | | | then return 0.8554091620779539;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7518526675222027;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, H), location(A, I) )
%   | | | then return 0.06621736315007133;  // std dev = 4.197, 101.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=23 */
%   | | | else return 0.18064256733601416;  // std dev = 6.112, 166.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=57 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, C) )
%   | then return 0.3279021835975004;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.5515836046405935;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.7155029420225606;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.588232901061704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.11231637819360635;  // std dev = 1.39e-08, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, G), interaction(A, I) )
%   | | | then return 0.0791511262756111;  // std dev = 3.532, 67.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=18 */
%   | | | else return 0.204450331473138;  // std dev = 4.547, 87.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=34 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.080757503938934;  // std dev = 4.249, 95.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | | | else return 0.18360961272621937;  // std dev = 2.302, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | | then return 0.5170173630049133;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7835107261560473;  // std dev = 0.050, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2055111124519481;  // std dev = 0.128, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, F), phenotype(A, G) )
%   | | then return 0.16471377026434894;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.41471377026434897;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4969359816006755;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.43412728045033416;  // std dev = 0.846, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( location(A, J), complex(A, K) )
%   | | | then return 5.927802630442889E-4;  // std dev = 3.350, 77.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=14 */
%   | | | else return 0.09716199119365942;  // std dev = 5.177, 126.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=39 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.36135376333865127;  // std dev = 0.230, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else return 0.012529080557834837;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( recursion_proteinclass(G, B), interaction(A, H) )
%   | | | then return 0.7549807685415575;  // std dev = 0.308, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | | else return 0.008148723962625715;  // std dev = 5.499, 200.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=46 */
%   | | else return -0.04454989208702327;  // std dev = 0.272, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6255995924166166;  // std dev = 0.931, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return -0.21105911731899546;  // std dev = 0.101, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(K, A), complex(A, L) )
%   | | | then return 0.28167144977895453;  // std dev = 0.918, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 1.3785280595578065E-4;  // std dev = 2.068, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.3389338804333616;  // std dev = 0.061, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.23042538218479208;  // std dev = 1.104, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.3046035688854791;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, F), location(A, G) )
%   | then if ( complex(A, H), interaction(F, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10239698936678929;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.14251466054166065;  // std dev = 2.077, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | else return -0.018807445169573358;  // std dev = 0.333, 119.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=28 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then return 0.012002464283138264;  // std dev = 0.345, 40.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=9 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.07402484332180348;  // std dev = 3.629, 69.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=22 */
%   | | | else return 0.1392733675475733;  // std dev = 3.175, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.05547985271232081;  // std dev = 0.353, 118.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F) )
%   | | then if ( enzyme(E, G), interaction(H, E) )
%   | | | then return 0.05388836577586633;  // std dev = 2.637, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.019327395996765237;  // std dev = 3.392, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5963557157454201;  // std dev = 0.058, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.22468274601152757;  // std dev = 0.044, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.49745326606625434;  // std dev = 0.759, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.22569682309274364;  // std dev = 0.087, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.18660584200192845;  // std dev = 1.046, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.03180245544599696;  // std dev = 2.944, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then return 0.013135598573172627;  // std dev = 0.341, 162.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=50 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), location(A, H) )
%   | | then if ( phenotype(A, F), enzyme(E, I) )
%   | | | then return 0.008387727714262782;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.10185372568583123;  // std dev = 3.199, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | else if ( interaction(E, J), recursion_proteinclass(J, B) )
%   | | | then return 0.523590127033234;  // std dev = 1.418, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.22289692520374996;  // std dev = 0.106, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.3909805795375056;  // std dev = 0.869, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.21876985586295158;  // std dev = 0.092, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.18631523935685157;  // std dev = 0.797, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.010699941460144332;  // std dev = 1.527, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15592244258885943;  // std dev = 0.314, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( complex(F, G), phenotype(F, H) )
%   | | | then return 0.04499245764076829;  // std dev = 0.686, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.6058273535424425;  // std dev = 0.240, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.09877567094207974;  // std dev = 1.837, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | | else return 0.004149183915725124;  // std dev = 3.244, 80.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=22 */
%   | else if ( complex(A, J), interaction(A, K) )
%   | | then if ( complex(K, J), location(A, L) )
%   | | | then return -0.09465875729677933;  // std dev = 1.395, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return 0.07267797116871896;  // std dev = 1.581, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( location(A, M) )
%   | | | then return 0.06828777232841877;  // std dev = 4.201, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return -0.03333505733694253;  // std dev = 1.165, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), recursion_proteinclass(C, B) )
%   | then return 0.28070562348057304;  // std dev = 0.080, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), interaction(C, C) )
%   | | then return -0.0697819221265463;  // std dev = 0.256, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | else if ( complex(C, F), phenotype(A, G) )
%   | | | then return 0.07027073203747534;  // std dev = 4.340, 112.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=40 */
%   | | | else return 0.006046193995447118;  // std dev = 3.526, 116.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=36 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.18700602019078727;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return -0.14875349626286316;  // std dev = 0.717, 19.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=1 */
%   | | | else return 0.06137996071043637;  // std dev = 1.067, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.0026638105788803746;  // std dev = 1.808, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return -0.031047744178197407;  // std dev = 1.287, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.756', 'seconds']
Refined model CLL: -0.252809


******************************************
Best model found
******************************************
Results 

CLL : -0.234721 

AUC ROC : 0.940493 

AUC PR : 0.299067 

Precision : 0.373737 

Recall : 0.418868 

F1 : 0.395018 

Total Learning Time : 20.188 

Total Inference Time : 12.150509119033813 

Total revision time: 41.4590530128479
Best scored revision CLL: -0.252809


Results 

CLL : -0.234721 

AUC ROC : 0.940493 

AUC PR : 0.299067 

Precision : 0.373737 

Recall : 0.418868 

F1 : 0.395018 

Total Learning Time : 41.49155184936524 

Total Inference Time : 12.150509119033813 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.248
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.206633783584361;  // std dev = 7.742, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16225801035024995;  // std dev = 5.840, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
%   | | | else return 0.16993215438803042;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1614393439718905;  // std dev = 5.328, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.17571504896607681;  // std dev = 5.503, 130.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10568605729346543;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.1016377078599626;  // std dev = 6.682, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08919118587907593;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09515707932116696;  // std dev = 7.726, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6832756369431852;  // std dev = 1.383, 46.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | else return -0.27325579362459956;  // std dev = 0.003, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0926483800499784;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else return 0.01460789490541926;  // std dev = 4.038, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04276805428059539;  // std dev = 4.309, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.06501516092718525;  // std dev = 5.582, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040766362377042786;  // std dev = 7.062, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02599533247315347;  // std dev = 7.098, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.036', 'seconds']
Parameter learned model CLL:-0.334761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.742, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.84, 103, 51], 'false,false,false,false': [5.206, 80, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.328, 80, 44], 'false,false,false,false': [5.503, 82, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 54, 26], 'false,false,false,false': [6.682, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.726, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [1.383, 2, 44], 'true,false': [0.003, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.976, 43, 25], 'false,false,false,false': [4.038, 56, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.309, 88, 44], 'false,false,false,false': [5.582, 88, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.062, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.098, 182, 92]}]
{'': [nan, 0.22704315886134205], 'false': [nan, 0.22704315886134152], 'false,false': [nan, 0.22704315886134205], 'false,false,false': [nan, 0.22704315886134152]}
{'': [nan, 0.22262479338843416], 'false': [nan, 0.22262479338842925], 'false,false': [nan, 0.22262479338843416], 'false,false,false': [0.22149603643110094, 0.22402841335974272]}
{'': [nan, 0.23101214797113498], 'false': [nan, 0.23101214797113498], 'false,false': [nan, 0.23101214797113365], 'false,false,false': [0.2289167025184214, 0.2329113897167109]}
{'': [nan, 0.2189944665668976], 'false': [nan, 0.2189944665668976], 'false,false': [nan, 0.21899446656689806], 'false,false,false': [0.21937499999999938, 0.2188406211123822]}
{'': [nan, 0.2206049361767007], 'false': [nan, 0.2206049361767007], 'false,false': [nan, 0.22060493617670074], 'false,false,false': [nan, 0.22060493617670074]}
{'': [nan, 0.22782908531155058], 'false': [nan, 0.22782908531155058], 'false,false': [nan, 0.22782908531154972], 'false,false,false': [nan, 0.22782908531155024]}
{'': [0.2239010182289404, 0.21996725768537526], 'true': [0.041563521124981635, 1.2494943110862352e-07], 'false': [nan, 0.21996725768537526], 'false,false': [nan, 0.21996725768537526], 'false,false,false': [0.23248269896193757, 0.20637718314372655], 'true,true': [nan, 0.041563521124981635], 'true,true,false': [nan, 0.041563521124981635]}
{'': [nan, 0.18567455893806908], 'false': [nan, 0.18567455893806908], 'false,false': [nan, 0.18567455893806906], 'false,false,false': [0.1406734682419197, 0.22910831480156152]}
{'': [nan, 0.1854227336854047], 'false': [nan, 0.18542273368540527], 'false,false': [nan, 0.18542273368540527], 'false,false,false': [nan, 0.18542273368540527]}
{'': [nan, 0.18385305228920965], 'false': [nan, 0.18385305228920965], 'false,false': [nan, 0.18385305228920915], 'false,false,false': [nan, 0.18385305228920915]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.08
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( interaction(F, A), interaction(F, D) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10814893509951232;  // std dev = 1.732, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1460277229783002;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( phenotype(G, I) )
%   | | | then return 0.4692600462106234;  // std dev = 2.068, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.16117923812981538;  // std dev = 2.640, 33.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=10 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | | else return 0.13756069980539468;  // std dev = 3.700, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.7194734122109543;  // std dev = 4.21e-08, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.8213454672481383;  // std dev = 0.210, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.16358666002921862;  // std dev = 0.208, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7489486627622607;  // std dev = 0.102, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, G), interaction(G, G) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.14852742149183443;  // std dev = 2.027, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.027409643142754386;  // std dev = 1.964, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.2468720861282567;  // std dev = 4.356, 79.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.331470773019375;  // std dev = 0.767, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.5792718061000937;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( enzyme(A, G) )
%   | | then return -0.13295086051051658;  // std dev = 0.044, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.13664149802728573;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.008436001817513916;  // std dev = 1.542, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.45403351776804823;  // std dev = 4.287, 102.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=70 */
%   | | | else return -0.17329704666082818;  // std dev = 0.337, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.07417446317315947;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4492393214190735;  // std dev = 0.065, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09905383152160713;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.1949869651360168;  // std dev = 0.891, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, G) )
%   | | | then return -0.1250870734753354;  // std dev = 0.131, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return -0.019446730824104107;  // std dev = 0.662, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), phenotype(J, I) )
%   | | | then return 0.18680056820634194;  // std dev = 1.967, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | | else return 0.05943572830682437;  // std dev = 2.342, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | else if ( interaction(A, K), interaction(L, A) )
%   | | | then return -0.04724063168968971;  // std dev = 1.195, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.06360196221628191;  // std dev = 5.123, 175.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( phenotype(A, D), location(A, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.3358775616808102;  // std dev = 0.050, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09528211445569276;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1504381148758002;  // std dev = 1.715, 17.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=7 */
%   | else return 0.007171190521357292;  // std dev = 0.323, 39.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=10 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4024891032232799;  // std dev = 0.086, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(G, A) )
%   | | then if ( enzyme(A, H), enzyme(G, H) )
%   | | | then return -0.12672974678545906;  // std dev = 0.021, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.12319259880521456;  // std dev = 4.645, 134.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=50 */
%   | | else if ( location(A, I), enzyme(A, J) )
%   | | | then return 0.3553473993607847;  // std dev = 0.630, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.19936585090004527;  // std dev = 2.017, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.271655028654532;  // std dev = 0.039, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.057818561838603656;  // std dev = 0.313, 41.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=6 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.28824497497272483;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.17648699431944384;  // std dev = 1.239, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.05322875326013959;  // std dev = 3.040, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then if ( phenotype(J, K), phenotype(A, L) )
%   | | | then return 0.06618037353735842;  // std dev = 1.318, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.17964276087659603;  // std dev = 1.747, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | else if ( interaction(A, M), location(A, N) )
%   | | | then return -0.016612819396363235;  // std dev = 2.656, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.07241156770530921;  // std dev = 3.075, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23458469260738166;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4944534987439194;  // std dev = 0.086, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1699096919899215;  // std dev = 0.052, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.625618191762608;  // std dev = 0.117, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.2666414038211341;  // std dev = 0.107, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.6012803814343642;  // std dev = 0.609, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.2249851558465692;  // std dev = 0.189, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.14372359450852748;  // std dev = 1.716, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.055928648971380446;  // std dev = 2.654, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16402733761580668;  // std dev = 0.066, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.27125536064239847;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3403109076201522;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(H, F), interaction(I, H) )
%   | | | then return -0.05078490696398572;  // std dev = 2.035, 93.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | else return 0.09878097099767841;  // std dev = 1.134, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6087810586466638;  // std dev = 0.112, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2161682453043802;  // std dev = 0.140, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.00831085425268587;  // std dev = 2.468, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
%   | | | else return 0.044518327305259994;  // std dev = 3.501, 88.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18087078934753945;  // std dev = 0.087, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( interaction(A, D) )
%   | | then if ( enzyme(D, E) )
%   | | | then return -0.056376830111635266;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.07496789047101321;  // std dev = 0.423, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.054678032277854394;  // std dev = 0.442, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.04161974633323215;  // std dev = 1.366, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), interaction(I, G) )
%   | | | then return 0.18084377634063628;  // std dev = 1.469, 20.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=11 */
%   | | | else return -0.004994382749443517;  // std dev = 1.918, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.029546489703280374;  // std dev = 2.569, 71.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else return 0.039514426768476794;  // std dev = 3.227, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.12717560095857314;  // std dev = 0.050, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.21009695044914406;  // std dev = 0.255, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.22008153671638478;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, G) )
%   | | then if ( interaction(G, H), phenotype(H, I) )
%   | | | then return -0.0558099232812535;  // std dev = 2.655, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | else return 0.0023323779133925947;  // std dev = 2.631, 62.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.038748386332809484;  // std dev = 2.824, 82.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=27 */
%   | | | else return -0.00518918381202538;  // std dev = 1.770, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '39.959', 'seconds']
Refined model CLL: -0.219876


******************************************
Best model found
******************************************
Results 

CLL : -0.227475 

AUC ROC : 0.983096 

AUC PR : 0.288917 

Precision : 0.236652 

Recall : 0.592058 

F1 : 0.338144 

Total Learning Time : 15.08 

Total Inference Time : 9.480618953704834 

Total revision time: 32.304514101028445
Best scored revision CLL: -0.219876


Results 

CLL : -0.227475 

AUC ROC : 0.983096 

AUC PR : 0.288917 

Precision : 0.236652 

Recall : 0.592058 

F1 : 0.338144 

Total Learning Time : 32.33701293754578 

Total Inference Time : 9.480618953704834 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.143
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18267723698630522;  // std dev = 7.622, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17208791275191462;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.1645226624682195;  // std dev = 4.772, 103.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18295459200818517;  // std dev = 4.189, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.13199104868667494;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1519674113863654;  // std dev = 3.453, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return 0.12582284858588602;  // std dev = 6.659, 198.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11659904983961321;  // std dev = 7.455, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10357934669754658;  // std dev = 7.406, 237.000 (wgt'ed) examples reached here.  /* #neg=151 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7111379718164007;  // std dev = 0.017, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2890100317970122;  // std dev = 0.025, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.030125095315819393;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.07329897996023223;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07432407071004189;  // std dev = 3.216, 71.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=28 */
%   | | | else return 0.048847234598938874;  // std dev = 6.217, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0485124076299623;  // std dev = 6.971, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03178774732073372;  // std dev = 6.988, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.526', 'seconds']
Parameter learned model CLL:-0.356413 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.622, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [4.772, 69, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 47, 28], 'false,false,false,false': [6.27, 122, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.453, 32, 19], 'false,false,false,false': [6.659, 131, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.455, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.406, 151, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 28], 'true,false': [0.025, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.787, 75, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.216, 43, 28], 'false,false,false,false': [6.217, 116, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.971, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.988, 163, 86]}]
{'': [nan, 0.21920968316126813], 'false': [nan, 0.21920968316126796], 'false,false': [nan, 0.21920968316126813], 'false,false,false': [nan, 0.21920968316126796]}
{'': [nan, 0.22265287892322408], 'false': [nan, 0.22265287892322386], 'false,false': [nan, 0.22265287892322408], 'false,false,false': [0.2236464833867433, 0.2211330002827782]}
{'': [nan, 0.2235137843954673], 'false': [nan, 0.2235137843954673], 'false,false': [nan, 0.22351378439546699], 'false,false,false': [0.2339686851227466, 0.21839366906854651]}
{'': [nan, 0.2260751531679166], 'false': [nan, 0.2260751531679166], 'false,false': [nan, 0.226075153167917], 'false,false,false': [0.23375624759707775, 0.22395668765868135]}
{'': [nan, 0.228730280852259], 'false': [nan, 0.228730280852259], 'false,false': [nan, 0.22873028085225916], 'false,false,false': [nan, 0.22873028085225916]}
{'': [nan, 0.23145101727870102], 'false': [nan, 0.23145101727870102], 'false,false': [nan, 0.23145101727870196], 'false,false,false': [nan, 0.23145101727870124]}
{'': [0.21701651100783179, 0.2184257512973975], 'false': [nan, 0.2184257512973975], 'false,false': [nan, 0.2184257512973975], 'false,false,false': [0.21219135802469216, 0.22665895061728408], 'true': [1.0404908052105302e-05, 1.0017918489439263e-05], 'true,true': [nan, 1.0404908052105302e-05], 'true,true,false': [nan, 1.0404908052105302e-05]}
{'': [nan, 0.2001261365754471], 'false': [nan, 0.2001261365754471], 'false,false': [nan, 0.20012613657544776], 'false,false,false': [0.14568732121168776, 0.22215157857931186]}
{'': [nan, 0.20078037959361797], 'false': [nan, 0.20078037959361794], 'false,false': [nan, 0.20078037959361794], 'false,false,false': [nan, 0.20078037959361794]}
{'': [nan, 0.19609469018870104], 'false': [nan, 0.19609469018870104], 'false,false': [nan, 0.19609469018870043], 'false,false,false': [nan, 0.19609469018870043]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 19.755
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), interaction(F, F) )
%   | | then if ( interaction(A, G), interaction(G, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10057317752375475;  // std dev = 2.462, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.0803711573217346;  // std dev = 3.055, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | | else return 0.16370449065506737;  // std dev = 5.528, 144.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=44 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.727760815859533;  // std dev = 0.082, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, A) )
%   | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( phenotype(A, D), interaction(E, A) )
%   | | then if ( phenotype(E, D), interaction(F, E) )
%   | | | then return 0.04041036551718425;  // std dev = 2.145, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.14514375314953254;  // std dev = 4.523, 97.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=30 */
%   | | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.15515455550757512;  // std dev = 4.606, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6552177301716983;  // std dev = 0.122, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(E, F) )
%   | | | then return -0.07403684747220282;  // std dev = 2.112, 61.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=5 */
%   | | | else return 0.3154979675720224;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( recursion_proteinclass(C, B) )
%   | | | then return 0.5800585871609077;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09549785606051264;  // std dev = 4.358, 97.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=27 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5821470899895654;  // std dev = 0.120, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.4895779156404169;  // std dev = 0.812, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.0916310270131366;  // std dev = 2.560, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.19799906107623472;  // std dev = 3.066, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( phenotype(A, E), enzyme(D, F) )
%   | | then return 0.5943792379871232;  // std dev = 0.091, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.3934266492791482;  // std dev = 0.019, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.16101537981496147;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, G), location(A, H) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10514394555975162;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.16639984679426187;  // std dev = 2.653, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.03470714037972535;  // std dev = 3.881, 88.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=21 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.4791342658707158;  // std dev = 3.086, 47.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=33 */
%   | | | else return -0.20228546453931864;  // std dev = 0.094, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else return 0.5587729627230517;  // std dev = 0.837, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, A) )
%   | then return 0.30268298523287523;  // std dev = 1.49e-08, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, E), phenotype(C, E) )
%   | | then return 0.4488941080767634;  // std dev = 0.095, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.35953287382212523;  // std dev = 0.046, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), interaction(G, G) )
%   | | then return -0.0956538287148946;  // std dev = 6.45e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, H), phenotype(F, I) )
%   | | | then return 0.1706423568198116;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.028117787292428684;  // std dev = 2.081, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.37880132552506574;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( location(A, K) )
%   | | | then return 0.09643673725394572;  // std dev = 5.750, 172.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=54 */
%   | | | else return -0.07643164123656462;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.24282799096848912;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, D), interaction(D, D) )
%   | | then if ( phenotype(A, E), complex(A, F) )
%   | | | then return -0.1551364131400969;  // std dev = 0.437, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.08769333220702293;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7143226667915441;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.23352804837260602;  // std dev = 0.284, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2877799366286749;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.30808294479659964;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.035988897675507954;  // std dev = 2.964, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.10214238806885867;  // std dev = 4.975, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5267362462630184;  // std dev = 0.246, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.21372409062612957;  // std dev = 0.072, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( phenotype(E, G), phenotype(A, G) )
%   | | then return -0.016390991523357722;  // std dev = 0.335, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( recursion_proteinclass(F, B), phenotype(E, H) )
%   | | | then return 0.536814977748935;  // std dev = 0.550, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.005894145354161105;  // std dev = 2.764, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then if ( location(J, I), interaction(K, J) )
%   | | | then return 0.20170933270019178;  // std dev = 2.197, 28.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=14 */
%   | | | else return 0.05194587710305446;  // std dev = 2.516, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( location(A, L) )
%   | | | then return 0.010645857355594639;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.04639550728344842;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.42591832960243103;  // std dev = 0.229, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1835211296991566;  // std dev = 0.047, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( interaction(G, A), phenotype(G, H) )
%   | | then if ( complex(G, I), phenotype(A, H) )
%   | | | then return -0.04730432602518014;  // std dev = 0.980, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.05932483580187474;  // std dev = 1.325, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else return 0.25987500715580253;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.22688234408045796;  // std dev = 3.789, 76.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=47 */
%   | | | else return -0.2211277020418174;  // std dev = 0.471, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.1790428878976499;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.011433302578540583;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.257097300122746;  // std dev = 0.181, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( enzyme(A, F), interaction(D, D) )
%   | | then return 0.2653172053248216;  // std dev = 1.192, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(D, D), interaction(G, A) )
%   | | | then return -0.04268280449930658;  // std dev = 0.916, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.05114286040964294;  // std dev = 2.674, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4669671000829165;  // std dev = 0.144, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.2104603184238611;  // std dev = 0.094, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then return -0.06936473371386409;  // std dev = 0.273, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.06265963884619448;  // std dev = 1.460, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return -0.013912068501754884;  // std dev = 2.776, 72.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( complex(A, D), interaction(A, E) )
%   | then return 0.0020488307570400576;  // std dev = 0.270, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | else if ( phenotype(F, C), interaction(F, G) )
%   | | then if ( interaction(A, G), recursion_proteinclass(F, B) )
%   | | | then return 0.5285506269616268;  // std dev = 0.947, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.12990173703094796;  // std dev = 3.035, 136.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=19 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.1674382412410377;  // std dev = 0.597, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.007610211960310823;  // std dev = 0.669, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( complex(K, L) )
%   | | | then return 0.07400376585244349;  // std dev = 1.270, 18.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | else return 0.33320320001002823;  // std dev = 1.483, 23.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=19 */
%   | | else return -0.14493937188740774;  // std dev = 0.063, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | else return 0.247458419024683;  // std dev = 0.904, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '17.715', 'seconds']
Refined model CLL: -0.220841


******************************************
Best model found
******************************************
Results 

CLL : -0.227308 

AUC ROC : 0.97674 

AUC PR : 0.291772 

Precision : 0.196953 

Recall : 0.639576 

F1 : 0.301165 

Total Learning Time : 19.755 

Total Inference Time : 11.010219097137451 

Total revision time: 38.2994720916748
Best scored revision CLL: -0.220841


Results 

CLL : -0.227308 

AUC ROC : 0.97674 

AUC PR : 0.291772 

Precision : 0.196953 

Recall : 0.639576 

F1 : 0.301165 

Total Learning Time : 38.331970928192135 

Total Inference Time : 11.010219097137451 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2006686201388824;  // std dev = 7.563, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16855857886805625;  // std dev = 4.749, 101.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=34 */
%   | | | else return 0.18060912602803345;  // std dev = 5.875, 152.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1299446406030952;  // std dev = 4.864, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
%   | | | else return 0.14352203163385574;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.15439538071829653;  // std dev = 2.974, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
%   | | | else return 0.10585888351329216;  // std dev = 7.030, 226.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06052425197070086;  // std dev = 7.819, 293.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07821448949012887;  // std dev = 7.658, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7368208897754874;  // std dev = 0.021, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26327360496652785;  // std dev = 0.030, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.10299797121571964;  // std dev = 3.568, 55.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=20 */
%   | | | else return 0.0507581953909337;  // std dev = 4.686, 102.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.026485243367801885;  // std dev = 3.882, 114.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=35 */
%   | | | else return 0.06176111702618605;  // std dev = 5.868, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03700583211358311;  // std dev = 7.052, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053895227937270834;  // std dev = 6.881, 249.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.366', 'seconds']
Parameter learned model CLL:-0.33322 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.563, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.749, 67, 34], 'false,false,false,false': [5.875, 99, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.864, 73, 35], 'false,false,false,false': [5.869, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.974, 24, 14], 'false,false,false,false': [7.03, 153, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.819, 206, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.658, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 35], 'true,false': [0.03, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.568, 35, 20], 'false,false,false,false': [4.686, 70, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.882, 79, 35], 'false,false,false,false': [5.868, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.052, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.881, 162, 87]}]
{'': [nan, 0.2251999503999017], 'false': [nan, 0.22519995039990162], 'false,false': [nan, 0.2251999503999017], 'false,false,false': [nan, 0.22519995039990162]}
{'': [nan, 0.225624521551658], 'false': [nan, 0.2256245215516573], 'false,false': [nan, 0.225624521551658], 'false,false,false': [0.2233114400548967, 0.2271035318559565]}
{'': [nan, 0.22180399664652997], 'false': [nan, 0.22180399664652997], 'false,false': [nan, 0.22180399664653017], 'false,false,false': [0.21906447736462756, 0.22364922819356223]}
{'': [nan, 0.22098648073031546], 'false': [nan, 0.22098648073031546], 'false,false': [nan, 0.22098648073031485], 'false,false,false': [0.2326869806094177, 0.21868004883314948]}
{'': [nan, 0.20867722932620508], 'false': [nan, 0.20867722932620508], 'false,false': [nan, 0.20867722932620503], 'false,false,false': [nan, 0.20867722932620503]}
{'': [nan, 0.21965435851965484], 'false': [nan, 0.21965435851965484], 'false,false': [nan, 0.21965435851965504], 'false,false,false': [nan, 0.21965435851965487]}
{'': [0.21699529021199437, 0.22156414510838326], 'false': [nan, 0.22156414510838326], 'false,false': [nan, 0.22156414510838326], 'false,false,false': [0.23140495867768593, 0.21530180699730772], 'true': [1.205449596253873e-05, 1.2179505550224216e-05], 'true,true': [nan, 1.205449596253873e-05], 'true,true,false': [nan, 1.205449596253873e-05]}
{'': [nan, 0.18500545952121986], 'false': [nan, 0.18500545952121986], 'false,false': [nan, 0.18500545952122127], 'false,false,false': [0.13217707267479922, 0.2235828585363854]}
{'': [nan, 0.18696357061420923], 'false': [nan, 0.18696357061420887], 'false,false': [nan, 0.18696357061420887], 'false,false,false': [nan, 0.18696357061420887]}
{'': [nan, 0.19013551004225498], 'false': [nan, 0.19013551004225498], 'false,false': [nan, 0.19013551004225532], 'false,false,false': [nan, 0.19013551004225532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.406
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.6706489350995123;  // std dev = 1.561, 16.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | else return 0.024815601766179002;  // std dev = 3.873, 108.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=18 */
%   | else if ( enzyme(A, G), complex(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.2727830814409744;  // std dev = 4.461, 82.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=34 */
%   | | | else return 0.10814893509951218;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(E, A), complex(A, F) )
%   | then if ( complex(E, F), phenotype(A, G) )
%   | | then return -0.10308261691114977;  // std dev = 0.200, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else if ( interaction(E, E), phenotype(A, H) )
%   | | | then return 0.22049721022193491;  // std dev = 1.784, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.08788871408540476;  // std dev = 3.562, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(I, A), enzyme(I, J) )
%   | | | then return -0.14489878247426094;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.045302504565272905;  // std dev = 1.659, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.328000759348417;  // std dev = 2.041, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.16695786507197866;  // std dev = 4.925, 110.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=37 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( interaction(C, A), recursion_proteinclass(C, B) )
%   | then return 0.5553664367462846;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.0018040704858755501;  // std dev = 0.352, 59.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=10 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.7582293127028568;  // std dev = 0.396, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return 0.07287729537820828;  // std dev = 1.242, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return -0.18480279120702342;  // std dev = 0.202, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.2683853132315772;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.06052112656528881;  // std dev = 1.675, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.29591571320615634;  // std dev = 1.930, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | | else return 0.1852452821478641;  // std dev = 3.899, 65.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), enzyme(A, E) )
%   | then return 0.04162619130570824;  // std dev = 0.383, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | else if ( interaction(A, C), recursion_proteinclass(D, B) )
%   | | then return 0.5445038298778155;  // std dev = 0.256, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.17830573745813014;  // std dev = 0.180, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.10695053123865346;  // std dev = 4.844, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.729259156607923;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1894463599810764;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, H), interaction(H, I) )
%   | | then return 0.34663764242080175;  // std dev = 0.979, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.050396148056490994;  // std dev = 0.864, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.1759793006152305;  // std dev = 1.034, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then if ( complex(A, E) )
%   | | then return 0.1442169359326339;  // std dev = 0.366, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.3619348680543415;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.5212316973129325;  // std dev = 0.227, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.4030429125997353;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(A, I), interaction(I, A) )
%   | | | then return -0.014257441195365561;  // std dev = 2.008, 48.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=9 */
%   | | | else return 0.04125907226548912;  // std dev = 4.206, 107.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=30 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.16333871208688203;  // std dev = 2.508, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.04223998537082608;  // std dev = 3.616, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3172580477952635;  // std dev = 0.271, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return -0.03707989813727353;  // std dev = 0.342, 59.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=11 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, G), complex(G, H) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.17358489964780688;  // std dev = 0.806, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.059457355315825695;  // std dev = 1.311, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | else if ( complex(A, I) )
%   | | | then return -0.08416115861423312;  // std dev = 1.302, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.01027849955766279;  // std dev = 2.272, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.36244502523182404;  // std dev = 0.170, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.02063053877775718;  // std dev = 2.820, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return 0.10867780172100693;  // std dev = 4.117, 79.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=29 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.31768604215870727;  // std dev = 0.271, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6145458533538511;  // std dev = 0.142, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.17970184497862118;  // std dev = 0.351, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( interaction(A, G), interaction(G, F) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.23447149221506153;  // std dev = 0.074, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.011100183500406214;  // std dev = 1.705, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else return -0.027911361140661055;  // std dev = 0.646, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.3768009467051925;  // std dev = 3.174, 55.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=38 */
%   | | | else return -0.24758375640587874;  // std dev = 0.318, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return 0.4025940483627257;  // std dev = 0.761, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.19323143957360037;  // std dev = 0.098, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( phenotype(A, F), enzyme(D, G) )
%   | | then if ( interaction(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5137535351226828;  // std dev = 0.427, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14747306005910094;  // std dev = 0.123, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.10097424736737635;  // std dev = 1.146, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return -0.04072344820018529;  // std dev = 2.613, 77.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=13 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( enzyme(K, L), interaction(M, K) )
%   | | | then return 0.23623776232020155;  // std dev = 0.717, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.003866148334798608;  // std dev = 2.228, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | else if ( interaction(N, A), interaction(N, N) )
%   | | | then return 0.0119589049600337;  // std dev = 1.764, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.10047416740420209;  // std dev = 3.421, 65.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=27 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.32969326098754104;  // std dev = 0.215, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.15408591265795196;  // std dev = 0.218, 28.000 (wgt'ed) examples reached here.  /* #neg=28 */
%   | | else return 0.11182117308351548;  // std dev = 0.368, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( phenotype(A, G), phenotype(F, G) )
%   | | then return 0.30299101566246384;  // std dev = 0.561, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( location(A, H), location(F, H) )
%   | | | then return 0.10342224084551677;  // std dev = 0.995, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.06438587176614151;  // std dev = 1.368, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.17640138727272478;  // std dev = 0.029, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.011650265894656413;  // std dev = 3.665, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | | | else return -0.09593701854289319;  // std dev = 1.125, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(A, D) )
%   then if ( interaction(E, A), complex(C, F) )
%   | then return 0.09276672752644947;  // std dev = 0.301, 56.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=24 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.3037070152190595;  // std dev = 0.468, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(C, C), interaction(H, A) )
%   | | | then return -0.14156645220014405;  // std dev = 0.110, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.004628870253498514;  // std dev = 2.103, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.15811303271915497;  // std dev = 0.033, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.0245362513703495;  // std dev = 0.766, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.07448583302866814;  // std dev = 1.776, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.05767858783918849;  // std dev = 1.136, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.013378624624227573;  // std dev = 3.700, 106.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=31 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '37.457', 'seconds']
Refined model CLL: -0.238226


******************************************
Best model found
******************************************
Results 

CLL : -0.242204 

AUC ROC : 0.978067 

AUC PR : 0.336319 

Precision : 0.292948 

Recall : 0.574468 

F1 : 0.388024 

Total Learning Time : 21.406 

Total Inference Time : 12.024747133255005 

Total revision time: 40.97387085533142
Best scored revision CLL: -0.238226


Results 

CLL : -0.242204 

AUC ROC : 0.978067 

AUC PR : 0.336319 

Precision : 0.292948 

Recall : 0.574468 

F1 : 0.388024 

Total Learning Time : 41.03348694419861 

Total Inference Time : 12.024747133255005 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.47
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2059750220560346;  // std dev = 8.236, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.16451496925976386;  // std dev = 4.690, 99.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=33 */
%   | | | else return 0.14673719148198316;  // std dev = 6.971, 225.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1448330833323528;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.12681608248487247;  // std dev = 6.554, 198.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.22768928530719265;  // std dev = 2.582, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.12342060237443267;  // std dev = 7.817, 274.000 (wgt'ed) examples reached here.  /* #neg=182 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11151077748185774;  // std dev = 8.234, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05229452098332014;  // std dev = 8.475, 336.000 (wgt'ed) examples reached here.  /* #neg=232 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7032338836198023;  // std dev = 0.984, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.2732030284594306;  // std dev = 0.094, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.017872669984474027;  // std dev = 3.878, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | | else return 0.10922609432803729;  // std dev = 5.137, 113.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04338498476025915;  // std dev = 4.129, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | | else return 0.061574662676705715;  // std dev = 6.444, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06459757623425291;  // std dev = 7.507, 288.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.041401471114715316;  // std dev = 7.568, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.741', 'seconds']
Parameter learned model CLL:-0.346121 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.236, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.69, 66, 33], 'false,false,false,false': [6.971, 154, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.217, 81, 41], 'false,false,false,false': [6.554, 135, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.582, 15, 12], 'false,false,false,false': [7.817, 182, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.234, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.475, 232, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.984, 1, 41], 'true,false': [0.094, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.878, 53, 21], 'false,false,false,false': [5.137, 71, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.129, 81, 41], 'false,false,false,false': [6.444, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.507, 184, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.568, 191, 104]}]
{'': [nan, 0.22684310018903814], 'false': [nan, 0.22684310018903647], 'false,false': [nan, 0.22684310018903814], 'false,false,false': [nan, 0.22684310018903647]}
{'': [nan, 0.2179545800945008], 'false': [nan, 0.21795458009449686], 'false,false': [nan, 0.2179545800945008], 'false,false,false': [0.22222222222222243, 0.21598024691357853]}
{'': [nan, 0.2193904444870292], 'false': [nan, 0.2193904444870292], 'false,false': [nan, 0.2193904444870281], 'false,false,false': [0.22313152700772867, 0.21696157458805532]}
{'': [nan, 0.22604629209524013], 'false': [nan, 0.22604629209524013], 'false,false': [nan, 0.22604629209523866], 'false,false,false': [0.24691358024691362, 0.22301480098443863]}
{'': [nan, 0.22675045187066534], 'false': [nan, 0.22675045187066534], 'false,false': [nan, 0.22675045187066353], 'false,false,false': [nan, 0.22675045187066353]}
{'': [nan, 0.2137759376662155], 'false': [nan, 0.2137759376662155], 'false,false': [nan, 0.21377593766621633], 'false,false,false': [nan, 0.2137759376662142]}
{'': [0.23129744952409412, 0.22354599438685466], 'true': [0.02303181246069978, 0.000124983672076032], 'false': [nan, 0.22354599438685466], 'false,false': [nan, 0.22354599438685466], 'false,false,false': [0.2032505478451419, 0.23353434098206546], 'true,true': [nan, 0.02303181246069978], 'true,true,false': [nan, 0.02303181246069978]}
{'': [nan, 0.19086300206811818], 'false': [nan, 0.19086300206811818], 'false,false': [nan, 0.19086300206811843], 'false,false,false': [0.13974556736181087, 0.2244413943627291]}
{'': [nan, 0.1956812938965218], 'false': [nan, 0.19568129389652156], 'false,false': [nan, 0.19568129389652156], 'false,false,false': [nan, 0.19568129389652156]}
{'': [nan, 0.19417010144796104], 'false': [nan, 0.19417010144796104], 'false,false': [nan, 0.19417010144796057], 'false,false,false': [nan, 0.19417010144796057]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 35.867
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(C, F), interaction(A, F) )
%   | | | then return 0.088918165868743;  // std dev = 1.519, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.35814893509951234;  // std dev = 2.550, 26.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=13 */
%   else if ( complex(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then return 0.12600607795665522;  // std dev = 0.443, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.15628558106224527;  // std dev = 5.804, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.7613551841652321;  // std dev = 0.218, 63.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=60 */
%   | | else if ( interaction(D, F), interaction(A, G) )
%   | | | then return 0.8349832157981718;  // std dev = 0.031, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.17953942830291475;  // std dev = 0.032, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.15897976208676778;  // std dev = 0.223, 149.000 (wgt'ed) examples reached here.  /* #neg=149 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.7336404275703127;  // std dev = 0.120, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.19193007974007428;  // std dev = 1.740, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return -0.02058642110962024;  // std dev = 1.850, 29.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=4 */
%   | | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | | then return 0.7887514245202834;  // std dev = 0.087, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14509956594319778;  // std dev = 3.563, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), enzyme(A, D) )
%   | then return 0.2801398224308491;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.6568671929115188;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, E), complex(A, F) )
%   | then if ( complex(E, F), interaction(E, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5555426682330477;  // std dev = 0.775, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.11533027327125776;  // std dev = 1.280, 39.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=2 */
%   | | else if ( interaction(E, A), phenotype(A, I) )
%   | | | then return 0.3142595597731909;  // std dev = 1.068, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.14415364759165147;  // std dev = 1.807, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5518654235155447;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.08052775671654315;  // std dev = 3.478, 82.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=22 */
%   | | | else return 0.1339829431020347;  // std dev = 4.779, 131.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=43 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then if ( interaction(D, E) )
%   | | then if ( complex(A, F), interaction(E, A) )
%   | | | then return 0.5373963333310489;  // std dev = 0.078, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.42913878254834326;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5936461182080199;  // std dev = 0.174, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.4262321596379501;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.17550739788856273;  // std dev = 0.124, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( enzyme(H, I), location(A, J) )
%   | | | then return -0.043563488251399204;  // std dev = 1.734, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | else return 0.05740878238391536;  // std dev = 2.496, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.1312211153467169;  // std dev = 5.484, 180.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=64 */
%   | | | else return 0.05389745080788675;  // std dev = 1.929, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5218787983129767;  // std dev = 0.130, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | else return -0.16405881678933446;  // std dev = 0.046, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( phenotype(F, H) )
%   | | then if ( location(A, I), location(F, I) )
%   | | | then return 0.07860670864107927;  // std dev = 3.778, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.14341050352668686;  // std dev = 2.722, 44.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=17 */
%   | | else return 0.47416426886690954;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( interaction(A, L), interaction(K, L) )
%   | | | then return -0.06864732443998597;  // std dev = 0.419, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.039580001127268456;  // std dev = 2.237, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.07627500731096896;  // std dev = 0.946, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.1566618645275678;  // std dev = 1.456, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( phenotype(A, E), phenotype(D, E) )
%   | | then if ( complex(D, F), interaction(G, A) )
%   | | | then return 0.31518472528335734;  // std dev = 1.396, 28.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=25 */
%   | | | else return 0.5041341442260583;  // std dev = 1.749, 42.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=38 */
%   | | else if ( interaction(H, A), interaction(H, D) )
%   | | | then return 0.38860039576203004;  // std dev = 2.517, 44.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=33 */
%   | | | else return -0.16657891568558314;  // std dev = 0.565, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | else return -0.17720282541385488;  // std dev = 0.051, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(I, A), enzyme(I, J) )
%   | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | then return 0.6598361890080996;  // std dev = 0.338, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.1957745774011492;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, L) )
%   | | then return 0.41020150165599006;  // std dev = 0.841, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.1471273810114734;  // std dev = 1.012, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2159062688206789;  // std dev = 0.191, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.3648019286302447;  // std dev = 0.124, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.14518883213899178;  // std dev = 0.105, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, G) )
%   | | | then return 0.12112871979277239;  // std dev = 1.796, 26.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=14 */
%   | | | else return 0.37791526396610403;  // std dev = 2.554, 55.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=43 */
%   | | else return -0.18406161702847038;  // std dev = 0.042, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | else if ( phenotype(A, I) )
%   | | then return 0.05980619971712923;  // std dev = 0.661, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.25829292146680627;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.38997781455546193;  // std dev = 0.689, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.19035469242676784;  // std dev = 0.044, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(C, D), complex(A, D) )
%   | | then return -0.15366958675559594;  // std dev = 0.199, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, C), phenotype(A, E) )
%   | | | then return 0.03097081684722179;  // std dev = 0.904, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return -0.048076944558211716;  // std dev = 2.038, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then return -0.01052893659726396;  // std dev = 0.206, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( phenotype(A, J), phenotype(H, J) )
%   | | | then return 0.01864418550173826;  // std dev = 1.446, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.09692456408574215;  // std dev = 2.993, 77.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=32 */
%   | | else if ( location(A, K) )
%   | | | then return 0.03173987644197288;  // std dev = 1.958, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.0748682360522219;  // std dev = 1.079, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.19416792896117566;  // std dev = 0.072, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, E) )
%   | | then return 0.16501522105280397;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.3062073239100479;  // std dev = 0.640, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, A), enzyme(A, G) )
%   | | then return -0.12944661101113952;  // std dev = 0.217, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else return -0.02819070200924576;  // std dev = 0.226, 66.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=15 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(H, J), interaction(K, A) )
%   | | | then return 0.03400059172353703;  // std dev = 1.755, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | | else return 0.1596591268140489;  // std dev = 1.280, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.18445758364923068;  // std dev = 0.092, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0218431764187661;  // std dev = 3.887, 186.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, A) )
%   | then return 0.08693660236653414;  // std dev = 0.126, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.20287288786480998;  // std dev = 0.059, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.2992586885921034;  // std dev = 0.099, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return -0.07419537424749012;  // std dev = 1.702, 61.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=8 */
%   | | | else return 0.19251683784900064;  // std dev = 0.384, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.22109064069568102;  // std dev = 3.196, 93.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=67 */
%   | | | else return -0.14258444312259846;  // std dev = 0.436, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11851144528793785;  // std dev = 0.945, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.32958012769077455;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '57.757', 'seconds']
Refined model CLL: -0.197917


******************************************
Best model found
******************************************
Results 

CLL : -0.193539 

AUC ROC : 0.988984 

AUC PR : 0.468289 

Precision : 0.30303 

Recall : 0.716981 

F1 : 0.426009 

Total Learning Time : 35.867 

Total Inference Time : 34.98236107826233 

Total revision time: 79.820980178833
Best scored revision CLL: -0.197917


Results 

CLL : -0.193539 

AUC ROC : 0.988984 

AUC PR : 0.468289 

Precision : 0.30303 

Recall : 0.716981 

F1 : 0.426009 

Total Learning Time : 79.88059626770018 

Total Inference Time : 34.98236107826233 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.287
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16379677563107373;  // std dev = 7.993, 301.000 (wgt'ed) examples reached here.  /* #neg=209 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.20240226260449937;  // std dev = 4.911, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
%   | | | else return 0.15844621864845349;  // std dev = 6.053, 168.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12694927256979707;  // std dev = 5.485, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.14805951579500531;  // std dev = 5.646, 143.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.13481193964483246;  // std dev = 3.956, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
%   | | | else return 0.12011923954283389;  // std dev = 6.752, 206.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10515953978861817;  // std dev = 7.809, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09108140468607706;  // std dev = 7.778, 269.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7091642234063127;  // std dev = 0.995, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.2687297505780449;  // std dev = 0.057, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1033745313739575;  // std dev = 2.950, 37.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | else return 0.024271047864003324;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04168024955060246;  // std dev = 4.299, 134.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=44 */
%   | | | else return 0.06497777107616555;  // std dev = 5.614, 140.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.051521099530518526;  // std dev = 7.020, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015255029478124056;  // std dev = 7.164, 288.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.574', 'seconds']
Parameter learned model CLL:-0.325785 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.993, 209, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.911, 66, 38], 'false,false,false,false': [6.053, 114, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.485, 95, 44], 'false,false,false,false': [5.646, 95, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.956, 45, 24], 'false,false,false,false': [6.752, 138, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.809, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.778, 177, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.995, 1, 44], 'true,false': [0.057, 99, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.95, 23, 14], 'false,false,false,false': [4.911, 83, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.299, 90, 44], 'false,false,false,false': [5.614, 92, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.02, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.164, 196, 92]}]
{'': [nan, 0.21222723810995575], 'false': [nan, 0.2122272381099556], 'false,false': [nan, 0.21222723810995575], 'false,false,false': [nan, 0.2122272381099556]}
{'': [nan, 0.22383217993079407], 'false': [nan, 0.22383217993079416], 'false,false': [nan, 0.22383217993079407], 'false,false,false': [0.23187869822485174, 0.21811224489795705]}
{'': [nan, 0.21984264736501374], 'false': [nan, 0.21984264736501374], 'false,false': [nan, 0.21984264736501388], 'false,false,false': [0.21645374280357318, 0.22291709679293123]}
{'': [nan, 0.22275221103740805], 'false': [nan, 0.22275221103740805], 'false,false': [nan, 0.22275221103740747], 'false,false,false': [0.22684310018903575, 0.22132779664899518]}
{'': [nan, 0.22339491636177713], 'false': [nan, 0.22339491636177713], 'false,false': [nan, 0.2233949163617774], 'false,false,false': [nan, 0.2233949163617774]}
{'': [nan, 0.22489228661765454], 'false': [nan, 0.22489228661765454], 'false,false': [nan, 0.2248922866176542], 'false,false,false': [nan, 0.22489228661765456]}
{'': [0.21234375064698063, 0.21427440052539382], 'false': [nan, 0.21427440052539382], 'false,false': [nan, 0.21427440052539382], 'false,false,false': [0.23520818115412723, 0.20615092409964295], 'true': [0.021988296970425442, 3.2511752683897754e-05], 'true,true': [nan, 0.021988296970425442], 'true,true,false': [nan, 0.021988296970425442]}
{'': [nan, 0.1825993328556747], 'false': [nan, 0.1825993328556747], 'false,false': [nan, 0.18259933285567542], 'false,false,false': [0.1379362667048732, 0.22508282313199512]}
{'': [nan, 0.18597211228912255], 'false': [nan, 0.18597211228912325], 'false,false': [nan, 0.18597211228912325], 'false,false,false': [nan, 0.18597211228912325]}
{'': [nan, 0.17822821509676726], 'false': [nan, 0.17822821509676726], 'false,false': [nan, 0.17822821509676715], 'false,false,false': [nan, 0.17822821509676715]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.97
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E), complex(E, F) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.14185106490048768;  // std dev = 5.05e-08, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | else return -0.1418510649004877;  // std dev = 2.98e-08, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.16849376268571928;  // std dev = 2.491, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15729423424481107;  // std dev = 4.953, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( phenotype(C, E), enzyme(C, F) )
%   | then if ( complex(A, D), interaction(G, C) )
%   | | then return 0.14070697473533836;  // std dev = 1.066, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7779246429658748;  // std dev = 0.117, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.15089763036226692;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( phenotype(C, I), complex(A, J) )
%   | | then return 0.0749489235178625;  // std dev = 0.374, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else return 0.16426919089248948;  // std dev = 0.447, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.7385128322212614;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.7555903902911568;  // std dev = 0.107, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.17492540627078648;  // std dev = 5.049, 128.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=44 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), interaction(E, C) )
%   | then return 0.705243415164184;  // std dev = 0.072, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5692892885452528;  // std dev = 0.073, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.681194757912252;  // std dev = 0.188, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.15559265934899635;  // std dev = 0.133, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | | else return 0.15059948345382643;  // std dev = 2.874, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return 0.09928018112907394;  // std dev = 2.904, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.4793864438189943;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.49778762710238506;  // std dev = 0.798, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16644184714432633;  // std dev = 4.665, 108.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), interaction(E, A) )
%   | then return 0.480231108462589;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5767552381885962;  // std dev = 0.066, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( enzyme(F, G) )
%   | | then return -0.13789301600744366;  // std dev = 0.093, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return -0.06482773132199772;  // std dev = 0.617, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.21932461232260786;  // std dev = 0.779, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( location(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7104439236468245;  // std dev = 0.490, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.18677382212129442;  // std dev = 0.201, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.12784034747079864;  // std dev = 2.474, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.04652377630863647;  // std dev = 4.621, 128.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=35 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.05262160909335407;  // std dev = 0.341, 142.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=44 */
%   else if ( interaction(A, D), complex(D, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( interaction(A, F) )
%   | | | then return 0.08289918467661407;  // std dev = 0.943, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.17399372770801916;  // std dev = 1.171, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( interaction(D, H) )
%   | | | then return -0.0383974527553151;  // std dev = 1.901, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.10901217983466656;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6817500150983541;  // std dev = 0.495, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.2008088579925006;  // std dev = 0.116, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.24510190799680423;  // std dev = 0.939, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.14742718795897705;  // std dev = 2.757, 41.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.37686990791763947;  // std dev = 0.085, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( enzyme(E, F), enzyme(A, F) )
%   | | then if ( complex(A, G) )
%   | | | then return -0.14668601259239114;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0978241632029143;  // std dev = 0.718, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else if ( complex(A, H), enzyme(A, I) )
%   | | | then return 0.1168719458171406;  // std dev = 1.095, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return -0.011956534523108618;  // std dev = 2.081, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.5181468998048394;  // std dev = 1.009, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return -0.17966217940532533;  // std dev = 0.287, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.02228754448997545;  // std dev = 1.615, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.10262867938034072;  // std dev = 4.062, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( enzyme(A, F), phenotype(A, G) )
%   | | | then return 0.0600080725267512;  // std dev = 0.598, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3292787847349127;  // std dev = 0.195, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.5118654480463445;  // std dev = 0.145, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.17438395222514116;  // std dev = 0.048, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( complex(I, J) )
%   | | | then return 0.059335468659845354;  // std dev = 1.537, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.3883237067038791;  // std dev = 2.330, 50.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=39 */
%   | | else return -0.208922319119536;  // std dev = 0.047, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, A) )
%   | | then return 0.005552172585355832;  // std dev = 0.254, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.08373510284709498;  // std dev = 0.329, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.23807704894371765;  // std dev = 0.060, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, D), complex(A, E) )
%   | | then return -0.030548298706742073;  // std dev = 0.164, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.08902923014618742;  // std dev = 0.161, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   else if ( phenotype(A, F) )
%   | then if ( phenotype(G, F), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.19448484143743683;  // std dev = 0.531, 12.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=10 */
%   | | | else return 0.4034719826809553;  // std dev = 0.561, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | else return -0.15823376539672426;  // std dev = 0.058, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.2608815215804248;  // std dev = 3.004, 67.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=46 */
%   | | | else return -0.18509682043302358;  // std dev = 0.374, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return 0.2046874324028448;  // std dev = 0.857, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D) )
%   | | then return 0.2705635179664548;  // std dev = 0.088, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | | else return 0.04009539992108517;  // std dev = 1.035, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return -0.13001953806518748;  // std dev = 0.052, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3785277554055408;  // std dev = 0.149, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1825308087575718;  // std dev = 0.063, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | else if ( phenotype(A, H), location(A, I) )
%   | | then if ( phenotype(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.24415722218049735;  // std dev = 0.817, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.1622380631126527;  // std dev = 0.206, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.0395915162411446;  // std dev = 2.130, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
%   | | | else return 0.1656718658251486;  // std dev = 1.684, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.12877507920534356;  // std dev = 0.148, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( complex(A, D), interaction(E, A) )
%   | then if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(H, E), interaction(F, I) )
%   | | | then return -0.06385528088493084;  // std dev = 0.363, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.13637017710133367;  // std dev = 0.604, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( complex(E, J), interaction(K, E) )
%   | | | then return 0.03414361921429547;  // std dev = 1.321, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | | | else return -0.044745876134987206;  // std dev = 1.181, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then if ( interaction(N, L), interaction(N, N) )
%   | | | then return 0.25528914196646724;  // std dev = 0.779, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.08113171601196525;  // std dev = 1.159, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | else if ( interaction(A, P), complex(P, Q) )
%   | | | then return 0.036739962011449676;  // std dev = 1.947, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return -0.01681019531429409;  // std dev = 2.440, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.821', 'seconds']
Refined model CLL: -0.176587


******************************************
Best model found
******************************************
Results 

CLL : -0.185274 

AUC ROC : 0.99171 

AUC PR : 0.469939 

Precision : 0.229554 

Recall : 0.891697 

F1 : 0.365115 

Total Learning Time : 18.97 

Total Inference Time : 11.368785858154297 

Total revision time: 38.34621098709106
Best scored revision CLL: -0.176587


Results 

CLL : -0.185274 

AUC ROC : 0.99171 

AUC PR : 0.469939 

Precision : 0.229554 

Recall : 0.891697 

F1 : 0.365115 

Total Learning Time : 38.40582707595825 

Total Inference Time : 11.368785858154297 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.119
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18765085080832503;  // std dev = 7.594, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.15931867484112358;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.1689973950992204;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10421230626459849;  // std dev = 4.444, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.11474647066261226;  // std dev = 6.348, 190.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.20302725507081218;  // std dev = 2.306, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.10960078085618458;  // std dev = 7.246, 242.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.14219465438686882;  // std dev = 7.355, 232.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06496596234193043;  // std dev = 7.649, 269.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7300957738637218;  // std dev = 0.041, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2696204696019667;  // std dev = 0.052, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.09375964458650714;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.06111193802450762;  // std dev = 5.120, 119.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.052108964020283643;  // std dev = 3.362, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.05696058952800173;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05288203698750663;  // std dev = 6.992, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01837189989840148;  // std dev = 7.125, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.926', 'seconds']
Parameter learned model CLL:-0.343333 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.346, 58, 28], 'false,false,false,false': [6.209, 115, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.444, 67, 28], 'false,false,false,false': [6.348, 132, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.306, 13, 9], 'false,false,false,false': [7.246, 165, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.355, 146, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.649, 183, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.041, 0, 28], 'true,false': [0.052, 46, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [5.12, 80, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.362, 53, 28], 'false,false,false,false': [6.2, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.992, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.125, 179, 86]}]
{'': [nan, 0.22093040325303584], 'false': [nan, 0.22093040325303565], 'false,false': [nan, 0.22093040325303584], 'false,false,false': [nan, 0.22093040325303565]}
{'': [nan, 0.22179156542091133], 'false': [nan, 0.22179156542091047], 'false,false': [nan, 0.22179156542091133], 'false,false,false': [0.21957815035154052, 0.22286077049016242]}
{'': [nan, 0.2106858836359321], 'false': [nan, 0.2106858836359321], 'false,false': [nan, 0.2106858836359318], 'false,false,false': [0.20785398358192367, 0.21206484412308108]}
{'': [nan, 0.21968390697933643], 'false': [nan, 0.21968390697933643], 'false,false': [nan, 0.21968390697933685], 'false,false,false': [0.24173553719008292, 0.21695183781679994]}
{'': [nan, 0.23314210064544363], 'false': [nan, 0.23314210064544363], 'false,false': [nan, 0.23314210064544355], 'false,false,false': [nan, 0.23314210064544355]}
{'': [nan, 0.21751008471726616], 'false': [nan, 0.21751008471726616], 'false,false': [nan, 0.2175100847172657], 'false,false,false': [nan, 0.21751008471726563]}
{'': [0.23513381447730092, 0.22352471340982738], 'true': [6.019468616206122e-05, 5.8430615002214026e-05], 'false': [nan, 0.22352471340982738], 'false,false': [nan, 0.22352471340982738], 'false,false,false': [0.22997508009967954, 0.22032342348704137], 'true,true': [nan, 6.019468616206122e-05], 'true,true,false': [nan, 6.019468616206122e-05]}
{'': [nan, 0.19662209318336818], 'false': [nan, 0.19662209318336818], 'false,false': [nan, 0.19662209318336868], 'false,false,false': [0.13953702150138345, 0.22349764329827693]}
{'': [nan, 0.19793353528780716], 'false': [nan, 0.19793353528780674], 'false,false': [nan, 0.19793353528780674], 'false,false,false': [nan, 0.19793353528780674]}
{'': [nan, 0.19158750143313386], 'false': [nan, 0.19158750143313386], 'false,false': [nan, 0.19158750143313288], 'false,false,false': [nan, 0.19158750143313288]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.806
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( phenotype(A, F), complex(A, G) )
%   | | then if ( interaction(C, H), recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.011995088945666131;  // std dev = 0.361, 52.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=8 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.0918510649004878;  // std dev = 0.975, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | | else return 0.11346808403568254;  // std dev = 2.989, 47.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=12 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.18122585817643502;  // std dev = 3.770, 65.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=21 */
%   | | | else return 0.2619950889456662;  // std dev = 3.538, 52.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=21 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.612645181367721;  // std dev = 0.316, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | | then return 0.5991863135278468;  // std dev = 0.405, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | else if ( interaction(C, E), enzyme(E, F) )
%   | | | then return 0.019713818394319953;  // std dev = 2.783, 57.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=10 */
%   | | | else return 0.23526028029019533;  // std dev = 3.377, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then return 0.07336665580527653;  // std dev = 0.418, 96.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=23 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8373830619652406;  // std dev = 0.021, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.16096270061189122;  // std dev = 0.028, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( location(A, K) )
%   | | | then return 0.02317451080961802;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.19001583189870216;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.593890853486099;  // std dev = 0.060, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.05574673319465128;  // std dev = 0.394, 89.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=22 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( interaction(H, F), enzyme(H, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.23683073315682662;  // std dev = 1.308, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.8196810819260297;  // std dev = 0.044, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, K) )
%   | | | then return 0.2229815463432316;  // std dev = 2.785, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.024249440072740585;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.7772402950301129;  // std dev = 0.219, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(M, A), interaction(N, M) )
%   | | | then return 0.06719735406810497;  // std dev = 3.100, 54.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=14 */
%   | | | else return 0.15495404203511287;  // std dev = 2.890, 43.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.4505444814510745;  // std dev = 0.149, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return 0.7088316788840247;  // std dev = 1.140, 61.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=60 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.18600304410127697;  // std dev = 0.147, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.37768957566150657;  // std dev = 2.210, 23.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=14 */
%   | else return -0.1892070140009592;  // std dev = 0.328, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   else return 0.3262254827242782;  // std dev = 1.186, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then if ( interaction(D, C) )
%   | | then return 0.34049890055022897;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.15655913437186592;  // std dev = 0.466, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5540857105870098;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1482771257379475;  // std dev = 0.059, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, E), interaction(E, F) )
%   | | then if ( interaction(E, A), complex(F, G) )
%   | | | then return -0.007347518244527574;  // std dev = 0.948, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.10622937342027097;  // std dev = 3.674, 92.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=32 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return -0.10636396497565698;  // std dev = 1.671, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.049097650288762604;  // std dev = 3.680, 111.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=32 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), phenotype(A, E) )
%   | then if ( interaction(F, D) )
%   | | then return 0.3068268768779694;  // std dev = 0.135, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.15220202132642857;  // std dev = 0.637, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(G, A), interaction(C, G) )
%   | | then return 0.28636461532971597;  // std dev = 0.134, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.4276375556012165;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3972642310134267;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(J, A) )
%   | | then if ( enzyme(A, K), complex(I, L) )
%   | | | then return 0.13171583486588698;  // std dev = 1.665, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | else return -0.03394414156786297;  // std dev = 2.529, 75.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=14 */
%   | | else if ( enzyme(A, M), interaction(A, N) )
%   | | | then return 0.3480109880711263;  // std dev = 1.044, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.08567182074703142;  // std dev = 4.143, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, A) )
%   | | then return 0.20549570302062548;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0.2599268382041125;  // std dev = 0.060, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5547609842894842;  // std dev = 0.575, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | else return -0.18179715910139205;  // std dev = 0.057, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, G), interaction(G, A) )
%   | | then return 0.22646900328766337;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3159375466764296;  // std dev = 0.062, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1377298690808546;  // std dev = 0.027, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.022739552002799986;  // std dev = 3.822, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else return 0.09484351189164852;  // std dev = 2.609, 42.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=15 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.340360826286191;  // std dev = 0.154, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then return 0.1761729087768812;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.274424009722487;  // std dev = 0.043, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.11113763285606212;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.24819295818937784;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(G, A), enzyme(G, H) )
%   | | | then return -0.03011972744596602;  // std dev = 2.239, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | | else return 0.044079784655959416;  // std dev = 4.531, 161.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=51 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(A, F) )
%   | | then return 0.1686817387963794;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(G, A), phenotype(E, H) )
%   | | | then return 0.33268320166163035;  // std dev = 0.287, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.501407718077004;  // std dev = 0.147, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08910245248436886;  // std dev = 0.024, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.17429684318341443;  // std dev = 0.094, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), interaction(K, J) )
%   | | | then return 0.4667618020566169;  // std dev = 1.399, 49.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=48 */
%   | | | else return -0.015862523259624037;  // std dev = 1.908, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | else return -0.18672484927878263;  // std dev = 0.043, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else return 0.3050360419358096;  // std dev = 1.047, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), phenotype(C, E) )
%   | then return 0.26511002004033657;  // std dev = 0.151, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(C, A) )
%   | | then return -0.06356675619001759;  // std dev = 0.075, 30.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=4 */
%   | | else return 0.06504799741465113;  // std dev = 0.303, 72.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.3832708574497436;  // std dev = 0.100, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.1930672968883905;  // std dev = 0.116, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | else if ( interaction(H, A) )
%   | | then if ( phenotype(H, I), location(A, J) )
%   | | | then return 0.024788831839429093;  // std dev = 1.982, 56.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=19 */
%   | | | else return 0.1368493697633364;  // std dev = 0.975, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.06151176132306821;  // std dev = 0.531, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.04149419095830955;  // std dev = 1.122, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '51.443', 'seconds']
Refined model CLL: -0.201244


******************************************
Best model found
******************************************
Results 

CLL : -0.218272 

AUC ROC : 0.988117 

AUC PR : 0.323435 

Precision : 0.247678 

Recall : 0.848057 

F1 : 0.383387 

Total Learning Time : 26.806 

Total Inference Time : 19.681442975997925 

Total revision time: 53.82944707870483
Best scored revision CLL: -0.201244


Results 

CLL : -0.218272 

AUC ROC : 0.988117 

AUC PR : 0.323435 

Precision : 0.247678 

Recall : 0.848057 

F1 : 0.383387 

Total Learning Time : 53.88906316757202 

Total Inference Time : 19.681442975997925 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.259
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1491188347650639;  // std dev = 7.854, 299.000 (wgt'ed) examples reached here.  /* #neg=212 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18009537817908414;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.10444220562668714;  // std dev = 5.620, 162.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.09784515245261972;  // std dev = 5.021, 125.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=35 */
%   | | | else return 0.1528404956224648;  // std dev = 5.886, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14873203486063682;  // std dev = 3.603, 57.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=20 */
%   | | | else return 0.1349663462553237;  // std dev = 6.671, 199.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1175799918451907;  // std dev = 7.568, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08205461603216474;  // std dev = 7.651, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7431526653291802;  // std dev = 0.050, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2561810383355278;  // std dev = 0.067, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02777130171342339;  // std dev = 4.099, 80.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=24 */
%   | | | else return 0.0881779338738023;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025458605210254705;  // std dev = 3.928, 116.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=35 */
%   | | | else return 0.05740467654233453;  // std dev = 5.886, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045762167108808184;  // std dev = 7.000, 264.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03914301850600906;  // std dev = 6.999, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.166', 'seconds']
Parameter learned model CLL:-0.328473 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.854, 212, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.62, 119, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.021, 90, 35], 'false,false,false,false': [5.886, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.603, 37, 20], 'false,false,false,false': [6.671, 132, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.568, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.05, 0, 35], 'true,false': [0.067, 62, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.099, 56, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.928, 81, 35], 'false,false,false,false': [5.886, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.0, 177, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.999, 171, 87]}]
{'': [nan, 0.2063064171541713], 'false': [nan, 0.2063064171541715], 'false,false': [nan, 0.2063064171541713], 'false,false,false': [nan, 0.2063064171541715]}
{'': [nan, 0.2095865660537777], 'false': [nan, 0.20958656605377804], 'false,false': [nan, 0.2095865660537777], 'false,false,false': [0.2247461090078721, 0.19497789971041013]}
{'': [nan, 0.2137550038606266], 'false': [nan, 0.2137550038606266], 'false,false': [nan, 0.21375500386062754], 'false,false,false': [0.20170959785717485, 0.22206135878236039]}
{'': [nan, 0.22460840260781528], 'false': [nan, 0.22460840260781528], 'false,false': [nan, 0.224608402607816], 'false,false,false': [0.2277623884272088, 0.22366280757028786]}
{'': [nan, 0.22546312850808686], 'false': [nan, 0.22546312850808686], 'false,false': [nan, 0.22546312850808733], 'false,false,false': [nan, 0.22546312850808733]}
{'': [nan, 0.22089084738741832], 'false': [nan, 0.22089084738741832], 'false,false': [nan, 0.2208908473874178], 'false,false,false': [nan, 0.22089084738741868]}
{'': [0.2303946250606907, 0.2190549855707623], 'true': [7.08600788879973e-05, 7.203524278762052e-05], 'false': [nan, 0.2190549855707623], 'false,false': [nan, 0.2190549855707623], 'false,false,false': [0.20999999999999983, 0.22618503276939433], 'true,true': [nan, 7.08600788879973e-05], 'true,true,false': [nan, 7.08600788879973e-05]}
{'': [nan, 0.18434172648482483], 'false': [nan, 0.18434172648482483], 'false,false': [nan, 0.18434172648482475], 'false,false,false': [0.13298586871381723, 0.22209418040934845]}
{'': [nan, 0.18562962980779232], 'false': [nan, 0.18562962980779318], 'false,false': [nan, 0.18562962980779318], 'false,false,false': [nan, 0.18562962980779318]}
{'': [nan, 0.18989347486148137], 'false': [nan, 0.18989347486148137], 'false,false': [nan, 0.1898934748614803], 'false,false,false': [nan, 0.1898934748614803]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.944
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(E, A) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.7914822684328456;  // std dev = 0.966, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | | | else return 0.1232652141692802;  // std dev = 6.472, 215.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=57 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | then return 0.7278459729690357;  // std dev = 0.028, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(A, C) )
%   | | then return -0.15126809053305287;  // std dev = 0.081, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(D, E), location(C, F) )
%   | | | then return 0.1701578046184579;  // std dev = 5.906, 159.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | | | else return 0.05675739296365241;  // std dev = 2.171, 28.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then return 0.1758050120112715;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.28162893957529533;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.3424716786779381;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.577334239218108;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then if ( interaction(A, C) )
%   | | then return 0.5532980154067674;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.7224484876071486;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | | then if ( enzyme(A, E), phenotype(C, F) )
%   | | | then return 0.2791804996295478;  // std dev = 0.712, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.5911123698861044;  // std dev = 0.166, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(G, C), interaction(A, G) )
%   | | | then return -0.106706051429717;  // std dev = 0.942, 36.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=1 */
%   | | | else return 0.11331569377788589;  // std dev = 6.281, 191.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=56 */
%   else if ( interaction(A, H), interaction(H, H) )
%   | then return -0.10434085752169557;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.2297896197256053;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06232580914497107;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( phenotype(A, E) )
%   | then return 0.1296152494234638;  // std dev = 0.428, 54.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=21 */
%   | else if ( interaction(F, D), interaction(D, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.6750773172669758;  // std dev = 0.309, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2771510324109938;  // std dev = 1.521, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( complex(D, C) )
%   | | | then return 0.05021107143034486;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03817782111382001;  // std dev = 0.956, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( interaction(H, A), enzyme(H, I) )
%   | then return 0.05399150807656735;  // std dev = 0.369, 51.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=15 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.7683316792896573;  // std dev = 0.249, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.21134627599979364;  // std dev = 0.161, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return 0.09411667986798264;  // std dev = 0.442, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4463190536075116;  // std dev = 0.229, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(A, G), location(G, F) )
%   | | | then return 0.02041179094040755;  // std dev = 1.798, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | | else return 0.12889790399675655;  // std dev = 2.698, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | else if ( location(A, H), complex(D, I) )
%   | | | then return 0.5056888981028284;  // std dev = 1.205, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.10578802727586276;  // std dev = 1.232, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | else if ( complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6069737365432999;  // std dev = 0.756, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | else return -0.2193323565790287;  // std dev = 0.510, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.08575513907314385;  // std dev = 3.771, 83.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=26 */
%   | | | else return -0.03131519773852829;  // std dev = 1.485, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.4384844687176601;  // std dev = 0.360, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.19836015462351572;  // std dev = 0.249, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | else if ( interaction(F, A), complex(F, D) )
%   | | | then return -0.15176897236455314;  // std dev = 0.167, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return -0.046398617163963575;  // std dev = 2.161, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3458755541676399;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, J), interaction(K, H) )
%   | | | then return -0.06785958245973595;  // std dev = 1.786, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | | | else return 0.12752626212745352;  // std dev = 1.911, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | else if ( location(A, L) )
%   | | | then return 0.07071397433688587;  // std dev = 4.982, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   | | | else return 0.2549778081766948;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49949516806806127;  // std dev = 0.193, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.21761226433389275;  // std dev = 0.060, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( interaction(A, E), location(A, F) )
%   | then if ( enzyme(A, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3595859750864377;  // std dev = 0.231, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.025550178125743245;  // std dev = 1.989, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else return -0.03475934430640824;  // std dev = 0.306, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6820311375694239;  // std dev = 0.221, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2599265081227246;  // std dev = 0.372, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, L) )
%   | | | then return 0.04051050297682149;  // std dev = 3.479, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   | | | else return 0.13966592689316115;  // std dev = 1.071, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then return 0.29542064189447553;  // std dev = 0.183, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06906660885108146;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.4166740667097459;  // std dev = 0.120, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(E, H), interaction(E, I) )
%   | | | then return -9.8070224321665E-4;  // std dev = 1.153, 19.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | else return -0.10995788526420193;  // std dev = 1.292, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | else if ( enzyme(A, J), interaction(A, K) )
%   | | then if ( interaction(K, L) )
%   | | | then return 0.1001301908011578;  // std dev = 1.547, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.29398418458551673;  // std dev = 0.920, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.006292744203612175;  // std dev = 2.773, 90.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=23 */
%   | | | else return 0.03334292069047916;  // std dev = 4.185, 105.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.1699818776353166;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.35869500138107296;  // std dev = 0.354, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, D), location(D, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.26157268271098055;  // std dev = 0.104, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.11940242801260274;  // std dev = 0.203, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | | else return -0.01004932885550094;  // std dev = 3.141, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.46841113884550994;  // std dev = 0.520, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.21358353071975503;  // std dev = 0.315, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.06345571471096256;  // std dev = 2.461, 37.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=13 */
%   | | | else return 0.15005968931423114;  // std dev = 2.853, 40.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( location(A, D), interaction(E, A) )
%   | then return 0.031908261332336436;  // std dev = 0.276, 84.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=30 */
%   | else return -0.06301355173881541;  // std dev = 0.321, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   else if ( interaction(F, A), complex(F, G) )
%   | then if ( complex(A, H) )
%   | | then return 0.03792801614491919;  // std dev = 0.294, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6185073455233068;  // std dev = 0.426, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.23052328887394374;  // std dev = 0.151, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(A, L) )
%   | | | then return 0.13265616423597293;  // std dev = 0.883, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.052437177596603456;  // std dev = 2.761, 50.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=18 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.05651075139125504;  // std dev = 0.675, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.07159564528619584;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.367', 'seconds']
Refined model CLL: -0.23621


******************************************
Best model found
******************************************
Results 

CLL : -0.234214 

AUC ROC : 0.967082 

AUC PR : 0.308583 

Precision : 0.261168 

Recall : 0.539007 

F1 : 0.351852 

Total Learning Time : 21.944 

Total Inference Time : 11.133512020111084 

Total revision time: 40.93213217544556
Best scored revision CLL: -0.23621


Results 

CLL : -0.234214 

AUC ROC : 0.967082 

AUC PR : 0.308583 

Precision : 0.261168 

Recall : 0.539007 

F1 : 0.351852 

Total Learning Time : 41.01679127502442 

Total Inference Time : 11.133512020111084 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.437
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19363280606725483;  // std dev = 8.313, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1705687456612214;  // std dev = 5.869, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | else return 0.1442836535078658;  // std dev = 5.984, 167.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15370164980354956;  // std dev = 5.183, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.11036688572497408;  // std dev = 6.641, 210.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12001578884831636;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.1297860823178943;  // std dev = 7.047, 222.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11397752376855307;  // std dev = 8.246, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09523920553272508;  // std dev = 8.233, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.72265812338386;  // std dev = 0.010, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27729566210651657;  // std dev = 0.013, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05232561894065573;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.05101123418693121;  // std dev = 5.225, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025739638911393557;  // std dev = 4.138, 128.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=41 */
%   | | | else return 0.07352462906503938;  // std dev = 6.388, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04748133470048531;  // std dev = 7.604, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06053368257239248;  // std dev = 7.434, 281.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.916', 'seconds']
Parameter learned model CLL:-0.348173 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.313, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.869, 102, 52], 'false,false,false,false': [5.984, 115, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.183, 78, 41], 'false,false,false,false': [6.641, 147, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.047, 147, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.246, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.233, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 41], 'true,false': [0.013, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.943, 48, 23], 'false,false,false,false': [5.225, 86, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.138, 87, 41], 'false,false,false,false': [6.388, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.604, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.434, 177, 104]}]
{'': [nan, 0.22293444328824347], 'false': [nan, 0.22293444328824197], 'false,false': [nan, 0.22293444328824347], 'false,false,false': [nan, 0.22293444328824197]}
{'': [nan, 0.21901961355188565], 'false': [nan, 0.21901961355188557], 'false,false': [nan, 0.21901961355188565], 'false,false,false': [0.22364648338674065, 0.21442145648821867]}
{'': [nan, 0.21612222191034564], 'false': [nan, 0.21612222191034564], 'false,false': [nan, 0.21612222191034566], 'false,false,false': [0.2257139638548899, 0.21000766040655763]}
{'': [nan, 0.2236654927975558], 'false': [nan, 0.2236654927975558], 'false,false': [nan, 0.22366549279755626], 'false,false,false': [0.22349918875067518, 0.22370326285348618]}
{'': [nan, 0.2266408916055928], 'false': [nan, 0.2266408916055928], 'false,false': [nan, 0.22664089160559273], 'false,false,false': [nan, 0.22664089160559273]}
{'': [nan, 0.22743309958235394], 'false': [nan, 0.22743309958235394], 'false,false': [nan, 0.2274330995823539], 'false,false,false': [nan, 0.22743309958235303]}
{'': [0.2285037711946986, 0.21751757121268256], 'true': [2.261109308330017e-06, 2.322301914693033e-06], 'false': [nan, 0.21751757121268256], 'false,false': [nan, 0.21751757121268256], 'false,false,false': [0.21900416584011118, 0.2166792642983124], 'true,true': [nan, 2.261109308330017e-06], 'true,true,false': [nan, 2.261109308330017e-06]}
{'': [nan, 0.18925889193751316], 'false': [nan, 0.18925889193751316], 'false,false': [nan, 0.18925889193751372], 'false,false,false': [0.1337579397440845, 0.22799468498841813]}
{'': [nan, 0.1933900874735544], 'false': [nan, 0.1933900874735551], 'false,false': [nan, 0.1933900874735551], 'false,false,false': [nan, 0.1933900874735551]}
{'': [nan, 0.1966646324483359], 'false': [nan, 0.1966646324483359], 'false,false': [nan, 0.19666463244833565], 'false,false,false': [nan, 0.19666463244833565]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 30.65
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.6763307532813297;  // std dev = 0.386, 33.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=27 */
%   | else return 0.009934649385226643;  // std dev = 0.359, 112.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=17 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( location(A, H), phenotype(F, I) )
%   | | | then return 0.35814893509951234;  // std dev = 2.739, 30.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=15 */
%   | | | else return 0.13087620782678497;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, K), complex(K, L) )
%   | | | then return 0.1308762078267851;  // std dev = 2.558, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return 0.223228300178877;  // std dev = 3.821, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3581489350995122;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(A, D) )
%   | then return 0.5546686895771394;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( enzyme(C, E) )
%   | | then return 0.7335515231574286;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.8396492998111901;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), location(A, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then if ( location(H, G) )
%   | | | then return 0.7358402983342843;  // std dev = 2.359, 82.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=76 */
%   | | | else return -0.17368435778314084;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.1624499262851171;  // std dev = 0.271, 183.000 (wgt'ed) examples reached here.  /* #neg=183 */
%   | else if ( complex(A, I) )
%   | | then return 0.5110508970202;  // std dev = 1.135, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.09145896494019379;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.2556835844033668;  // std dev = 1.730, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.25197252656101315;  // std dev = 0.963, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else return 0.571883628683941;  // std dev = 0.273, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B), interaction(F, A) )
%   | | then return 0.5591502763577478;  // std dev = 0.225, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.13073243174112129;  // std dev = 0.278, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | | else return 0.045672323814979474;  // std dev = 3.273, 71.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=16 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( phenotype(A, I), enzyme(H, J) )
%   | | | then return 0.251068868236596;  // std dev = 1.025, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.1171838817391783;  // std dev = 4.492, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
%   | | else if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.3670456415152419;  // std dev = 0.641, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.05103304842410338;  // std dev = 2.087, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.40605052172397826;  // std dev = 0.270, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5945640346222494;  // std dev = 0.090, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(G, E), interaction(E, G) )
%   | | then if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return -0.009122156646908746;  // std dev = 1.582, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | | else return 0.108509941180026;  // std dev = 2.338, 45.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=16 */
%   | | else if ( interaction(J, E), complex(J, K) )
%   | | | then return -0.1225372578234271;  // std dev = 1.093, 23.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=2 */
%   | | | else return 0.032176653540894905;  // std dev = 2.147, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.4954242931601165;  // std dev = 0.114, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, M), enzyme(A, N) )
%   | | | then return 0.1738458811025376;  // std dev = 2.747, 44.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=18 */
%   | | | else return 0.050930270763168924;  // std dev = 4.193, 123.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=33 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return 0.2056554472432525;  // std dev = 0.503, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.410385763291606;  // std dev = 0.060, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.5101962912068095;  // std dev = 0.163, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(G, I) )
%   | | | then return 0.006250162739483795;  // std dev = 2.412, 68.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=15 */
%   | | | else return -0.2066943386880463;  // std dev = 0.221, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.42362244119534115;  // std dev = 1.427, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.1718381473291458;  // std dev = 0.429, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.4389066238375119;  // std dev = 0.185, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.1096958015310532;  // std dev = 5.094, 155.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=55 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.35525566423432736;  // std dev = 0.071, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.2443002844588231;  // std dev = 0.229, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.3049658035059998;  // std dev = 0.156, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( phenotype(A, H), phenotype(F, I) )
%   | | | then return 0.021563898184251074;  // std dev = 2.413, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | | else return -0.06548218537014285;  // std dev = 1.831, 45.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=7 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then if ( phenotype(J, L) )
%   | | | then return 0.01853903760504187;  // std dev = 3.055, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | | else return -0.061514005464036806;  // std dev = 0.666, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else if ( phenotype(A, M), interaction(N, A) )
%   | | | then return 0.06877920943030309;  // std dev = 2.816, 57.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=17 */
%   | | | else return 0.14259668652634777;  // std dev = 2.993, 51.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.19633050974111246;  // std dev = 0.169, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return 0.4717923815718999;  // std dev = 0.248, 31.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=30 */
%   | else return -0.18973031090117484;  // std dev = 0.118, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(I, A) )
%   | | | then return -0.24149745994425936;  // std dev = 1.284, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.37717512895535926;  // std dev = 2.896, 71.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=55 */
%   | | else return -0.18470172909223628;  // std dev = 0.042, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.4299550955249017;  // std dev = 0.820, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, L) )
%   | | | then return 0.0992662229301507;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.05188575899376353;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(A, D), interaction(A, C) )
%   | then return -0.02371882188029187;  // std dev = 0.252, 67.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=21 */
%   | else if ( interaction(A, E), phenotype(E, F) )
%   | | then if ( complex(E, G), location(A, H) )
%   | | | then return 0.03268611013971544;  // std dev = 1.641, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.14925211748979975;  // std dev = 1.593, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( enzyme(C, I) )
%   | | | then return -0.0073775229215498235;  // std dev = 2.656, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | else return 0.0401618539658679;  // std dev = 3.420, 104.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=35 */
%   else if ( interaction(A, J), enzyme(J, K) )
%   | then if ( interaction(J, L) )
%   | | then return -0.1282663566378186;  // std dev = 0.327, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.12714655457703286;  // std dev = 0.300, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.12478356914916053;  // std dev = 0.961, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return -0.1035381502110418;  // std dev = 0.444, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(C, C) )
%   | then return 0.06321509320781467;  // std dev = 0.241, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else if ( location(A, E) )
%   | | then return -0.008059160852043307;  // std dev = 0.273, 74.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=21 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.1995741266358766;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.2988747104721156;  // std dev = 0.017, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.2176502687930203;  // std dev = 0.037, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.1748586165861876;  // std dev = 3.662, 93.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=57 */
%   | | | else return -0.15931583301960306;  // std dev = 0.435, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.05182020362906999;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.20972907847346875;  // std dev = 1.173, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.15932366596538497;  // std dev = 0.159, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( complex(D, E), enzyme(A, F) )
%   | | then if ( interaction(D, D) )
%   | | | then return -0.30097200640314603;  // std dev = 0.532, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return -0.039925627990762214;  // std dev = 0.825, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( phenotype(D, G), complex(A, H) )
%   | | | then return -0.034862656427026496;  // std dev = 1.342, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | | | else return 0.02690627110639311;  // std dev = 0.965, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( phenotype(A, K), phenotype(I, L) )
%   | | | then return 0.02809179327462369;  // std dev = 1.189, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.11407817832245586;  // std dev = 0.842, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | else if ( location(A, M) )
%   | | | then return 0.03221363257498434;  // std dev = 4.135, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
%   | | | else return 0.14947720253023747;  // std dev = 1.600, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '2.789', 'seconds']
Refined model CLL: -0.213613


******************************************
Best model found
******************************************
Results 

CLL : -0.210148 

AUC ROC : 0.98613 

AUC PR : 0.330272 

Precision : 0.34898 

Recall : 0.645283 

F1 : 0.45298 

Total Learning Time : 30.65 

Total Inference Time : 24.675628900527954 

Total revision time: 64.22513591003417
Best scored revision CLL: -0.213613


Results 

CLL : -0.210148 

AUC ROC : 0.98613 

AUC PR : 0.330272 

Precision : 0.34898 

Recall : 0.645283 

F1 : 0.45298 

Total Learning Time : 64.30979500961303 

Total Inference Time : 24.675628900527954 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.148
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17870642638871098;  // std dev = 7.906, 287.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1819122276763273;  // std dev = 5.771, 147.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=51 */
%   | | | else return 0.17951126729217232;  // std dev = 5.184, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13203581726197738;  // std dev = 5.456, 136.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=44 */
%   | | | else return 0.11822328383129893;  // std dev = 5.756, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11206862777108442;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
%   | | | else return 0.14965985907062485;  // std dev = 6.496, 183.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09388564940466688;  // std dev = 7.855, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08136627228609383;  // std dev = 7.827, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7321502415041589;  // std dev = 0.023, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2678179919387475;  // std dev = 0.032, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06815775078695352;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | | else return 0.05473618906426041;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.037887584152189555;  // std dev = 4.283, 135.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=44 */
%   | | | else return 0.04911288014508903;  // std dev = 5.668, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03721262559453395;  // std dev = 7.089, 277.000 (wgt'ed) examples reached here.  /* #neg=185 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03514703757196398;  // std dev = 7.045, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.158', 'seconds']
Parameter learned model CLL:-0.32663 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.906, 195, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.771, 96, 51], 'false,false,false,false': [5.184, 78, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.456, 92, 44], 'false,false,false,false': [5.756, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.189, 54, 26], 'false,false,false,false': [6.496, 117, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.855, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.827, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.023, 0, 44], 'true,false': [0.032, 89, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.069, 49, 25], 'false,false,false,false': [3.943, 48, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.283, 91, 44], 'false,false,false,false': [5.668, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.089, 185, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.045, 180, 92]}]
{'': [nan, 0.21780038606757518], 'false': [nan, 0.2178003860675749], 'false,false': [nan, 0.21780038606757518], 'false,false,false': [nan, 0.2178003860675749]}
{'': [nan, 0.2262422974730047], 'false': [nan, 0.2262422974730059], 'false,false': [nan, 0.2262422974730047], 'false,false,false': [0.226572261557684, 0.22583150907421828]}
{'': [nan, 0.21619778425186617], 'false': [nan, 0.21619778425186617], 'false,false': [nan, 0.21619778425186592], 'false,false,false': [0.21886105817551305, 0.2137718115356729]}
{'': [nan, 0.22746855947427289], 'false': [nan, 0.22746855947427289], 'false,false': [nan, 0.2274685594742732], 'false,false,false': [0.21937499999999877, 0.23057688704228738]}
{'': [nan, 0.22114431817341407], 'false': [nan, 0.22114431817341407], 'false,false': [nan, 0.22114431817341274], 'false,false,false': [nan, 0.22114431817341274]}
{'': [nan, 0.22274821939950257], 'false': [nan, 0.22274821939950257], 'false,false': [nan, 0.2227482193995023], 'false,false,false': [nan, 0.22274821939950254]}
{'': [0.22137797253365116, 0.22144742791392197], 'false': [nan, 0.22144742791392197], 'false,false': [nan, 0.22144742791392197], 'false,false,false': [0.22370343316289298, 0.21900416584011148], 'true': [1.1545723481276582e-05, 1.1504798295409686e-05], 'true,true': [nan, 1.1545723481276582e-05], 'true,true,false': [nan, 1.1545723481276582e-05]}
{'': [nan, 0.1802651067978133], 'false': [nan, 0.1802651067978133], 'false,false': [nan, 0.18026510679781207], 'false,false,false': [0.13585908570513514, 0.22154789017196053]}
{'': [nan, 0.18140830010120815], 'false': [nan, 0.18140830010120904], 'false,false': [nan, 0.18140830010120904], 'false,false,false': [nan, 0.18140830010120904]}
{'': [nan, 0.18247119182726163], 'false': [nan, 0.18247119182726163], 'false,false': [nan, 0.18247119182726126], 'false,false,false': [nan, 0.18247119182726126]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.419
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.14185106490048777;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, F) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.13087620782678497;  // std dev = 1.477, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.084564029439135;  // std dev = 3.047, 53.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=12 */
%   | | | else return 0.20430278125335752;  // std dev = 5.942, 156.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=54 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.4850122940520397;  // std dev = 0.812, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7307744171862892;  // std dev = 0.080, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.5194734122109544;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.8323911177756897;  // std dev = 0.082, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.16208991888879848;  // std dev = 0.190, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( interaction(K, A) )
%   | | | then return 0.05294309310739598;  // std dev = 0.889, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.4028447241170413;  // std dev = 1.852, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.23048167498028468;  // std dev = 2.802, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.11873682890630316;  // std dev = 3.915, 76.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6495391701160682;  // std dev = 0.056, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.13966604457200785;  // std dev = 0.158, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( phenotype(A, E), interaction(A, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.5992252606833456;  // std dev = 0.059, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(F, E) )
%   | | | then return -0.10061469022570102;  // std dev = 0.923, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.02522813367873364;  // std dev = 2.447, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(G, A) )
%   | | then if ( interaction(G, G), interaction(A, H) )
%   | | | then return 0.30824428743025084;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.08592840722939005;  // std dev = 4.342, 96.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=27 */
%   | | else if ( location(A, I) )
%   | | | then return 0.19872841110561132;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.31411302649022654;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(C, C) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.6070653599470777;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1740625197119029;  // std dev = 0.173, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.014397146721508651;  // std dev = 0.249, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   else if ( complex(A, F) )
%   | then if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then return 0.402085054303101;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.5317695993848254;  // std dev = 0.148, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.12581323116724002;  // std dev = 0.051, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5611831204719953;  // std dev = 2.935, 52.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=41 */
%   | | | else return -0.20922591890062406;  // std dev = 0.146, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return 0.42242804885868923;  // std dev = 0.817, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( interaction(C, A), recursion_proteinclass(D, B) )
%   | then return 0.384713340691891;  // std dev = 0.124, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, A) )
%   | | then return -0.11511832004097924;  // std dev = 0.180, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | else return 0.006489064785789499;  // std dev = 0.334, 129.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=33 */
%   else if ( interaction(E, A), complex(E, F) )
%   | then if ( interaction(G, E), phenotype(G, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.04519926305475799;  // std dev = 1.340, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return 0.21812928632278417;  // std dev = 1.457, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.021312879403763606;  // std dev = 0.302, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | then return 0.4688844217053023;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, L), complex(A, M) )
%   | | | then return 0.22573597545777405;  // std dev = 0.727, 9.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | else return 0.11963493243452543;  // std dev = 2.524, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.15938874302768724;  // std dev = 0.277, 29.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=15 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.3154391034552454;  // std dev = 0.094, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.028216530996925553;  // std dev = 0.328, 166.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=47 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5164954900289307;  // std dev = 0.145, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.20302249701302508;  // std dev = 0.089, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.3788429706251164;  // std dev = 0.640, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.1669785664255203;  // std dev = 1.116, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.14061076952536605;  // std dev = 1.200, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.15245017056734472;  // std dev = 1.180, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.32943652093263637;  // std dev = 0.073, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.12252845595183048;  // std dev = 0.212, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( enzyme(A, E), phenotype(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then return 0.5102170115743434;  // std dev = 0.354, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, A), interaction(A, I) )
%   | | | then return -0.11582049345625332;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.2189625538953674;  // std dev = 0.222, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( location(J, K), complex(J, L) )
%   | | | then return 0.3742111320645031;  // std dev = 0.985, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.10383485158644448;  // std dev = 2.383, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.2952384798618503;  // std dev = 0.140, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.043327165057874865;  // std dev = 3.379, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.17320855138858557;  // std dev = 0.112, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.30215501434880865;  // std dev = 0.190, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.30989776922542167;  // std dev = 0.172, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return 0.25450651639884214;  // std dev = 0.184, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else return -0.11040686737567616;  // std dev = 0.188, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(I, A), enzyme(A, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.14516460716435764;  // std dev = 1.339, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.38267056160151286;  // std dev = 0.924, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.1626956479888894;  // std dev = 1.045, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.022405706652107994;  // std dev = 3.923, 95.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C) )
%   | then return 0.0173741383876732;  // std dev = 0.267, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
%   | else if ( phenotype(A, F) )
%   | | then return 0.014237991990804466;  // std dev = 0.269, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else if ( location(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5995957762353838;  // std dev = 0.401, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.17645992515133474;  // std dev = 0.168, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1457769030188302;  // std dev = 0.032, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I), location(A, J) )
%   | | then if ( phenotype(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.47096935997924533;  // std dev = 0.401, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.28230818184639345;  // std dev = 0.735, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, L) )
%   | | | then return -0.04338156932841294;  // std dev = 0.543, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return -0.09642254167462713;  // std dev = 2.009, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1773277739193483;  // std dev = 0.064, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), phenotype(F, G) )
%   | | then if ( complex(A, H), complex(D, I) )
%   | | | then return -0.022891417596477264;  // std dev = 0.917, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return -0.0917758643346556;  // std dev = 1.965, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( interaction(D, J), complex(D, K) )
%   | | | then return 0.13325846414574183;  // std dev = 1.022, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return -0.01515483250001814;  // std dev = 1.992, 48.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=14 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(M, M), phenotype(M, N) )
%   | | | then return -0.07925275866788037;  // std dev = 1.223, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.02677735132390373;  // std dev = 2.575, 69.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=23 */
%   | | else if ( phenotype(A, P) )
%   | | | then return 0.36152922754009315;  // std dev = 0.349, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.10548872541348875;  // std dev = 1.569, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '29.299', 'seconds']
Refined model CLL: -0.213424


******************************************
Best model found
******************************************
Results 

CLL : -0.226152 

AUC ROC : 0.952397 

AUC PR : 0.361002 

Precision : 0.247098 

Recall : 0.537906 

F1 : 0.338636 

Total Learning Time : 15.419 

Total Inference Time : 7.783524990081787 

Total revision time: 30.91512593460083
Best scored revision CLL: -0.213424


Results 

CLL : -0.226152 

AUC ROC : 0.952397 

AUC PR : 0.361002 

Precision : 0.247098 

Recall : 0.537906 

F1 : 0.338636 

Total Learning Time : 30.999785034179688 

Total Inference Time : 7.783524990081787 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.114
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.185145132818144;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16741766361751098;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | | else return 0.18102310579438177;  // std dev = 4.712, 98.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11996599452685308;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.15590020330226795;  // std dev = 6.154, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14891260150266766;  // std dev = 3.491, 53.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | else return 0.12582543582341743;  // std dev = 6.641, 196.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.13806434670198175;  // std dev = 7.329, 229.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0460853728078825;  // std dev = 7.706, 278.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.6961182081606182;  // std dev = 0.981, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.26939786397036086;  // std dev = 0.007, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.047806360079074996;  // std dev = 4.736, 103.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=33 */
%   | | | else return 0.06254981600888171;  // std dev = 4.069, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07305695195823288;  // std dev = 3.341, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.05646424058198688;  // std dev = 6.182, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017475519318519945;  // std dev = 7.182, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02508038063572648;  // std dev = 7.127, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.388', 'seconds']
Parameter learned model CLL:-0.34108 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.888, 104, 52], 'false,false,false,false': [4.712, 64, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.392, 62, 28], 'false,false,false,false': [6.154, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.491, 34, 19], 'false,false,false,false': [6.641, 129, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.329, 143, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.706, 192, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.981, 1, 28], 'true,false': [0.007, 55, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.736, 70, 33], 'false,false,false,false': [4.069, 49, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.341, 48, 28], 'false,false,false,false': [6.182, 112, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.182, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.127, 177, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618965], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618965]}
{'': [nan, 0.22394444788889542], 'false': [nan, 0.22394444788889567], 'false,false': [nan, 0.22394444788889542], 'false,false,false': [0.22222222222222202, 0.22657226155768426]}
{'': [nan, 0.22271098218536656], 'false': [nan, 0.22271098218536656], 'false,false': [nan, 0.2227109821853666], 'false,false,false': [0.21436672519481476, 0.22675569235489357]}
{'': [nan, 0.22617180561079658], 'false': [nan, 0.22617180561079658], 'false,false': [nan, 0.22617180561079717], 'false,false,false': [0.22997508009967976, 0.2250299156775567]}
{'': [nan, 0.23456442657263255], 'false': [nan, 0.23456442657263255], 'false,false': [nan, 0.23456442657263266], 'false,false,false': [nan, 0.23456442657263266]}
{'': [nan, 0.2136322111898454], 'false': [nan, 0.2136322111898454], 'false,false': [nan, 0.21363221118984474], 'false,false,false': [nan, 0.21363221118984577]}
{'': [0.22219340603116816, 0.22028586958813934], 'true': [0.033210217225568696, 7.864400376256242e-07], 'false': [nan, 0.22028586958813934], 'false,false': [nan, 0.22028586958813934], 'false,false,false': [0.21773965500989714, 0.2237034331628925], 'true,true': [nan, 0.033210217225568696], 'true,true,false': [nan, 0.033210217225568696]}
{'': [nan, 0.20078805547344392], 'false': [nan, 0.20078805547344392], 'false,false': [nan, 0.20078805547344378], 'false,false,false': [0.14683475601081117, 0.22482329644136456]}
{'': [nan, 0.1875874790921535], 'false': [nan, 0.18758747909215395], 'false,false': [nan, 0.18758747909215395], 'false,false,false': [nan, 0.18758747909215395]}
{'': [nan, 0.1931413734468203], 'false': [nan, 0.1931413734468203], 'false,false': [nan, 0.19314137344682006], 'false,false,false': [nan, 0.19314137344682006]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.198
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(G, A), interaction(A, H) )
%   | | | then return 0.0839553867124153;  // std dev = 4.032, 93.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | | | else return 0.1743254056877466;  // std dev = 5.423, 136.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=43 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7272428531314968;  // std dev = 0.082, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(D, A), interaction(C, D) )
%   | | then return -0.039857519471713475;  // std dev = 0.294, 38.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=4 */
%   | | else if ( phenotype(A, E), interaction(C, F) )
%   | | | then return 0.17407129078514447;  // std dev = 3.607, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.058356071236611504;  // std dev = 3.065, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5160900577342101;  // std dev = 0.850, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.08557623964533967;  // std dev = 1.936, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.17932623964533967;  // std dev = 3.800, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.168909572978673;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.5022429063120063;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), enzyme(E, F) )
%   | then return 0.04890260587132472;  // std dev = 0.375, 64.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | else return 0.13659026492901769;  // std dev = 0.441, 40.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( enzyme(A, I), complex(G, J) )
%   | | then return 0.4761024726169342;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, G), interaction(L, K) )
%   | | | then return 0.16658743479161453;  // std dev = 2.015, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.011819796138313927;  // std dev = 1.452, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | else if ( interaction(M, A), enzyme(M, N) )
%   | | then if ( phenotype(M, P), phenotype(A, Q) )
%   | | | then return 0.2990047322496217;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.11975562451095952;  // std dev = 1.803, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( enzyme(A, R), phenotype(A, S) )
%   | | | then return 0.4029203312660569;  // std dev = 1.517, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.23461083291608012;  // std dev = 4.043, 70.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), phenotype(E, C) )
%   | | then return 0.5433943956218568;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6332416340625071;  // std dev = 0.101, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(F, C), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, A) )
%   | | | then return 0.4240019032931489;  // std dev = 1.251, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.7359000845859441;  // std dev = 1.061, 40.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=39 */
%   | | else return -0.21128896744832246;  // std dev = 0.368, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5406550197893498;  // std dev = 0.082, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.20088894993132378;  // std dev = 0.289, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5340527793500086;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.12740926045773313;  // std dev = 3.976, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3979573153454486;  // std dev = 0.044, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(A, F), interaction(F, A) )
%   | | then if ( interaction(D, F), interaction(A, D) )
%   | | | then return -0.11423986933466279;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.027546824238353758;  // std dev = 1.731, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.6671276693417746;  // std dev = 0.289, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07359385534101691;  // std dev = 4.629, 126.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=40 */
%   | else if ( interaction(A, H), phenotype(A, I) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.008890979116453417;  // std dev = 2.348, 44.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | else return 0.36011122443006505;  // std dev = 0.660, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.12697793203133323;  // std dev = 1.345, 26.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=3 */
%   | | | else return -0.026194270273566824;  // std dev = 2.234, 35.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=7 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(A, D) )
%   then if ( interaction(E, A), phenotype(E, F) )
%   | then if ( complex(A, G) )
%   | | then if ( interaction(D, D) )
%   | | | then return 0.13365589338932024;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.24031329528489212;  // std dev = 1.007, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.0522401239603548;  // std dev = 0.349, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(D, H), enzyme(H, I) )
%   | | then return 0.3941787946231479;  // std dev = 0.673, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, D), recursion_proteinclass(J, B) )
%   | | | then return 0.6175801339517862;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.19103181827839083;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   else if ( enzyme(A, K), complex(A, L) )
%   | then return -0.08295540298001279;  // std dev = 0.350, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( interaction(A, M), recursion_proteinclass(M, B) )
%   | | then return 0.29537783317009214;  // std dev = 0.080, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return 0.027583185026944554;  // std dev = 0.383, 202.000 (wgt'ed) examples reached here.  /* #neg=148 #pos=54 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, A) )
%   | | | then return 0.24323308011054548;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.42886500827645707;  // std dev = 0.222, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.28005152687406915;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6603293458780334;  // std dev = 0.396, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.18038576351241017;  // std dev = 0.047, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3377145153036576;  // std dev = 0.095, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11843112654189375;  // std dev = 0.069, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.02552899152966805;  // std dev = 2.866, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | | | else return 0.08648514650657514;  // std dev = 4.030, 94.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), interaction(E, C) )
%   | then return 0.1015748307980031;  // std dev = 0.261, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | else if ( complex(A, F), interaction(C, C) )
%   | | then return -0.10437330518723274;  // std dev = 0.241, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else return 0.00835468358610217;  // std dev = 0.332, 50.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   else if ( phenotype(A, G), enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.527232473534783;  // std dev = 0.123, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.2207764370917508;  // std dev = 0.054, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( interaction(J, L), phenotype(L, M) )
%   | | | then return 0.013593590928453242;  // std dev = 1.900, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.10784305393908702;  // std dev = 1.835, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.057790366597372064;  // std dev = 2.464, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.1455128009910919;  // std dev = 2.560, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.24811865889014778;  // std dev = 0.090, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E), interaction(F, A) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.0295804998125344;  // std dev = 0.665, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.17766747034235467;  // std dev = 0.438, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( phenotype(D, H), complex(D, I) )
%   | | | then return 0.07201608775288852;  // std dev = 0.982, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.01417946659820412;  // std dev = 1.724, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, J), location(A, L) )
%   | | | then return 0.21341337146570108;  // std dev = 1.150, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.03831483490275468;  // std dev = 3.031, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.03254980238733886;  // std dev = 2.368, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return -0.026631390794026485;  // std dev = 2.900, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.20641168454081266;  // std dev = 0.079, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), enzyme(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.11439270092669214;  // std dev = 0.799, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.018839272401188194;  // std dev = 1.816, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | else if ( complex(D, H) )
%   | | | then return 0.03735486527834464;  // std dev = 1.674, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.22831169902485857;  // std dev = 1.054, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.23008672548487552;  // std dev = 0.035, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.051344615838899654;  // std dev = 0.828, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.004975369343704976;  // std dev = 2.003, 33.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=9 */
%   | | | else return -0.04007114146200423;  // std dev = 4.248, 153.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=34 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.549', 'seconds']
Refined model CLL: -0.25242


******************************************
Best model found
******************************************
Results 

CLL : -0.270938 

AUC ROC : 0.917248 

AUC PR : 0.188493 

Precision : 0.23506 

Recall : 0.416961 

F1 : 0.300637 

Total Learning Time : 15.198 

Total Inference Time : 7.133590936660767 

Total revision time: 29.77579065513611
Best scored revision CLL: -0.25242


Results 

CLL : -0.270938 

AUC ROC : 0.917248 

AUC PR : 0.188493 

Precision : 0.23506 

Recall : 0.416961 

F1 : 0.300637 

Total Learning Time : 29.860449754714967 

Total Inference Time : 7.133590936660767 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.06
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.19539967402290223;  // std dev = 5.304, 122.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=44 */
%   | | | else return 0.17068143631798421;  // std dev = 5.344, 128.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.12882583987982862;  // std dev = 4.874, 109.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=35 */
%   | | | else return 0.15022562197089126;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07491542685398478;  // std dev = 3.769, 69.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=20 */
%   | | | else return 0.14709620062328468;  // std dev = 6.537, 185.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09050130752581258;  // std dev = 7.644, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10235075845140715;  // std dev = 7.477, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7324652844407028;  // std dev = 0.027, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26680889515446127;  // std dev = 0.039, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09884967012042242;  // std dev = 3.854, 63.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   | | | else return 0.06855518811122113;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021055736995296906;  // std dev = 3.882, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.09447443210093386;  // std dev = 5.629, 133.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.007934088423715869;  // std dev = 7.124, 275.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.031462173833294665;  // std dev = 6.996, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.345', 'seconds']
Parameter learned model CLL:-0.344671 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.304, 78, 44], 'false,false,false,false': [5.344, 85, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.874, 74, 35], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.769, 49, 20], 'false,false,false,false': [6.537, 118, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.477, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 35], 'true,false': [0.039, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.854, 39, 24], 'false,false,false,false': [4.28, 53, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.882, 80, 35], 'false,false,false,false': [5.629, 81, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.124, 188, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.996, 163, 87]}]
{'': [nan, 0.2183950617283959], 'false': [nan, 0.21839506172839596], 'false,false': [nan, 0.2183950617283959], 'false,false,false': [nan, 0.21839506172839596]}
{'': [nan, 0.22689599999999951], 'false': [nan, 0.22689599999999963], 'false,false': [nan, 0.22689599999999951], 'false,false,false': [0.2305831765654388, 0.2230834960937495]}
{'': [nan, 0.22218670819776798], 'false': [nan, 0.22218670819776798], 'false,false': [nan, 0.22218670819776704], 'false,false,false': [0.21794710258396008, 0.22503570026642758]}
{'': [nan, 0.22519538784860033], 'false': [nan, 0.22519538784860033], 'false,false': [nan, 0.22519538784860005], 'false,false,false': [0.20583910943079214, 0.23099942418163444]}
{'': [nan, 0.22046766789636427], 'false': [nan, 0.22046766789636427], 'false,false': [nan, 0.22046766789636382], 'false,false,false': [nan, 0.22046766789636382]}
{'': [nan, 0.22909539098852988], 'false': [nan, 0.22909539098852988], 'false,false': [nan, 0.22909539098853116], 'false,false,false': [nan, 0.2290953909885296]}
{'': [0.2145522092510272, 0.23062953803447034], 'false': [nan, 0.23062953803447034], 'false,false': [nan, 0.23062953803447034], 'false,false,false': [0.2358276643990928, 0.226185032769395], 'true': [2.1248215488814788e-05, 1.9755572252766904e-05], 'true,true': [nan, 2.1248215488814788e-05], 'true,true,false': [nan, 2.1248215488814788e-05]}
{'': [nan, 0.18987340934110902], 'false': [nan, 0.18987340934110902], 'false,false': [nan, 0.1898734093411098], 'false,false,false': [0.13102714626178902, 0.23825598001912526]}
{'': [nan, 0.1845530614660271], 'false': [nan, 0.18455306146602798], 'false,false': [nan, 0.18455306146602798], 'false,false,false': [nan, 0.18455306146602798]}
{'': [nan, 0.19576033402882134], 'false': [nan, 0.19576033402882134], 'false,false': [nan, 0.19576033402882076], 'false,false,false': [nan, 0.19576033402882076]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.372
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( phenotype(A, D) )
%   | then if ( phenotype(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(F, A), interaction(F, E) )
%   | | | then return 0.8581489350995116;  // std dev = 2.06e-07, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return 0.45814893509951216;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.14185106490048763;  // std dev = 8.94e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.2260734634013981;  // std dev = 4.965, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
%   | | else if ( enzyme(A, I) )
%   | | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.024815601766178853;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7298126921219175;  // std dev = 0.108, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( complex(E, F), complex(A, F) )
%   | | then return -0.1254446385283914;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1583096607043962;  // std dev = 4.062, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.7740315764729948;  // std dev = 0.213, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14583260085230743;  // std dev = 0.134, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.17545541262199044;  // std dev = 2.042, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.27576026583239976;  // std dev = 3.332, 45.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=20 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.5912473541245953;  // std dev = 0.133, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.7455466131738473;  // std dev = 0.118, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.09301624898914711;  // std dev = 0.384, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   else if ( interaction(F, A), location(F, G) )
%   | then if ( interaction(H, F), interaction(H, A) )
%   | | then if ( phenotype(H, I), phenotype(A, J) )
%   | | | then return 0.07592067172514176;  // std dev = 2.661, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
%   | | | else return 0.15938258153350124;  // std dev = 3.064, 48.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=18 */
%   | | else if ( interaction(A, K), phenotype(A, L) )
%   | | | then return 0.145915974203687;  // std dev = 1.277, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.04754798736142572;  // std dev = 4.149, 106.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=27 */
%   | else if ( phenotype(A, M) )
%   | | then return 0.13025280346070703;  // std dev = 0.677, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.31748857187657276;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.4063176953046869;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5441995253543723;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12211297251877055;  // std dev = 0.008, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(F, G) )
%   | | | then return 0.03464002966429609;  // std dev = 1.428, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.11179773293427203;  // std dev = 1.747, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( complex(H, J), complex(A, K) )
%   | | | then return 0.06364664353413907;  // std dev = 2.628, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.16140808948605503;  // std dev = 3.474, 60.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=24 */
%   | | else if ( enzyme(A, L), interaction(M, A) )
%   | | | then return 0.14132827680195997;  // std dev = 1.835, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | | else return 0.045090101184486066;  // std dev = 3.590, 79.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.5455715400092627;  // std dev = 0.236, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | else return 0.2605546103447868;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, C) )
%   | | then return -0.16205614128599985;  // std dev = 0.053, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.1417606172365055;  // std dev = 2.776, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.07235580933432216;  // std dev = 3.291, 68.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=22 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.4135956748713922;  // std dev = 0.225, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, J), interaction(J, K) )
%   | | then return -0.05142504822201857;  // std dev = 0.268, 25.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.08864599815346517;  // std dev = 3.465, 62.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=20 */
%   | | | else return -0.011495776491669987;  // std dev = 1.418, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2636698075397129;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.022529400053974982;  // std dev = 0.304, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( phenotype(A, E), interaction(A, F) )
%   | | then if ( enzyme(F, G) )
%   | | | then return 0.029644362999638057;  // std dev = 0.525, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.08185846430568071;  // std dev = 0.928, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( location(A, H), location(D, H) )
%   | | | then return 0.1878015522223429;  // std dev = 1.406, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.4681306997157961;  // std dev = 0.851, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3948492342378696;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.135937113125334;  // std dev = 2.488, 35.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=14 */
%   | | | else return 0.03107494034523954;  // std dev = 4.606, 138.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.0532531023339585;  // std dev = 0.341, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), interaction(D, F) )
%   | | then if ( interaction(D, D), interaction(A, G) )
%   | | | then return -0.08795677904612753;  // std dev = 1.554, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return -7.40157200110504E-5;  // std dev = 2.610, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.5356874699893156;  // std dev = 0.598, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18385100269265398;  // std dev = 0.215, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return 0.01648692202040939;  // std dev = 1.526, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return -0.0670060073731085;  // std dev = 1.260, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.11239112532693302;  // std dev = 2.962, 48.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=19 */
%   | | | else return 0.019561044254167825;  // std dev = 1.403, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.22894308934512492;  // std dev = 0.072, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.5470611521397636;  // std dev = 0.355, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.33275988161783476;  // std dev = 0.237, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1722428939176145;  // std dev = 0.425, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | | else return 0.04542292822837616;  // std dev = 3.105, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else if ( complex(A, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.04136099200780485;  // std dev = 1.940, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | | else return -0.028967672151599896;  // std dev = 1.599, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.16455502953210224;  // std dev = 2.139, 24.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | else return 0.04732242521767268;  // std dev = 3.180, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( complex(A, E), interaction(F, C) )
%   | then return 0.04109461159760638;  // std dev = 0.337, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | else return -0.061778075745382445;  // std dev = 0.321, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | then return 0.344506010729741;  // std dev = 0.288, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.25585250232824847;  // std dev = 0.111, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.01583281113016213;  // std dev = 3.223, 91.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | else if ( interaction(K, A), interaction(A, L) )
%   | | then if ( phenotype(A, M) )
%   | | | then return 0.3747641620993499;  // std dev = 0.677, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.07392375921416504;  // std dev = 1.684, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | else if ( phenotype(A, N), interaction(P, A) )
%   | | | then return -0.014550090282022712;  // std dev = 1.654, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
%   | | | else return 0.07057611389920054;  // std dev = 3.024, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.2605183177173254;  // std dev = 0.203, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( interaction(F, A), interaction(F, C) )
%   | | then return -0.06316097028277051;  // std dev = 0.224, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | else if ( phenotype(C, G) )
%   | | | then return 0.05673582318390835;  // std dev = 2.456, 38.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | | else return 0.3644768505161511;  // std dev = 0.998, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.23895177215927302;  // std dev = 0.144, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4327464942793813;  // std dev = 1.092, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.2050459113587495;  // std dev = 0.369, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.02875620164376889;  // std dev = 2.454, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return -0.005293809654822229;  // std dev = 3.075, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '38.259', 'seconds']
Refined model CLL: -0.266036


******************************************
Best model found
******************************************
Results 

CLL : -0.266697 

AUC ROC : 0.953214 

AUC PR : 0.248342 

Precision : 0.236923 

Recall : 0.546099 

F1 : 0.330472 

Total Learning Time : 26.372 

Total Inference Time : 22.398797035217285 

Total revision time: 56.20663817596436
Best scored revision CLL: -0.266036


Results 

CLL : -0.266697 

AUC ROC : 0.953214 

AUC PR : 0.248342 

Precision : 0.236923 

Recall : 0.546099 

F1 : 0.330472 

Total Learning Time : 66.37589843940735 

Total Inference Time : 22.398797035217285 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.492
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1821364740403228;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1657104642188093;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | | | else return 0.151573443867714;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15544910609280324;  // std dev = 5.184, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
%   | | | else return 0.14856988874406776;  // std dev = 6.464, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09379037986929901;  // std dev = 4.478, 94.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=29 */
%   | | | else return 0.13833495207374294;  // std dev = 6.980, 214.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10401072744632436;  // std dev = 8.293, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09050091221440092;  // std dev = 8.257, 302.000 (wgt'ed) examples reached here.  /* #neg=198 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7309520075657588;  // std dev = 0.017, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26872488090295854;  // std dev = 0.021, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.04920995168389101;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.07590026131721488;  // std dev = 5.108, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0613714390141211;  // std dev = 4.049, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
%   | | | else return 0.03680016095032054;  // std dev = 6.530, 195.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05034143088263521;  // std dev = 7.564, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015274563720518719;  // std dev = 7.727, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.027', 'seconds']
Parameter learned model CLL:-0.336754 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.897, 105, 52], 'false,false,false,false': [5.959, 112, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.184, 78, 41], 'false,false,false,false': [6.464, 124, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.478, 65, 29], 'false,false,false,false': [6.98, 139, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.293, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.257, 198, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 41], 'true,false': [0.021, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.943, 48, 23], 'false,false,false,false': [5.108, 75, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.049, 73, 41], 'false,false,false,false': [6.53, 132, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.564, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.727, 217, 104]}]
{'': [nan, 0.21901961355188906], 'false': [nan, 0.21901961355188773], 'false,false': [nan, 0.21901961355188906], 'false,false,false': [nan, 0.21901961355188773]}
{'': [nan, 0.21901961355188965], 'false': [nan, 0.21901961355188765], 'false,false': [nan, 0.21901961355188965], 'false,false,false': [0.22151000040569746, 0.21653777513385047]}
{'': [nan, 0.22438334863185602], 'false': [nan, 0.22438334863185602], 'false,false': [nan, 0.22438334863186077], 'false,false,false': [0.22586787000792236, 0.2234202495763241]}
{'': [nan, 0.2237072006027125], 'false': [nan, 0.2237072006027125], 'false,false': [nan, 0.22370720060271307], 'false,false,false': [0.21333182435491213, 0.22765903555651412]}
{'': [nan, 0.2240450228259336], 'false': [nan, 0.2240450228259336], 'false,false': [nan, 0.22404502282593378], 'false,false,false': [nan, 0.22404502282593378]}
{'': [nan, 0.22577200410037052], 'false': [nan, 0.22577200410037052], 'false,false': [nan, 0.22577200410036902], 'false,false,false': [nan, 0.2257720041003697]}
{'': [0.23536568847078118, 0.22401894582143123], 'true': [7.445782289178114e-06, 6.537916301144073e-06], 'false': [nan, 0.22401894582143123], 'false,false': [nan, 0.22401894582143123], 'false,false,false': [0.21900416584011084, 0.22684310018903575], 'true,true': [nan, 7.445782289178114e-06], 'true,true,false': [nan, 7.445782289178114e-06]}
{'': [nan, 0.19122083517575575], 'false': [nan, 0.19122083517575575], 'false,false': [nan, 0.19122083517575622], 'false,false,false': [0.14383366244955018, 0.2187013635129212]}
{'': [nan, 0.19136772051254675], 'false': [nan, 0.19136772051254686], 'false,false': [nan, 0.19136772051254686], 'false,false,false': [nan, 0.19136772051254686]}
{'': [nan, 0.18598443079908222], 'false': [nan, 0.18598443079908222], 'false,false': [nan, 0.1859844307990817], 'false,false,false': [nan, 0.1859844307990817]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.481
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), interaction(E, E) )
%   | then return 0.16311347410660407;  // std dev = 0.460, 141.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=43 */
%   | else if ( location(A, F), enzyme(A, G) )
%   | | then if ( interaction(A, H) )
%   | | | then return 0.28672036367094084;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(I, C), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.1278118564478264;  // std dev = 4.187, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
%   else if ( complex(A, J), enzyme(A, K) )
%   | then return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | else if ( enzyme(A, L) )
%   | | then return 0.124815601766179;  // std dev = 0.442, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.19148226843284566;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3844647245731966;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=10 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.721060942718766;  // std dev = 0.297, 30.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=27 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.7978983648288885;  // std dev = 0.096, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, A) )
%   | | | then return -0.163771747472874;  // std dev = 0.041, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.06674041073756785;  // std dev = 3.129, 56.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8037809202604583;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( phenotype(A, J), complex(H, K) )
%   | | | then return 0.22172622575324008;  // std dev = 2.481, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | else return 0.06138766444637446;  // std dev = 2.477, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( location(A, L), phenotype(A, M) )
%   | | | then return 0.1524559738745045;  // std dev = 3.569, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.2751816322630501;  // std dev = 3.035, 38.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=17 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), enzyme(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.752426500965733;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.21668894625717686;  // std dev = 0.250, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( interaction(G, A) )
%   | | | then return 0.20558165214027926;  // std dev = 0.992, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.7165744545809508;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.6627629986142571;  // std dev = 0.064, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1566518280030668;  // std dev = 0.138, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.10652748326255337;  // std dev = 4.383, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | else if ( location(A, K), enzyme(A, L) )
%   | | | then return 0.10856150431671963;  // std dev = 2.493, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | | | else return 0.20444861030067593;  // std dev = 4.525, 85.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5962939897583686;  // std dev = 0.217, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), complex(A, E) )
%   | then if ( enzyme(D, F), location(A, G) )
%   | | then if ( interaction(D, H), complex(H, E) )
%   | | | then return -0.006620328245845286;  // std dev = 1.524, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return -0.1183665462850753;  // std dev = 1.054, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4870052415387917;  // std dev = 0.139, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.030154990996254655;  // std dev = 2.280, 39.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.01441729750235379;  // std dev = 2.807, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | else return 0.1317559313188058;  // std dev = 5.413, 135.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=50 */
%   | | else if ( location(A, M) )
%   | | | then return 0.31503089997884914;  // std dev = 1.474, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.4261226005662038;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then return 0.484745057153865;  // std dev = 0.298, 33.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=29 */
%   | else if ( interaction(A, C) )
%   | | then return -0.17510251081857447;  // std dev = 0.087, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( enzyme(C, E), enzyme(D, F) )
%   | | | then return 0.13932657871048792;  // std dev = 2.985, 40.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=15 */
%   | | | else return 0.027323901714555433;  // std dev = 5.431, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6856132126795244;  // std dev = 0.125, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.2113114545014967;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then return -0.002566736798801983;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.13632445255499057;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.19913544856023233;  // std dev = 1.187, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, D), phenotype(A, E) )
%   | | then return 0.07887585953532601;  // std dev = 1.042, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( complex(C, F) )
%   | | | then return 0.48956922467620967;  // std dev = 0.577, 26.000 (wgt'ed) examples reached here.  /* #pos=26 */
%   | | | else return 0.3144682949966438;  // std dev = 1.025, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1416996144103919;  // std dev = 0.175, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( complex(C, G), complex(A, G) )
%   | | | then return -0.10303460334683097;  // std dev = 1.283, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | | else return 0.05525645978324755;  // std dev = 6.082, 184.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=59 */
%   else if ( phenotype(A, H), complex(A, I) )
%   | then return 0.33732890598902215;  // std dev = 0.721, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.17209151114878068;  // std dev = 0.749, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.06462644040540104;  // std dev = 0.723, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.3149042938693717;  // std dev = 0.089, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.52282380821538;  // std dev = 0.130, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.18251268078569435;  // std dev = 0.067, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( interaction(F, A) )
%   | then if ( phenotype(F, G) )
%   | | then if ( interaction(H, F), interaction(H, H) )
%   | | | then return 0.10119036653728469;  // std dev = 3.598, 74.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=29 */
%   | | | else return 0.032218365144190846;  // std dev = 3.943, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | else if ( interaction(F, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6884542712050309;  // std dev = 0.182, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.28394369534544395;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( interaction(A, J), interaction(J, J) )
%   | | then return -0.11914919586512492;  // std dev = 0.590, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else return -0.0651790063879143;  // std dev = 0.723, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E), location(A, F) )
%   | then return 0.11433887169911162;  // std dev = 0.355, 52.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | else if ( complex(A, D), recursion_proteinclass(C, B) )
%   | | then return 0.24780974013653734;  // std dev = 0.080, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(A, D) )
%   | | | then return -0.05605808861153195;  // std dev = 1.260, 33.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=6 */
%   | | | else return 0.044138613464958;  // std dev = 4.609, 135.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=43 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.4652332753971229;  // std dev = 0.235, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.25290470593745024;  // std dev = 0.059, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then return 0.3283262073807747;  // std dev = 0.652, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.014787469832800637;  // std dev = 1.452, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.11100577817991675;  // std dev = 1.176, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.1989753288322048;  // std dev = 0.182, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, E), phenotype(F, G) )
%   | | | then return 0.30061810851425064;  // std dev = 0.640, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return 0.08787397986113318;  // std dev = 1.179, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else if ( interaction(H, D), interaction(A, H) )
%   | | | then return -0.10154264755139128;  // std dev = 1.231, 45.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | | else return 0.02464832667076844;  // std dev = 5.298, 157.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=50 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.06207517590414086;  // std dev = 1.420, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | else return -0.15007203937143523;  // std dev = 1.264, 23.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.02250792602654569;  // std dev = 0.714, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.20732700531861084;  // std dev = 0.820, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(C, E) )
%   | then return -0.08171353988687098;  // std dev = 0.710, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.2782238532500701;  // std dev = 0.140, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( location(A, H) )
%   | | then if ( interaction(I, F), recursion_proteinclass(I, B) )
%   | | | then return 0.16761890327984008;  // std dev = 0.673, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.05453928009612232;  // std dev = 3.548, 110.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=24 */
%   | | else if ( interaction(F, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4943273961892025;  // std dev = 0.197, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3963028533265018;  // std dev = 0.183, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(K, A), interaction(A, K) )
%   | | then return -0.06736182836709144;  // std dev = 0.249, 35.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=8 */
%   | | else if ( location(A, L), complex(A, M) )
%   | | | then return -0.010877738178910839;  // std dev = 1.710, 40.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=13 */
%   | | | else return 0.08143166455589458;  // std dev = 4.185, 86.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=33 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.891', 'seconds']
Refined model CLL: -0.263243


******************************************
Best model found
******************************************
Results 

CLL : -0.277168 

AUC ROC : 0.944752 

AUC PR : 0.316978 

Precision : 0.271047 

Recall : 0.498113 

F1 : 0.351064 

Total Learning Time : 26.481 

Total Inference Time : 16.551607131958008 

Total revision time: 51.989443014144896
Best scored revision CLL: -0.263243


Results 

CLL : -0.277168 

AUC ROC : 0.944752 

AUC PR : 0.316978 

Precision : 0.271047 

Recall : 0.498113 

F1 : 0.351064 

Total Learning Time : 62.15870327758789 

Total Inference Time : 16.551607131958008 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.222
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18323727432212725;  // std dev = 7.880, 283.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1612712630226858;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.16768151943294093;  // std dev = 5.228, 123.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1462612672492923;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.15821848315723433;  // std dev = 5.595, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12504664886498007;  // std dev = 4.150, 77.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=26 */
%   | | | else return 0.11524492683014063;  // std dev = 6.650, 200.000 (wgt'ed) examples reached here.  /* #neg=134 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12762269339249732;  // std dev = 7.659, 254.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09961267239917083;  // std dev = 7.685, 257.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7227883163649117;  // std dev = 0.002, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2771996315084581;  // std dev = 0.003, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08972506270869647;  // std dev = 3.976, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else return 0.09783893572793312;  // std dev = 3.785, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02288824854482883;  // std dev = 4.298, 139.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=44 */
%   | | | else return 0.03322374877630351;  // std dev = 5.667, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.014017257729021109;  // std dev = 7.165, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017866196963838257;  // std dev = 7.118, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.060', 'seconds']
Parameter learned model CLL:-0.328017 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.88, 191, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 105, 51], 'false,false,false,false': [5.228, 82, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.595, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 51, 26], 'false,false,false,false': [6.65, 134, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.659, 162, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.685, 165, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.002, 0, 44], 'true,false': [0.003, 82, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.976, 43, 25], 'false,false,false,false': [3.785, 38, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.298, 95, 44], 'false,false,false,false': [5.667, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.165, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.118, 193, 92]}]
{'': [nan, 0.21940591092409814], 'false': [nan, 0.21940591092409784], 'false,false': [nan, 0.21940591092409814], 'false,false,false': [nan, 0.21940591092409784]}
{'': [nan, 0.22101463239166985], 'false': [nan, 0.22101463239166974], 'false,false': [nan, 0.22101463239166985], 'false,false,false': [0.22004437869822424, 0.22222222222222202]}
{'': [nan, 0.2250489101993633], 'false': [nan, 0.2250489101993633], 'false,false': [nan, 0.22504891019936515], 'false,false,false': [0.2231015942926598, 0.22682782197579382]}
{'': [nan, 0.22183145711692653], 'false': [nan, 0.22183145711692653], 'false,false': [nan, 0.221831457116926], 'false,false,false': [0.22364648338674248, 0.22110596558021897]}
{'': [nan, 0.23094774648198424], 'false': [nan, 0.23094774648198424], 'false,false': [nan, 0.2309477464819842], 'false,false,false': [nan, 0.2309477464819842]}
{'': [nan, 0.22983054305233536], 'false': [nan, 0.22983054305233536], 'false,false': [nan, 0.22983054305233544], 'false,false,false': [nan, 0.22983054305233536]}
{'': [0.2272559094184476, 0.2336341806726318], 'false': [nan, 0.2336341806726318], 'false,false': [nan, 0.2336341806726318], 'false,false,false': [0.2324826989619383, 0.23488309594195084], 'true': [1.1159403566874847e-07, 1.1293763248176339e-07], 'true,true': [nan, 1.1159403566874847e-07], 'true,true,false': [nan, 1.1159403566874847e-07]}
{'': [nan, 0.1781774160903539], 'false': [nan, 0.1781774160903539], 'false,false': [nan, 0.17817741609035484], 'false,false,false': [0.13292838948859237, 0.22150178630242132]}
{'': [nan, 0.17640216316829377], 'false': [nan, 0.17640216316829446], 'false,false': [nan, 0.17640216316829446], 'false,false,false': [nan, 0.17640216316829446]}
{'': [nan, 0.1777520902877039], 'false': [nan, 0.1777520902877039], 'false,false': [nan, 0.1777520902877037], 'false,false,false': [nan, 0.1777520902877037]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.753
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.04185106490048778;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(A, H) )
%   | | | then return 0.15814893509951225;  // std dev = 1.449, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(I, A), complex(I, J) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.08542166237223962;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.15973623668681391;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.15814893509951236;  // std dev = 2.898, 40.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=12 */
%   | | | else return 0.2672398441904214;  // std dev = 4.612, 88.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=36 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.8186572364233681;  // std dev = 0.108, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14470167214763105;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(E, A), enzyme(E, F) )
%   | | | then return 0.013802437482495392;  // std dev = 2.207, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.16366945741700226;  // std dev = 6.634, 198.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=66 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( complex(D, E), interaction(F, D) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.5553664367462845;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, E), phenotype(F, C) )
%   | | | then return -0.08703948640413009;  // std dev = 1.001, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.14026750487722103;  // std dev = 2.469, 28.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=9 */
%   | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | then return 0.5072642923309207;  // std dev = 0.815, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else return 0.013381310706668172;  // std dev = 0.387, 55.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=12 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5206987041681558;  // std dev = 0.295, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then return -0.06970380929695197;  // std dev = 0.259, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(A, J), enzyme(J, K) )
%   | | | then return 0.08021965486960506;  // std dev = 2.418, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.17604738427980504;  // std dev = 5.293, 122.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.42166941990012435;  // std dev = 0.024, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.5093957546163072;  // std dev = 0.110, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(E, E) )
%   | | then return 0.16855159949891876;  // std dev = 1.138, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.17249467408028804;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06495058139779826;  // std dev = 1.604, 27.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=3 */
%   | else if ( enzyme(A, H), interaction(I, A) )
%   | | then if ( phenotype(A, J), phenotype(I, K) )
%   | | | then return 0.11481315546277596;  // std dev = 2.021, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return 0.025641009941835418;  // std dev = 3.454, 67.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.07714637327980575;  // std dev = 4.193, 90.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=27 */
%   | | | else return 0.12049883284145865;  // std dev = 3.870, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), interaction(E, A) )
%   | then return 0.3221793091124642;  // std dev = 0.020, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, A) )
%   | | then return 0.3258541674113583;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.5899502618107955;  // std dev = 0.128, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1422442608603709;  // std dev = 0.044, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | then return 0.38512151272265127;  // std dev = 0.102, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.0539776835368849;  // std dev = 4.655, 115.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=30 */
%   | | | else return 0.11824899071242281;  // std dev = 5.192, 119.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.37598600932052584;  // std dev = 0.192, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return 0.010346717640871412;  // std dev = 0.415, 223.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=56 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( phenotype(E, F) )
%   | | then if ( phenotype(A, G) )
%   | | | then return 0.12880773249243394;  // std dev = 1.370, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.27176426341001936;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.6701338873156064;  // std dev = 0.291, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.2565383439777223;  // std dev = 0.075, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( enzyme(A, I), complex(A, J) )
%   | | then return 0.09125324599997436;  // std dev = 0.930, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.31938449851345757;  // std dev = 1.705, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | | else return 0.15916731488549107;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(E, F), enzyme(E, G) )
%   | | | then return -0.08429785751234449;  // std dev = 0.852, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.20404366841937127;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6562508763348824;  // std dev = 0.275, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | else return -0.2034499294919862;  // std dev = 0.048, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.323979489714314;  // std dev = 0.266, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6537998752837855;  // std dev = 0.402, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.266860951090561;  // std dev = 0.296, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | | else if ( enzyme(A, K), location(A, L) )
%   | | | then return 0.1920613942525421;  // std dev = 2.078, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return -0.005681582405667308;  // std dev = 4.051, 89.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.16368476210742064;  // std dev = 0.045, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.23907767817381828;  // std dev = 0.154, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), interaction(A, G) )
%   | | then return -0.11304267670498613;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(E, E), enzyme(A, F) )
%   | | | then return 0.09594580765244022;  // std dev = 1.121, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.041261348141956554;  // std dev = 1.870, 32.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | else if ( complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5982435634680277;  // std dev = 0.530, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | | else return -0.18744079350312806;  // std dev = 0.197, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( location(A, J) )
%   | | | then return 0.0069741743699408875;  // std dev = 4.760, 126.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=38 */
%   | | | else return 0.2719526561253584;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.19763088259277;  // std dev = 0.117, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( phenotype(C, F) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.020784062576463314;  // std dev = 2.356, 47.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=13 */
%   | | | else return 0.12896336083127133;  // std dev = 2.803, 45.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=18 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.11756568552665973;  // std dev = 0.123, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.013004920106073306;  // std dev = 3.298, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.18231456238417273;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return -0.06319194209328116;  // std dev = 0.309, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.09925218425953711;  // std dev = 0.845, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.03784695658154018;  // std dev = 2.675, 50.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=14 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.11142887204509758;  // std dev = 0.234, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( interaction(C, A) )
%   | | then return -0.07991357154909447;  // std dev = 0.118, 48.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=3 */
%   | | else if ( interaction(D, A), phenotype(C, E) )
%   | | | then return 0.06306477157162893;  // std dev = 2.255, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | | | else return -0.02889855279310545;  // std dev = 3.319, 88.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=23 */
%   else if ( phenotype(A, F) )
%   | then return -0.007936775618250286;  // std dev = 0.297, 55.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=15 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( interaction(I, G), complex(I, J) )
%   | | | then return 0.11919812094073923;  // std dev = 1.809, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.46860774004703315;  // std dev = 0.873, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.17199740421147938;  // std dev = 1.678, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.0282984274697404;  // std dev = 1.928, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '23.861', 'seconds']
Refined model CLL: -0.263886


******************************************
Best model found
******************************************
Results 

CLL : -0.257686 

AUC ROC : 0.943458 

AUC PR : 0.16239 

Precision : 0.241453 

Recall : 0.407942 

F1 : 0.303356 

Total Learning Time : 14.753 

Total Inference Time : 6.42127799987793 

Total revision time: 28.929188108444215
Best scored revision CLL: -0.263886


Results 

CLL : -0.257686 

AUC ROC : 0.943458 

AUC PR : 0.16239 

Precision : 0.241453 

Recall : 0.407942 

F1 : 0.303356 

Total Learning Time : 39.09844837188721 

Total Inference Time : 6.42127799987793 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.166
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18891816586874352;  // std dev = 7.586, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16060555585091688;  // std dev = 5.916, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
%   | | | else return 0.1769958741280258;  // std dev = 4.725, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13864857189260715;  // std dev = 4.333, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.1348322454848001;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.13327338202945935;  // std dev = 3.527, 55.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=19 */
%   | | | else return 0.09568585824786342;  // std dev = 6.806, 217.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09886705343579633;  // std dev = 7.592, 261.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0871039711445401;  // std dev = 7.558, 256.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7309354882139315;  // std dev = 0.010, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26923936379410024;  // std dev = 0.015, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03768815750348189;  // std dev = 4.806, 110.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=33 */
%   | | | else return 0.09164708430058537;  // std dev = 4.009, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.005807766725334712;  // std dev = 3.550, 103.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=28 */
%   | | | else return 0.08631947872745802;  // std dev = 6.086, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06536759933943351;  // std dev = 6.936, 241.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03651698033538716;  // std dev = 7.026, 251.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.598', 'seconds']
Parameter learned model CLL:-0.348623 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.586, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.916, 107, 52], 'false,false,false,false': [4.725, 65, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.333, 57, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.527, 36, 19], 'false,false,false,false': [6.806, 150, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.592, 175, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.558, 170, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.01, 0, 28], 'true,false': [0.015, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.806, 77, 33], 'false,false,false,false': [4.009, 45, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.55, 75, 28], 'false,false,false,false': [6.086, 102, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.936, 155, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.026, 165, 86]}]
{'': [nan, 0.22136094674556292], 'false': [nan, 0.22136094674556275], 'false,false': [nan, 0.22136094674556292], 'false,false,false': [nan, 0.22136094674556275]}
{'': [nan, 0.2222222222222202], 'false': [nan, 0.2222222222222209], 'false,false': [nan, 0.2222222222222202], 'false,false,false': [0.22008623076618675, 0.22548719518416419]}
{'': [nan, 0.22007136673779668], 'false': [nan, 0.22007136673779668], 'false,false': [nan, 0.2200713667377971], 'false,false,false': [0.22091440362969672, 0.21966408583267638]}
{'': [nan, 0.21624379127719365], 'false': [nan, 0.21624379127719365], 'false,false': [nan, 0.2162437912771936], 'false,false,false': [0.2261157024793391, 0.21345601306009374]}
{'': [nan, 0.22083699786297542], 'false': [nan, 0.22083699786297542], 'false,false': [nan, 0.22083699786297462], 'false,false,false': [nan, 0.22083699786297462]}
{'': [nan, 0.22311243198425887], 'false': [nan, 0.22311243198425887], 'false,false': [nan, 0.2231124319842592], 'false,false,false': [nan, 0.22311243198425942]}
{'': [0.20667304793004052, 0.21831099380776411], 'false': [nan, 0.21831099380776411], 'false,false': [nan, 0.21831099380776411], 'false,false,false': [0.20999999999999874, 0.2295918367346938], 'true': [3.777245480142609e-06, 3.4867998454809546e-06], 'true,true': [nan, 3.777245480142609e-06], 'true,true,false': [nan, 3.777245480142609e-06]}
{'': [nan, 0.19076323612282772], 'false': [nan, 0.19076323612282772], 'false,false': [nan, 0.1907632361228281], 'false,false,false': [0.1223750503548822, 0.23146415647696586]}
{'': [nan, 0.19960847062480375], 'false': [nan, 0.19960847062480405], 'false,false': [nan, 0.19960847062480405], 'false,false,false': [nan, 0.19960847062480405]}
{'': [nan, 0.19668757086089148], 'false': [nan, 0.19668757086089148], 'false,false': [nan, 0.1966875708608911], 'false,false,false': [nan, 0.1966875708608911]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 26.221
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.2581489350995123;  // std dev = 1.549, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06504548682365029;  // std dev = 2.181, 29.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(I, A), complex(A, J) )
%   | | | then return 0.10814893509951236;  // std dev = 3.000, 48.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=12 */
%   | | | else return 0.1941489350995112;  // std dev = 5.281, 125.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=42 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.7389712738535141;  // std dev = 0.129, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, G), enzyme(A, H) )
%   | | | then return 0.21666075260086526;  // std dev = 2.833, 34.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=13 */
%   | | | else return 0.07087725076974778;  // std dev = 5.311, 160.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=37 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( recursion_proteinclass(J, B) )
%   | | | then return 0.5261539882371347;  // std dev = 0.806, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.15881349944440026;  // std dev = 2.577, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.5828345642633149;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.16616789759664827;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( complex(A, C) )
%   | then return 0.03756485938949505;  // std dev = 0.296, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | else return -0.015822662059943888;  // std dev = 0.275, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   else if ( interaction(A, D), enzyme(A, E) )
%   | then if ( enzyme(D, F), interaction(G, A) )
%   | | then if ( enzyme(G, H), complex(D, I) )
%   | | | then return 0.2356161311679549;  // std dev = 1.307, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.02702524818606861;  // std dev = 0.915, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.5588518790309811;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.3505314180447647;  // std dev = 1.653, 11.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.5868409560147237;  // std dev = 0.121, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.6191331262588685;  // std dev = 0.124, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12668387382066362;  // std dev = 5.994, 168.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(D, A) )
%   | | | then return 0.5225871448806345;  // std dev = 0.163, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.7109304423647077;  // std dev = 0.813, 40.000 (wgt'ed) examples reached here.  /* #pos=40 */
%   | | else if ( interaction(F, D), interaction(F, A) )
%   | | | then return 0.7407331171369501;  // std dev = 1.127, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | | | else return -0.20463107605479103;  // std dev = 0.246, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.1959543196399358;  // std dev = 0.334, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   else if ( enzyme(A, G) )
%   | then return -0.07404699273598325;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return 0.05149480205002277;  // std dev = 0.442, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.37248991602667153;  // std dev = 0.064, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( phenotype(A, D), interaction(A, E) )
%   | then if ( interaction(E, F), interaction(F, G) )
%   | | then if ( recursion_proteinclass(F, B), interaction(G, A) )
%   | | | then return 0.5988709251257079;  // std dev = 0.267, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.0051053881221932015;  // std dev = 2.714, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | | else if ( complex(E, H) )
%   | | | then return 0.04398923609915076;  // std dev = 0.658, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.12696278743601014;  // std dev = 1.289, 17.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=3 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6453803969133023;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.17425667532790262;  // std dev = 0.105, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.03621402577482964;  // std dev = 2.192, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | else return 0.11812634015423447;  // std dev = 3.208, 64.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=22 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( phenotype(D, E), complex(D, F) )
%   | then if ( interaction(G, D), interaction(G, A) )
%   | | then return -0.007766311451732021;  // std dev = 0.308, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | else if ( phenotype(A, H), complex(A, I) )
%   | | | then return 0.20422089245248642;  // std dev = 0.719, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.033236080983739154;  // std dev = 1.407, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else return -0.04760416777326546;  // std dev = 0.283, 56.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=12 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.30243403325324286;  // std dev = 0.162, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( complex(K, M) )
%   | | | then return -0.04680661975418329;  // std dev = 1.838, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | | else return 0.01829850400848626;  // std dev = 2.593, 54.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=13 */
%   | | else if ( interaction(N, A) )
%   | | | then return 0.08147032414673525;  // std dev = 3.115, 67.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=23 */
%   | | | else return 0.4607809547719136;  // std dev = 0.771, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.47202899535570797;  // std dev = 0.189, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.18504681929332983;  // std dev = 0.061, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then return 0.03040454045837707;  // std dev = 0.273, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( phenotype(E, H) )
%   | | | then return -0.01852981872404726;  // std dev = 0.643, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.08351951019223772;  // std dev = 1.118, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.29658294270899915;  // std dev = 2.865, 64.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=43 */
%   | | | else return -0.18126172967470766;  // std dev = 0.241, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else if ( interaction(A, K) )
%   | | | then return -0.11209882654445238;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.006945035294613211;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then return -0.030584545668230635;  // std dev = 0.158, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   else if ( interaction(C, A), complex(C, D) )
%   | then if ( interaction(E, C), interaction(F, E) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.1309720313843441;  // std dev = 1.071, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.04232012831161315;  // std dev = 2.145, 49.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=17 */
%   | | else if ( interaction(C, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5549320125327595;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.1886484216691787;  // std dev = 0.123, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, J), phenotype(A, K) )
%   | | then if ( interaction(J, L), complex(L, M) )
%   | | | then return 0.2329366216427681;  // std dev = 1.161, 14.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=9 */
%   | | | else return 0.03092216881522749;  // std dev = 1.773, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.08363197605958671;  // std dev = 0.998, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.0036552144597022077;  // std dev = 2.740, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(D, C) )
%   | then return 0.21820322343582513;  // std dev = 0.066, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.10083011673063562;  // std dev = 0.632, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(H, A), phenotype(G, I) )
%   | | | then return 0.3506423253129052;  // std dev = 0.269, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.48577423833596306;  // std dev = 0.164, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.18321341898802443;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), interaction(M, A) )
%   | | | then return -0.10435334750536357;  // std dev = 1.283, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.025258517997418007;  // std dev = 1.855, 30.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=12 */
%   | | else if ( interaction(A, N), phenotype(N, P) )
%   | | | then return 0.10207594434659645;  // std dev = 1.960, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
%   | | | else return 0.019769925653122595;  // std dev = 3.208, 109.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=32 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), phenotype(C, E) )
%   | then return -0.06451717624346956;  // std dev = 0.893, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.19961474420769806;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.3114644583379705;  // std dev = 0.149, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( complex(G, H), interaction(I, A) )
%   | | | then return -0.11536128067904027;  // std dev = 1.429, 46.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=5 */
%   | | | else return -0.03324674895741977;  // std dev = 2.541, 80.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=20 */
%   | else if ( phenotype(A, J), interaction(K, A) )
%   | | then if ( interaction(L, K), phenotype(L, J) )
%   | | | then return 0.07480353265385173;  // std dev = 0.978, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.013158178527741662;  // std dev = 2.192, 63.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=16 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.01327395657922584;  // std dev = 1.079, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return 0.1410537304149612;  // std dev = 1.854, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3', 'minutes', 'and', '14.871', 'seconds']
Refined model CLL: -0.20777


******************************************
Best model found
******************************************
Results 

CLL : -0.210173 

AUC ROC : 0.986628 

AUC PR : 0.302339 

Precision : 0.276316 

Recall : 0.667845 

F1 : 0.3909 

Total Learning Time : 26.221 

Total Inference Time : 19.81065583229065 

Total revision time: 53.51781693649292
Best scored revision CLL: -0.20777


Results 

CLL : -0.210173 

AUC ROC : 0.986628 

AUC PR : 0.302339 

Precision : 0.276316 

Recall : 0.667845 

F1 : 0.3909 

Total Learning Time : 63.68707719993591 

Total Inference Time : 19.81065583229065 

Run: 4
Starting experiments for fasttext using euclidean 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.143
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.16886322081379787;  // std dev = 7.744, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15061102090814438;  // std dev = 5.493, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.16965863995576352;  // std dev = 5.354, 129.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14374883609372283;  // std dev = 4.841, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.1717761188615981;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10941972524877498;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.14267312738371762;  // std dev = 6.567, 188.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10751300109496123;  // std dev = 7.561, 253.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0865381044632388;  // std dev = 7.566, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7331640270915794;  // std dev = 0.030, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26745415145992313;  // std dev = 0.049, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.01820594696442689;  // std dev = 4.120, 82.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=24 */
%   | | | else return 0.047295035987606635;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04874138569122965;  // std dev = 3.788, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.09092433929088539;  // std dev = 5.703, 139.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009357764733736238;  // std dev = 7.146, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03845631280857006;  // std dev = 6.956, 254.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.276', 'seconds']
Parameter learned model CLL:-0.336738 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.744, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.493, 96, 44], 'false,false,false,false': [5.354, 86, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.841, 71, 35], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.695, 43, 20], 'false,false,false,false': [6.567, 121, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.561, 166, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.566, 167, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 35], 'true,false': [0.049, 90, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.12, 58, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.788, 68, 35], 'false,false,false,false': [5.703, 87, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.146, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.956, 167, 87]}]
{'': [nan, 0.21417091836734775], 'false': [nan, 0.21417091836734786], 'false,false': [nan, 0.21417091836734775], 'false,false,false': [nan, 0.21417091836734786]}
{'': [nan, 0.21881952985724348], 'false': [nan, 0.21881952985724257], 'false,false': [nan, 0.21881952985724348], 'false,false,false': [0.21551020408163182, 0.2222222222222223]}
{'': [nan, 0.22640229578825571], 'false': [nan, 0.22640229578825571], 'false,false': [nan, 0.22640229578825524], 'false,false,false': [0.2210682301750766, 0.2299699445158172]}
{'': [nan, 0.22640348550579648], 'false': [nan, 0.22640348550579648], 'false,false': [nan, 0.22640348550579642], 'false,false,false': [0.21667926429831155, 0.22938458553031357]}
{'': [nan, 0.22597504822831307], 'false': [nan, 0.22597504822831307], 'false,false': [nan, 0.2259750482283121], 'false,false,false': [nan, 0.2259750482283121]}
{'': [nan, 0.2253464417063906], 'false': [nan, 0.2253464417063906], 'false,false': [nan, 0.22534644170638943], 'false,false,false': [nan, 0.22534644170639123]}
{'': [0.20187542646050752, 0.21365982079471502], 'false': [nan, 0.21365982079471502], 'false,false': [nan, 0.21365982079471502], 'false,false,false': [0.2070196311719215, 0.21957815035154202], 'true': [2.572331505033633e-05, 2.6246249932743778e-05], 'true,true': [nan, 2.572331505033633e-05], 'true,true,false': [nan, 2.572331505033633e-05]}
{'': [nan, 0.1941549783789249], 'false': [nan, 0.1941549783789249], 'false,false': [nan, 0.19415497837892576], 'false,false,false': [0.13932969398401343, 0.23402355993808602]}
{'': [nan, 0.18235251057840746], 'false': [nan, 0.18235251057840787], 'false,false': [nan, 0.18235251057840787], 'false,false,false': [nan, 0.18235251057840787]}
{'': [nan, 0.19047594864087367], 'false': [nan, 0.19047594864087367], 'false,false': [nan, 0.19047594864087453], 'false,false,false': [nan, 0.19047594864087453]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 68.949
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(E, A), complex(E, F) )
%   | | | then return 0.08395538671241559;  // std dev = 2.328, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | else if ( complex(A, G), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.030562728202960545;  // std dev = 2.034, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2084674064370931;  // std dev = 5.978, 157.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=55 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8115148865628145;  // std dev = 0.258, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.1629892899208418;  // std dev = 0.123, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( recursion_proteinclass(E, B), interaction(G, E) )
%   | | then return 0.7194734122109544;  // std dev = 3.65e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, H), location(E, I) )
%   | | | then return 0.08394335516111964;  // std dev = 3.178, 57.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else return 0.19005395426476016;  // std dev = 2.971, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( phenotype(A, K) )
%   | | | then return -0.0441683810036607;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | else return -0.03156485511290852;  // std dev = 0.797, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.31691184314816623;  // std dev = 1.378, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.0961377414453186;  // std dev = 3.090, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.5325379959672663;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.6144042826036884;  // std dev = 0.071, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, E), interaction(E, A) )
%   | | | then return 0.7629006494627496;  // std dev = 0.262, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.058711666758487865;  // std dev = 0.674, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(H, A), interaction(H, E) )
%   | | | then return -0.11697112835927992;  // std dev = 1.609, 53.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=3 */
%   | | | else return 0.10406409332164081;  // std dev = 2.963, 52.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=15 */
%   | else if ( interaction(A, I) )
%   | | then return 0.44819938466320813;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.08325361934292308;  // std dev = 2.204, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.16658439773676953;  // std dev = 4.409, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), phenotype(D, E) )
%   | then return 0.40241416566411453;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.5058484923924358;  // std dev = 0.134, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.4879979958191331;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, G), location(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5380387425726804;  // std dev = 0.931, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | | else return -0.015046676566513496;  // std dev = 3.502, 112.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=18 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.362264381823425;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.11085266228571797;  // std dev = 4.853, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(C, A) )
%   | then return 0.027595862880477922;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.3449293791306014;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.10441431230548524;  // std dev = 0.039, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( phenotype(E, F) )
%   | | | then return 0.02896148564745952;  // std dev = 1.672, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.308648953521779;  // std dev = 0.575, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(G, A) )
%   | | then if ( location(A, H) )
%   | | | then return 0.10872833515874715;  // std dev = 5.624, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
%   | | | else return -0.030139392052753466;  // std dev = 1.291, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.14374019942894356;  // std dev = 0.687, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.35686382143162865;  // std dev = 0.965, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.25021931129664526;  // std dev = 0.064, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.33611970605949315;  // std dev = 0.117, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, F), location(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.09581982987020685;  // std dev = 0.036, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(H, A), enzyme(F, I) )
%   | | | then return 0.06528337273827095;  // std dev = 2.038, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
%   | | | else return 0.0037607159104954295;  // std dev = 3.343, 92.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=23 */
%   | else if ( interaction(J, A), location(J, K) )
%   | | then if ( complex(A, L), location(A, K) )
%   | | | then return 0.1627563843663964;  // std dev = 2.371, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | | else return 0.06756578591271638;  // std dev = 4.061, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | else if ( phenotype(A, M) )
%   | | | then return -0.015941328563050416;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.1051574266554344;  // std dev = 0.926, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24183494153729806;  // std dev = 0.087, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( enzyme(A, F), interaction(G, A) )
%   | | | then return 0.5348162489324249;  // std dev = 0.352, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.641708825428932;  // std dev = 0.685, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.1992930877405753;  // std dev = 0.071, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(A, H), recursion_proteinclass(I, B) )
%   | | then return 0.33515433363040054;  // std dev = 0.129, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(A, H), phenotype(I, J) )
%   | | | then return -0.1986606003452874;  // std dev = 0.682, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.013602761465799815;  // std dev = 4.655, 129.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=36 */
%   | else if ( interaction(A, K) )
%   | | then return 0.4515397595771585;  // std dev = 0.790, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.12127258630970106;  // std dev = 1.088, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.19838858032615245;  // std dev = 0.062, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), interaction(G, F) )
%   | | then if ( interaction(F, A), phenotype(G, H) )
%   | | | then return -0.015720856573366356;  // std dev = 2.155, 69.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=16 */
%   | | | else return 0.13021141616218082;  // std dev = 2.001, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.39774397684565116;  // std dev = 0.785, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.3522560231543488;  // std dev = 0.318, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( phenotype(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.4094657661841212;  // std dev = 0.739, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return -0.21271121968336196;  // std dev = 0.206, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.07625864385537642;  // std dev = 4.222, 96.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=36 */
%   | | | else return -0.022335416349204367;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), complex(E, C) )
%   | | then return 0.29577033919036055;  // std dev = 0.183, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return 0.45950190956135134;  // std dev = 0.131, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.18378964116097146;  // std dev = 0.055, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( phenotype(F, H), location(A, I) )
%   | | then if ( interaction(A, J), location(G, I) )
%   | | | then return -0.019999643524699913;  // std dev = 1.975, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.14074871703625105;  // std dev = 2.328, 30.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | else if ( recursion_proteinclass(G, B) )
%   | | | then return 0.19566761320385784;  // std dev = 0.177, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.022751394665055928;  // std dev = 3.324, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( phenotype(A, K) )
%   | | then return -0.015684702132676365;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.28629632102030445;  // std dev = 1.039, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( enzyme(C, E), location(A, F) )
%   | then return -0.015804196034382052;  // std dev = 0.212, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else return 0.0840542078246376;  // std dev = 0.322, 53.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=22 */
%   else if ( phenotype(A, G), interaction(H, A) )
%   | then if ( location(H, I), location(A, I) )
%   | | then if ( interaction(J, H), interaction(H, J) )
%   | | | then return -0.044083900321947346;  // std dev = 1.873, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | | else return -0.12979245871732675;  // std dev = 1.651, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | else if ( interaction(H, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5204111322340309;  // std dev = 0.198, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23524737263891526;  // std dev = 0.131, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.31468060704218836;  // std dev = 2.566, 43.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=31 */
%   | | | else return -0.23378437223021914;  // std dev = 0.467, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07142324039609661;  // std dev = 0.303, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '34.060', 'seconds']
Refined model CLL: -0.230619


******************************************
Best model found
******************************************
Results 

CLL : -0.261412 

AUC ROC : 0.949 

AUC PR : 0.346415 

Precision : 0.286169 

Recall : 0.638298 

F1 : 0.39517 

Total Learning Time : 68.949 

Total Inference Time : 13.533709049224854 

Total revision time: 90.12648128700256
Best scored revision CLL: -0.230619


Results 

CLL : -0.261412 

AUC ROC : 0.949 

AUC PR : 0.346415 

Precision : 0.286169 

Recall : 0.638298 

F1 : 0.39517 

Total Learning Time : 90.19840621185303 

Total Inference Time : 13.533709049224854 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.504
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20366388526562584;  // std dev = 8.250, 301.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16271587460248088;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
%   | | | else return 0.17587654444683073;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10176372819625912;  // std dev = 5.377, 139.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=41 */
%   | | | else return 0.1581576453344042;  // std dev = 6.389, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14054514817945757;  // std dev = 4.344, 83.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=29 */
%   | | | else return 0.09250767550043947;  // std dev = 7.191, 241.000 (wgt'ed) examples reached here.  /* #neg=166 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10670003196955166;  // std dev = 8.281, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10472018057956706;  // std dev = 8.169, 290.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7290960589152934;  // std dev = 0.020, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2704902326254512;  // std dev = 0.027, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.044869736133399715;  // std dev = 3.956, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.07062222910552256;  // std dev = 5.108, 115.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021256611069983108;  // std dev = 4.185, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | | | else return 0.06318716654160249;  // std dev = 6.391, 179.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.025512800695635728;  // std dev = 7.733, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06528116535404165;  // std dev = 7.430, 278.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.043', 'seconds']
Parameter learned model CLL:-0.34789 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.25, 197, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.897, 105, 52], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.377, 98, 41], 'false,false,false,false': [6.389, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.344, 54, 29], 'false,false,false,false': [7.191, 166, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.281, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.169, 186, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.02, 0, 41], 'true,false': [0.027, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.956, 49, 23], 'false,false,false,false': [5.108, 75, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.185, 92, 41], 'false,false,false,false': [6.391, 116, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.733, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.43, 174, 104]}]
{'': [nan, 0.22613436937782366], 'false': [nan, 0.226134369377822], 'false,false': [nan, 0.22613436937782366], 'false,false,false': [nan, 0.226134369377822]}
{'': [nan, 0.22364648338673834], 'false': [nan, 0.22364648338674373], 'false,false': [nan, 0.22364648338673834], 'false,false,false': [0.2215100004056967, 0.22577957107144492]}
{'': [nan, 0.22007038324904407], 'false': [nan, 0.22007038324904407], 'false,false': [nan, 0.22007038324904418], 'false,false,false': [0.20799881361748526, 0.2280542757017426]}
{'': [nan, 0.21827899445263668], 'false': [nan, 0.21827899445263668], 'false,false': [nan, 0.21827899445263696], 'false,false,false': [0.22731891421106215, 0.21457451695958277]}
{'': [nan, 0.22482719371397633], 'false': [nan, 0.22482719371397633], 'false,false': [nan, 0.2248271937139755], 'false,false,false': [nan, 0.2248271937139755]}
{'': [nan, 0.23009299644290146], 'false': [nan, 0.23009299644290146], 'false,false': [nan, 0.23009299644290132], 'false,false,false': [nan, 0.23009299644290124]}
{'': [0.23447664640265015, 0.22336416639350065], 'true': [9.758145923429799e-06, 1.076469850028673e-05], 'false': [nan, 0.22336416639350065], 'false,false': [nan, 0.22336416639350065], 'false,false,false': [0.21739969135802473, 0.22684310018903556], 'true,true': [nan, 9.758145923429799e-06], 'true,true,false': [nan, 9.758145923429799e-06]}
{'': [nan, 0.1874817446827733], 'false': [nan, 0.1874817446827733], 'false,false': [nan, 0.18748174468277276], 'false,false,false': [0.13171093605207126, 0.22817091325575373]}
{'': [nan, 0.18805491628874083], 'false': [nan, 0.18805491628874058], 'false,false': [nan, 0.18805491628874058], 'false,false,false': [nan, 0.18805491628874058]}
{'': [nan, 0.19856948638828703], 'false': [nan, 0.19856948638828703], 'false,false': [nan, 0.1985694863882869], 'false,false,false': [nan, 0.1985694863882869]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 38.827
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.8126943896449667;  // std dev = 0.977, 22.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=21 */
%   | | | else return 0.0857912115222766;  // std dev = 6.577, 246.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=56 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.3581489350995123;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.6452725248005837;  // std dev = 0.301, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, F) )
%   | | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | | then return 0.540780231840737;  // std dev = 1.797, 24.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=19 */
%   | | | else return -0.05458114722457037;  // std dev = 3.034, 113.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=11 */
%   | | else if ( complex(C, H), phenotype(A, I) )
%   | | | then return 0.21371777312512738;  // std dev = 3.656, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.13940584821501245;  // std dev = 3.778, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(K, A), interaction(K, K) )
%   | | then return 0.06960360912516118;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.15280787220710837;  // std dev = 2.008, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.36558135101063916;  // std dev = 1.815, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5776627755309048;  // std dev = 0.182, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | | then return -0.05685387198410478;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.18170945311017767;  // std dev = 0.261, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12738484761360563;  // std dev = 0.074, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.06162765031532429;  // std dev = 2.886, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then if ( enzyme(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.754160478853799;  // std dev = 0.971, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.1786967302880115;  // std dev = 0.185, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( complex(A, J) )
%   | | | then return 0.06911275671009708;  // std dev = 2.666, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.21070837878201193;  // std dev = 4.930, 103.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=40 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, A), interaction(F, E) )
%   | | then return 0.6284279706692789;  // std dev = 0.228, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | else return -0.08687921758788275;  // std dev = 0.270, 35.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=4 */
%   | else return -0.17482990711681304;  // std dev = 0.350, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( interaction(A, I), interaction(I, I) )
%   | | then return 0.05001743270381257;  // std dev = 0.312, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | else if ( interaction(A, J), location(J, K) )
%   | | | then return 0.48940870455102087;  // std dev = 0.782, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.09718821160247114;  // std dev = 2.202, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.7315037152900041;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return -5.095425041318521E-4;  // std dev = 1.118, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.22424049093665357;  // std dev = 3.109, 42.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=19 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3700659954016366;  // std dev = 0.180, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), location(A, E) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, D), interaction(D, A) )
%   | | | then return 0.4748641788375405;  // std dev = 0.250, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.09490013817561671;  // std dev = 0.872, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.1379534121193066;  // std dev = 0.471, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.023428556607467625;  // std dev = 2.831, 71.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=14 */
%   | else if ( interaction(G, A), enzyme(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.505528854260473;  // std dev = 1.590, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | | | else return -0.20334657589360888;  // std dev = 0.129, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.06365788475228744;  // std dev = 3.644, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.18195533369619693;  // std dev = 2.213, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(A, A) )
%   | | then return 0.26319457600230955;  // std dev = 0.125, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.4490446350997043;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.24801956964518032;  // std dev = 0.090, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.404629218615037;  // std dev = 0.063, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, A) )
%   | then return -0.08709195592269188;  // std dev = 0.029, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | | then return 0.3550685411092333;  // std dev = 0.123, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.002850608045343345;  // std dev = 3.128, 99.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=25 */
%   | | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | | then return 0.41624262996623324;  // std dev = 0.161, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.06925116307878093;  // std dev = 4.953, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.40541432958830215;  // std dev = 0.170, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16669477388413115;  // std dev = 0.056, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( phenotype(E, F), interaction(A, G) )
%   | | then if ( complex(G, H) )
%   | | | then return -0.029421371347423585;  // std dev = 1.377, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | else return 0.1301070840437114;  // std dev = 0.576, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( location(A, I), location(E, I) )
%   | | | then return 0.0323372585500611;  // std dev = 3.026, 71.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=22 */
%   | | | else return 0.1367183195454882;  // std dev = 1.223, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.3925045321702359;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.34821312669437193;  // std dev = 0.185, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.042640106642766684;  // std dev = 3.601, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2173849494502207;  // std dev = 0.080, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(D, D) )
%   | then if ( complex(D, E), complex(A, F) )
%   | | then if ( phenotype(D, G) )
%   | | | then return -0.0071757586060215315;  // std dev = 0.473, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return -0.15387779296492185;  // std dev = 1.121, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.290942573518984;  // std dev = 1.197, 14.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=12 */
%   | | | else return -0.13341534026700164;  // std dev = 0.189, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( location(A, I), complex(A, J) )
%   | | then if ( complex(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.40034974884162383;  // std dev = 0.736, 21.000 (wgt'ed) examples reached here.  /* #pos=21 */
%   | | | else return -0.14803300885142479;  // std dev = 0.272, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.14567601266324665;  // std dev = 1.904, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
%   | | | else return 0.052806993802678136;  // std dev = 4.289, 108.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then return -0.04134625364647953;  // std dev = 0.214, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), location(A, G) )
%   | | then if ( location(E, G), location(F, G) )
%   | | | then return -0.023984720936049017;  // std dev = 1.998, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | | | else return 0.08343253431215678;  // std dev = 1.376, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.6290872292199973;  // std dev = 0.116, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.29622518671042464;  // std dev = 0.174, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( complex(A, I), location(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.3254026844063141;  // std dev = 0.583, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15339018758245687;  // std dev = 0.271, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.18935850424411568;  // std dev = 1.053, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.04250086842691291;  // std dev = 4.184, 100.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D) )
%   | then return 0.13090632425498291;  // std dev = 0.107, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.22770875079556752;  // std dev = 0.144, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.28710331734258615;  // std dev = 0.567, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.18275111345033124;  // std dev = 0.634, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else return -0.11468963816574411;  // std dev = 0.309, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | else if ( interaction(H, A), complex(H, I) )
%   | | then if ( interaction(H, H), interaction(A, H) )
%   | | | then return -0.27150781443042393;  // std dev = 0.465, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.038480793491670516;  // std dev = 4.234, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return -0.05231654959375194;  // std dev = 1.879, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | | | else return 0.015860178738681056;  // std dev = 1.749, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '58.075', 'seconds']
Refined model CLL: -0.217538


******************************************
Best model found
******************************************
Results 

CLL : -0.252647 

AUC ROC : 0.949512 

AUC PR : 0.371974 

Precision : 0.177083 

Recall : 0.577358 

F1 : 0.271036 

Total Learning Time : 38.827 

Total Inference Time : 45.49136018753052 

Total revision time: 93.17597809410094
Best scored revision CLL: -0.217538


Results 

CLL : -0.252647 

AUC ROC : 0.949512 

AUC PR : 0.371974 

Precision : 0.177083 

Recall : 0.577358 

F1 : 0.271036 

Total Learning Time : 93.2479030189514 

Total Inference Time : 45.49136018753052 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.249
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1976323299334608;  // std dev = 7.795, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16787535538470255;  // std dev = 5.821, 152.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=51 */
%   | | | else return 0.1768868547212792;  // std dev = 5.184, 119.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10045624221619491;  // std dev = 5.575, 150.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=44 */
%   | | | else return 0.11658925912076572;  // std dev = 5.756, 155.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11249511915107671;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.11699811791900219;  // std dev = 6.658, 201.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11022486311439755;  // std dev = 7.789, 270.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07805160753831399;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7364746770266124;  // std dev = 0.009, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2633174864251495;  // std dev = 0.012, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03841227807842693;  // std dev = 4.169, 82.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=25 */
%   | | | else return 0.08025397151862709;  // std dev = 3.871, 66.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03016417054196019;  // std dev = 4.336, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
%   | | | else return 0.12416131149232687;  // std dev = 5.354, 119.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.019701049617200227;  // std dev = 7.177, 289.000 (wgt'ed) examples reached here.  /* #neg=197 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04408554483982265;  // std dev = 6.990, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.308', 'seconds']
Parameter learned model CLL:-0.331258 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.795, 179, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.821, 101, 51], 'false,false,false,false': [5.184, 78, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.575, 106, 44], 'false,false,false,false': [5.756, 107, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.658, 135, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.789, 178, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.009, 0, 44], 'true,false': [0.012, 97, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.169, 57, 25], 'false,false,false,false': [3.871, 43, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.336, 97, 44], 'false,false,false,false': [5.354, 71, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.177, 197, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.99, 173, 92]}]
{'': [nan, 0.2242344194659672], 'false': [nan, 0.22423441946596676], 'false,false': [nan, 0.2242344194659672], 'false,false,false': [nan, 0.22423441946596676]}
{'': [nan, 0.22423441946596534], 'false': [nan, 0.22423441946596592], 'false,false': [nan, 0.22423441946596534], 'false,false,false': [0.22294840720221606, 0.225831509074218]}
{'': [nan, 0.21062874520882144], 'false': [nan, 0.21062874520882144], 'false,false': [nan, 0.2106287452088215], 'false,false,false': [0.2072324181258223, 0.21378750963180207]}
{'': [nan, 0.2197975217500227], 'false': [nan, 0.2197975217500227], 'false,false': [nan, 0.21979752175002326], 'false,false,false': [0.21795458009449883, 0.22053437548652927]}
{'': [nan, 0.22469414565310644], 'false': [nan, 0.22469414565310644], 'false,false': [nan, 0.2246941456531059], 'false,false,false': [nan, 0.2246941456531059]}
{'': [nan, 0.22058970425129837], 'false': [nan, 0.22058970425129837], 'false,false': [nan, 0.2205897042512996], 'false,false,false': [nan, 0.2205897042512987]}
{'': [0.21458967080024854, 0.21910079124685822], 'false': [nan, 0.21910079124685822], 'false,false': [nan, 0.21910079124685822], 'false,false,false': [0.21192742415228966, 0.22704315886134038], 'true': [1.6649445083222696e-06, 1.5225765240307702e-06], 'true,true': [nan, 1.6649445083222696e-06], 'true,true,false': [nan, 1.6649445083222696e-06]}
{'': [nan, 0.18475107581973516], 'false': [nan, 0.18475107581973516], 'false,false': [nan, 0.18475107581973443], 'false,false,false': [0.13332428909779165, 0.24089379643460523]}
{'': [nan, 0.17822957173419138], 'false': [nan, 0.17822957173419202], 'false,false': [nan, 0.17822957173419202], 'false,false,false': [nan, 0.17822957173419202]}
{'': [nan, 0.18439319858376318], 'false': [nan, 0.18439319858376318], 'false,false': [nan, 0.18439319858376177], 'false,false,false': [nan, 0.18439319858376177]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.304
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(F, A), enzyme(F, G) )
%   | | then if ( enzyme(A, H) )
%   | | | then return -0.09837280403092258;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=1 */
%   | | | else return 0.274815601766179;  // std dev = 1.708, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(A, I), enzyme(I, J) )
%   | | | then return 0.058148935099512356;  // std dev = 2.191, 30.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.15517863806980808;  // std dev = 6.494, 202.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=60 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.6568939185258021;  // std dev = 0.254, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( interaction(C, C), complex(A, E) )
%   | | then if ( interaction(A, F) )
%   | | | then return -0.1533220070660816;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return 0.03818991377464691;  // std dev = 1.265, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( enzyme(C, G), enzyme(A, G) )
%   | | | then return -0.1302927516979357;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.15878397082101656;  // std dev = 5.923, 163.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=53 */
%   else if ( interaction(A, H), interaction(H, I) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(I, J), complex(I, K) )
%   | | | then return 0.07298616575672848;  // std dev = 1.966, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.25591759033622247;  // std dev = 2.957, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | else return 0.5048565804413135;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6004850119000374;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( phenotype(A, E), enzyme(A, F) )
%   | | then if ( interaction(D, D), location(D, G) )
%   | | | then return -0.1162259226099847;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.3217639171086344;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(D, H) )
%   | | | then return -0.0665204338582507;  // std dev = 0.916, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else return -0.18032980139963484;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(A, K), phenotype(I, K) )
%   | | | then return -0.00776214745258624;  // std dev = 1.579, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | | else return 0.11354636356532885;  // std dev = 3.635, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.19510499213924729;  // std dev = 3.558, 55.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=22 */
%   | | | else return 0.12364231103590924;  // std dev = 4.541, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.42958656752366975;  // std dev = 0.124, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5145808598826713;  // std dev = 0.107, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.578285764309095;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11666915597393868;  // std dev = 0.039, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.05482117602200556;  // std dev = 3.525, 68.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=17 */
%   | | | else return 0.10609342141600092;  // std dev = 6.136, 174.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=55 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.4400461862474929;  // std dev = 0.195, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( complex(C, F), phenotype(C, G) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.06512472220959231;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.21201654408255732;  // std dev = 1.494, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return -0.07167516293638111;  // std dev = 0.302, 58.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=8 */
%   else if ( phenotype(A, I), enzyme(A, J) )
%   | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | then return 0.7290577710302879;  // std dev = 0.144, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.20913720893964652;  // std dev = 0.096, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.43142869970160247;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, M) )
%   | | | then return 0.004421227005501475;  // std dev = 3.297, 64.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=15 */
%   | | | else return 0.0892540259007808;  // std dev = 4.742, 104.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.28209287981625514;  // std dev = 0.073, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(D, D), phenotype(D, E) )
%   | | then if ( enzyme(D, F) )
%   | | | then return -0.04517380103312339;  // std dev = 1.228, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return -0.17488104871349353;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.5946152659690181;  // std dev = 0.327, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.032733235262677435;  // std dev = 5.805, 190.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=50 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( complex(A, I), phenotype(H, J) )
%   | | | then return 0.08333543195650164;  // std dev = 1.412, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return 0.2590351997183538;  // std dev = 1.657, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | else if ( interaction(A, K), enzyme(K, L) )
%   | | | then return -0.07509917539682524;  // std dev = 0.282, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.08744998188972963;  // std dev = 2.649, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5752111829165121;  // std dev = 0.238, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.19447891945023593;  // std dev = 0.054, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( interaction(A, E) )
%   | then if ( interaction(E, E), phenotype(A, F) )
%   | | then return -0.044457428339085114;  // std dev = 0.357, 23.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=6 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.11690696475754289;  // std dev = 1.634, 14.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=6 */
%   | | | else return 0.03103864400549285;  // std dev = 3.008, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.5935287630896781;  // std dev = 1.067, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return -0.2409078101872949;  // std dev = 0.038, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.1091798210515037;  // std dev = 2.284, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.25257566667092246;  // std dev = 1.736, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), complex(A, E) )
%   | then return -0.02001571881676208;  // std dev = 0.730, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.2253032995314691;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.43152675552463043;  // std dev = 0.311, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6926586942949914;  // std dev = 0.075, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.1803101248012151;  // std dev = 0.067, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | else if ( interaction(A, I), phenotype(A, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.025113966522266367;  // std dev = 2.147, 34.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else return -0.054286577914059254;  // std dev = 2.068, 30.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=7 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.10216655424592065;  // std dev = 2.286, 31.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=10 */
%   | | | else return 0.051369234154366505;  // std dev = 4.669, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.1291359009475349;  // std dev = 0.047, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.29122903072236284;  // std dev = 0.160, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( complex(A, F) )
%   | | then if ( complex(E, F) )
%   | | | then return -0.08088529888706904;  // std dev = 0.549, 18.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=1 */
%   | | | else return -0.1055699194093313;  // std dev = 0.434, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | else return 0.061172332519084105;  // std dev = 0.473, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( enzyme(A, I), interaction(G, G) )
%   | | | then return 0.17437673824757352;  // std dev = 1.020, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.038124114979805564;  // std dev = 2.710, 54.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=12 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.16577594766091933;  // std dev = 1.809, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.06026667297665232;  // std dev = 4.947, 149.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=53 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B), interaction(D, E) )
%   | then return 0.1867299035638392;  // std dev = 0.132, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else if ( interaction(D, F), interaction(F, A) )
%   | | then return -0.14989496757784207;  // std dev = 0.122, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( complex(C, G), interaction(H, A) )
%   | | | then return 0.20194067707179109;  // std dev = 1.475, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.0025645124257793563;  // std dev = 3.753, 83.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=25 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then if ( location(I, K), location(A, K) )
%   | | then if ( interaction(L, I), phenotype(L, M) )
%   | | | then return 0.11652779700212008;  // std dev = 1.836, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.2242959641398219;  // std dev = 1.409, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | else if ( interaction(N, I), location(I, P) )
%   | | | then return -0.01135979980033935;  // std dev = 1.668, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | | else return 0.126709881626788;  // std dev = 1.620, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else return 0.03410306655827939;  // std dev = 0.365, 61.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.368', 'seconds']
Refined model CLL: -0.281909


******************************************
Best model found
******************************************
Results 

CLL : -0.280111 

AUC ROC : 0.916122 

AUC PR : 0.189643 

Precision : 0.193727 

Recall : 0.379061 

F1 : 0.25641 

Total Learning Time : 15.304 

Total Inference Time : 6.77122688293457 

Total revision time: 30.066973712921143
Best scored revision CLL: -0.281909


Results 

CLL : -0.280111 

AUC ROC : 0.916122 

AUC PR : 0.189643 

Precision : 0.193727 

Recall : 0.379061 

F1 : 0.25641 

Total Learning Time : 30.138898637771607 

Total Inference Time : 6.77122688293457 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.193
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1863932099086731;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15689290625061122;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.11724487312431903;  // std dev = 4.936, 120.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1504759290459276;  // std dev = 4.306, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.12707351083251942;  // std dev = 6.311, 185.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12021628200515026;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.1333615392172839;  // std dev = 6.652, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10966757868430979;  // std dev = 7.535, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08926869308308331;  // std dev = 7.540, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7301864685452956;  // std dev = 0.013, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2698712769133855;  // std dev = 0.018, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.054065185669788865;  // std dev = 4.725, 102.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=33 */
%   | | | else return 0.09038159820214432;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.029779969605438425;  // std dev = 3.436, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.04587928867016408;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027423808318570147;  // std dev = 7.162, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.017709561356317315;  // std dev = 7.185, 273.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.410', 'seconds']
Parameter learned model CLL:-0.331892 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [4.936, 86, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.306, 55, 28], 'false,false,false,false': [6.311, 127, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.652, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.535, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.54, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 28], 'true,false': [0.018, 58, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.725, 69, 33], 'false,false,false,false': [4.025, 46, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.436, 60, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.162, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.185, 187, 86]}]
{'': [nan, 0.22049997086416953], 'false': [nan, 0.22049997086416936], 'false,false': [nan, 0.22049997086416953], 'false,false,false': [nan, 0.22049997086416936]}
{'': [nan, 0.21238332847861635], 'false': [nan, 0.21238332847861707], 'false,false': [nan, 0.21238332847861635], 'false,false,false': [0.21866440337950035, 0.20305555555555616]}
{'': [nan, 0.21791518457717204], 'false': [nan, 0.21791518457717204], 'false,false': [nan, 0.21791518457717163], 'false,false,false': [0.2234397138412301, 0.21526699678770977]}
{'': [nan, 0.22413144946329153], 'false': [nan, 0.22413144946329153], 'false,false': [nan, 0.2241314494632919], 'false,false,false': [0.22222222222222174, 0.22464508801087538]}
{'': [nan, 0.2244171484563037], 'false': [nan, 0.2244171484563037], 'false,false': [nan, 0.2244171484563043], 'false,false,false': [nan, 0.2244171484563043]}
{'': [nan, 0.22468557200367004], 'false': [nan, 0.22468557200367004], 'false,false': [nan, 0.22468557200366968], 'false,false,false': [nan, 0.2246855720036707]}
{'': [0.219609355940107, 0.2229822114479747], 'false': [nan, 0.2229822114479747], 'false,false': [nan, 0.2229822114479747], 'false,false,false': [0.21885813148788946, 0.22812933941678212], 'true': [5.920286964349637e-06, 5.809506201728342e-06], 'true,true': [nan, 5.920286964349637e-06], 'true,true,false': [nan, 5.920286964349637e-06]}
{'': [nan, 0.19144720100743784], 'false': [nan, 0.19144720100743784], 'false,false': [nan, 0.19144720100743828], 'false,false,false': [0.1341695437758793, 0.21967849860141794]}
{'': [nan, 0.18996105563067692], 'false': [nan, 0.1899610556306764], 'false,false': [nan, 0.1899610556306764], 'false,false,false': [nan, 0.1899610556306764]}
{'': [nan, 0.18911539819292492], 'false': [nan, 0.18911539819292492], 'false,false': [nan, 0.18911539819292525], 'false,false,false': [nan, 0.18911539819292525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.262
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( interaction(C, E), phenotype(E, F) )
%   | | then return 0.19148226843284552;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004877;  // std dev = 2.79e-08, 30.000 (wgt'ed) examples reached here.  /* #neg=30 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7331489350995123;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08495305881085259;  // std dev = 4.124, 97.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=22 */
%   | | else if ( phenotype(A, J), enzyme(A, K) )
%   | | | then return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.25814893509951237;  // std dev = 4.382, 80.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=32 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8087458536754262;  // std dev = 0.195, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | else return -0.15673918989884336;  // std dev = 0.109, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.7194734122109542;  // std dev = 5.16e-08, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H), interaction(H, A) )
%   | | | then return 0.17130024429682078;  // std dev = 0.811, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.5796726784699208;  // std dev = 0.873, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12544463852839138;  // std dev = 5.27e-09, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.12525649006143846;  // std dev = 6.054, 180.000 (wgt'ed) examples reached here.  /* #neg=127 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.6024955235008929;  // std dev = 0.232, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   | else if ( phenotype(A, F), recursion_proteinclass(C, B) )
%   | | then return 0.7346482735686958;  // std dev = 0.027, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.15048187414070718;  // std dev = 0.204, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | | | else return 0.08907971027168106;  // std dev = 5.135, 142.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=40 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5522036972129696;  // std dev = 0.020, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.0681361591441414;  // std dev = 1.022, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.3206269281125822;  // std dev = 1.878, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.11340546817934208;  // std dev = 2.854, 44.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.4231257042059723;  // std dev = 0.140, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(C, D), location(A, F) )
%   | | then return -0.06412505409512757;  // std dev = 0.263, 34.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=4 */
%   | | else return 0.09902915077351893;  // std dev = 0.424, 24.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   else if ( interaction(G, A), complex(G, H) )
%   | then if ( enzyme(A, I), interaction(G, G) )
%   | | then return 0.45709593379851543;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(J, G), enzyme(A, K) )
%   | | | then return 0.11447123285890878;  // std dev = 1.894, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.25842433315900537;  // std dev = 2.601, 34.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=17 */
%   | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | then return 0.45458296287221295;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, M), interaction(M, M) )
%   | | | then return 0.022893842878637678;  // std dev = 1.975, 26.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=6 */
%   | | | else return 0.11735109130047691;  // std dev = 4.318, 90.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=30 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.7173516389181095;  // std dev = 0.097, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.1983776037699304;  // std dev = 0.256, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( complex(F, H) )
%   | | | then return 0.33308544826542674;  // std dev = 0.109, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.10340144486292041;  // std dev = 0.510, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.46912597288658076;  // std dev = 0.289, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( enzyme(I, J), phenotype(A, K) )
%   | | | then return -0.09856047733461114;  // std dev = 0.898, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.008072137611009502;  // std dev = 1.917, 33.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=7 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.2622274038661499;  // std dev = 1.416, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.05790802290682046;  // std dev = 4.339, 109.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=33 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.22513641929051884;  // std dev = 0.183, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else if ( enzyme(A, F), interaction(G, C) )
%   | | then return 0.04377702085628336;  // std dev = 0.338, 56.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | else if ( interaction(A, H), phenotype(H, I) )
%   | | | then return 0.011721117816734414;  // std dev = 2.218, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return -0.04617297542001725;  // std dev = 3.869, 107.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=22 */
%   else if ( interaction(J, A), enzyme(A, K) )
%   | then return 0.42194286827398175;  // std dev = 0.703, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(L, A), interaction(M, L) )
%   | | then if ( interaction(A, A), complex(M, N) )
%   | | | then return 0.023216697467572472;  // std dev = 0.418, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.26553698347115007;  // std dev = 1.578, 12.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=7 */
%   | | else if ( interaction(A, P), phenotype(P, Q) )
%   | | | then return 0.09108408768854474;  // std dev = 2.184, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | | else return 0.005751207206752127;  // std dev = 1.619, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49241645787574184;  // std dev = 0.188, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.17606391614591196;  // std dev = 0.052, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | then return 0.3161387774062261;  // std dev = 0.209, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(E, H), interaction(I, A) )
%   | | | then return -0.025161659183058148;  // std dev = 1.698, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return -0.08677708874811194;  // std dev = 1.455, 32.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=5 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3517358184847345;  // std dev = 0.895, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 2.33273920140039E-4;  // std dev = 4.386, 122.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=32 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.6799209070834444;  // std dev = 0.092, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.17030634163896247;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return -0.1232597094538775;  // std dev = 0.743, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.218788525657096;  // std dev = 0.084, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(A, G), interaction(G, E) )
%   | | then return -0.0778083318400727;  // std dev = 0.078, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( enzyme(E, H) )
%   | | | then return 0.010338564291277856;  // std dev = 2.266, 42.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=11 */
%   | | | else return 0.06188773309858196;  // std dev = 4.018, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.312516999466863;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return -0.006584879037791643;  // std dev = 1.804, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(M, A), complex(M, N) )
%   | | | then return -0.1664317960505719;  // std dev = 0.929, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.05774196616904453;  // std dev = 2.295, 44.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=9 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( interaction(C, E), complex(E, F) )
%   | then return -0.05802477134006365;  // std dev = 0.282, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | else if ( phenotype(C, G), enzyme(A, H) )
%   | | then return 0.2257552836114453;  // std dev = 0.846, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( phenotype(C, D), interaction(C, C) )
%   | | | then return -0.0907597649169292;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.03555976023680998;  // std dev = 1.867, 24.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=8 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.23199164072093614;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(A, J), enzyme(A, K) )
%   | | then if ( enzyme(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5276025201461283;  // std dev = 0.261, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.2184744309213741;  // std dev = 0.263, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1092927470706683;  // std dev = 0.060, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.048462153952035805;  // std dev = 4.454, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(A, E), complex(E, F) )
%   | then return -0.019441555370863773;  // std dev = 0.280, 50.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=15 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.4627258484980391;  // std dev = 0.197, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, C), complex(H, I) )
%   | | | then return 0.09103046996854036;  // std dev = 2.801, 47.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=19 */
%   | | | else return 0.0027824768952493255;  // std dev = 2.873, 65.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=18 */
%   else if ( interaction(A, J), location(A, K) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.22376132061959053;  // std dev = 0.184, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(J, M), interaction(J, J) )
%   | | | then return 0.12592794745794178;  // std dev = 1.163, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.05424418352952567;  // std dev = 2.553, 55.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | else if ( location(A, N) )
%   | | then return -0.10355495728342615;  // std dev = 0.332, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else return -0.16703837774623656;  // std dev = 1.117, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.572', 'seconds']
Refined model CLL: -0.250932


******************************************
Best model found
******************************************
Results 

CLL : -0.258892 

AUC ROC : 0.925197 

AUC PR : 0.303509 

Precision : 0.265799 

Recall : 0.5053 

F1 : 0.348356 

Total Learning Time : 15.262 

Total Inference Time : 6.858352899551392 

Total revision time: 29.526239709854124
Best scored revision CLL: -0.250932


Results 

CLL : -0.258892 

AUC ROC : 0.925197 

AUC PR : 0.303509 

Precision : 0.265799 

Recall : 0.5053 

F1 : 0.348356 

Total Learning Time : 29.598164634704588 

Total Inference Time : 6.858352899551392 

Starting experiments for fasttext using softcosine 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.237
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1940562710068482;  // std dev = 7.601, 259.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19843886251670173;  // std dev = 4.644, 93.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=34 */
%   | | | else return 0.1483236551434297;  // std dev = 6.023, 168.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=53 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1482493047964717;  // std dev = 4.804, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.16683187223351448;  // std dev = 5.775, 145.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.12036134488398631;  // std dev = 3.036, 41.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=14 */
%   | | | else return 0.09217163338603675;  // std dev = 7.101, 236.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=73 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06338426631528081;  // std dev = 7.814, 292.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08094050206070252;  // std dev = 7.650, 266.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7390817053916574;  // std dev = 0.044, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2614158764230992;  // std dev = 0.061, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.02599660072562417;  // std dev = 3.757, 68.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=20 */
%   | | | else return 0.08202372245188404;  // std dev = 4.594, 94.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=32 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.021741746377337234;  // std dev = 3.911, 117.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else return 0.09481589688804731;  // std dev = 5.729, 141.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01706295631917039;  // std dev = 7.134, 288.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015739461152091495;  // std dev = 7.142, 281.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.015', 'seconds']
Parameter learned model CLL:-0.320432 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 172, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.644, 59, 34], 'false,false,false,false': [6.023, 115, 53]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.804, 68, 35], 'false,false,false,false': [5.775, 93, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.036, 27, 14], 'false,false,false,false': [7.101, 163, 73]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.814, 205, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.65, 179, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 35], 'true,false': [0.061, 67, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.757, 48, 20], 'false,false,false,false': [4.594, 62, 32]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.911, 82, 35], 'false,false,false,false': [5.729, 89, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.134, 201, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.142, 194, 87]}]
{'': [nan, 0.223073597590973], 'false': [nan, 0.22307359759097298], 'false,false': [nan, 0.223073597590973], 'false,false,false': [nan, 0.22307359759097298]}
{'': [nan, 0.22222222222222324], 'false': [nan, 0.22222222222222168], 'false,false': [nan, 0.22222222222222324], 'false,false,false': [0.23193432766793803, 0.21595096371882028]}
{'': [nan, 0.22762484073091704], 'false': [nan, 0.22762484073091704], 'false,false': [nan, 0.2276248407309177], 'false,false,false': [0.2240841504714667, 0.2299965359496871]}
{'': [nan, 0.2154078224101485], 'false': [nan, 0.2154078224101485], 'false,false': [nan, 0.21540782241014883], 'false,false,false': [0.2248661511005353, 0.21364701705779834]}
{'': [nan, 0.20909597191159468], 'false': [nan, 0.20909597191159468], 'false,false': [nan, 0.20909597191159404], 'false,false,false': [nan, 0.20909597191159404]}
{'': [nan, 0.2200018281449597], 'false': [nan, 0.2200018281449597], 'false,false': [nan, 0.22000182814495872], 'false,false,false': [nan, 0.22000182814495903]}
{'': [0.22567437872117066, 0.21819682972629148], 'true': [5.511178593857429e-05, 5.637223221861355e-05], 'false': [nan, 0.21819682972629148], 'false,false': [nan, 0.21819682972629148], 'false,false,false': [0.20761245674740472, 0.22453598913535525], 'true,true': [nan, 5.511178593857429e-05], 'true,true,false': [nan, 5.511178593857429e-05]}
{'': [nan, 0.18782238441279017], 'false': [nan, 0.18782238441279017], 'false,false': [nan, 0.18782238441278995], 'false,false,false': [0.13071619858974337, 0.23278681691173658]}
{'': [nan, 0.1766936231406353], 'false': [nan, 0.17669362314063555], 'false,false': [nan, 0.17669362314063555], 'false,false,false': [nan, 0.17669362314063555]}
{'': [nan, 0.1815486712535134], 'false': [nan, 0.1815486712535134], 'false,false': [nan, 0.18154867125351307], 'false,false,false': [nan, 0.18154867125351307]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 32.941
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), location(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.7867203636709409;  // std dev = 0.258, 14.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | | else if ( interaction(H, A), interaction(A, H) )
%   | | | then return -0.14185106490048768;  // std dev = 4.59e-08, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | | | else return 0.10472427756526577;  // std dev = 3.683, 73.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=18 */
%   | else if ( phenotype(A, I), enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.258148935099511;  // std dev = 4.648, 90.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=36 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.6574833317586268;  // std dev = 0.285, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( phenotype(E, F), enzyme(E, G) )
%   | | then if ( interaction(H, E) )
%   | | | then return -0.07942692059357125;  // std dev = 0.942, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return 0.08980337095537838;  // std dev = 1.079, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.18538280051022998;  // std dev = 2.295, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.07171912961701409;  // std dev = 3.523, 75.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=18 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(K, M), recursion_proteinclass(M, B) )
%   | | | then return 0.5336614886487066;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.19217010640636356;  // std dev = 2.521, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1254446385283914;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.19514075033558492;  // std dev = 4.387, 84.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5417828218025886;  // std dev = 0.311, 25.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=22 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1348176082180508;  // std dev = 0.093, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   | | else if ( interaction(A, E), complex(D, F) )
%   | | | then return 0.2155006726184343;  // std dev = 3.001, 39.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=16 */
%   | | | else return 0.10663476039018316;  // std dev = 5.130, 129.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=40 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( interaction(G, I) )
%   | | then return 0.3180372110549379;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return 0.04627686995091612;  // std dev = 0.791, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06803721105493787;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.3055929452090269;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.5593351919628795;  // std dev = 0.862, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then if ( complex(D, E) )
%   | | then return 0.5538602400244971;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( complex(A, F) )
%   | | | then return -0.31138212580088415;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.4306508592733269;  // std dev = 0.796, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | else if ( interaction(A, G), interaction(C, G) )
%   | | then return -0.04222712258349155;  // std dev = 0.296, 39.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=5 */
%   | | else if ( interaction(C, C), complex(A, H) )
%   | | | then return 0.445079876279106;  // std dev = 1.106, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.07456189674745958;  // std dev = 5.846, 172.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=51 */
%   else if ( phenotype(A, I) )
%   | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.5162815237303245;  // std dev = 0.867, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return -0.2332948449334009;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.4457262865788079;  // std dev = 0.784, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.32295859936554167;  // std dev = 0.035, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.1319158659137258;  // std dev = 0.093, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( location(A, D), location(C, D) )
%   | | | then return 0.0041848334604087135;  // std dev = 1.566, 38.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=10 */
%   | | | else return 0.2663563185735258;  // std dev = 0.481, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.38004657856102914;  // std dev = 0.812, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( location(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), phenotype(H, I) )
%   | | | then return 0.09064559440396129;  // std dev = 5.538, 152.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=49 */
%   | | | else return 0.2824707700680082;  // std dev = 1.925, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.006423895232840767;  // std dev = 1.171, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.08639433200651313;  // std dev = 1.713, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( location(C, E), complex(D, F) )
%   | then return 0.04700190035453695;  // std dev = 0.406, 221.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=71 */
%   | else if ( phenotype(D, G) )
%   | | then return 0.44613094666946473;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.0988828287285431;  // std dev = 0.442, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( interaction(H, J) )
%   | | then if ( complex(J, I) )
%   | | | then return -0.08197492704735469;  // std dev = 0.931, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.015621625773560882;  // std dev = 0.792, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return 0.34378189198542036;  // std dev = 0.773, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.09906008560919982;  // std dev = 1.452, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return -0.3014642464480917;  // std dev = 0.221, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return 0.018979728033081306;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.36671949262080245;  // std dev = 0.162, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.35395579388238446;  // std dev = 0.153, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, H), interaction(H, H) )
%   | | | then return 0.7261147931918843;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.6341810129269865;  // std dev = 0.561, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | else return -0.22910399411230825;  // std dev = 0.072, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.3040623239326548;  // std dev = 0.290, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09771828531062633;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.037581714025635565;  // std dev = 2.912, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
%   | | | else return 0.08928515063746076;  // std dev = 4.194, 81.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=31 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), phenotype(E, F) )
%   | then if ( complex(C, G), interaction(C, E) )
%   | | then if ( interaction(A, H) )
%   | | | then return -0.05063632741762569;  // std dev = 1.352, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.0049941090599795075;  // std dev = 1.947, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | else if ( complex(E, I), interaction(J, E) )
%   | | | then return 0.10875187257484427;  // std dev = 1.743, 24.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=11 */
%   | | | else return 1.862096832326336E-4;  // std dev = 1.553, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | else return -0.10195043725139083;  // std dev = 0.327, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | then return 0.31803070922422066;  // std dev = 0.160, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, L) )
%   | | then return 0.00317253244259152;  // std dev = 0.334, 78.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.25826113283022345;  // std dev = 1.211, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.060872905491683886;  // std dev = 3.557, 63.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=23 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2464828218771;  // std dev = 0.153, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | else if ( interaction(D, D) )
%   | | then return -0.10627615460080654;  // std dev = 0.268, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return -0.0011216363920156052;  // std dev = 0.340, 59.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=17 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5469808133491805;  // std dev = 0.193, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else return -0.21570976295134384;  // std dev = 0.084, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else if ( interaction(A, H), complex(H, I) )
%   | | then if ( interaction(H, J) )
%   | | | then return -0.04150841960885504;  // std dev = 0.750, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | else return -0.11754380569312661;  // std dev = 1.259, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.004307810708417581;  // std dev = 1.947, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.05931479928827285;  // std dev = 3.391, 52.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), enzyme(E, F) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.08017951171079361;  // std dev = 0.319, 66.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=26 */
%   | | else if ( complex(C, H), location(E, D) )
%   | | | then return 0.16297182308425667;  // std dev = 1.168, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return -0.015133978455190393;  // std dev = 3.387, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | else if ( enzyme(C, I), interaction(A, J) )
%   | | then return 0.3533832823186822;  // std dev = 0.681, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, C) )
%   | | | then return -0.032740452720054394;  // std dev = 2.789, 72.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=19 */
%   | | | else return -0.09423590827362914;  // std dev = 1.592, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   else if ( interaction(A, L), enzyme(L, M) )
%   | then return 0.04419609977426146;  // std dev = 0.511, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(A, N) )
%   | | then return 0.12591918040357272;  // std dev = 0.851, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.16792336628348115;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '26.212', 'seconds']
Refined model CLL: -0.273405


******************************************
Best model found
******************************************
Results 

CLL : -0.284109 

AUC ROC : 0.931082 

AUC PR : 0.26701 

Precision : 0.273109 

Recall : 0.460993 

F1 : 0.343008 

Total Learning Time : 32.941 

Total Inference Time : 12.550995349884033 

Total revision time: 53.13216641235352
Best scored revision CLL: -0.273405


Results 

CLL : -0.284109 

AUC ROC : 0.931082 

AUC PR : 0.26701 

Precision : 0.273109 

Recall : 0.460993 

F1 : 0.343008 

Total Learning Time : 53.20860626983643 

Total Inference Time : 12.550995349884033 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.382
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2048156017661797;  // std dev = 8.243, 300.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.17509426183900692;  // std dev = 4.654, 96.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=33 */
%   | | | else return 0.15853320193117287;  // std dev = 6.912, 217.000 (wgt'ed) examples reached here.  /* #neg=146 #pos=71 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13517096990505115;  // std dev = 5.249, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.16710897820019402;  // std dev = 6.349, 175.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.11661929722398653;  // std dev = 2.828, 36.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=12 */
%   | | | else return 0.09469060033777663;  // std dev = 7.950, 294.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=92 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1364646678499237;  // std dev = 8.083, 280.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08831898935634255;  // std dev = 8.230, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7252533719091283;  // std dev = 0.022, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.27498175746681747;  // std dev = 0.036, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.08620727030457176;  // std dev = 3.642, 57.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=21 */
%   | | | else return 0.05183750665208797;  // std dev = 5.302, 127.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.025509778446345673;  // std dev = 4.152, 129.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=41 */
%   | | | else return 0.03496174548421052;  // std dev = 6.509, 192.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.007992651423318151;  // std dev = 7.830, 338.000 (wgt'ed) examples reached here.  /* #neg=234 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035655521740631205;  // std dev = 7.646, 306.000 (wgt'ed) examples reached here.  /* #neg=202 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '8.886', 'seconds']
Parameter learned model CLL:-0.335083 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.243, 196, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.654, 63, 33], 'false,false,false,false': [6.912, 146, 71]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.249, 84, 41], 'false,false,false,false': [6.349, 112, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.828, 24, 12], 'false,false,false,false': [7.95, 202, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.083, 176, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.23, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 41], 'true,false': [0.036, 99, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.642, 36, 21], 'false,false,false,false': [5.302, 85, 42]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.152, 88, 41], 'false,false,false,false': [6.509, 129, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.83, 234, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.646, 202, 104]}]
{'': [nan, 0.2264888888888911], 'false': [nan, 0.22648888888888938], 'false,false': [nan, 0.2264888888888911], 'false,false,false': [nan, 0.22648888888888938]}
{'': [nan, 0.22186610050117866], 'false': [nan, 0.2218661005011786], 'false,false': [nan, 0.22186610050117866], 'false,false,false': [0.2255859374999997, 0.22013633757353068]}
{'': [nan, 0.22647722885466567], 'false': [nan, 0.22647722885466567], 'false,false': [nan, 0.22647722885466487], 'false,false,false': [0.22042301088291988, 0.2303766551072789]}
{'': [nan, 0.21582248761024753], 'false': [nan, 0.21582248761024753], 'false,false': [nan, 0.21582248761024495], 'false,false,false': [0.2222222222222222, 0.214986388337663]}
{'': [nan, 0.2333570689532712], 'false': [nan, 0.2333570689532712], 'false,false': [nan, 0.23335706895327282], 'false,false,false': [nan, 0.23335706895327282]}
{'': [nan, 0.22729617560702547], 'false': [nan, 0.22729617560702547], 'false,false': [nan, 0.22729617560702553], 'false,false,false': [nan, 0.22729617560702586]}
{'': [0.20720199011574256, 0.22510798109196017], 'false': [nan, 0.22510798109196017], 'false,false': [nan, 0.22510798109196017], 'false,false,false': [0.2326869806094184, 0.2213404426808845], 'true': [1.22636584091309e-05, 1.295874388297268e-05], 'true,true': [nan, 1.22636584091309e-05], 'true,true,false': [nan, 1.22636584091309e-05]}
{'': [nan, 0.1856936275384015], 'false': [nan, 0.1856936275384015], 'false,false': [nan, 0.18569362753840146], 'false,false,false': [0.1336428580580075, 0.22062933542062946]}
{'': [nan, 0.18138057748555758], 'false': [nan, 0.18138057748555728], 'false,false': [nan, 0.18138057748555728], 'false,false,false': [nan, 0.18138057748555728]}
{'': [nan, 0.19106596132376036], 'false': [nan, 0.19106596132376036], 'false,false': [nan, 0.1910659613237602], 'false,false,false': [nan, 0.1910659613237602]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 39.551
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, A) )
%   then if ( interaction(A, C), recursion_proteinclass(C, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.1418510649004878;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7152917922423689;  // std dev = 0.350, 28.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=24 */
%   | | else if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.032061978577773244;  // std dev = 3.148, 69.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=12 */
%   | | | else return 0.224002593636097;  // std dev = 5.342, 123.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=45 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( complex(A, L), enzyme(A, M) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.31968739663797385;  // std dev = 2.542, 26.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=12 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), phenotype(A, D) )
%   | then return 0.5667620061760994;  // std dev = 0.898, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.7891094847765556;  // std dev = 0.054, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( location(A, E), interaction(A, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( location(G, E) )
%   | | | then return 0.7235201206352362;  // std dev = 0.905, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.1344742358737833;  // std dev = 1.194, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1465748779916744;  // std dev = 0.086, 47.000 (wgt'ed) examples reached here.  /* #neg=47 */
%   | | | else return 0.037276843146252715;  // std dev = 3.156, 65.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=13 */
%   | else if ( interaction(A, H) )
%   | | then return 0.5076739686106059;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.17612571869129684;  // std dev = 5.048, 112.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=39 */
%   | | | else return 0.08080938511036818;  // std dev = 2.375, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.598778165887862;  // std dev = 0.240, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( complex(A, D) )
%   | then if ( interaction(A, E), complex(E, D) )
%   | | then if ( interaction(F, A), enzyme(F, G) )
%   | | | then return 0.14122033058245076;  // std dev = 1.319, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return -0.06678588004426736;  // std dev = 1.583, 36.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=4 */
%   | | else if ( complex(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.7043378488885487;  // std dev = 0.445, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.1764695640701401;  // std dev = 0.245, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( recursion_proteinclass(J, B), complex(I, K) )
%   | | | then return 0.5283014582611522;  // std dev = 0.871, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | | else return 0.09632610115518252;  // std dev = 5.447, 146.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=42 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.024409017188613585;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.35673124299449355;  // std dev = 1.488, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.43578324014346514;  // std dev = 0.232, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), phenotype(D, E) )
%   | | then if ( complex(D, F) )
%   | | | then return -0.11365309795358212;  // std dev = 0.613, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.1166343226971821;  // std dev = 0.715, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.06242899273236003;  // std dev = 1.863, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | | else return -0.01109707422135702;  // std dev = 1.508, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( complex(A, J), interaction(K, A) )
%   | | | then return 0.05132658689298561;  // std dev = 1.470, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | | else return 0.21761959654906907;  // std dev = 2.578, 28.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=12 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.0215309161413413;  // std dev = 1.402, 19.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | else return 0.09575620513407386;  // std dev = 5.483, 148.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=47 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.4593420138460264;  // std dev = 0.163, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.14020728620394554;  // std dev = 0.866, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(A, E) )
%   | | then return 0.47601600673408084;  // std dev = 0.078, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.13925947378018694;  // std dev = 0.361, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | | else return 0.0609158065337218;  // std dev = 6.083, 198.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=60 */
%   | else if ( complex(A, G) )
%   | | then if ( complex(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.5636265616027533;  // std dev = 0.143, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1417810222399402;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, I), interaction(I, I) )
%   | | | then return 0.030928851797562145;  // std dev = 0.800, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.44295059284410787;  // std dev = 1.210, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, E) )
%   | then if ( interaction(C, A) )
%   | | then return 0.242960190225239;  // std dev = 0.067, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.37377283507810155;  // std dev = 0.135, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5165045463867034;  // std dev = 0.339, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, F), location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( phenotype(H, F) )
%   | | | then return 0.5554788432775948;  // std dev = 2.029, 58.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=54 */
%   | | | else return -0.1913280984488535;  // std dev = 0.273, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else return -0.18500829058394802;  // std dev = 0.060, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10415518939417406;  // std dev = 0.005, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | | then return 0.4082869865500789;  // std dev = 0.282, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.004454544349624398;  // std dev = 4.146, 109.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.36028579817317724;  // std dev = 0.144, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.1492285384219018;  // std dev = 0.083, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return 0.08999749017226699;  // std dev = 0.543, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.30881784233864434;  // std dev = 0.330, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(F, A), phenotype(F, H) )
%   | | | then return -0.03284271374084927;  // std dev = 2.497, 63.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=12 */
%   | | | else return 0.0811166985851486;  // std dev = 4.265, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
%   | else if ( enzyme(A, I), interaction(J, A) )
%   | | then return -0.17554060139564878;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( location(A, K) )
%   | | | then return -0.05664112059193371;  // std dev = 1.296, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.024545804352471202;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.15511518605684224;  // std dev = 0.218, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | else if ( interaction(D, A) )
%   | | then return -0.10379857347378264;  // std dev = 0.224, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else return -3.0963354967036285E-4;  // std dev = 0.332, 60.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then return 0.5668548161763127;  // std dev = 0.145, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.2217618520142452;  // std dev = 0.051, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( interaction(J, H), interaction(J, A) )
%   | | | then return 0.007458073758192837;  // std dev = 1.132, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.0937348022655155;  // std dev = 2.189, 26.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=11 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10833686793987364;  // std dev = 3.393, 68.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=27 */
%   | | | else return 0.2864780675910899;  // std dev = 1.283, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), location(E, C) )
%   | | then return 0.09889797670736457;  // std dev = 0.349, 87.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=59 */
%   | | else if ( interaction(A, F), location(F, C) )
%   | | | then return -0.1330127280994067;  // std dev = 0.245, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.4230619080288473;  // std dev = 2.418, 48.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=38 */
%   | else return -0.18055763807215575;  // std dev = 0.077, 154.000 (wgt'ed) examples reached here.  /* #neg=154 */
%   else if ( phenotype(A, G) )
%   | then return 0.019817512005079713;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( interaction(A, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.09073547026053733;  // std dev = 0.764, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.03899004504599827;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.14684915466158696;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return -0.15912994711535988;  // std dev = 1.365, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, A), enzyme(C, E) )
%   | then return -0.05484215085398613;  // std dev = 0.242, 65.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=17 */
%   | else if ( recursion_proteinclass(D, B), interaction(A, C) )
%   | | then return 0.16545060107794873;  // std dev = 0.056, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.07753461594313496;  // std dev = 0.192, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | | else return 0.022879136728551006;  // std dev = 4.560, 178.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=60 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( enzyme(F, H) )
%   | | then return -0.07059607924867375;  // std dev = 0.696, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else return 0.06460115286057147;  // std dev = 0.287, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( complex(A, I) )
%   | | then return -0.08086361084677295;  // std dev = 0.181, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return -0.03360567108308062;  // std dev = 0.700, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.19195404468570226;  // std dev = 1.516, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '20.473', 'seconds']
Refined model CLL: -0.220612


******************************************
Best model found
******************************************
Results 

CLL : -0.226807 

AUC ROC : 0.966152 

AUC PR : 0.375212 

Precision : 0.185664 

Recall : 0.596226 

F1 : 0.283154 

Total Learning Time : 39.551 

Total Inference Time : 43.78630518913269 

Total revision time: 91.90053430366515
Best scored revision CLL: -0.220612


Results 

CLL : -0.226807 

AUC ROC : 0.966152 

AUC PR : 0.375212 

Precision : 0.185664 

Recall : 0.596226 

F1 : 0.283154 

Total Learning Time : 91.97697416114806 

Total Inference Time : 43.78630518913269 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.234
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18789803904216476;  // std dev = 7.853, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.19219357761158157;  // std dev = 4.937, 106.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=38 */
%   | | | else return 0.15705630498701936;  // std dev = 6.045, 167.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=54 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18079170649376933;  // std dev = 5.252, 118.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=44 */
%   | | | else return 0.12494982735893553;  // std dev = 5.731, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.08709853335332901;  // std dev = 4.064, 77.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=24 */
%   | | | else return 0.08933876960733698;  // std dev = 6.886, 225.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=68 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10310360718050443;  // std dev = 7.824, 275.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10283899665912075;  // std dev = 7.719, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7233157313099988;  // std dev = 0.022, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2771123792839198;  // std dev = 0.031, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.16849510413118496;  // std dev = 2.806, 32.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=14 */
%   | | | else return 0.06477129009003632;  // std dev = 4.784, 104.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=34 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06531595255905837;  // std dev = 4.126, 119.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=44 */
%   | | | else return 0.04613025622455854;  // std dev = 5.683, 145.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.027218316699361526;  // std dev = 7.096, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.009936155750799754;  // std dev = 7.158, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.624', 'seconds']
Parameter learned model CLL:-0.324994 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.853, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.937, 68, 38], 'false,false,false,false': [6.045, 113, 54]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.252, 74, 44], 'false,false,false,false': [5.731, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.064, 53, 24], 'false,false,false,false': [6.886, 157, 68]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.824, 183, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.719, 168, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 44], 'true,false': [0.031, 95, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.806, 18, 14], 'false,false,false,false': [4.784, 70, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.126, 75, 44], 'false,false,false,false': [5.683, 97, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.096, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.158, 200, 92]}]
{'': [nan, 0.22101463239167143], 'false': [nan, 0.2210146323916711], 'false,false': [nan, 0.22101463239167143], 'false,false,false': [nan, 0.2210146323916711]}
{'': [nan, 0.22342980584738567], 'false': [nan, 0.22342980584738917], 'false,false': [nan, 0.22342980584738567], 'false,false,false': [0.22997508009967876, 0.2187959410520294]}
{'': [nan, 0.2245813969194308], 'false': [nan, 0.2245813969194308], 'false,false': [nan, 0.22458139691942997], 'false,false,false': [0.23376684706542036, 0.21608776758616863]}
{'': [nan, 0.2117257603056509], 'false': [nan, 0.2117257603056509], 'false,false': [nan, 0.21172576030565127], 'false,false,false': [0.21453870804520175, 0.2107618274874975]}
{'': [nan, 0.22261682734234933], 'false': [nan, 0.22261682734234933], 'false,false': [nan, 0.2226168273423505], 'false,false,false': [nan, 0.2226168273423505]}
{'': [nan, 0.22914315061997187], 'false': [nan, 0.22914315061997187], 'false,false': [nan, 0.22914315061997262], 'false,false,false': [nan, 0.22914315061997198]}
{'': [0.2165406197227362, 0.22810945131995952], 'false': [nan, 0.22810945131995952], 'false,false': [nan, 0.22810945131995952], 'false,false,false': [0.2460937500000003, 0.22004437869822474], 'true': [1.073155336917996e-05, 1.029222359057476e-05], 'true,true': [nan, 1.073155336917996e-05], 'true,true,false': [nan, 1.073155336917996e-05]}
{'': [nan, 0.1869406590092606], 'false': [nan, 0.1869406590092606], 'false,false': [nan, 0.18694065900925974], 'false,false,false': [0.14308051028071167, 0.22277030956359914]}
{'': [nan, 0.1798543079540141], 'false': [nan, 0.17985430795401283], 'false,false': [nan, 0.17985430795401283], 'false,false,false': [nan, 0.17985430795401283]}
{'': [nan, 0.17546001579832293], 'false': [nan, 0.17546001579832293], 'false,false': [nan, 0.17546001579832224], 'false,false,false': [nan, 0.17546001579832224]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.906
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | else if ( enzyme(A, D), interaction(E, A) )
%   | | then if ( enzyme(E, D) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.1352573688344515;  // std dev = 4.078, 83.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=23 */
%   | | else if ( interaction(F, A), interaction(F, F) )
%   | | | then return 0.3581489350995123;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   | | | else return 0.15054659591822492;  // std dev = 5.948, 171.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=50 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7706207338659024;  // std dev = 0.059, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( complex(A, D), complex(C, D) )
%   | | then return -0.021022696340021546;  // std dev = 0.334, 46.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=6 */
%   | | else if ( interaction(E, A), phenotype(E, F) )
%   | | | then return 0.040941143588035085;  // std dev = 2.610, 46.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=9 */
%   | | | else return 0.16729814514426145;  // std dev = 3.844, 67.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=22 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( complex(I, J), phenotype(I, K) )
%   | | | then return 0.22305023869738222;  // std dev = 3.036, 39.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=15 */
%   | | | else return 0.06757947697746394;  // std dev = 3.028, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.5075402846911726;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.277216861926502;  // std dev = 1.984, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.5427032959410011;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( phenotype(C, D) )
%   | | then return 0.7065802632939993;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6519546075096666;  // std dev = 0.134, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.5813281065946171;  // std dev = 0.142, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( complex(A, F) )
%   | | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.8197730510319882;  // std dev = 0.096, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1749202603415828;  // std dev = 0.247, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.07702020603381805;  // std dev = 1.715, 16.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | else return 0.18229621705919896;  // std dev = 4.880, 103.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=38 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.4081851493220432;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.5238376860041896;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.11217543577216307;  // std dev = 0.052, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( phenotype(A, E) )
%   | | | then return 0.08123145301511313;  // std dev = 1.098, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.049061884183836876;  // std dev = 0.788, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | else if ( interaction(F, A), complex(F, G) )
%   | | then if ( interaction(H, F), complex(H, I) )
%   | | | then return 0.04441776936844751;  // std dev = 3.391, 73.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | else return 0.1542313322762155;  // std dev = 2.265, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( phenotype(A, J), interaction(A, K) )
%   | | | then return 0.04234271483989391;  // std dev = 2.524, 37.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=9 */
%   | | | else return 0.17183102047928547;  // std dev = 4.235, 89.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.4204152084919133;  // std dev = 0.179, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, D), location(F, G) )
%   | | then if ( enzyme(F, C), interaction(H, F) )
%   | | | then return -0.13827580129344902;  // std dev = 0.143, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.07162640682769368;  // std dev = 2.697, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6803894663656322;  // std dev = 0.168, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.21964094458178304;  // std dev = 0.217, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.28607727567851293;  // std dev = 0.295, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11291134436114622;  // std dev = 0.040, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.0031940136481900267;  // std dev = 2.391, 46.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=11 */
%   | | | else return 0.05281197011608513;  // std dev = 5.180, 145.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=42 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.26494588836841143;  // std dev = 0.106, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( enzyme(C, D), complex(C, E) )
%   | | then return 0.039959623170987016;  // std dev = 0.452, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | | then return 0.639092012257454;  // std dev = 0.191, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.17350938251852654;  // std dev = 0.398, 35.000 (wgt'ed) examples reached here.  /* #neg=35 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.30626394556960346;  // std dev = 0.063, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( complex(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), phenotype(I, K) )
%   | | | then return 0.14285664175946325;  // std dev = 1.544, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.007903365087743605;  // std dev = 2.821, 83.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=19 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.04732978701336866;  // std dev = 2.770, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else return 0.10697172024836905;  // std dev = 4.354, 90.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=33 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48113323057346624;  // std dev = 0.170, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.15590250981305484;  // std dev = 0.038, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( interaction(G, E), complex(G, H) )
%   | | then if ( complex(E, H) )
%   | | | then return 0.035839881298966154;  // std dev = 1.469, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | else return 0.20310874037760868;  // std dev = 1.797, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( enzyme(A, I), interaction(A, J) )
%   | | | then return 0.03723655196183208;  // std dev = 0.715, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.0494538515508723;  // std dev = 1.902, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | else if ( interaction(K, A), phenotype(A, L) )
%   | | then return 0.35770010282038006;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, M), interaction(N, A) )
%   | | | then return -0.08786881223467982;  // std dev = 1.015, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.10196973846716648;  // std dev = 3.757, 64.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=24 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then return 0.11616692952085941;  // std dev = 0.021, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.16714428577654916;  // std dev = 0.053, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.2326261637995266;  // std dev = 0.120, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B), interaction(A, I) )
%   | | then return 0.30854982797563074;  // std dev = 0.709, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.10684612785166259;  // std dev = 0.173, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.019743696026194416;  // std dev = 4.299, 142.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=43 */
%   | else if ( location(A, J) )
%   | | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.3430368107545151;  // std dev = 2.819, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | | else return -0.22994768393910253;  // std dev = 0.347, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | else return -0.04603007262746428;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C), phenotype(A, D) )
%   then if ( location(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(E, D) )
%   | | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | | then return 0.21187725102931276;  // std dev = 0.269, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5193990542151288;  // std dev = 0.811, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | else return -0.19162899537561986;  // std dev = 0.088, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else return -0.16689696874879875;  // std dev = 0.048, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(I, A), interaction(I, H) )
%   | | | then return 0.458208034832032;  // std dev = 1.858, 43.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | | else return -0.035879320535178984;  // std dev = 2.060, 36.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=10 */
%   | | else return -0.19662567944167011;  // std dev = 0.077, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( interaction(A, A) )
%   | | then return 0.00358629683814519;  // std dev = 0.217, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.21347153693255838;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then if ( phenotype(C, F) )
%   | | then return 0.11230620584667456;  // std dev = 0.037, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.07042398952481319;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.15935359438385538;  // std dev = 0.055, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, G), interaction(A, A) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then return -0.20294461337377329;  // std dev = 0.502, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.0736091839993156;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), phenotype(L, K) )
%   | | | then return 0.09906613077351355;  // std dev = 2.043, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | | else return -0.006049354579811172;  // std dev = 2.012, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return -1.4517299500693933E-4;  // std dev = 3.151, 92.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=26 */
%   | | | else return -0.04662623147760645;  // std dev = 2.545, 78.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '2', 'minutes', 'and', '58.915', 'seconds']
Refined model CLL: -0.207321


******************************************
Best model found
******************************************
Results 

CLL : -0.234239 

AUC ROC : 0.983575 

AUC PR : 0.262503 

Precision : 0.270315 

Recall : 0.588448 

F1 : 0.370455 

Total Learning Time : 22.906 

Total Inference Time : 22.78244185447693 

Total revision time: 53.489353790283204
Best scored revision CLL: -0.207321


Results 

CLL : -0.234239 

AUC ROC : 0.983575 

AUC PR : 0.262503 

Precision : 0.270315 

Recall : 0.588448 

F1 : 0.370455 

Total Learning Time : 53.565793647766114 

Total Inference Time : 22.78244185447693 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.102
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284605;  // std dev = 7.572, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.12186528504598207;  // std dev = 4.463, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.16088910705075585;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14473501901410288;  // std dev = 4.321, 84.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=28 */
%   | | | else return 0.14905351852999466;  // std dev = 6.198, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(A, G) )
%   | | | then return 0.0928050848545379;  // std dev = 2.510, 30.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | else return 0.14545887708255167;  // std dev = 7.031, 215.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=77 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10054071871562577;  // std dev = 7.554, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0892871872417526;  // std dev = 7.508, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7303995126901943;  // std dev = 0.044, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.26990642987659597;  // std dev = 0.056, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( enzyme(A, H) )
%   | | | then return 0.03796454388599399;  // std dev = 3.630, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   | | | else return 0.028467198874793292;  // std dev = 5.207, 128.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=39 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.027171036796628033;  // std dev = 3.446, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
%   | | | else return 0.017589773485020683;  // std dev = 6.382, 195.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04499542432042757;  // std dev = 7.089, 258.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.01626915403852541;  // std dev = 7.192, 276.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.030', 'seconds']
Parameter learned model CLL:-0.330528 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.572, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'enzyme(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.463, 69, 28], 'false,false,false,false': [6.245, 119, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.321, 56, 28], 'false,false,false,false': [6.198, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [2.51, 21, 9], 'false,false,false,false': [7.031, 138, 77]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.554, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'enzyme(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.508, 164, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'enzyme(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.044, 0, 28], 'true,false': [0.056, 46, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.63, 43, 19], 'false,false,false,false': [5.207, 89, 39]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.446, 61, 28], 'false,false,false,false': [6.382, 137, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.089, 172, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.192, 190, 86]}]
{'': [nan, 0.22222222222222304], 'false': [nan, 0.22222222222222285], 'false,false': [nan, 0.22222222222222304], 'false,false,false': [nan, 0.22222222222222285]}
{'': [nan, 0.21535510682508271], 'false': [nan, 0.21535510682508352], 'false,false': [nan, 0.21535510682508271], 'false,false,false': [0.20533531724944287, 0.22030706374285713]}
{'': [nan, 0.22300337346739574], 'false': [nan, 0.22300337346739574], 'false,false': [nan, 0.22300337346739554], 'false,false,false': [0.22232392192125994, 0.22332907929422335]}
{'': [nan, 0.2277830517345118], 'false': [nan, 0.2277830517345118], 'false,false': [nan, 0.2277830517345114], 'false,false,false': [0.21000000000000002, 0.2299249275656747]}
{'': [nan, 0.2237504259530787], 'false': [nan, 0.2237504259530787], 'false,false': [nan, 0.22375042595307895], 'false,false,false': [nan, 0.22375042595307895]}
{'': [nan, 0.22548048037609797], 'false': [nan, 0.22548048037609797], 'false,false': [nan, 0.2254804803760989], 'false,false,false': [nan, 0.2254804803760986]}
{'': [0.23542082432816153, 0.21209670709544287], 'true': [6.997553444414757e-05, 6.792482482094766e-05], 'false': [nan, 0.21209670709544287], 'false,false': [nan, 0.21209670709544287], 'false,false,false': [0.21253902185223758, 0.21185302734374964], 'true,true': [nan, 6.997553444414757e-05], 'true,true,false': [nan, 6.997553444414757e-05]}
{'': [nan, 0.18526670708803136], 'false': [nan, 0.18526670708803136], 'false,false': [nan, 0.18526670708803186], 'false,false,false': [0.13345995155890117, 0.20888307316289573]}
{'': [nan, 0.1947593820516956], 'false': [nan, 0.1947593820516955], 'false,false': [nan, 0.1947593820516955], 'false,false,false': [nan, 0.1947593820516955]}
{'': [nan, 0.18738678115191734], 'false': [nan, 0.18738678115191734], 'false,false': [nan, 0.18738678115191673], 'false,false,false': [nan, 0.18738678115191673]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 15.705
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else return 0.048022352821031365;  // std dev = 0.392, 79.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=15 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( interaction(A, G), enzyme(G, H) )
%   | | then if ( enzyme(A, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.14035752405656737;  // std dev = 5.746, 163.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( enzyme(A, E), enzyme(C, E) )
%   | then return 0.599199051588175;  // std dev = 0.863, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.7559519359185868;  // std dev = 0.106, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.09552603546580724;  // std dev = 0.427, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(H, F) )
%   | | | then return 0.3313996806102577;  // std dev = 1.423, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.17095102285922814;  // std dev = 2.914, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8329659502848683;  // std dev = 0.121, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | | else return -0.15776312626742572;  // std dev = 0.038, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else return 0.13281981898068435;  // std dev = 0.439, 112.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.44209502517774707;  // std dev = 0.715, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.662369036696058;  // std dev = 0.083, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( phenotype(F, G) )
%   | | | then return -0.09339352218968824;  // std dev = 0.906, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1795605706065443;  // std dev = 1.591, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | else return -0.15142444103702382;  // std dev = 0.031, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(H, A), phenotype(A, I) )
%   | | then if ( enzyme(H, J), enzyme(A, J) )
%   | | | then return -0.09416457473006278;  // std dev = 0.923, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.10585987509018803;  // std dev = 4.343, 102.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=30 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6365234556207393;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.13808354882910853;  // std dev = 4.413, 97.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.6013456276398924;  // std dev = 0.160, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | else if ( interaction(C, A) )
%   | | then return -0.16923511460086044;  // std dev = 0.201, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( enzyme(D, E) )
%   | | | then return 0.009316235006740108;  // std dev = 2.978, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | | else return 0.15845580769437176;  // std dev = 2.934, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   else if ( enzyme(A, F) )
%   | then return 0.08205547089489025;  // std dev = 0.366, 45.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=13 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.805251460148172;  // std dev = 0.012, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.19312834401980247;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.13867383631828284;  // std dev = 3.124, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | | | else return 0.24695021411698515;  // std dev = 1.701, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.34045859565287895;  // std dev = 0.058, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.6243537080108117;  // std dev = 0.133, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(A, F), enzyme(A, G) )
%   | | then return 0.14986314695160927;  // std dev = 0.937, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( complex(A, H) )
%   | | | then return -0.15425346627165096;  // std dev = 0.158, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return -0.03647793609996178;  // std dev = 1.320, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( phenotype(I, K) )
%   | | | then return 0.13386212841750836;  // std dev = 2.747, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
%   | | | else return 0.35744580319581293;  // std dev = 1.306, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.07738407969773978;  // std dev = 1.622, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.08849857171782231;  // std dev = 4.981, 141.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=44 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.3277613386436527;  // std dev = 0.261, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | else if ( location(A, F), location(C, F) )
%   | | then return -0.07529449060279081;  // std dev = 0.326, 76.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=13 */
%   | | else return 0.203333302002875;  // std dev = 0.495, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(G, A), complex(A, H) )
%   | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | then return 0.697240698456135;  // std dev = 0.118, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return -0.19843717946170192;  // std dev = 0.098, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.410689111632323;  // std dev = 0.222, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.09744797909672683;  // std dev = 1.603, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.18465080378866208;  // std dev = 1.333, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07812088944268442;  // std dev = 4.146, 97.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=32 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.21699176284412164;  // std dev = 0.068, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( phenotype(A, F), interaction(A, G) )
%   | | | then return 0.6921919066299946;  // std dev = 0.336, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return 0.5754910807836633;  // std dev = 0.542, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return -0.18680215917183607;  // std dev = 0.055, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then if ( interaction(A, I), interaction(I, H) )
%   | | then return 0.24761334621451975;  // std dev = 0.059, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.5052951374180547;  // std dev = 0.079, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.4362692617125978;  // std dev = 0.083, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.04810422091518337;  // std dev = 4.090, 96.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=29 */
%   | | | else return 0.003035653343457421;  // std dev = 3.137, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.47831008699827304;  // std dev = 0.125, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.16207971429601892;  // std dev = 0.052, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( phenotype(F, G), location(A, H) )
%   | | then return 0.27495938883267734;  // std dev = 0.096, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(I, A), complex(I, J) )
%   | | | then return 0.1629185519909492;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1262500283834609;  // std dev = 0.679, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.10390764646116792;  // std dev = 0.073, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.024755383202864217;  // std dev = 2.418, 34.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=10 */
%   | | else if ( phenotype(A, L), interaction(A, M) )
%   | | | then return 0.13643747756804062;  // std dev = 2.352, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
%   | | | else return 0.02179232164504862;  // std dev = 4.347, 132.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=39 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.12767332509398094;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else return 0.25258947391282494;  // std dev = 0.074, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G) )
%   | | then if ( complex(G, H), enzyme(G, I) )
%   | | | then return -0.11409440270711552;  // std dev = 1.137, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.03286921840309892;  // std dev = 1.912, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( interaction(J, E), recursion_proteinclass(J, B) )
%   | | | then return 0.6595274034046993;  // std dev = 0.116, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.23245247122500587;  // std dev = 0.060, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.09305701690422885;  // std dev = 0.039, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(A, K), enzyme(A, L) )
%   | | | then return 0.07331899617719835;  // std dev = 2.029, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.018114997336808283;  // std dev = 4.692, 153.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=47 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(C, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then if ( interaction(E, C) )
%   | | then return -0.044718650240430036;  // std dev = 0.303, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.22737082655669796;  // std dev = 0.377, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | else return 0.03133399598804464;  // std dev = 0.302, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( interaction(A, G), complex(G, H) )
%   | then if ( enzyme(G, I) )
%   | | then return -0.16363337003640158;  // std dev = 0.323, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else return 0.007349718376370684;  // std dev = 0.334, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | else if ( interaction(J, A) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.38785051718962366;  // std dev = 0.814, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.0016097200146431786;  // std dev = 3.941, 119.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=34 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.6460226628201063;  // std dev = 0.098, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.03707811242395064;  // std dev = 1.209, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '20.790', 'seconds']
Refined model CLL: -0.2588


******************************************
Best model found
******************************************
Results 

CLL : -0.240945 

AUC ROC : 0.946021 

AUC PR : 0.261601 

Precision : 0.332447 

Recall : 0.441696 

F1 : 0.379363 

Total Learning Time : 15.705 

Total Inference Time : 6.521570205688477 

Total revision time: 29.53445704650879
Best scored revision CLL: -0.2588


Results 

CLL : -0.240945 

AUC ROC : 0.946021 

AUC PR : 0.261601 

Precision : 0.332447 

Recall : 0.441696 

F1 : 0.379363 

Total Learning Time : 29.6108969039917 

Total Inference Time : 6.521570205688477 

Starting experiments for fasttext using wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.15
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2147063121486927;  // std dev = 7.482, 244.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1511208104723988;  // std dev = 5.465, 137.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=44 */
%   | | | else return 0.1685356044260743;  // std dev = 5.333, 127.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.20884869515918963;  // std dev = 4.573, 87.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=35 */
%   | | | else return 0.19699372065090598;  // std dev = 5.628, 133.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10086800161896173;  // std dev = 3.666, 61.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=20 */
%   | | | else return 0.0812751592920539;  // std dev = 6.807, 217.000 (wgt'ed) examples reached here.  /* #neg=150 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1124490828975795;  // std dev = 7.490, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06060554043273307;  // std dev = 7.666, 268.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7215844724475456;  // std dev = 0.001, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2784147363401919;  // std dev = 0.002, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.061006561768047335;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.028556404231526077;  // std dev = 4.413, 92.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04017397312060506;  // std dev = 3.766, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
%   | | | else return 0.05039372427229444;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03628913574974561;  // std dev = 6.976, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015222364064800825;  // std dev = 7.066, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.372', 'seconds']
Parameter learned model CLL:-0.333699 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.482, 157, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.465, 93, 44], 'false,false,false,false': [5.333, 84, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.573, 52, 35], 'false,false,false,false': [5.628, 81, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.666, 41, 20], 'false,false,false,false': [6.807, 150, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.49, 158, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.666, 181, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 35], 'true,false': [0.002, 79, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [4.413, 64, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.766, 68, 35], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.976, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.066, 183, 87]}]
{'': [nan, 0.2294242139209899], 'false': [nan, 0.2294242139209898], 'false,false': [nan, 0.2294242139209899], 'false,false,false': [nan, 0.2294242139209898]}
{'': [nan, 0.2209452479338848], 'false': [nan, 0.22094524793388437], 'false,false': [nan, 0.2209452479338848], 'false,false,false': [0.21801907400500828, 0.22394444788889578]}
{'': [nan, 0.23905511946069793], 'false': [nan, 0.23905511946069793], 'false,false': [nan, 0.23905511946069755], 'false,false,false': [0.24032319552775075, 0.2381700487453842]}
{'': [nan, 0.2150793396963144], 'false': [nan, 0.2150793396963144], 'false,false': [nan, 0.2150793396963155], 'false,false,false': [0.22037086804622438, 0.2135076268310837]}
{'': [nan, 0.22898272118247126], 'false': [nan, 0.22898272118247126], 'false,false': [nan, 0.228982721182471], 'false,false,false': [nan, 0.228982721182471]}
{'': [nan, 0.21929587118885602], 'false': [nan, 0.21929587118885602], 'false,false': [nan, 0.21929587118885582], 'false,false,false': [nan, 0.21929587118885682]}
{'': [0.21275748186654672, 0.21659019701418133], 'false': [nan, 0.21659019701418133], 'false,false': [nan, 0.21659019701418133], 'false,false,false': [0.22222222222222174, 0.2117202268431006], 'true': [4.688365282033504e-08, 4.693248293513094e-08], 'true,true': [nan, 4.688365282033504e-08], 'true,true,false': [nan, 4.688365282033504e-08]}
{'': [nan, 0.18864078216005434], 'false': [nan, 0.18864078216005434], 'false,false': [nan, 0.18864078216005495], 'false,false,false': [0.13771315983082644, 0.22222453589022684]}
{'': [nan, 0.1864709604591577], 'false': [nan, 0.18647096045915768], 'false,false': [nan, 0.18647096045915768], 'false,false,false': [nan, 0.18647096045915768]}
{'': [nan, 0.18491577160725065], 'false': [nan, 0.18491577160725065], 'false,false': [nan, 0.18491577160725065], 'false,false,false': [nan, 0.18491577160725065]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 40.433
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.4295775065280837;  // std dev = 0.495, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( enzyme(A, E) )
%   | | | then return 0.058148935099512224;  // std dev = 1.549, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.1914822684328457;  // std dev = 2.449, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | else if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, H) )
%   | | | then return 0.20430278125335852;  // std dev = 2.426, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(I, A), location(I, J) )
%   | | | then return 0.1826522463577909;  // std dev = 5.753, 151.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=49 */
%   | | | else return 0.07243464938522647;  // std dev = 1.535, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.716088054070939;  // std dev = 0.276, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | else if ( interaction(A, E), interaction(C, E) )
%   | | then if ( interaction(A, C) )
%   | | | then return -0.1496645729921297;  // std dev = 0.119, 40.000 (wgt'ed) examples reached here.  /* #neg=40 */
%   | | | else return 0.24751183002792007;  // std dev = 1.695, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | else if ( interaction(C, C) )
%   | | | then return 0.27820394440636126;  // std dev = 2.583, 27.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=12 */
%   | | | else return 0.12288560000582376;  // std dev = 5.244, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), interaction(H, I) )
%   | | | then return 0.3314161526884698;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.8251459891844632;  // std dev = 0.065, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.16412997907357876;  // std dev = 0.015, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.0844290277543297;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B), phenotype(D, E) )
%   | then return 0.6562054137897307;  // std dev = 0.117, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(D, F), complex(A, F) )
%   | | then return -0.06407694585622825;  // std dev = 0.295, 19.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=2 */
%   | | else return 0.07664975688700841;  // std dev = 0.410, 60.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=16 */
%   else if ( location(A, G), interaction(A, H) )
%   | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | then return 0.6732522460928341;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.14011946797677988;  // std dev = 0.038, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.25335720348519514;  // std dev = 2.011, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.5089616754785353;  // std dev = 0.839, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.0439908293482311;  // std dev = 2.383, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.14708019880770926;  // std dev = 4.775, 103.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=35 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.4066658785548837;  // std dev = 0.297, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | else if ( interaction(D, E), enzyme(E, F) )
%   | | then if ( interaction(D, A), interaction(A, E) )
%   | | | then return -0.03383448447002143;  // std dev = 1.107, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.11468872220860964;  // std dev = 2.303, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | else return -0.020890910927563056;  // std dev = 0.379, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.5165388814630157;  // std dev = 0.302, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.06793722124094026;  // std dev = 1.848, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return 0.10642951533975512;  // std dev = 2.036, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.13156480409598104;  // std dev = 4.980, 116.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=41 */
%   | | | else return 0.27297470932878687;  // std dev = 1.294, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.43016777231030073;  // std dev = 0.296, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5606706643343689;  // std dev = 0.065, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.03538734949390962;  // std dev = 0.353, 108.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=19 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7077475679936227;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else return -0.234582125377662;  // std dev = 0.217, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.6258212188442875;  // std dev = 0.983, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.22275699927678322;  // std dev = 0.072, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( interaction(J, A), location(J, K) )
%   | | | then return 0.18641411869888447;  // std dev = 3.511, 52.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=22 */
%   | | | else return 0.43244501023941284;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.4603167966054173;  // std dev = 0.175, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( location(D, F), interaction(G, A) )
%   | | then return 0.008777119185085856;  // std dev = 0.376, 36.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | else if ( interaction(D, H) )
%   | | | then return 0.4600749689315263;  // std dev = 0.746, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.3421165686930114;  // std dev = 1.030, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   else if ( interaction(A, I), complex(I, J) )
%   | then return 0.012398684519772801;  // std dev = 0.391, 34.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=11 */
%   | else if ( interaction(A, K), phenotype(K, L) )
%   | | then if ( interaction(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.754299187577452;  // std dev = 0.033, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2398985352454839;  // std dev = 0.039, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( enzyme(A, N) )
%   | | | then return 0.03417431148575634;  // std dev = 2.908, 58.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | else return 0.06934297935819275;  // std dev = 3.964, 90.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=31 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.36601929390892757;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.32967295668052937;  // std dev = 0.109, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.6105326140752533;  // std dev = 0.586, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.19924086718876435;  // std dev = 0.397, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2439470232953532;  // std dev = 0.278, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, H), interaction(A, I) )
%   | | then if ( interaction(I, J), complex(J, K) )
%   | | | then return 0.017426686616651376;  // std dev = 1.167, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return -0.10830206325908306;  // std dev = 1.574, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1000420389467158;  // std dev = 0.025, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return 0.04087527628373227;  // std dev = 4.759, 124.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4157488123734606;  // std dev = 0.145, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18384544647431217;  // std dev = 0.065, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.31606134941582265;  // std dev = 0.347, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.11991472191825724;  // std dev = 0.105, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | | else return -0.020770623177813426;  // std dev = 1.818, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( location(A, J), location(I, J) )
%   | | | then return 0.03772521169087743;  // std dev = 3.867, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.20698448684982307;  // std dev = 1.998, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.13537289327082347;  // std dev = 0.996, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.292554940907034;  // std dev = 0.640, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.21309486127244132;  // std dev = 0.201, 23.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=21 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then return -0.02765377822047747;  // std dev = 0.284, 112.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=22 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.05638872654740179;  // std dev = 3.184, 60.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=21 */
%   | | | else return -0.020676586834584006;  // std dev = 2.790, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then return -0.2463583882452259;  // std dev = 0.341, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.08117962843254654;  // std dev = 0.512, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.011444978229046637;  // std dev = 0.887, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(A, L) )
%   | | | then return -0.10832205934164951;  // std dev = 0.417, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.059605143544961305;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then if ( complex(C, F), complex(D, G) )
%   | | then return 0.07642795615972481;  // std dev = 0.247, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return 0.2726239506042976;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(A, C) )
%   | | then return -0.12048906446427697;  // std dev = 0.285, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | else if ( interaction(C, C), phenotype(A, H) )
%   | | | then return 0.15062861752566162;  // std dev = 1.525, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | | | else return 0.0063890892481269735;  // std dev = 4.967, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(J, K), interaction(A, K) )
%   | | | then return 0.3734134816355411;  // std dev = 0.280, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1903465683305588;  // std dev = 1.251, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else return -0.1951204302620121;  // std dev = 0.136, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else return 0.07692989756592668;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.901', 'seconds']
Refined model CLL: -0.246317


******************************************
Best model found
******************************************
Results 

CLL : -0.246931 

AUC ROC : 0.941022 

AUC PR : 0.304541 

Precision : 0.297521 

Recall : 0.510638 

F1 : 0.375979 

Total Learning Time : 40.433 

Total Inference Time : 14.244757890701294 

Total revision time: 62.20762520599365
Best scored revision CLL: -0.246317


Results 

CLL : -0.246931 

AUC ROC : 0.941022 

AUC PR : 0.304541 

Precision : 0.297521 

Recall : 0.510638 

F1 : 0.375979 

Total Learning Time : 62.25239425468445 

Total Inference Time : 14.244757890701294 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.458
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.2002541982574075;  // std dev = 8.272, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15297050874400556;  // std dev = 5.942, 162.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=52 */
%   | | | else return 0.16319304550582045;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14791333820841823;  // std dev = 5.206, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.1585264593176035;  // std dev = 6.399, 180.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.12285269191955561;  // std dev = 4.384, 86.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=29 */
%   | | | else return 0.10211645840569848;  // std dev = 7.146, 235.000 (wgt'ed) examples reached here.  /* #neg=160 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07527478236636195;  // std dev = 8.469, 335.000 (wgt'ed) examples reached here.  /* #neg=231 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0920040363799698;  // std dev = 8.279, 305.000 (wgt'ed) examples reached here.  /* #neg=201 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.733372710256266;  // std dev = 0.006, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26648157128666744;  // std dev = 0.009, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.14546351174190816;  // std dev = 3.682, 56.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=23 */
%   | | | else return 0.057955404186472693;  // std dev = 5.195, 123.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.0266649472852405;  // std dev = 4.184, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.03259360254433727;  // std dev = 6.557, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06159595138966164;  // std dev = 7.523, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04403800365107902;  // std dev = 7.547, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.103', 'seconds']
Parameter learned model CLL:-0.341355 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.272, 200, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.942, 110, 52], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.206, 80, 41], 'false,false,false,false': [6.399, 117, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.384, 57, 29], 'false,false,false,false': [7.146, 160, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.469, 231, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.279, 201, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.006, 0, 41], 'true,false': [0.009, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.682, 33, 23], 'false,false,false,false': [5.195, 83, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.184, 91, 41], 'false,false,false,false': [6.557, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.523, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.547, 195, 104]}]
{'': [nan, 0.22506925207756448], 'false': [nan, 0.22506925207756293], 'false,false': [nan, 0.22506925207756448], 'false,false,false': [nan, 0.22506925207756293]}
{'': [nan, 0.21973054510077794], 'false': [nan, 0.21973054510077683], 'false,false': [nan, 0.21973054510077794], 'false,false,false': [0.21795458009450036, 0.22151000040569852]}
{'': [nan, 0.22611139494699128], 'false': [nan, 0.22611139494699128], 'false,false': [nan, 0.22611139494699256], 'false,false,false': [0.224007523143012, 0.22748038446221194]}
{'': [nan, 0.2190252590842805], 'false': [nan, 0.2190252590842805], 'false,false': [nan, 0.21902525908428006], 'false,false,false': [0.22349918875067545, 0.21727279102347127]}
{'': [nan, 0.21408056088671126], 'false': [nan, 0.21408056088671126], 'false,false': [nan, 0.2140805608867137], 'false,false,false': [nan, 0.2140805608867137]}
{'': [nan, 0.22472482862613372], 'false': [nan, 0.22472482862613372], 'false,false': [nan, 0.22472482862613433], 'false,false,false': [nan, 0.22472482862613427]}
{'': [0.22666569183317695, 0.22815704954469443], 'false': [nan, 0.22815704954469443], 'false,false': [nan, 0.22815704954469443], 'false,false,false': [0.24202806122448944, 0.21944609689999411], 'true': [8.731599068277674e-07, 9.760114584355063e-07], 'true,true': [nan, 8.731599068277674e-07], 'true,true,false': [nan, 8.731599068277674e-07]}
{'': [nan, 0.18279642199827972], 'false': [nan, 0.18279642199827972], 'false,false': [nan, 0.1827964219982796], 'false,false,false': [0.13259904548456455, 0.21607915715343717]}
{'': [nan, 0.19187082364122193], 'false': [nan, 0.19187082364122218], 'false,false': [nan, 0.19187082364122218], 'false,false,false': [nan, 0.19187082364122218]}
{'': [nan, 0.1904729636251632], 'false': [nan, 0.1904729636251632], 'false,false': [nan, 0.19047296362516372], 'false,false,false': [nan, 0.19047296362516372]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 36.434
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), complex(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | | else return 0.0664822684328457;  // std dev = 2.814, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.15502393509951337;  // std dev = 6.331, 192.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=57 */
%   | | | else return 0.3581489350995123;  // std dev = 1.871, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), phenotype(A, D) )
%   | then return 0.5020705151169673;  // std dev = 0.753, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7283527732630031;  // std dev = 0.081, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, A) )
%   | then return -0.16980396819801138;  // std dev = 0.119, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(E, A), enzyme(E, F) )
%   | | then if ( interaction(G, E), interaction(E, G) )
%   | | | then return 0.12719995103102125;  // std dev = 3.705, 72.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=21 */
%   | | | else return 0.01827109120005587;  // std dev = 2.798, 54.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=10 */
%   | | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7319045176838226;  // std dev = 0.056, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.16736821364346202;  // std dev = 5.848, 154.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=51 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D), enzyme(A, E) )
%   | then return 0.08361002544818698;  // std dev = 0.406, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5806897452598921;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.14874582893276644;  // std dev = 0.105, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.2969797720691491;  // std dev = 2.643, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.4901484519095981;  // std dev = 0.332, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return 0.12407126230383445;  // std dev = 0.428, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.5732296116727985;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( complex(A, J), interaction(A, K) )
%   | | | then return -0.025406443118043923;  // std dev = 1.937, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return 0.1046795456454697;  // std dev = 5.881, 168.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=49 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.45520346829245856;  // std dev = 0.229, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.7349061851252187;  // std dev = 0.382, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.1458048094350418;  // std dev = 0.096, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.1740766253064826;  // std dev = 0.314, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | | else return 0.029422106955468316;  // std dev = 2.935, 53.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.08918938292505928;  // std dev = 4.317, 93.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=29 */
%   | | | else return 0.3014089872761134;  // std dev = 2.121, 18.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=9 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.3825122930389942;  // std dev = 2.018, 17.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | else return 0.12731097171746897;  // std dev = 2.207, 23.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=8 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(D, D), complex(D, E) )
%   | then return 0.02379140566747234;  // std dev = 0.375, 168.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=48 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.47118537330388255;  // std dev = 0.250, 11.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=10 */
%   | | else if ( enzyme(D, F), interaction(A, G) )
%   | | | then return -0.12376969409204557;  // std dev = 1.197, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.12274785497613484;  // std dev = 4.609, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5528048083397218;  // std dev = 0.889, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return -0.28656076033920413;  // std dev = 0.107, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then if ( location(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.4059972839033878;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.2606693827632789;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.027482203780686127;  // std dev = 0.383, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(C, F), enzyme(E, G) )
%   | | then return 0.5058278377906357;  // std dev = 0.137, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.06677301050856288;  // std dev = 1.090, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, C), interaction(C, H) )
%   | | then if ( interaction(A, C) )
%   | | | then return -0.1483877577131129;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.18697322001918143;  // std dev = 3.090, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | | else return -0.05116397451997568;  // std dev = 0.333, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   else if ( location(A, I) )
%   | then return 0.04080125679634201;  // std dev = 0.403, 216.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=69 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( complex(J, L) )
%   | | | then return 0.034131666528300575;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.12113305924277837;  // std dev = 0.940, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.4385668042573214;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.49556386557478643;  // std dev = 0.238, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.19668430455910005;  // std dev = 0.057, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(A, F) )
%   | | then return -0.028303858300417536;  // std dev = 0.234, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.4583546226095758;  // std dev = 0.316, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14706416753536797;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.19570319883671433;  // std dev = 2.239, 21.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=9 */
%   | | | else return 0.06442890481479527;  // std dev = 5.050, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   | | else if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.10711134763822365;  // std dev = 0.772, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.0821912389893584;  // std dev = 0.793, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.30390727307629883;  // std dev = 0.214, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( interaction(A, E), complex(A, G) )
%   | | | then return -0.14102647556638076;  // std dev = 0.820, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.04266169762189227;  // std dev = 5.719, 190.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=64 */
%   | else return 0.30964788424681894;  // std dev = 1.075, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.2435832810605337;  // std dev = 0.054, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, K), phenotype(K, L) )
%   | | | then return 0.1378830138038894;  // std dev = 0.931, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.01557562732292423;  // std dev = 0.587, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( complex(A, M), phenotype(A, N) )
%   | | | then return 0.04949772370235105;  // std dev = 0.716, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.05546709243051993;  // std dev = 2.517, 45.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.17183192375263107;  // std dev = 0.047, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.2584506701022418;  // std dev = 0.067, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(D, A) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, D) )
%   | | | then return 0.023073317504990015;  // std dev = 0.496, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.37844045698667045;  // std dev = 0.253, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(D, F), complex(A, F) )
%   | | | then return -0.06274439050365237;  // std dev = 1.224, 40.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=6 */
%   | | | else return 0.011708090587290436;  // std dev = 6.337, 242.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=70 */
%   | else if ( interaction(A, G), complex(G, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.4929889043767627;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2290903272874577;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.010739774716257686;  // std dev = 0.586, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(C, D), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then return 0.2705497985055622;  // std dev = 0.213, 34.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=31 */
%   | | else return -0.09183721479003688;  // std dev = 0.811, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return -0.0695990617599482;  // std dev = 0.267, 128.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=19 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( interaction(G, H) )
%   | | | then return 0.159219105908985;  // std dev = 1.792, 19.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=11 */
%   | | | else return 0.46946686023547124;  // std dev = 2.805, 47.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | else return -0.2650807251775564;  // std dev = 0.038, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5115464289863176;  // std dev = 0.210, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.3232798937273411;  // std dev = 0.224, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return 0.05543119794637804;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '52.836', 'seconds']
Refined model CLL: -0.248794


******************************************
Best model found
******************************************
Results 

CLL : -0.250284 

AUC ROC : 0.934209 

AUC PR : 0.280544 

Precision : 0.272277 

Recall : 0.415094 

F1 : 0.328849 

Total Learning Time : 36.434 

Total Inference Time : 29.16435980796814 

Total revision time: 74.80240086746215
Best scored revision CLL: -0.248794


Results 

CLL : -0.250284 

AUC ROC : 0.934209 

AUC PR : 0.280544 

Precision : 0.272277 

Recall : 0.415094 

F1 : 0.328849 

Total Learning Time : 74.84716991615295 

Total Inference Time : 29.16435980796814 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.25
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16289848110060023;  // std dev = 5.850, 155.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=51 */
%   | | | else return 0.2170437931295432;  // std dev = 5.029, 107.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14545596359612872;  // std dev = 5.392, 130.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=44 */
%   | | | else return 0.10408967694789112;  // std dev = 5.805, 161.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11999605111083511;  // std dev = 4.163, 78.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=26 */
%   | | | else return 0.1097452104280199;  // std dev = 6.680, 204.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1036536320111267;  // std dev = 7.810, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11998017765321534;  // std dev = 7.600, 247.000 (wgt'ed) examples reached here.  /* #neg=155 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7197529070005657;  // std dev = 0.029, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2795752096713547;  // std dev = 0.038, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.0669230683702817;  // std dev = 4.082, 75.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=25 */
%   | | | else return 0.0177466942311095;  // std dev = 4.027, 78.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -8.506278104029097E-4;  // std dev = 4.380, 152.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=44 */
%   | | | else return 0.06515579270988182;  // std dev = 5.606, 139.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.053274143134516797;  // std dev = 6.965, 263.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.015752487418018397;  // std dev = 7.124, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.082', 'seconds']
Parameter learned model CLL:-0.328327 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.85, 104, 51], 'false,false,false,false': [5.029, 66, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.392, 86, 44], 'false,false,false,false': [5.805, 113, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.163, 52, 26], 'false,false,false,false': [6.68, 138, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.81, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.6, 155, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.029, 0, 44], 'true,false': [0.038, 84, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.082, 50, 25], 'false,false,false,false': [4.027, 55, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.38, 108, 44], 'false,false,false,false': [5.606, 91, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.965, 171, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.124, 193, 92]}]
{'': [nan, 0.22061224489796044], 'false': [nan, 0.2206122448979601], 'false,false': [nan, 0.22061224489796044], 'false,false,false': [nan, 0.2206122448979601]}
{'': [nan, 0.22784220033797786], 'false': [nan, 0.2278422003379767], 'false,false': [nan, 0.22784220033797786], 'false,false,false': [0.22077003121748376, 0.23635251987073025]}
{'': [nan, 0.2161309724104823], 'false': [nan, 0.2161309724104823], 'false,false': [nan, 0.21613097241048362], 'false,false,false': [0.22364920775793473, 0.2092959075365333]}
{'': [nan, 0.2197368187329835], 'false': [nan, 0.2197368187329835], 'false,false': [nan, 0.21973681873298223], 'false,false,false': [0.22222222222222157, 0.2187574527913901]}
{'': [nan, 0.22345155817393927], 'false': [nan, 0.22345155817393927], 'false,false': [nan, 0.2234515581739401], 'false,false,false': [nan, 0.2234515581739401]}
{'': [nan, 0.2338334929423579], 'false': [nan, 0.2338334929423579], 'false,false': [nan, 0.2338334929423571], 'false,false,false': [nan, 0.23383349294235764]}
{'': [0.225300911341704, 0.2155364731992389], 'true': [1.901411393990703e-05, 1.7479261437686454e-05], 'false': [nan, 0.2155364731992389], 'false,false': [nan, 0.2155364731992389], 'false,false,false': [0.22222222222222204, 0.20792241946088133], 'true,true': [nan, 1.901411393990703e-05], 'true,true,false': [nan, 1.901411393990703e-05]}
{'': [nan, 0.17498911569231887], 'false': [nan, 0.17498911569231887], 'false,false': [nan, 0.1749891156923199], 'false,false,false': [0.12619360195628399, 0.2260724969511406]}
{'': [nan, 0.18443264866974782], 'false': [nan, 0.18443264866974743], 'false,false': [nan, 0.18443264866974743], 'false,false,false': [nan, 0.18443264866974743]}
{'': [nan, 0.1780797499357512], 'false': [nan, 0.1780797499357512], 'false,false': [nan, 0.17807974993575099], 'false,false,false': [nan, 0.17807974993575099]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.84
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | else return 0.14116780302404067;  // std dev = 3.279, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( enzyme(A, I), enzyme(G, I) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.2792015666784597;  // std dev = 2.152, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
%   | | else if ( interaction(A, J), location(A, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2.598, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.22353355048412643;  // std dev = 4.911, 104.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), enzyme(A, D) )
%   | then return 0.3861400788776211;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.7480065906641999;  // std dev = 0.172, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( phenotype(E, F) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.1395429975520872;  // std dev = 0.148, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( enzyme(A, H) )
%   | | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8175769589458828;  // std dev = 0.213, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | | | else return -0.1764518927575259;  // std dev = 0.220, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.10682092352125971;  // std dev = 5.454, 149.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( phenotype(D, E), complex(D, F) )
%   | then return 0.03998827174182558;  // std dev = 0.349, 74.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=18 */
%   | else return 0.17190312189328832;  // std dev = 0.387, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   else if ( interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B), phenotype(G, H) )
%   | | then return 0.6323128610644023;  // std dev = 0.117, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, I), interaction(J, A) )
%   | | | then return -0.04263873984811125;  // std dev = 0.656, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.1889214276649961;  // std dev = 3.447, 55.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=21 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7174209756513392;  // std dev = 0.412, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.17514555397763512;  // std dev = 0.182, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.015444242699107106;  // std dev = 1.592, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | else return 0.06567972626731984;  // std dev = 3.518, 74.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( enzyme(A, D), interaction(A, E) )
%   | then return 0.15023011043475917;  // std dev = 0.368, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | else if ( location(A, F), location(C, F) )
%   | | then return 0.09908164843945844;  // std dev = 0.388, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | else return 0.05441461038684429;  // std dev = 0.389, 75.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=20 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.6018043266711421;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return -0.19844642552781072;  // std dev = 0.050, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, K) )
%   | | | then return 0.15925714047915437;  // std dev = 1.319, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.625361149950569;  // std dev = 0.903, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, L), interaction(L, L) )
%   | | | then return 0.13489900735802884;  // std dev = 1.414, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return 0.20152353037374457;  // std dev = 1.309, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5210175219406555;  // std dev = 0.058, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.4384756941509641;  // std dev = 0.184, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return -0.039256167190680945;  // std dev = 1.675, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | | else return 0.1083295402145951;  // std dev = 4.808, 141.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=47 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.4695481544544595;  // std dev = 0.208, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(I, I) )
%   | | | then return 0.07071493955723247;  // std dev = 0.793, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.15481981914802065;  // std dev = 0.864, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.005310674752693658;  // std dev = 2.316, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.10035073865715592;  // std dev = 2.119, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.38743412075797723;  // std dev = 0.075, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( enzyme(D, F), enzyme(A, F) )
%   | | then if ( interaction(G, A) )
%   | | | then return -0.12155182658222027;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15011243719160003;  // std dev = 0.522, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( phenotype(D, E) )
%   | | | then return -0.041052590349597004;  // std dev = 1.731, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else return 0.09145364306521858;  // std dev = 2.289, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, H) )
%   | | | then return 0.38393801521150744;  // std dev = 1.014, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.07694470312322217;  // std dev = 2.040, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   | | else if ( interaction(J, A), interaction(J, J) )
%   | | | then return 0.1677678127475132;  // std dev = 1.338, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.07057276871894386;  // std dev = 4.556, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2907468072331519;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | | then return 0.31006804760342843;  // std dev = 0.155, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.55743427688704;  // std dev = 0.619, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.19481073373008387;  // std dev = 0.070, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.3124749860659993;  // std dev = 0.179, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.034357877452873144;  // std dev = 0.480, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.18620150030128507;  // std dev = 1.607, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.05953617510088552;  // std dev = 3.109, 51.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=16 */
%   | | | else return -0.017649290257359278;  // std dev = 3.655, 86.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=22 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.23585860753792465;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.3157426898317865;  // std dev = 0.180, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then return -0.11108707056415533;  // std dev = 0.048, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( phenotype(A, G) )
%   | | | then return 0.005358118332553313;  // std dev = 0.678, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.0893149284054023;  // std dev = 0.419, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | else if ( interaction(H, A), phenotype(H, I) )
%   | | then if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.23337738509883238;  // std dev = 1.587, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | else return 0.04164446636646134;  // std dev = 3.138, 74.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=25 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.08721727332965919;  // std dev = 1.313, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | else return 0.04060262053779392;  // std dev = 4.185, 113.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=38 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.1841609969609431;  // std dev = 0.101, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.24760896135081442;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, E) )
%   | then if ( complex(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, F), interaction(G, A) )
%   | | | then return -0.09329142163967123;  // std dev = 0.713, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.40393538268637386;  // std dev = 0.644, 32.000 (wgt'ed) examples reached here.  /* #pos=32 */
%   | | else return -0.16669992331728004;  // std dev = 0.052, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), enzyme(J, K) )
%   | | | then return -0.08902015548966948;  // std dev = 1.035, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.02436479599917858;  // std dev = 2.412, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.011002557966991556;  // std dev = 2.764, 44.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=12 */
%   | | | else return 0.1105731444630433;  // std dev = 3.076, 51.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=20 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.1857483429129583;  // std dev = 0.062, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D) )
%   | then if ( enzyme(A, E), location(A, F) )
%   | | then if ( interaction(G, A), enzyme(G, E) )
%   | | | then return -0.12218634921693346;  // std dev = 0.428, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.04767293467243826;  // std dev = 1.514, 34.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | else if ( interaction(D, H) )
%   | | | then return -0.05386305081456593;  // std dev = 3.568, 93.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=21 */
%   | | | else return -0.16395206454801783;  // std dev = 0.749, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.2810930984669129;  // std dev = 0.353, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | | | else return -0.14372617254934;  // std dev = 0.122, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.1738312613991086;  // std dev = 1.999, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.07539643561092742;  // std dev = 2.708, 38.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=14 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '28.781', 'seconds']
Refined model CLL: -0.23987


******************************************
Best model found
******************************************
Results 

CLL : -0.239291 

AUC ROC : 0.92235 

AUC PR : 0.203336 

Precision : 0.265116 

Recall : 0.411552 

F1 : 0.322489 

Total Learning Time : 14.84 

Total Inference Time : 6.467063903808594 

Total revision time: 29.098140087127685
Best scored revision CLL: -0.23987


Results 

CLL : -0.239291 

AUC ROC : 0.92235 

AUC PR : 0.203336 

Precision : 0.265116 

Recall : 0.411552 

F1 : 0.322489 

Total Learning Time : 29.14290913581848 

Total Inference Time : 6.467063903808594 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.085
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18514513281814388;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18782582688281713;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.15184133962997207;  // std dev = 4.816, 107.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1764671117561682;  // std dev = 4.206, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
%   | | | else return 0.1828535999414911;  // std dev = 6.026, 155.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11073045187127804;  // std dev = 3.559, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | | else return 0.11116117298441824;  // std dev = 6.693, 202.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0966297731706998;  // std dev = 7.550, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08831169045886691;  // std dev = 7.493, 248.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7243726170861501;  // std dev = 0.017, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2761722791147188;  // std dev = 0.020, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.026282993734786056;  // std dev = 4.787, 108.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=33 */
%   | | | else return 0.040412529326539624;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04723093440605132;  // std dev = 3.374, 80.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | else return 0.0470909390405802;  // std dev = 6.234, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03066840535545528;  // std dev = 7.117, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.046700268214383424;  // std dev = 6.964, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.837', 'seconds']
Parameter learned model CLL:-0.346823 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [4.816, 73, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.206, 48, 28], 'false,false,false,false': [6.026, 97, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.559, 38, 19], 'false,false,false,false': [6.693, 135, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.55, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.493, 162, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.017, 0, 28], 'true,false': [0.02, 45, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.787, 75, 33], 'false,false,false,false': [4.146, 55, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.374, 52, 28], 'false,false,false,false': [6.234, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.117, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.964, 161, 86]}]
{'': [nan, 0.22006968439618982], 'false': [nan, 0.22006968439618968], 'false,false': [nan, 0.22006968439618982], 'false,false,false': [nan, 0.22006968439618968]}
{'': [nan, 0.22394444788889542], 'false': [nan, 0.22394444788889567], 'false,false': [nan, 0.22394444788889542], 'false,false,false': [0.22860845018279405, 0.21678749235741107]}
{'': [nan, 0.23382958662431663], 'false': [nan, 0.23382958662431663], 'false,false': [nan, 0.2338295866243161], 'false,false,false': [0.2328241282268495, 0.23430916640481392]}
{'': [nan, 0.22184986648104793], 'false': [nan, 0.22184986648104793], 'false,false': [nan, 0.22184986648104835], 'false,false,false': [0.22222222222222218, 0.22174475497273227]}
{'': [nan, 0.22353418038738576], 'false': [nan, 0.22353418038738576], 'false,false': [nan, 0.22353418038738554], 'false,false,false': [nan, 0.22353418038738554]}
{'': [nan, 0.22636549082880095], 'false': [nan, 0.22636549082880095], 'false,false': [nan, 0.22636549082880042], 'false,false,false': [nan, 0.22636549082880056]}
{'': [0.2367097472119115, 0.21336883928130085], 'true': [1.0927107842181475e-05, 9.252769772781654e-06], 'false': [nan, 0.21336883928130085], 'false,false': [nan, 0.21336883928130085], 'false,false,false': [0.2121913580246921, 0.2148437500000003], 'true,true': [nan, 1.0927107842181475e-05], 'true,true,false': [nan, 1.0927107842181475e-05]}
{'': [nan, 0.19625983534194508], 'false': [nan, 0.19625983534194508], 'false,false': [nan, 0.1962598353419448], 'false,false,false': [0.1422745459528438, 0.22079859712148717]}
{'': [nan, 0.1933113706566591], 'false': [nan, 0.19331137065665863], 'false,false': [nan, 0.19331137065665863], 'false,false,false': [nan, 0.19331137065665863]}
{'': [nan, 0.19636106613846185], 'false': [nan, 0.19636106613846185], 'false,false': [nan, 0.19636106613846172], 'false,false,false': [nan, 0.19636106613846172]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.489
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.7217852987358758;  // std dev = 0.343, 22.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=19 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16849376268571808;  // std dev = 4.315, 87.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=27 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, G) )
%   | | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.14185106490048766;  // std dev = 6.83e-08, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( interaction(A, I), interaction(I, J) )
%   | | | then return 0.024815601766178873;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else return 0.22957750652808379;  // std dev = 2.859, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7394853406582566;  // std dev = 0.046, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.7461559834740239;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( enzyme(A, F), interaction(A, G) )
%   | | then if ( phenotype(A, H), interaction(I, A) )
%   | | | then return 0.16970920705412887;  // std dev = 2.160, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.4660572096720314;  // std dev = 1.366, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.08273989941768989;  // std dev = 2.928, 50.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=13 */
%   | | | else return 0.14188772807888458;  // std dev = 4.981, 128.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=40 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5796990423940781;  // std dev = 0.031, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.0030438426282406346;  // std dev = 0.365, 62.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=11 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( location(E, G), location(A, G) )
%   | | then return 0.0797191310522494;  // std dev = 0.389, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7485928284904771;  // std dev = 0.202, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16466773263607706;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( phenotype(A, I), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5826656167009243;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.16090752039732029;  // std dev = 2.616, 34.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1633941917711455;  // std dev = 3.522, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.10250404988439545;  // std dev = 2.932, 49.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=15 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(E, A), interaction(F, E) )
%   | then return 0.022948186129719165;  // std dev = 0.332, 51.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=12 */
%   | else if ( interaction(C, G), complex(G, H) )
%   | | then return 0.17655999421590873;  // std dev = 0.423, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else if ( complex(C, D) )
%   | | | then return 0.011769474758609871;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return 0.06556359206215275;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | then return 0.6284775041090543;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.5307898601323531;  // std dev = 0.367, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.04838787502031685;  // std dev = 4.173, 111.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=28 */
%   | | else if ( interaction(L, A), interaction(A, M) )
%   | | | then return 0.32211152117631664;  // std dev = 1.242, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1305802985032881;  // std dev = 3.263, 56.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=20 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.4012467315641652;  // std dev = 0.127, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.47629089898430166;  // std dev = 0.076, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.1222868317084407;  // std dev = 0.032, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5196167124309009;  // std dev = 0.260, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.005518229231627985;  // std dev = 3.187, 60.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=14 */
%   | | else if ( interaction(H, A), phenotype(H, I) )
%   | | | then return 0.0680735678423721;  // std dev = 4.687, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   | | | else return 0.18108250257187597;  // std dev = 2.602, 31.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.3803972383683099;  // std dev = 0.134, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.35272482675726735;  // std dev = 0.106, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.010460597832451063;  // std dev = 0.387, 139.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=30 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.6834035915365584;  // std dev = 0.092, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | else return -0.2081506775444622;  // std dev = 0.140, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.627393600580389;  // std dev = 0.243, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | | else return -0.17771966707204218;  // std dev = 0.042, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.2982642647158039;  // std dev = 1.454, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.07134703724546505;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.2499066183158139;  // std dev = 0.032, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.7463237815370363;  // std dev = 0.414, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.5339005268456284;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.1714096342467875;  // std dev = 0.051, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.2826659887122963;  // std dev = 0.075, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.29205197901147645;  // std dev = 0.292, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.0535385844442838;  // std dev = 3.063, 73.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.13303563380338765;  // std dev = 1.940, 25.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | else return 0.02813187796252979;  // std dev = 2.977, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.19381865360188616;  // std dev = 0.026, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4020607665820647;  // std dev = 0.327, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( enzyme(A, F), interaction(G, A) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.017000153795576577;  // std dev = 0.881, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.11646136221558918;  // std dev = 1.002, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(I, A), enzyme(E, J) )
%   | | | then return -0.14411836988744375;  // std dev = 0.497, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | else return -0.05325145434146312;  // std dev = 2.159, 50.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | else if ( interaction(A, K), interaction(K, A) )
%   | | then return -0.030088906105870436;  // std dev = 0.123, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
%   | | else if ( enzyme(A, L) )
%   | | | then return 0.09545995004809019;  // std dev = 2.676, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.042086667762494125;  // std dev = 3.760, 108.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( interaction(E, C), interaction(A, E) )
%   | then return -0.030958320801299156;  // std dev = 0.225, 46.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | else if ( interaction(F, C), location(F, D) )
%   | | then if ( interaction(A, G), location(G, D) )
%   | | | then return 0.13919225745157449;  // std dev = 2.117, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.05411139654966145;  // std dev = 2.816, 61.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=23 */
%   | | else return -0.00765924133348325;  // std dev = 0.317, 65.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=19 */
%   else if ( complex(A, H), phenotype(A, I) )
%   | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | then return 0.620741899494653;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.19236740574241518;  // std dev = 0.021, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.25862765868896775;  // std dev = 0.078, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 5.523353937167218E-4;  // std dev = 1.865, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.16071898705622867;  // std dev = 1.431, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), interaction(E, F) )
%   | | then return 0.0929545565490771;  // std dev = 0.607, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(E, G) )
%   | | | then return 0.6478612608343209;  // std dev = 0.324, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.443028146472805;  // std dev = 0.346, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.23909568583018143;  // std dev = 0.103, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1994303825050996;  // std dev = 0.055, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return -0.08127143259923363;  // std dev = 0.839, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.013420655043274143;  // std dev = 1.510, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else if ( location(A, M) )
%   | | | then return 0.010905398327394398;  // std dev = 3.703, 111.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=33 */
%   | | | else return 0.1824885822428053;  // std dev = 0.955, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.701', 'seconds']
Refined model CLL: -0.228031


******************************************
Best model found
******************************************
Results 

CLL : -0.241882 

AUC ROC : 0.954372 

AUC PR : 0.286304 

Precision : 0.195046 

Recall : 0.667845 

F1 : 0.301917 

Total Learning Time : 16.489 

Total Inference Time : 7.143842935562134 

Total revision time: 31.1386288394928
Best scored revision CLL: -0.228031


Results 

CLL : -0.241882 

AUC ROC : 0.954372 

AUC PR : 0.286304 

Precision : 0.195046 

Recall : 0.667845 

F1 : 0.301917 

Total Learning Time : 31.183397888183595 

Total Inference Time : 7.143842935562134 

Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.3
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17222835748218365;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.20253081409080617;  // std dev = 5.279, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.15675966981219921;  // std dev = 5.404, 134.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.10575719578961032;  // std dev = 4.962, 118.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=35 */
%   | | | else return 0.16136983866215282;  // std dev = 5.807, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1065561010812095;  // std dev = 3.695, 63.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=20 */
%   | | | else return 0.10332126536622785;  // std dev = 6.765, 212.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09548730289994119;  // std dev = 7.655, 267.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09681067047526459;  // std dev = 7.552, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7391376633954719;  // std dev = 0.028, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2611784130802976;  // std dev = 0.042, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06762804043454457;  // std dev = 3.971, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.02854354004793883;  // std dev = 4.444, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04406614790953934;  // std dev = 3.830, 107.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=35 */
%   | | | else return 0.028999310554832555;  // std dev = 5.992, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.048807638518662405;  // std dev = 6.994, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04162253673145077;  // std dev = 6.949, 257.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.222', 'seconds']
Parameter learned model CLL:-0.331276 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.279, 76, 44], 'false,false,false,false': [5.404, 91, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.962, 83, 35], 'false,false,false,false': [5.807, 96, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.695, 43, 20], 'false,false,false,false': [6.765, 145, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.655, 180, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.552, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.028, 0, 35], 'true,false': [0.042, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.971, 46, 24], 'false,false,false,false': [4.444, 67, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.83, 72, 35], 'false,false,false,false': [5.992, 117, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.994, 169, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.949, 170, 87]}]
{'': [nan, 0.2154335388184397], 'false': [nan, 0.21543353881843982], 'false,false': [nan, 0.2154335388184397], 'false,false,false': [nan, 0.21543353881843982]}
{'': [nan, 0.22519995039990276], 'false': [nan, 0.22519995039990193], 'false,false': [nan, 0.22519995039990276], 'false,false,false': [0.23222222222222336, 0.21792158609935514]}
{'': [nan, 0.22011501359431887], 'false': [nan, 0.22011501359431887], 'false,false': [nan, 0.2201150135943191], 'false,false,false': [0.2086649816360625, 0.22787211420538017]}
{'': [nan, 0.21603662619017056], 'false': [nan, 0.21603662619017056], 'false,false': [nan, 0.21603662619017056], 'false,false,false': [0.21667926429831216, 0.2158432563004182]}
{'': [nan, 0.21949749677412045], 'false': [nan, 0.21949749677412045], 'false,false': [nan, 0.21949749677412103], 'false,false,false': [nan, 0.21949749677412103]}
{'': [nan, 0.22634725585567886], 'false': [nan, 0.22634725585567886], 'false,false': [nan, 0.2263472558556786], 'false,false,false': [nan, 0.22634725585567886]}
{'': [0.2108413111705578, 0.2156385686535541], 'false': [nan, 0.2156385686535541], 'false,false': [nan, 0.2156385686535541], 'false,false,false': [0.22530612244898, 0.20786703601108036], 'true': [2.178855507293877e-05, 2.1262742765329983e-05], 'true,true': [nan, 2.178855507293877e-05], 'true,true,false': [nan, 2.178855507293877e-05]}
{'': [nan, 0.18329111649545585], 'false': [nan, 0.18329111649545585], 'false,false': [nan, 0.18329111649545526], 'false,false,false': [0.13707383800485595, 0.2124649363652535]}
{'': [nan, 0.19108712218647567], 'false': [nan, 0.19108712218647597], 'false,false': [nan, 0.19108712218647597], 'false,false,false': [nan, 0.19108712218647597]}
{'': [nan, 0.18788327639992086], 'false': [nan, 0.18788327639992086], 'false,false': [nan, 0.18788327639992053], 'false,false,false': [nan, 0.18788327639992053]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 22.207
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.8081489350995122;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(A, D) )
%   | | then return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else return 0.26631220040563447;  // std dev = 0.491, 49.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=20 */
%   else if ( enzyme(A, F), phenotype(A, G) )
%   | then if ( enzyme(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.1418510649004877;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | else if ( complex(A, I), phenotype(A, J) )
%   | | then if ( complex(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), enzyme(L, M) )
%   | | | then return 0.13087620782678508;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
%   | | | else return 0.19148226843284472;  // std dev = 4.243, 81.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=27 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7464888667167514;  // std dev = 0.176, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.13792706702935173;  // std dev = 0.111, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, A), complex(F, G) )
%   | | then return 0.47945338724402536;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.7841716258737781;  // std dev = 0.126, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12544463852839138;  // std dev = 7.45e-09, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(H, A), interaction(I, H) )
%   | | | then return 0.13788962482901485;  // std dev = 5.983, 182.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=56 */
%   | | | else return 0.06927020580032155;  // std dev = 1.952, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(A, C) )
%   | | then return 0.609284946392147;  // std dev = 0.056, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.7276824454414155;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.5509719872410637;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11224757229289595;  // std dev = 0.001, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2799152058364711;  // std dev = 1.685, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | | else return 0.13027365398492002;  // std dev = 2.414, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | | else if ( complex(A, G), interaction(A, H) )
%   | | | then return 0.036668845066361005;  // std dev = 2.654, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | | | else return 0.12157942781515511;  // std dev = 5.316, 147.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=46 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.4250107277465157;  // std dev = 0.240, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | else if ( interaction(A, F), interaction(C, F) )
%   | | then return -0.025031024358626537;  // std dev = 0.316, 43.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=7 */
%   | | else if ( interaction(G, C), interaction(C, G) )
%   | | | then return 0.09877878777129882;  // std dev = 3.583, 72.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=23 */
%   | | | else return 0.02670733504975119;  // std dev = 2.606, 47.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=11 */
%   else if ( enzyme(A, H) )
%   | then if ( enzyme(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.5850876221656853;  // std dev = 0.238, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | else return -0.15557061680519857;  // std dev = 0.045, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | else if ( phenotype(A, J), interaction(A, K) )
%   | | then return 0.38712570527187423;  // std dev = 1.093, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.18400167371983794;  // std dev = 2.922, 38.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=15 */
%   | | | else return 0.13530184623932537;  // std dev = 1.633, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), enzyme(D, E) )
%   | then if ( location(A, F), interaction(C, C) )
%   | | then return 0.33511705717466356;  // std dev = 0.077, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.33588151031235114;  // std dev = 0.801, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.4603839149877554;  // std dev = 0.246, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( phenotype(A, G) )
%   | then if ( phenotype(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.45925892863482615;  // std dev = 0.311, 43.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=35 */
%   | | else return -0.18836904834106855;  // std dev = 0.055, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(A, J), location(I, K) )
%   | | | then return 0.030978054156593448;  // std dev = 1.297, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return -0.05500431211211453;  // std dev = 1.828, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else if ( interaction(L, A), complex(L, M) )
%   | | | then return 0.2684346291174716;  // std dev = 2.618, 29.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=14 */
%   | | | else return 0.10503219700382842;  // std dev = 3.430, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.31440863884977294;  // std dev = 0.085, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( complex(A, F) )
%   | | then if ( interaction(G, D), interaction(A, H) )
%   | | | then return -0.07673196684683503;  // std dev = 1.091, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return -0.006046342150443068;  // std dev = 1.736, 23.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=5 */
%   | | else if ( interaction(I, D), complex(I, J) )
%   | | | then return 0.015942738266011725;  // std dev = 2.063, 33.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else return 0.20400223771046963;  // std dev = 0.907, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, K), interaction(K, L) )
%   | | then if ( recursion_proteinclass(L, B) )
%   | | | then return 0.5579693658792132;  // std dev = 0.175, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.004181624869312995;  // std dev = 1.536, 27.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | else if ( interaction(M, A), interaction(M, M) )
%   | | | then return 0.15823519296993155;  // std dev = 1.518, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.049212356463073856;  // std dev = 4.474, 127.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=38 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5001811963547901;  // std dev = 0.179, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.18189192791848185;  // std dev = 0.082, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( interaction(E, A), phenotype(E, F) )
%   | then if ( phenotype(A, G), location(E, H) )
%   | | then return 0.03265210753870944;  // std dev = 0.282, 33.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=12 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5636004221635954;  // std dev = 1.291, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | | else return -0.22908920480826692;  // std dev = 0.207, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4832030601546692;  // std dev = 0.480, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.2182965256495762;  // std dev = 0.358, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( phenotype(A, M), interaction(A, N) )
%   | | | then return -0.01885397106552089;  // std dev = 1.025, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.05737095253543935;  // std dev = 3.190, 54.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=18 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.20859419016407055;  // std dev = 0.074, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return -0.00527705427370214;  // std dev = 0.291, 130.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=33 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( location(A, F), location(D, F) )
%   | | then if ( interaction(G, D), interaction(G, G) )
%   | | | then return -0.020300347166652796;  // std dev = 1.418, 24.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=6 */
%   | | | else return 0.0729273352210084;  // std dev = 2.039, 32.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=12 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4604221657883308;  // std dev = 0.506, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.17192178971386915;  // std dev = 0.137, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( enzyme(A, K), interaction(I, J) )
%   | | | then return 0.3852866599850757;  // std dev = 0.621, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.11844480639685437;  // std dev = 2.450, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else return 0.07453890694918285;  // std dev = 1.100, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), location(A, E) )
%   | then return 0.13840209987627342;  // std dev = 0.077, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.23064792267161816;  // std dev = 0.231, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( location(A, G), location(F, G) )
%   | | then if ( enzyme(F, H) )
%   | | | then return -0.11908653863034455;  // std dev = 0.759, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.048793032630743347;  // std dev = 1.388, 42.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=9 */
%   | | else return 0.14695994249152614;  // std dev = 0.725, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.3739339258227522;  // std dev = 0.589, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.0724471350351693;  // std dev = 0.881, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(M, A), enzyme(M, N) )
%   | | | then return 0.07507485421467593;  // std dev = 1.963, 31.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=11 */
%   | | | else return -0.005629345961792645;  // std dev = 4.446, 158.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=46 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.2584480124185279;  // std dev = 0.098, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.31040868621110806;  // std dev = 0.330, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.5602163995057593;  // std dev = 0.195, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.17254207551740453;  // std dev = 0.070, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( location(A, I) )
%   | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | then if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.16122476800885924;  // std dev = 1.275, 23.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=15 */
%   | | | else return 0.3306376323574905;  // std dev = 2.668, 48.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=35 */
%   | | else return -0.2047696102436901;  // std dev = 0.070, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | else if ( interaction(A, M), interaction(M, A) )
%   | | then return 0.16286966728951557;  // std dev = 0.454, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.21240661625084278;  // std dev = 1.001, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '391', 'milliseconds']
Refined model CLL: -0.212608


******************************************
Best model found
******************************************
Results 

CLL : -0.209674 

AUC ROC : 0.989143 

AUC PR : 0.445139 

Precision : 0.301493 

Recall : 0.716312 

F1 : 0.42437 

Total Learning Time : 22.207 

Total Inference Time : 16.85203218460083 

Total revision time: 46.59920409393311
Best scored revision CLL: -0.212608


Results 

CLL : -0.209674 

AUC ROC : 0.989143 

AUC PR : 0.445139 

Precision : 0.301493 

Recall : 0.716312 

F1 : 0.42437 

Total Learning Time : 56.62383058738709 

Total Inference Time : 16.85203218460083 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.519
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20138325853185599;  // std dev = 8.265, 303.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18317631822780528;  // std dev = 5.808, 148.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=52 */
%   | | | else return 0.16515830020978725;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.11848137459410493;  // std dev = 5.307, 131.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=41 */
%   | | | else return 0.13103475406174436;  // std dev = 6.524, 194.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.11865608440014096;  // std dev = 4.397, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | | else return 0.11306971052515459;  // std dev = 7.103, 229.000 (wgt'ed) examples reached here.  /* #neg=154 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08956071935309885;  // std dev = 8.385, 321.000 (wgt'ed) examples reached here.  /* #neg=217 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08352407421047267;  // std dev = 8.321, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7334308854560828;  // std dev = 0.013, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.26688074473826584;  // std dev = 0.017, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.05465825988003644;  // std dev = 3.943, 71.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=23 */
%   | | | else return 0.06482375717510103;  // std dev = 5.175, 121.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03863518679260313;  // std dev = 4.150, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.047339159685980306;  // std dev = 6.513, 193.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03959075787082799;  // std dev = 7.681, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02434484094412661;  // std dev = 7.727, 320.000 (wgt'ed) examples reached here.  /* #neg=216 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.157', 'seconds']
Parameter learned model CLL:-0.328766 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.265, 199, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.808, 96, 52], 'false,false,false,false': [5.888, 104, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.307, 90, 41], 'false,false,false,false': [6.524, 131, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.397, 58, 29], 'false,false,false,false': [7.103, 154, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.385, 217, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.321, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.013, 0, 41], 'true,false': [0.017, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.943, 48, 23], 'false,false,false,false': [5.175, 81, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.15, 84, 41], 'false,false,false,false': [6.513, 130, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.681, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.727, 216, 104]}]
{'': [nan, 0.22542452265028698], 'false': [nan, 0.22542452265028545], 'false,false': [nan, 0.22542452265028698], 'false,false,false': [nan, 0.22542452265028545]}
{'': [nan, 0.2250692520775589], 'false': [nan, 0.2250692520775636], 'false,false': [nan, 0.2250692520775589], 'false,false,false': [0.22790357925493201, 0.22222222222222357]}
{'': [nan, 0.21763803809586083], 'false': [nan, 0.21763803809586083], 'false,false': [nan, 0.2176380380958586], 'false,false,false': [0.2149883560842176, 0.21936373654291694]}
{'': [nan, 0.2208410147820366], 'false': [nan, 0.2208410147820366], 'false,false': [nan, 0.22084101478203544], 'false,false,false': [0.22222222222222315, 0.2203076846258269]}
{'': [nan, 0.21904916761640839], 'false': [nan, 0.21904916761640839], 'false,false': [nan, 0.21904916761640617], 'false,false,false': [nan, 0.21904916761640617]}
{'': [nan, 0.22261108808258273], 'false': [nan, 0.22261108808258273], 'false,false': [nan, 0.22261108808258195], 'false,false,false': [nan, 0.22261108808258254]}
{'': [0.22417199426731935, 0.22047280774123768], 'true': [4.388663979565253e-06, 3.6966217986322825e-06], 'false': [nan, 0.22047280774123768], 'false,false': [nan, 0.22047280774123768], 'false,false,false': [0.21900416584011093, 0.22129635953828372], 'true,true': [nan, 4.388663979565253e-06], 'true,true,false': [nan, 4.388663979565253e-06]}
{'': [nan, 0.18758728169772543], 'false': [nan, 0.18758728169772543], 'false,false': [nan, 0.18758728169772515], 'false,false,false': [0.1377797429114255, 0.21981627080391516]}
{'': [nan, 0.187900584098339], 'false': [nan, 0.1879005840983383], 'false,false': [nan, 0.1879005840983383], 'false,false,false': [nan, 0.1879005840983383]}
{'': [nan, 0.18657362931688437], 'false': [nan, 0.18657362931688437], 'false,false': [nan, 0.18657362931688434], 'false,false,false': [nan, 0.18657362931688434]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 27.737
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), complex(C, D) )
%   | then return 0.6581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), phenotype(A, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.24839283753853675;  // std dev = 3.123, 41.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=16 */
%   | | | else return 0.1977715766089449;  // std dev = 4.876, 106.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=36 */
%   | | else if ( interaction(A, G), interaction(G, H) )
%   | | | then return 0.19814893509951237;  // std dev = 3.350, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return 0.1308762078267851;  // std dev = 3.618, 66.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=18 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, D) )
%   | then return 0.7867515379993921;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.42375881068788884;  // std dev = 0.724, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.7857292870520123;  // std dev = 0.121, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( phenotype(A, G) )
%   | | then return 0.21947341221095437;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0.7194734122109544;  // std dev = 2.11e-08, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, H), interaction(I, A) )
%   | | then if ( phenotype(H, J) )
%   | | | then return 0.08642968507520389;  // std dev = 4.554, 111.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=28 */
%   | | | else return -0.10896773298809856;  // std dev = 0.967, 21.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=1 */
%   | | else if ( complex(A, K), interaction(A, L) )
%   | | | then return 0.4989436046729873;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.1683122803476869;  // std dev = 5.713, 147.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=49 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B), interaction(A, E) )
%   | then return 0.6384328280165197;  // std dev = 0.316, 35.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=31 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.5778601818111649;  // std dev = 0.051, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.174442024460774;  // std dev = 0.164, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | | else return 0.07832063656627813;  // std dev = 6.235, 203.000 (wgt'ed) examples reached here.  /* #neg=149 #pos=54 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, F) )
%   | | then return 0.05745210062876513;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( phenotype(A, H) )
%   | | | then return 0.18479305221171505;  // std dev = 1.087, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.06493469195109802;  // std dev = 0.769, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( location(A, I), interaction(J, A) )
%   | | then return 0.3143005737269678;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else return 0.5509727292307397;  // std dev = 0.848, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(A, D) )
%   | then return 0.24072190333056848;  // std dev = 0.845, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else if ( interaction(C, A) )
%   | | then return 0.4405362586527722;  // std dev = 0.072, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(C, E) )
%   | | | then return 0.6107696323005113;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.4857934937514252;  // std dev = 0.220, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.44123276424112345;  // std dev = 0.055, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.2582829912378935;  // std dev = 3.182, 48.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=23 */
%   | | | else return -0.1750824768063788;  // std dev = 0.260, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
%   | | else if ( location(A, J), interaction(A, K) )
%   | | | then return 0.0759648411946212;  // std dev = 3.295, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.16134892280560176;  // std dev = 5.033, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( phenotype(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.4101178993198662;  // std dev = 0.370, 24.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=20 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.14967478304698073;  // std dev = 0.171, 33.000 (wgt'ed) examples reached here.  /* #neg=33 */
%   | | | else return 0.0918193369284405;  // std dev = 4.584, 105.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=34 */
%   | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | then return 0.546967701880161;  // std dev = 0.361, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | else return -0.216548101685767;  // std dev = 0.031, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( location(A, H) )
%   | then return 0.03974703672578974;  // std dev = 0.397, 128.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=38 */
%   | else if ( interaction(A, I) )
%   | | then return 0.4483924413060887;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.11255595922989299;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.07535516067683079;  // std dev = 1.159, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.30008452550578496;  // std dev = 0.059, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( phenotype(A, E) )
%   | | then return -0.6697010339330429;  // std dev = 1.49e-08, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return 0.30078903796106327;  // std dev = 0.007, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.6001295039457125;  // std dev = 0.079, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(F, I), complex(A, J) )
%   | | | then return 0.09132828919007396;  // std dev = 1.674, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.03749407820407666;  // std dev = 3.660, 94.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=18 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.40636853263318995;  // std dev = 0.224, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, L), complex(A, M) )
%   | | | then return -0.03388480174781344;  // std dev = 2.042, 41.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=8 */
%   | | | else return 0.058206800294572064;  // std dev = 5.315, 145.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=43 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.48186611159452736;  // std dev = 0.190, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.18050071049134983;  // std dev = 0.075, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( phenotype(A, G), phenotype(F, G) )
%   | | | then return 0.6467011459062576;  // std dev = 1.196, 37.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=36 */
%   | | | else return 0.27735577374254256;  // std dev = 2.845, 37.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=21 */
%   | | else return -0.22440826523780558;  // std dev = 0.344, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | else if ( enzyme(A, H) )
%   | | then if ( phenotype(A, I) )
%   | | | then return 0.07299685613086053;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.051546880617317735;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return -0.14300677841072032;  // std dev = 1.003, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.09846208661145403;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), complex(A, D) )
%   then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(A, E) )
%   | | then return 0.14236547400589245;  // std dev = 0.050, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, F), interaction(G, A) )
%   | | | then return 0.3876431827122217;  // std dev = 0.287, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5693510134937831;  // std dev = 0.206, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return -0.17262086350826386;  // std dev = 0.100, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.23401725246541272;  // std dev = 0.102, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), enzyme(K, L) )
%   | | | then return 0.05983401784993271;  // std dev = 2.845, 51.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | else return -0.0630064003713419;  // std dev = 1.950, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | | else if ( complex(A, M), interaction(A, N) )
%   | | | then return -0.05417387123873949;  // std dev = 0.987, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.058285690782184735;  // std dev = 4.271, 111.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=37 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, C), enzyme(A, D) )
%   | then return -0.13919085075969154;  // std dev = 0.228, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.16995840941147644;  // std dev = 0.145, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.016357476394984586;  // std dev = 0.283, 66.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=17 */
%   else if ( enzyme(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.2537076465544013;  // std dev = 0.240, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(I, G), enzyme(I, F) )
%   | | | then return -0.14462564301028416;  // std dev = 0.131, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | | else return 0.10160138566720837;  // std dev = 2.533, 42.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.17071108387859307;  // std dev = 0.052, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, K) )
%   | | | then return -0.023835954233421823;  // std dev = 1.741, 49.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=13 */
%   | | | else return 0.03531377094996353;  // std dev = 4.267, 111.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=36 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), phenotype(C, D) )
%   | then return 0.11728393561330679;  // std dev = 0.043, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.20057446497634643;  // std dev = 0.098, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( phenotype(F, G) )
%   | | then if ( enzyme(A, H), interaction(F, A) )
%   | | | then return 0.17397222257338538;  // std dev = 0.441, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.0281139817442348;  // std dev = 1.846, 63.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=15 */
%   | | else return -0.1371575125506341;  // std dev = 0.083, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.24423190117137472;  // std dev = 4.156, 99.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=64 */
%   | | | else return -0.1863797763497441;  // std dev = 0.480, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return 0.00941840379593358;  // std dev = 1.479, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.3728219054246423;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.677', 'seconds']
Refined model CLL: -0.23384


******************************************
Best model found
******************************************
Results 

CLL : -0.237237 

AUC ROC : 0.964479 

AUC PR : 0.26348 

Precision : 0.23689 

Recall : 0.49434 

F1 : 0.320293 

Total Learning Time : 27.737 

Total Inference Time : 24.196372985839844 

Total revision time: 61.29139204597473
Best scored revision CLL: -0.23384


Results 

CLL : -0.237237 

AUC ROC : 0.964479 

AUC PR : 0.26348 

Precision : 0.23689 

Recall : 0.49434 

F1 : 0.320293 

Total Learning Time : 71.31601853942871 

Total Inference Time : 24.196372985839844 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.313
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.180955952643372;  // std dev = 7.893, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16158632698234698;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.1707288238297606;  // std dev = 5.217, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14646387419184384;  // std dev = 5.406, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.12827090740474256;  // std dev = 5.723, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10866706910614476;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.14185193566583365;  // std dev = 6.535, 187.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0816816445840418;  // std dev = 7.933, 291.000 (wgt'ed) examples reached here.  /* #neg=199 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08022570308882578;  // std dev = 7.855, 279.000 (wgt'ed) examples reached here.  /* #neg=187 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.735556894067275;  // std dev = 0.027, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26404738600178396;  // std dev = 0.041, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07849422070592078;  // std dev = 4.054, 73.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=25 */
%   | | | else return 0.025387578007210726;  // std dev = 4.038, 79.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.07085064237013507;  // std dev = 4.177, 120.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=44 */
%   | | | else return 0.04072873899367895;  // std dev = 5.729, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05303122828520759;  // std dev = 7.011, 265.000 (wgt'ed) examples reached here.  /* #neg=173 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06835276318485688;  // std dev = 6.833, 245.000 (wgt'ed) examples reached here.  /* #neg=153 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.112', 'seconds']
Parameter learned model CLL:-0.335777 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.893, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 105, 51], 'false,false,false,false': [5.217, 81, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.406, 87, 44], 'false,false,false,false': [5.723, 103, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.535, 121, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.933, 199, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.855, 187, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 44], 'true,false': [0.041, 108, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.054, 48, 25], 'false,false,false,false': [4.038, 56, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.177, 76, 44], 'false,false,false,false': [5.729, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.011, 173, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.833, 153, 92]}]
{'': [nan, 0.21860264696829915], 'false': [nan, 0.21860264696829887], 'false,false': [nan, 0.21860264696829915], 'false,false,false': [nan, 0.21860264696829887]}
{'': [nan, 0.22141711091558794], 'false': [nan, 0.22141711091558314], 'false,false': [nan, 0.22141711091558794], 'false,false,false': [0.22004437869822369, 0.22312550389680122]}
{'': [nan, 0.21983215618182322], 'false': [nan, 0.21983215618182322], 'false,false': [nan, 0.21983215618182483], 'false,false,false': [0.22305293809838286, 0.2168842128990541]}
{'': [nan, 0.22547071560409304], 'false': [nan, 0.22547071560409304], 'false,false': [nan, 0.22547071560409324], 'false,false,false': [0.21795458009449659, 0.2283935318207582]}
{'': [nan, 0.2162787714180039], 'false': [nan, 0.2162787714180039], 'false,false': [nan, 0.21627877141800422], 'false,false,false': [nan, 0.21627877141800422]}
{'': [nan, 0.22115188697685972], 'false': [nan, 0.22115188697685972], 'false,false': [nan, 0.22115188697685886], 'false,false,false': [nan, 0.2211518869768597]}
{'': [0.20553183107112608, 0.21611288571924128], 'false': [nan, 0.21611288571924128], 'false,false': [nan, 0.21611288571924128], 'false,false,false': [0.22518296115593894, 0.20637718314372736], 'true': [1.644369903054287e-05, 1.5693694925279624e-05], 'true,true': [nan, 1.644369903054287e-05], 'true,true,false': [nan, 1.644369903054287e-05]}
{'': [nan, 0.18504925596144628], 'false': [nan, 0.18504925596144628], 'false,false': [nan, 0.18504925596144517], 'false,false,false': [0.14542165878728772, 0.21593390886525232]}
{'': [nan, 0.18549703861215688], 'false': [nan, 0.18549703861215713], 'false,false': [nan, 0.18549703861215713], 'false,false,false': [nan, 0.18549703861215713]}
{'': [nan, 0.1905709621635429], 'false': [nan, 0.1905709621635429], 'false,false': [nan, 0.19057096216354186], 'false,false,false': [nan, 0.19057096216354186]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 42.63
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then if ( interaction(A, F) )
%   | | then return 0.12841920536978263;  // std dev = 0.444, 37.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | else if ( interaction(G, C), interaction(H, G) )
%   | | | then return 0.22178529873587596;  // std dev = 1.595, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.3581489350995122;  // std dev = 1.225, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, C) )
%   | | | then return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2629108398614171;  // std dev = 3.181, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   else if ( phenotype(A, J), enzyme(A, K) )
%   | then return 0.09814893509951236;  // std dev = 0.427, 50.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=12 */
%   | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.13963041658099373;  // std dev = 0.450, 135.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=38 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D) )
%   | then return 0.8405228870275788;  // std dev = 0.013, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7342688070767353;  // std dev = 0.096, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.15299766117215996;  // std dev = 0.013, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(E, A), interaction(E, E) )
%   | | then if ( phenotype(A, F) )
%   | | | then return 0.5048646187765501;  // std dev = 0.807, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.16636065389004012;  // std dev = 1.821, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(A, G), interaction(G, A) )
%   | | | then return -0.019388849350533553;  // std dev = 1.612, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.12048646315608282;  // std dev = 6.962, 239.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=68 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.7227525010491402;  // std dev = 0.054, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(D, F) )
%   | | then return -0.07568845302156389;  // std dev = 0.273, 21.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=2 */
%   | | else if ( interaction(G, D), complex(D, H) )
%   | | | then return 0.20718061858411999;  // std dev = 1.910, 15.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=6 */
%   | | | else return 0.03915045339219524;  // std dev = 3.312, 64.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=14 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.7213632673697327;  // std dev = 0.127, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K) )
%   | | | then return -0.0417168855679518;  // std dev = 1.281, 15.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=2 */
%   | | | else return 0.10148769862031697;  // std dev = 1.560, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.597999162130285;  // std dev = 0.113, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.18386773252352;  // std dev = 5.283, 121.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=44 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), complex(C, D) )
%   | then return 0.5137678372471214;  // std dev = 0.095, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( phenotype(C, E) )
%   | | then return 0.4597529764099313;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1374534862877945;  // std dev = 0.671, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   else if ( complex(A, F) )
%   | then if ( complex(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.7799556602456175;  // std dev = 0.047, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | | else return -0.19556537267451662;  // std dev = 0.030, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.12883761738986488;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.09577883543201018;  // std dev = 2.051, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | else if ( interaction(I, A) )
%   | | | then return 0.20554182311698918;  // std dev = 4.052, 69.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=29 */
%   | | | else return 0.1061466804266637;  // std dev = 2.492, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E), enzyme(D, E) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.46574727625808293;  // std dev = 0.824, 13.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=12 */
%   | | | else return 0.6923131908621648;  // std dev = 0.331, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | else if ( interaction(D, G), interaction(A, G) )
%   | | | then return 0.666665133579081;  // std dev = 0.779, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.12177857360612465;  // std dev = 3.496, 70.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=26 */
%   | else if ( complex(A, H) )
%   | | then return -0.17325117398722256;  // std dev = 0.212, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   | | else return -0.23343834556273188;  // std dev = 0.196, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(A, A) )
%   | then return -0.0644616746186055;  // std dev = 0.138, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else return 0.02727713295458556;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(A, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.27373938054314595;  // std dev = 0.087, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.007689286138313276;  // std dev = 0.261, 80.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=19 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( complex(A, G), location(F, H) )
%   | | then if ( location(A, H) )
%   | | | then return 0.006760064827442136;  // std dev = 0.686, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.009618585043719855;  // std dev = 0.633, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( recursion_proteinclass(F, B) )
%   | | | then return 0.3277831010291192;  // std dev = 0.070, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0575812188930493;  // std dev = 1.400, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.3978417499938908;  // std dev = 3.205, 73.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=55 */
%   | | | else return -0.18339232823967866;  // std dev = 0.205, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return 0.2725192967853186;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.23885299879421806;  // std dev = 0.072, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.4585263703158836;  // std dev = 0.065, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.15685445601937578;  // std dev = 0.053, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   else if ( enzyme(A, F) )
%   | then if ( enzyme(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.5397827513328769;  // std dev = 0.111, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.21888115228821836;  // std dev = 0.092, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.41871102301385416;  // std dev = 0.427, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.19977350708430347;  // std dev = 0.255, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(K, A), complex(K, L) )
%   | | | then return 0.09370466699886656;  // std dev = 1.742, 20.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=8 */
%   | | | else return 0.03458629198023023;  // std dev = 3.069, 68.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=21 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.19998231523687193;  // std dev = 0.193, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, F), complex(F, G) )
%   | | then return -0.06281530074033785;  // std dev = 0.170, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | else return 9.428153848626866E-4;  // std dev = 0.246, 62.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=19 */
%   else if ( phenotype(A, H) )
%   | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.4752420507068316;  // std dev = 0.093, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return -0.19314520198250257;  // std dev = 0.077, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.2425651122372394;  // std dev = 0.240, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.01657993113595837;  // std dev = 2.645, 84.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.07899835261911359;  // std dev = 1.991, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else return 0.02306785475012738;  // std dev = 2.096, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( recursion_proteinclass(E, B), interaction(F, E) )
%   | | | then return 0.17602886015067035;  // std dev = 0.222, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.4277908218931824;  // std dev = 0.984, 57.000 (wgt'ed) examples reached here.  /* #pos=57 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.3076615682116773;  // std dev = 1.309, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | | else return -0.22647488965229035;  // std dev = 0.485, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( location(H, C), interaction(H, H) )
%   | | then if ( complex(A, I) )
%   | | | then return -0.1203893231199634;  // std dev = 0.154, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | | else return -0.16626420598761008;  // std dev = 0.325, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else if ( interaction(A, J) )
%   | | | then return -0.1442969217446499;  // std dev = 0.049, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | else return -0.20423050719975197;  // std dev = 0.042, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else return -0.06585473581510676;  // std dev = 0.303, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C) )
%   | then if ( enzyme(A, D), complex(A, E) )
%   | | then return 0.1433110059860305;  // std dev = 0.004, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.0992304148172232;  // std dev = 0.064, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( complex(C, F), interaction(G, C) )
%   | | then return 0.18051400512232596;  // std dev = 0.058, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.20739037587276016;  // std dev = 0.105, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.17166631720450098;  // std dev = 0.061, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return -0.03193696421267179;  // std dev = 2.486, 131.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=32 */
%   | | | else return 0.034857691359444005;  // std dev = 1.355, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return -0.010753131903881058;  // std dev = 1.446, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   | | | else return 0.054787360722013415;  // std dev = 2.038, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '4', 'minutes', 'and', '56.475', 'seconds']
Refined model CLL: -0.164238


******************************************
Best model found
******************************************
Results 

CLL : -0.195495 

AUC ROC : 0.991305 

AUC PR : 0.390679 

Precision : 0.249004 

Recall : 0.902527 

F1 : 0.39032 

Total Learning Time : 42.63 

Total Inference Time : 40.221863985061646 

Total revision time: 90.76730124282838
Best scored revision CLL: -0.164238


Results 

CLL : -0.195495 

AUC ROC : 0.991305 

AUC PR : 0.390679 

Precision : 0.249004 

Recall : 0.902527 

F1 : 0.39032 

Total Learning Time : 100.79192773628236 

Total Inference Time : 40.221863985061646 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 3.201
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1863932099086731;  // std dev = 7.601, 262.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15098471052269125;  // std dev = 5.959, 164.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=52 */
%   | | | else return 0.2075379134173593;  // std dev = 4.615, 91.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15522547431551673;  // std dev = 4.278, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
%   | | | else return 0.1340238079599595;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07495597553029826;  // std dev = 3.678, 66.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=19 */
%   | | | else return 0.13283750192621474;  // std dev = 6.610, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1450009447477886;  // std dev = 7.303, 226.000 (wgt'ed) examples reached here.  /* #neg=140 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06909721610830646;  // std dev = 7.580, 260.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7272896237637523;  // std dev = 0.057, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2721795392551649;  // std dev = 0.079, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07480641073055264;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return 1.729465941225323E-4;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.001212466036359793;  // std dev = 3.539, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.05104619128616782;  // std dev = 6.201, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.040719097022235445;  // std dev = 7.068, 255.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03779870182970921;  // std dev = 7.038, 250.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.423', 'seconds']
Parameter learned model CLL:-0.347012 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.601, 176, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.959, 112, 52], 'false,false,false,false': [4.615, 57, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.278, 53, 28], 'false,false,false,false': [6.253, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.678, 47, 19], 'false,false,false,false': [6.61, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.303, 140, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.58, 174, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.057, 0, 28], 'true,false': [0.079, 57, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.641, 62, 33], 'false,false,false,false': [4.231, 63, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.539, 69, 28], 'false,false,false,false': [6.201, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.068, 169, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.038, 164, 86]}]
{'': [nan, 0.22049997086416953], 'false': [nan, 0.22049997086416936], 'false,false': [nan, 0.22049997086416953], 'false,false,false': [nan, 0.22049997086416936]}
{'': [nan, 0.223514033064207], 'false': [nan, 0.22351403306420717], 'false,false': [nan, 0.223514033064207], 'false,false,false': [0.21653777513385, 0.23402970655717942]}
{'': [nan, 0.22171068830594823], 'false': [nan, 0.22171068830594823], 'false,false': [nan, 0.2217106883059482], 'false,false,false': [0.22589759325027844, 0.21966483078417146]}
{'': [nan, 0.2215761142495272], 'false': [nan, 0.2215761142495272], 'false,false': [nan, 0.22157611424952708], 'false,false,false': [0.20500459136822724, 0.22638932286151703]}
{'': [nan, 0.23598678944545426], 'false': [nan, 0.23598678944545426], 'false,false': [nan, 0.23598678944545393], 'false,false,false': [nan, 0.23598678944545393]}
{'': [nan, 0.22098772808918574], 'false': [nan, 0.22098772808918574], 'false,false': [nan, 0.22098772808918665], 'false,false,false': [nan, 0.22098772808918582]}
{'': [0.22077645030631546, 0.2168799511288215], 'true': [0.00011435751640855228, 0.00010973467166304168], 'false': [nan, 0.2168799511288215], 'false,false': [nan, 0.2168799511288215], 'false,false,false': [0.22670360110803411, 0.20338326446281013], 'true,true': [nan, 0.00011435751640855228], 'true,true,false': [nan, 0.00011435751640855228]}
{'': [nan, 0.19008719046600858], 'false': [nan, 0.19008719046600858], 'false,false': [nan, 0.19008719046600844], 'false,false,false': [0.12911563849927507, 0.2235768087117455]}
{'': [nan, 0.19593190912562627], 'false': [nan, 0.1959319091256269], 'false,false': [nan, 0.1959319091256269], 'false,false,false': [nan, 0.1959319091256269]}
{'': [nan, 0.19814228393490024], 'false': [nan, 0.19814228393490024], 'false,false': [nan, 0.19814228393490046], 'false,false,false': [nan, 0.19814228393490046]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 18.914
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(D, A), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( complex(A, F) )
%   | | | then return -0.14185106490048777;  // std dev = 7.45e-09, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | | else return 0.024815601766178936;  // std dev = 1.826, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.08731560176617903;  // std dev = 2.912, 48.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=11 */
%   | | | else return 0.18923001618059254;  // std dev = 5.725, 148.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=49 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, E), complex(C, F) )
%   | | then if ( interaction(E, A) )
%   | | | then return -0.03156485511290852;  // std dev = 0.797, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.15647094566762818;  // std dev = 2.620, 32.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=10 */
%   | | else if ( interaction(C, G), interaction(G, H) )
%   | | | then return 0.2653416980068393;  // std dev = 2.344, 23.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=10 */
%   | | | else return 0.583518261108282;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(I, A), interaction(J, I) )
%   | then if ( recursion_proteinclass(J, B) )
%   | | then return 0.744816711965916;  // std dev = 0.142, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, K), interaction(J, K) )
%   | | | then return -0.029157782540483138;  // std dev = 1.599, 24.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=3 */
%   | | | else return 0.1731169797112151;  // std dev = 3.937, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | else return 0.08575182286838214;  // std dev = 0.427, 75.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(E, A) )
%   | then return 0.5522331396492827;  // std dev = 0.011, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.6652253820403038;  // std dev = 0.127, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.661218669257348;  // std dev = 0.133, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13072630751060796;  // std dev = 0.048, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return 0.021789797197055597;  // std dev = 3.096, 61.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=12 */
%   | | | else return 0.14131954185150197;  // std dev = 5.866, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.42922366304679876;  // std dev = 0.042, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(D, A), interaction(A, D) )
%   | | then return -0.07371378824653929;  // std dev = 0.200, 20.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=1 */
%   | | else return 0.06983977911203619;  // std dev = 0.415, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.6205788318120552;  // std dev = 0.170, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( phenotype(E, G), interaction(A, H) )
%   | | | then return -0.01926432568445919;  // std dev = 2.339, 40.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=8 */
%   | | | else return 0.136191518960134;  // std dev = 3.945, 70.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=25 */
%   | else if ( complex(A, I), interaction(J, A) )
%   | | then return 0.6724815005009077;  // std dev = 0.311, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.2680548805342753;  // std dev = 2.599, 27.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=13 */
%   | | | else return 0.09233607691002538;  // std dev = 2.016, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(C, D) )
%   | then return 0.32206165556618815;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.4466545262715176;  // std dev = 0.218, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( enzyme(A, E), complex(A, F) )
%   | then if ( enzyme(G, E), recursion_proteinclass(G, B) )
%   | | then if ( interaction(A, H), enzyme(H, E) )
%   | | | then return 0.620273733059071;  // std dev = 0.419, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7742945248060641;  // std dev = 0.130, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, I) )
%   | | | then return -0.17795853459712302;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return -0.2930545720740157;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, A) )
%   | | then return -0.11800910341235103;  // std dev = 0.049, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.042309606732523986;  // std dev = 4.082, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else return 0.13079703051987954;  // std dev = 4.636, 92.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=34 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.2601031467666487;  // std dev = 0.070, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(C, E), complex(E, D) )
%   | | then return -0.07236329195863203;  // std dev = 0.232, 44.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=4 */
%   | | else return 0.06616137653290764;  // std dev = 0.435, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(H, F) )
%   | | then if ( phenotype(F, I), complex(H, J) )
%   | | | then return 0.06807769565334959;  // std dev = 2.115, 21.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | else return 0.24565654920259608;  // std dev = 0.944, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return 0.7420977265857184;  // std dev = 0.024, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.36592190899078797;  // std dev = 0.112, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.12077013244123741;  // std dev = 0.016, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.0796165502789991;  // std dev = 5.244, 133.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=47 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5250419520503421;  // std dev = 0.226, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.21983305260002184;  // std dev = 0.092, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( phenotype(E, G), interaction(H, E) )
%   | | then if ( phenotype(H, G) )
%   | | | then return -0.02155787975131653;  // std dev = 1.335, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.05690411753890601;  // std dev = 1.120, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5252039563885532;  // std dev = 0.371, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.30747167883147347;  // std dev = 0.600, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.24225246060905634;  // std dev = 0.208, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.09870404239351237;  // std dev = 0.022, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.03676102803356427;  // std dev = 5.119, 132.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=42 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.13716716359999148;  // std dev = 0.040, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.2741602181816594;  // std dev = 0.188, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), phenotype(A, F) )
%   | then if ( complex(E, G) )
%   | | then if ( interaction(H, E), interaction(I, H) )
%   | | | then return 0.011515945484811368;  // std dev = 2.340, 45.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=12 */
%   | | | else return 0.363396561134035;  // std dev = 1.087, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | else if ( interaction(J, E), recursion_proteinclass(J, B) )
%   | | | then return 0.6928608031673115;  // std dev = 0.114, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.029980706482780513;  // std dev = 3.286, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08671632770318481;  // std dev = 0.022, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.28504632310726447;  // std dev = 0.884, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09957565638058465;  // std dev = 3.940, 82.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=33 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( phenotype(C, E) )
%   | then if ( phenotype(A, E) )
%   | | then if ( interaction(F, A), phenotype(F, G) )
%   | | | then return -0.027528011682382406;  // std dev = 0.455, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.13750252654038314;  // std dev = 1.203, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.1186401283755086;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.0859435803193949;  // std dev = 2.046, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else return 0.027836982806053547;  // std dev = 0.309, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   else if ( location(A, J) )
%   | then if ( location(K, J), recursion_proteinclass(K, B) )
%   | | then if ( interaction(K, L), complex(K, M) )
%   | | | then return -0.021229464873599422;  // std dev = 1.523, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.39294255438597525;  // std dev = 3.158, 65.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=50 */
%   | | else return -0.25013337658156154;  // std dev = 0.100, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | else return 0.3892672822867954;  // std dev = 0.646, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(A, D) )
%   then if ( interaction(A, E), phenotype(E, F) )
%   | then return 0.01891122033737493;  // std dev = 0.332, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | else if ( recursion_proteinclass(C, B) )
%   | | then return 0.1790000397662663;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.23582176676050343;  // std dev = 0.863, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return -0.0699337192042529;  // std dev = 3.179, 78.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=19 */
%   else if ( location(A, H) )
%   | then if ( location(I, H), recursion_proteinclass(I, B) )
%   | | then if ( phenotype(I, J), interaction(K, A) )
%   | | | then return 0.13440312708810565;  // std dev = 1.600, 22.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=14 */
%   | | | else return 0.3970096710183563;  // std dev = 1.922, 29.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=24 */
%   | | else return -0.2014884009366555;  // std dev = 0.060, 37.000 (wgt'ed) examples reached here.  /* #neg=37 */
%   | else if ( interaction(A, L) )
%   | | then return 0.008739748590931443;  // std dev = 0.968, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return -0.2200330410214857;  // std dev = 0.654, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '31.089', 'seconds']
Refined model CLL: -0.265976


******************************************
Best model found
******************************************
Results 

CLL : -0.262298 

AUC ROC : 0.924046 

AUC PR : 0.1764 

Precision : 0.160248 

Recall : 0.45583 

F1 : 0.237132 

Total Learning Time : 18.914 

Total Inference Time : 12.683494329452515 

Total revision time: 39.01611541748047
Best scored revision CLL: -0.265976


Results 

CLL : -0.262298 

AUC ROC : 0.924046 

AUC PR : 0.1764 

Precision : 0.160248 

Recall : 0.45583 

F1 : 0.237132 

Total Learning Time : 49.04074191093445 

Total Inference Time : 12.683494329452515 

