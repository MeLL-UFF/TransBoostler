Starting experiment 4_cora_imdb 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.653
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14830437551402098;  // std dev = 6.305, 193.000 (wgt'ed) examples reached here.  /* #neg=137 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18912008724854554;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14133804516431878;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10223668128767553;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09372674334577183;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09029503214763092;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07121337969637845;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.02822294437391372;  // std dev = 0.460, 184.000 (wgt'ed) examples reached here.  /* #neg=128 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0726288069597304;  // std dev = 6.013, 158.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.036602426054602365;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.109', 'seconds']
Parameter learned model CLL:-0.376773 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.305, 137, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.46, 128, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 102, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
{'': [nan, 0.20596526081237138], 'false': [nan, 0.20596526081237138]}
{'': [nan, 0.2275000000000003], 'false': [nan, 0.2275000000000003]}
{'': [nan, 0.22089965397923988], 'false': [nan, 0.22089965397923988]}
{'': [nan, 0.2149745638400786], 'false': [nan, 0.2149745638400786]}
{'': [nan, 0.2182586867485818], 'false': [nan, 0.2182586867485818]}
{'': [nan, 0.22288357416902913], 'false': [nan, 0.22288357416902913]}
{'': [nan, 0.2222222222222205], 'false': [nan, 0.2222222222222205]}
{'': [nan, 0.21172022684309857]}
{'': [nan, 0.22880948565935094], 'false': [nan, 0.22880948565935094]}
{'': [nan, 0.22222222222222257], 'false': [nan, 0.22222222222222257]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.334
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
%   | | else if ( female(A) )
%   | | | then return 0.8581489350995118;  // std dev = 1.58e-07, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.7936328060672536;  // std dev = 1.368, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( female(A) )
%   | | | then return 0.6505078949695753;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.7323086016879355;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 8.69e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5701313296421298;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.42908704217236776;  // std dev = 0.003, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4285587664710628;  // std dev = 0.016, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.3301609407415036;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1059656429676019;  // std dev = 0.470, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09232447202807297;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32821156282418246;  // std dev = 0.014, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2607775786907929;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08487336002274957;  // std dev = 5.58e-08, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2602842763521872;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2137101118095424;  // std dev = 0.003, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07850930282642384;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( female(A) )
%   | | | then return 0.18772203133750104;  // std dev = 0.537, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.2119639970129237;  // std dev = 2.58e-08, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( female(A) )
%   | | then return 0.18488958150876517;  // std dev = 1.05e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.16559366255324562;  // std dev = 0.071, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.07457038568046478;  // std dev = 0.181, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.15863035916335425;  // std dev = 1.83e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.1423590030038481;  // std dev = 0.393, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.06968402880980935;  // std dev = 0.172, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06383206224267378;  // std dev = 0.000, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13821831095245787;  // std dev = 0.003, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.27035099092759535;  // std dev = 0.001, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.361', 'seconds']
Refined model CLL: -0.070583


******************************************
Best model found
******************************************
Results 

CLL : -0.095961 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.334 

Total Inference Time : 0.9141886234283447 

Total revision time: 3.67852307510376
Best scored revision CLL: -0.070583


Results 

CLL : -0.095961 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 29.91436101150513 

Total Inference Time : 0.9141886234283447 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.712
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18769438964496815;  // std dev = 6.236, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1831288344373938;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16043155209759372;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10275009747938597;  // std dev = 6.270, 180.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05242035326117058;  // std dev = 6.417, 200.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06801235010613169;  // std dev = 6.302, 184.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11654522917020733;  // std dev = 6.013, 154.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04455946871017393;  // std dev = 0.469, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04495442117969464;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.022382942123571142;  // std dev = 6.262, 179.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.106', 'seconds']
Parameter learned model CLL:-0.379439 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.236, 118, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.27, 122, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.417, 142, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.302, 126, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.013, 96, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.469, 119, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.262, 121, 58]}]
{'': [nan, 0.22094524793388456], 'false': [nan, 0.22094524793388456]}
{'': [nan, 0.2273189142110628], 'false': [nan, 0.2273189142110628]}
{'': [nan, 0.22858417608566167], 'false': [nan, 0.22858417608566167]}
{'': [nan, 0.21839506172839304], 'false': [nan, 0.21839506172839304]}
{'': [nan, 0.2058999999999989], 'false': [nan, 0.2058999999999989]}
{'': [nan, 0.21585538752362768], 'false': [nan, 0.21585538752362768]}
{'': [nan, 0.23477820880418196], 'false': [nan, 0.23477820880418196]}
{'': [nan, 0.2203070637428595]}
{'': [nan, 0.22349918875067662], 'false': [nan, 0.22349918875067662]}
{'': [nan, 0.21903186542242806], 'false': [nan, 0.21903186542242806]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.484
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 5.27e-09, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return -0.12663757659962707;  // std dev = 0.154, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.11219749558182986;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.10149833753726888;  // std dev = 6.99e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09260922226297125;  // std dev = 0.000, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08511510856452745;  // std dev = 1.49e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.07871685390441646;  // std dev = 1.10e-05, 114.000 (wgt'ed) examples reached here.  /* #neg=114 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07319426260942331;  // std dev = 1.02e-05, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0683815013989588;  // std dev = 9.63e-06, 134.000 (wgt'ed) examples reached here.  /* #neg=134 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06415178262393621;  // std dev = 4.15e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.375', 'seconds']
Refined model CLL: -0.063744


******************************************
Best model found
******************************************
Results 

CLL : -0.067431 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.484 

Total Inference Time : 0.9821968078613281 

Total revision time: 3.9657703838348386
Best scored revision CLL: -0.063744


Results 

CLL : -0.067431 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.201608320236204 

Total Inference Time : 0.9821968078613281 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.851
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18061270321544987;  // std dev = 10.982, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1613161178009996;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14519621356097548;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1251150560818196;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09719520501660592;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08182137753084762;  // std dev = 10.893, 534.000 (wgt'ed) examples reached here.  /* #neg=356 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0686232008674715;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05121347389378624;  // std dev = 0.471, 536.000 (wgt'ed) examples reached here.  /* #neg=358 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04325095857151456;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04328437535316542;  // std dev = 10.809, 518.000 (wgt'ed) examples reached here.  /* #neg=340 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.122', 'seconds']
Parameter learned model CLL:-0.408749 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.982, 374, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.948, 367, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.888, 355, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.862, 350, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.914, 360, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.893, 356, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.873, 352, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 358, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.809, 340, 178]}]
{'': [nan, 0.21848088636841298], 'false': [nan, 0.21848088636841298]}
{'': [nan, 0.21993434896052727], 'false': [nan, 0.21993434896052727]}
{'': [nan, 0.22243029473157858], 'false': [nan, 0.22243029473157858]}
{'': [nan, 0.22347050045913505], 'false': [nan, 0.22347050045913505]}
{'': [nan, 0.2213899752629174], 'false': [nan, 0.2213899752629174]}
{'': [nan, 0.22222222222222326], 'false': [nan, 0.22222222222222326]}
{'': [nan, 0.22305446778212892], 'false': [nan, 0.22305446778212892]}
{'': [nan, 0.22180608153263195]}
{'': [nan, 0.2226383628243568], 'false': [nan, 0.2226383628243568]}
{'': [nan, 0.22554821782621348], 'false': [nan, 0.22554821782621348]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.512
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048768;  // std dev = 5.37e-08, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.1418510649004881;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839152;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.12544463852839183;  // std dev = 0.000, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360615;  // std dev = 3.33e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.11231637819360688;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783616;  // std dev = 4.71e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.10159632948783644;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.092691276189261;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else return -0.09269127618926044;  // std dev = 1.48e-07, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839679;  // std dev = 1.83e-08, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else return -0.08518475138839679;  // std dev = 8.69e-08, 314.000 (wgt'ed) examples reached here.  /* #neg=314 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109176;  // std dev = 1.49e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.07877675473109147;  // std dev = 5.58e-08, 271.000 (wgt'ed) examples reached here.  /* #neg=271 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 7.45e-09, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | else return -0.07324622576333681;  // std dev = 1.04e-07, 288.000 (wgt'ed) examples reached here.  /* #neg=288 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06842697784420289;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.419', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.512 

Total Inference Time : 1.06074857711792 

Total revision time: 5.241821849822998
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.477659786224365 

Total Inference Time : 1.06074857711792 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.661
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19396983062190035;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12318207855391114;  // std dev = 5.651, 155.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17214523977730636;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1090593159519519;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1259598873552718;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08658537592916546;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06473067288222233;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.019985251677360476;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05800308927715705;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01449237274467099;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.176', 'seconds']
Parameter learned model CLL:-0.380659 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.651, 110, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.46, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
{'': [nan, 0.22304522165293034], 'false': [nan, 0.22304522165293034]}
{'': [nan, 0.20603537981269646], 'false': [nan, 0.20603537981269646]}
{'': [nan, 0.22959183673469402], 'false': [nan, 0.22959183673469402]}
{'': [nan, 0.21811224489795888], 'false': [nan, 0.21811224489795888]}
{'': [nan, 0.2295918367346946], 'false': [nan, 0.2295918367346946]}
{'': [nan, 0.22469008264462903], 'false': [nan, 0.22469008264462903]}
{'': [nan, 0.22304522165292867], 'false': [nan, 0.22304522165292867]}
{'': [nan, 0.21160518626734878]}
{'': [nan, 0.22633136094674583], 'false': [nan, 0.22633136094674583]}
{'': [nan, 0.21565846740671984], 'false': [nan, 0.21565846740671984]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.285
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.14185106490048766;  // std dev = 6.99e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11231637819360624;  // std dev = 6.50e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.67e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.09269127618926105;  // std dev = 1.05e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.08518475138839683;  // std dev = 4.71e-08, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109177;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.0797847956021;  // std dev = 0.066, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else return -0.07317782815249407;  // std dev = 0.000, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 1.86e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.06887220343273767;  // std dev = 0.041, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06410869947404908;  // std dev = 0.000, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.555', 'seconds']
Refined model CLL: -0.063902


******************************************
Best model found
******************************************
Results 

CLL : -0.064553 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.285 

Total Inference Time : 0.8198623657226562 

Total revision time: 3.4559477767944333
Best scored revision CLL: -0.063902


Results 

CLL : -0.064553 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.6917857131958 

Total Inference Time : 0.8198623657226562 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.612
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16584104856518644;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12952124273072477;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12554809608100123;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07575886481564098;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.051538763893851085;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05000998392598061;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08365933448095997;  // std dev = 0.477, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027873678423684847;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.038131450338723075;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.152', 'seconds']
Parameter learned model CLL:-0.372381 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.477, 83, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.22222222222222154], 'false': [nan, 0.22222222222222154]}
{'': [nan, 0.21811224489795925], 'false': [nan, 0.21811224489795925]}
{'': [nan, 0.22386794052801115], 'false': [nan, 0.22386794052801115]}
{'': [nan, 0.21403091557669368], 'false': [nan, 0.21403091557669368]}
{'': [nan, 0.2100000000000004], 'false': [nan, 0.2100000000000004]}
{'': [nan, 0.2132201163445308], 'false': [nan, 0.2132201163445308]}
{'': [nan, 0.2279663085937499]}
{'': [nan, 0.2148437500000001], 'false': [nan, 0.2148437500000001]}
{'': [nan, 0.2205764824977347], 'false': [nan, 0.2205764824977347]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.289
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.69e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839138;  // std dev = 0.000, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783617;  // std dev = 5.05e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926108;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( female(A) )
%   | | | then return 0.30348671702059077;  // std dev = 0.405, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.32071184716014955;  // std dev = 2.11e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.37e-08, 96.000 (wgt'ed) examples reached here.  /* #neg=96 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25685256145768043;  // std dev = 0.011, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12279618407870656;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109161;  // std dev = 5.58e-08, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21094453394034912;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1098889053542568;  // std dev = 0.002, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1779668419770215;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.0997466077723286;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07386254908780918;  // std dev = 0.038, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06838770093087103;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1534040178086267;  // std dev = 0.008, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09114041927939562;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06415718490019985;  // std dev = 3.80e-08, 90.000 (wgt'ed) examples reached here.  /* #neg=90 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13452235867615178;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.0837348623003639;  // std dev = 0.001, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.455', 'seconds']
Refined model CLL: -0.066168


******************************************
Best model found
******************************************
Results 

CLL : -0.077019 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.289 

Total Inference Time : 0.7828805446624756 

Total revision time: 3.4201402435302732
Best scored revision CLL: -0.066168


Results 

CLL : -0.077019 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.65597817993164 

Total Inference Time : 0.7828805446624756 

Run: 2
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.667
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2017072173081025;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16511297603482472;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13875722977015503;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1305738278122723;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09339229580408674;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0760446576716782;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.049958453337644995;  // std dev = 6.171, 175.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.061461748088665724;  // std dev = 0.474, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04890518374647448;  // std dev = 6.073, 164.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03456768346360255;  // std dev = 6.092, 166.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.129', 'seconds']
Parameter learned model CLL:-0.384559 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.171, 119, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 108, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.073, 108, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.092, 110, 56]}]
{'': [nan, 0.22552598893447276], 'false': [nan, 0.22552598893447276]}
{'': [nan, 0.22222222222222315], 'false': [nan, 0.22222222222222315]}
{'': [nan, 0.22156086971744562], 'false': [nan, 0.22156086971744562]}
{'': [nan, 0.22618503276939447], 'false': [nan, 0.22618503276939447]}
{'': [nan, 0.22156086971744887], 'false': [nan, 0.22156086971744887]}
{'': [nan, 0.22156086971744518], 'false': [nan, 0.22156086971744518]}
{'': [nan, 0.21760000000000007], 'false': [nan, 0.21760000000000007]}
{'': [nan, 0.22486615110053643]}
{'': [nan, 0.22486615110053576], 'false': [nan, 0.22486615110053576]}
{'': [nan, 0.22354478153578047], 'false': [nan, 0.22354478153578047]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.382
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.74e-08, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( female(A) )
%   | | | then return 0.7891834178581324;  // std dev = 1.365, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.8581489350995117;  // std dev = 1.79e-07, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.726081909577591;  // std dev = 0.051, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.2736733312606816;  // std dev = 0.014, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12695028852121323;  // std dev = 0.154, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5619172107216209;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.22394978368022994;  // std dev = 0.013, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11341386993500249;  // std dev = 0.143, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10135897528209975;  // std dev = 0.000, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4224302367666792;  // std dev = 0.063, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.18535280226563405;  // std dev = 0.011, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09249250602494395;  // std dev = 4.83e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32407256267932977;  // std dev = 0.057, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16145274395546091;  // std dev = 0.008, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08501603111918266;  // std dev = 2.11e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2574792498765241;  // std dev = 0.049, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14077237083457708;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07863185836899945;  // std dev = 0.000, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21139516637016478;  // std dev = 0.043, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1252133410474933;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07312051413459678;  // std dev = 4.21e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | else return 0.17830232662835394;  // std dev = 0.038, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06831692885724269;  // std dev = 0.000, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else return 0.1487672657229992;  // std dev = 0.279, 57.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06409473490024008;  // std dev = 0.000, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1352973885948545;  // std dev = 0.030, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14472324319639673;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.307', 'seconds']
Refined model CLL: -0.066866


******************************************
Best model found
******************************************
Results 

CLL : -0.082799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.382 

Total Inference Time : 0.9303939342498779 

Total revision time: 3.765780662536621
Best scored revision CLL: -0.066866


Results 

CLL : -0.082799 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 29.99922177696228 

Total Inference Time : 0.9303939342498779 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.751
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.2096640866146651;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17385862474898633;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1419948746506132;  // std dev = 6.200, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1206903841573395;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0860455615564982;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.044686254947117296;  // std dev = 6.369, 193.000 (wgt'ed) examples reached here.  /* #neg=135 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.061410959767440466;  // std dev = 6.253, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.08147658297977435;  // std dev = 0.479, 162.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.060516537987045434;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04999156258525946;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.071', 'seconds']
Parameter learned model CLL:-0.393428 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.2, 114, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.369, 135, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.253, 120, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.479, 104, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
{'': [nan, 0.2279522497704318], 'false': [nan, 0.2279522497704318]}
{'': [nan, 0.2254122754805493], 'false': [nan, 0.2254122754805493]}
{'': [nan, 0.2234991887506772], 'false': [nan, 0.2234991887506772]}
{'': [nan, 0.2241373414041939], 'false': [nan, 0.2241373414041939]}
{'': [nan, 0.21966923368261687], 'false': [nan, 0.21966923368261687]}
{'': [nan, 0.21020698542242938], 'false': [nan, 0.21020698542242938]}
{'': [nan, 0.2196692336826138], 'false': [nan, 0.2196692336826138]}
{'': [nan, 0.22984301173601704]}
{'': [nan, 0.22858417608566398], 'false': [nan, 0.22858417608566398]}
{'': [nan, 0.22921449809928926], 'false': [nan, 0.22921449809928926]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.36
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283913;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1123163781936062;  // std dev = 8.94e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 5.27e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.10159632948783624;  // std dev = 4.83e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926086;  // std dev = 7.15e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.14e-08, 113.000 (wgt'ed) examples reached here.  /* #neg=113 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109155;  // std dev = 6.91e-08, 121.000 (wgt'ed) examples reached here.  /* #neg=121 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.07324622576333707;  // std dev = 4.83e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( female(B) )
%   | | | then return -0.07324622576333711;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.15588976089578727;  // std dev = 0.618, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06807331723126263;  // std dev = 0.014, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06405601392450844;  // std dev = 0.009, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.319', 'seconds']
Refined model CLL: -0.0646


******************************************
Best model found
******************************************
Results 

CLL : -0.076343 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.36 

Total Inference Time : 0.975776195526123 

Total revision time: 3.8850142345428464
Best scored revision CLL: -0.0646


Results 

CLL : -0.076343 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 30.118455348968507 

Total Inference Time : 0.975776195526123 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.893
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19979960688453668;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1337413062264181;  // std dev = 11.149, 590.000 (wgt'ed) examples reached here.  /* #neg=412 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14900251993253438;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11416956885463864;  // std dev = 10.958, 547.000 (wgt'ed) examples reached here.  /* #neg=369 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09392652425150684;  // std dev = 10.963, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07682738302130623;  // std dev = 10.963, 548.000 (wgt'ed) examples reached here.  /* #neg=370 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08170069739047695;  // std dev = 10.804, 517.000 (wgt'ed) examples reached here.  /* #neg=339 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04374631636845909;  // std dev = 0.467, 552.000 (wgt'ed) examples reached here.  /* #neg=374 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03900901868100672;  // std dev = 10.948, 545.000 (wgt'ed) examples reached here.  /* #neg=367 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05200166637453706;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.193', 'seconds']
Parameter learned model CLL:-0.405183 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.825, 343, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [11.149, 412, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.868, 351, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.958, 369, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.963, 370, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.963, 370, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.804, 339, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.467, 374, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.948, 367, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.776, 334, 178]}]
{'': [nan, 0.22492549025387049], 'false': [nan, 0.22492549025387049]}
{'': [nan, 0.21067509336397386], 'false': [nan, 0.21067509336397386]}
{'': [nan, 0.2232624954885108], 'false': [nan, 0.2232624954885108]}
{'': [nan, 0.21951879789711787], 'false': [nan, 0.21951879789711787]}
{'': [nan, 0.21931109808727245], 'false': [nan, 0.21931109808727245]}
{'': [nan, 0.21931109808727095], 'false': [nan, 0.21931109808727095]}
{'': [nan, 0.22575564276868573], 'false': [nan, 0.22575564276868573]}
{'': [nan, 0.2184808863684122]}
{'': [nan, 0.21993434896052835], 'false': [nan, 0.21993434896052835]}
{'': [nan, 0.22679138183593714], 'false': [nan, 0.22679138183593714]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.263
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.14185106490048807;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 307.000 (wgt'ed) examples reached here.  /* #neg=307 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360626;  // std dev = 4.71e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.11231637819360682;  // std dev = 0.000, 292.000 (wgt'ed) examples reached here.  /* #neg=292 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.10159632948783645;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.09269127618926068;  // std dev = 1.07e-07, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839678;  // std dev = 8.16e-08, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109173;  // std dev = 2.24e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07877675473109147;  // std dev = 5.16e-08, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07324622576333695;  // std dev = 1.01e-07, 318.000 (wgt'ed) examples reached here.  /* #neg=318 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420268;  // std dev = 2.11e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.06842697784420289;  // std dev = 0.000, 323.000 (wgt'ed) examples reached here.  /* #neg=323 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.395', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.263 

Total Inference Time : 1.0155904293060303 

Total revision time: 5.04484425163269
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.27828536605835 

Total Inference Time : 1.0155904293060303 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.577
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17064893509951218;  // std dev = 5.562, 144.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20493318079632253;  // std dev = 5.329, 122.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12071538181648708;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11979078197859586;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12279326954767075;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03895685625239993;  // std dev = 5.628, 152.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07373930262034965;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06170686842498111;  // std dev = 0.474, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04655775116013616;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07349842257286392;  // std dev = 5.303, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.169', 'seconds']
Parameter learned model CLL:-0.399377 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.562, 99, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.329, 77, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.628, 107, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.303, 75, 45]}]
{'': [nan, 0.214843750000001], 'false': [nan, 0.214843750000001]}
{'': [nan, 0.23280032249395433], 'false': [nan, 0.23280032249395433]}
{'': [nan, 0.21565846740671915], 'false': [nan, 0.21565846740671915]}
{'': [nan, 0.22222222222222227], 'false': [nan, 0.22222222222222227]}
{'': [nan, 0.22959183673469388], 'false': [nan, 0.22959183673469388]}
{'': [nan, 0.20840547091412848], 'false': [nan, 0.20840547091412848]}
{'': [nan, 0.22386794052801207], 'false': [nan, 0.22386794052801207]}
{'': [nan, 0.22469008264462767]}
{'': [nan, 0.22386794052801226], 'false': [nan, 0.22386794052801226]}
{'': [nan, 0.2343749999999992], 'false': [nan, 0.2343749999999992]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.294
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 6.99e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1254446385283914;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.23e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783633;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1015963294878362;  // std dev = 5.16e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.0851847513883968;  // std dev = 3.49e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0787767547310916;  // std dev = 5.37e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527753;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.07324622576333704;  // std dev = 1.86e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420267;  // std dev = 3.41e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367083;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801104;  // std dev = 2.36e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.06419184008202619;  // std dev = 3.73e-09, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.440', 'seconds']
Refined model CLL: -0.065253


******************************************
Best model found
******************************************
Results 

CLL : -0.070288 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.294 

Total Inference Time : 0.7909049987792969 

Total revision time: 3.342447229385376
Best scored revision CLL: -0.065253


Results 

CLL : -0.070288 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 29.575888343811034 

Total Inference Time : 0.7909049987792969 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.587
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18423589162125137;  // std dev = 5.507, 138.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17255598448877602;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19356634086501168;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15538910644620285;  // std dev = 5.290, 119.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08251501547556662;  // std dev = 5.477, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04157925267193899;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.048892078018544165;  // std dev = 5.516, 139.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04863339230559409;  // std dev = 0.471, 135.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.054130471454443545;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03482745382042829;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.112', 'seconds']
Parameter learned model CLL:-0.392856 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.507, 93, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.262, 72, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.29, 74, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.477, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.579, 101, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.516, 94, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 90, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
{'': [nan, 0.21975425330812953], 'false': [nan, 0.21975425330812953]}
{'': [nan, 0.22386794052801307], 'false': [nan, 0.22386794052801307]}
{'': [nan, 0.2366863905325441], 'false': [nan, 0.2366863905325441]}
{'': [nan, 0.23515288468328577], 'false': [nan, 0.23515288468328577]}
{'': [nan, 0.22222222222222135], 'false': [nan, 0.22222222222222135]}
{'': [nan, 0.2132201163445292], 'false': [nan, 0.2132201163445292]}
{'': [nan, 0.218932767455101], 'false': [nan, 0.218932767455101]}
{'': [nan, 0.22222222222222207]}
{'': [nan, 0.22714981070849155], 'false': [nan, 0.22714981070849155]}
{'': [nan, 0.22469008264462903], 'false': [nan, 0.22469008264462903]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.348
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.8581489350995121;  // std dev = 8.43e-08, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.7748156017661786;  // std dev = 1.354, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.14185106490048766;  // std dev = 7.88e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839147;  // std dev = 0.000, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7275438991647452;  // std dev = 0.055, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2706218992548485;  // std dev = 0.018, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360626;  // std dev = 4.94e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5633914459967004;  // std dev = 0.069, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.21898369187198732;  // std dev = 0.017, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783615;  // std dev = 5.67e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4235514458095562;  // std dev = 0.068, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.18444394166209419;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3248456489791481;  // std dev = 0.061, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15904760837722004;  // std dev = 0.012, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.09241208065654818;  // std dev = 0.024, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08520651114424192;  // std dev = 0.000, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2580131845746681;  // std dev = 0.054, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.13824500215270294;  // std dev = 0.012, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07879543912309363;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(A) )
%   | | | then return 0.17828584485143653;  // std dev = 0.453, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.2188875102708182;  // std dev = 2.58e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.1805325483241466;  // std dev = 0.021, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.14888774209315808;  // std dev = 0.005, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( actor(A) )
%   | | then return -0.07326243414906906;  // std dev = 2.58e-08, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | else return -0.18974694301340395;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06844116514936821;  // std dev = 0.000, 72.000 (wgt'ed) examples reached here.  /* #neg=72 */
%   | | else if ( female(A) )
%   | | | then return 0.1298404455993697;  // std dev = 0.386, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | | else return 0.1582134663777821;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13739286166096865;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14647096417613387;  // std dev = 0.002, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.06420435740510508;  // std dev = 0.000, 73.000 (wgt'ed) examples reached here.  /* #neg=73 */
%   | | | else return -0.1628411028102924;  // std dev = 0.591, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.514', 'seconds']
Refined model CLL: -0.066951


******************************************
Best model found
******************************************
Results 

CLL : -0.074547 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.348 

Total Inference Time : 0.8184592723846436 

Total revision time: 3.4595084762573243
Best scored revision CLL: -0.066951


Results 

CLL : -0.074547 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.692949590682982 

Total Inference Time : 0.8184592723846436 

Run: 3
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.671
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.22178529873587716;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1526509494843361;  // std dev = 6.154, 173.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14976743788617997;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1317333664861166;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08783658456008789;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07530207148013317;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08858190002911878;  // std dev = 5.981, 155.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.07538639517819627;  // std dev = 0.482, 153.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08795599799359381;  // std dev = 5.824, 142.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.007919124048222164;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.182', 'seconds']
Parameter learned model CLL:-0.408244 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.97, 98, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.154, 117, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.981, 99, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.482, 97, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.824, 86, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
{'': [nan, 0.23140495867768615], 'false': [nan, 0.23140495867768615]}
{'': [nan, 0.21891810618463667], 'false': [nan, 0.21891810618463667]}
{'': [nan, 0.22552598893447176], 'false': [nan, 0.22552598893447176]}
{'': [nan, 0.22750000000000198], 'false': [nan, 0.22750000000000198]}
{'': [nan, 0.22089965397923905], 'false': [nan, 0.22089965397923905]}
{'': [nan, 0.22222222222222246], 'false': [nan, 0.22222222222222246]}
{'': [nan, 0.23075962539021747], 'false': [nan, 0.23075962539021747]}
{'': [nan, 0.23204750309710054]}
{'': [nan, 0.23884149970244004], 'false': [nan, 0.23884149970244004]}
{'': [nan, 0.22222222222222168], 'false': [nan, 0.22222222222222168]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.441
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.1418510649004877;  // std dev = 5.16e-08, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.689297767541692;  // std dev = 0.830, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.6913094771863096;  // std dev = 0.831, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 8.69e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else return 0.5625484866787078;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1015963294878366;  // std dev = 0.000, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4228616660789755;  // std dev = 0.002, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.3342878107619954;  // std dev = 0.000586, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926083;  // std dev = 7.45e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( female(A) )
%   | | | then return 0.3245681235130792;  // std dev = 0.000, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.2861459352490074;  // std dev = 0.805, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.26144134335298425;  // std dev = 0.026, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.3238498954942592;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.08739801454405378;  // std dev = 0.225, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07861628572730894;  // std dev = 6.14e-08, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( female(A) )
%   | | | then return 0.194030587359832;  // std dev = 0.467, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.2013176472944306;  // std dev = 0.466, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( female(A) )
%   | | then return 0.18050986805313685;  // std dev = 3.16e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | else return 0.16877559862203845;  // std dev = 0.087, 30.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=29 */
%   | else return -0.07537207248346768;  // std dev = 0.262, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06816109140795151;  // std dev = 3.16e-08, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15814361404253846;  // std dev = 0.020, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.338632226093432;  // std dev = 0.011, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(B) )
%   | | | then return -0.06395719645702334;  // std dev = 0.000, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | | else return 0.13820954406216185;  // std dev = 0.018, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else if ( actor(B) )
%   | | | then return -0.06395719645702334;  // std dev = 0.000, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   | | | else return -0.26937257181047464;  // std dev = 0.010, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.399', 'seconds']
Refined model CLL: -0.069684


******************************************
Best model found
******************************************
Results 

CLL : -0.085262 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.441 

Total Inference Time : 0.9921875 

Total revision time: 3.8988914604187013
Best scored revision CLL: -0.069684


Results 

CLL : -0.085262 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.133239995956423 

Total Inference Time : 0.9921875 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.21397715595840927;  // std dev = 6.112, 163.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13372073056033693;  // std dev = 6.355, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1797792302560877;  // std dev = 6.048, 157.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07709268536170896;  // std dev = 6.390, 196.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15437751039753606;  // std dev = 5.964, 150.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09271160834984885;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05996271983673968;  // std dev = 6.191, 171.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06880385672685209;  // std dev = 0.480, 161.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0566460113459073;  // std dev = 6.081, 160.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009672818797673725;  // std dev = 6.245, 177.000 (wgt'ed) examples reached here.  /* #neg=119 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.090', 'seconds']
Parameter learned model CLL:-0.398378 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.112, 105, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.355, 133, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.048, 99, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.39, 138, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.964, 92, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.191, 113, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.48, 103, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.081, 102, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.245, 119, 58]}]
{'': [nan, 0.22921449809928882], 'false': [nan, 0.22921449809928882]}
{'': [nan, 0.21145253693703486], 'false': [nan, 0.21145253693703486]}
{'': [nan, 0.23295062680027806], 'false': [nan, 0.23295062680027806]}
{'': [nan, 0.20835068721365993], 'false': [nan, 0.20835068721365993]}
{'': [nan, 0.2371555555555568], 'false': [nan, 0.2371555555555568]}
{'': [nan, 0.22858417608566398], 'false': [nan, 0.22858417608566398]}
{'': [nan, 0.22413734140419098], 'false': [nan, 0.22413734140419098]}
{'': [nan, 0.2304695034913778]}
{'': [nan, 0.23109374999999988], 'false': [nan, 0.23109374999999988]}
{'': [nan, 0.2203070637428573], 'false': [nan, 0.2203070637428573]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.658
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004879;  // std dev = 0.000, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839108;  // std dev = 7.74e-08, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.11231637819360621;  // std dev = 8.43e-08, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 3.73e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.1015963294878363;  // std dev = 2.11e-08, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926097;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.09269127618926101;  // std dev = 3.33e-08, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.05e-08, 110.000 (wgt'ed) examples reached here.  /* #neg=110 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0787767547310916;  // std dev = 5.77e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else return -0.07520920267191182;  // std dev = 0.213, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else return -0.07005851838514315;  // std dev = 0.203, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06397625089069404;  // std dev = 0.000, 126.000 (wgt'ed) examples reached here.  /* #neg=126 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.353', 'seconds']
Refined model CLL: -0.063545


******************************************
Best model found
******************************************
Results 

CLL : -0.066888 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.658 

Total Inference Time : 0.9714953899383545 

Total revision time: 4.08465760231018
Best scored revision CLL: -0.063545


Results 

CLL : -0.066888 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.3190061378479 

Total Inference Time : 0.9714953899383545 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.873
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17886965582022857;  // std dev = 10.996, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17271186991406626;  // std dev = 10.857, 527.000 (wgt'ed) examples reached here.  /* #neg=349 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14497148880456007;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1340707834642092;  // std dev = 10.776, 512.000 (wgt'ed) examples reached here.  /* #neg=334 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11690898236019115;  // std dev = 10.724, 503.000 (wgt'ed) examples reached here.  /* #neg=325 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07646496406141812;  // std dev = 10.878, 531.000 (wgt'ed) examples reached here.  /* #neg=353 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0476138956585383;  // std dev = 10.991, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.03979720611698825;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04829400711627202;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03887196309762319;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.087', 'seconds']
Parameter learned model CLL:-0.408996 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.996, 377, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.857, 349, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.776, 334, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.724, 325, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.878, 353, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.991, 376, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.468, 373, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.841, 346, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
{'': [nan, 0.21785894002110515], 'false': [nan, 0.21785894002110515]}
{'': [nan, 0.22367847794072399], 'false': [nan, 0.22367847794072399]}
{'': [nan, 0.2228464220229026], 'false': [nan, 0.2228464220229026]}
{'': [nan, 0.22679138183594116], 'false': [nan, 0.22679138183594116]}
{'': [nan, 0.22864799275915185], 'false': [nan, 0.22864799275915185]}
{'': [nan, 0.222846422022904], 'false': [nan, 0.222846422022904]}
{'': [nan, 0.21806618097460312], 'false': [nan, 0.21806618097460312]}
{'': [nan, 0.21868834424128725]}
{'': [nan, 0.2243021968416749], 'false': [nan, 0.2243021968416749]}
{'': [nan, 0.22451001539142001], 'false': [nan, 0.22451001539142001]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.224
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048766;  // std dev = 6.66e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.14185106490048824;  // std dev = 0.000, 273.000 (wgt'ed) examples reached here.  /* #neg=273 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.1254446385283918;  // std dev = 0.000, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360626;  // std dev = 5.16e-08, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.11231637819360685;  // std dev = 0.000, 320.000 (wgt'ed) examples reached here.  /* #neg=320 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783624;  // std dev = 3.49e-08, 53.000 (wgt'ed) examples reached here.  /* #neg=53 */
%   | | else return -0.10159632948783644;  // std dev = 0.000, 304.000 (wgt'ed) examples reached here.  /* #neg=304 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926107;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.09269127618926067;  // std dev = 2.11e-08, 275.000 (wgt'ed) examples reached here.  /* #neg=275 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839679;  // std dev = 1.67e-08, 58.000 (wgt'ed) examples reached here.  /* #neg=58 */
%   | | else return -0.08518475138839678;  // std dev = 8.16e-08, 289.000 (wgt'ed) examples reached here.  /* #neg=289 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | | else return -0.07877675473109146;  // std dev = 6.14e-08, 279.000 (wgt'ed) examples reached here.  /* #neg=279 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | else return -0.07324622576333682;  // std dev = 1.03e-07, 290.000 (wgt'ed) examples reached here.  /* #neg=290 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420268;  // std dev = 2.47e-08, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   | | else return -0.06842697784420271;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202625;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.06419184008202623;  // std dev = 0.000, 291.000 (wgt'ed) examples reached here.  /* #neg=291 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.425', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.224 

Total Inference Time : 0.9908442497253418 

Total revision time: 4.904246208190918
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.13859474372864 

Total Inference Time : 0.9908442497253418 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.604
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1581489350995121;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.176132519444633;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15591720400323122;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1089084826438329;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07902840762082257;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08280154249132905;  // std dev = 5.497, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.040682576037877116;  // std dev = 5.604, 149.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.059207166837980774;  // std dev = 0.470, 137.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04036118194115309;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.041587656718020824;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.159', 'seconds']
Parameter learned model CLL:-0.373632 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.497, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.604, 104, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.47, 92, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
{'': [nan, 0.21000000000000105], 'false': [nan, 0.21000000000000105]}
{'': [nan, 0.22386794052801154], 'false': [nan, 0.22386794052801154]}
{'': [nan, 0.22551133383835484], 'false': [nan, 0.22551133383835484]}
{'': [nan, 0.21811224489795852], 'false': [nan, 0.21811224489795852]}
{'': [nan, 0.21403091557669512], 'false': [nan, 0.21403091557669512]}
{'': [nan, 0.2205764824977355], 'false': [nan, 0.2205764824977355]}
{'': [nan, 0.2108013152560689], 'false': [nan, 0.2108013152560689]}
{'': [nan, 0.2205764824977355]}
{'': [nan, 0.218112244897959], 'false': [nan, 0.218112244897959]}
{'': [nan, 0.22139922145328755], 'false': [nan, 0.22139922145328755]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.319
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.12544463852839147;  // std dev = 0.000, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360621;  // std dev = 7.15e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360638;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then return 0.40622858603556794;  // std dev = 0.076, 46.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=45 */
%   | | else return -0.10484805615342326;  // std dev = 0.272, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3231753070752301;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14512206266854047;  // std dev = 5.27e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.095490747607922;  // std dev = 0.257, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08471437389474155;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25685247655811655;  // std dev = 4.21e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1280283086816164;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2109439076410313;  // std dev = 8.43e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1144030835382235;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.07832543845214376;  // std dev = 0.003, 65.000 (wgt'ed) examples reached here.  /* #neg=65 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07289879008307124;  // std dev = 0.000, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17796602553612414;  // std dev = 4.94e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.1033136201781555;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then return 0.14286995109069323;  // std dev = 0.050, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
%   | | else if ( actor(A) )
%   | | | then return -0.06812277458495873;  // std dev = 3.49e-08, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | | | else return -0.10582565210003383;  // std dev = 0.325, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1357525907231786;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10703604018893942;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.06361509914990586;  // std dev = 0.008, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.516', 'seconds']
Refined model CLL: -0.066648


******************************************
Best model found
******************************************
Results 

CLL : -0.070221 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.319 

Total Inference Time : 0.7660467624664307 

Total revision time: 3.3607756118774414
Best scored revision CLL: -0.066648


Results 

CLL : -0.070221 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.595124147415163 

Total Inference Time : 0.7660467624664307 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.627
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1896505723747103;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.176274034283997;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09657117224032581;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06820974935374502;  // std dev = 5.571, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0598142860157386;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.07194985215784536;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036210191405587164;  // std dev = 0.465, 142.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04282245465737855;  // std dev = 5.487, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.02222788124016342;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.210', 'seconds']
Parameter learned model CLL:-0.376797 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.571, 100, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.465, 97, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.487, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.22959183673469324], 'false': [nan, 0.22959183673469324]}
{'': [nan, 0.2335906017348538], 'false': [nan, 0.2335906017348538]}
{'': [nan, 0.21811224489795888], 'false': [nan, 0.21811224489795888]}
{'': [nan, 0.21403091557669343], 'false': [nan, 0.21403091557669343]}
{'': [nan, 0.21565846740671984], 'false': [nan, 0.21565846740671984]}
{'': [nan, 0.2238679405280109], 'false': [nan, 0.2238679405280109]}
{'': [nan, 0.21647490577266418]}
{'': [nan, 0.22139922145328697], 'false': [nan, 0.22139922145328697]}
{'': [nan, 0.21729289271163532], 'false': [nan, 0.21729289271163532]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.322
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.30e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839144;  // std dev = 0.000, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.5553664367462846;  // std dev = 0.000, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | | | else return 0.4997262021679603;  // std dev = 0.904, 24.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=22 */
%   | | else return -0.11231637819360625;  // std dev = 5.87e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4241577551860988;  // std dev = 0.046, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1779564194850243;  // std dev = 0.007, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.10333042848359646;  // std dev = 0.133, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0925455421217551;  // std dev = 5.96e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3252365329807285;  // std dev = 0.041, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.15220163666865164;  // std dev = 0.011, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08506105432191921;  // std dev = 5.48e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25826723092449927;  // std dev = 0.036, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.13465837245821055;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07867052790829443;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2119475883839973;  // std dev = 0.031, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11972555776503609;  // std dev = 0.005, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07315406657419211;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | else if ( female(A) )
%   | | then return 0.15197923748351574;  // std dev = 0.077, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.182879716955378;  // std dev = 2.79e-08, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.1422424273313674;  // std dev = 0.273, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.1449609857387481;  // std dev = 0.273, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | else return -0.07201727494506915;  // std dev = 0.354, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.137523900627427;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1398072824219349;  // std dev = 0.003, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else if ( actor(A) )
%   | | | then return -0.06390071607154216;  // std dev = 1.49e-08, 84.000 (wgt'ed) examples reached here.  /* #neg=84 */
%   | | | else return -0.09820467111032315;  // std dev = 0.325, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.514', 'seconds']
Refined model CLL: -0.066803


******************************************
Best model found
******************************************
Results 

CLL : -0.07326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.322 

Total Inference Time : 0.8623833656311035 

Total revision time: 3.5333172073364256
Best scored revision CLL: -0.066803


Results 

CLL : -0.07326 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.767665742874144 

Total Inference Time : 0.8623833656311035 

Run: 4
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.647
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17633075328133166;  // std dev = 6.179, 176.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1666614890805121;  // std dev = 6.119, 169.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14440792577843012;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1401491344921801;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09299946979493601;  // std dev = 6.128, 170.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09639011920348248;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0799164425730137;  // std dev = 6.023, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.06379656133991375;  // std dev = 0.478, 159.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03365724282305321;  // std dev = 6.101, 167.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03901658063356994;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.098', 'seconds']
Parameter learned model CLL:-0.394314 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.179, 120, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.119, 113, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.128, 114, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.023, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.478, 103, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.101, 111, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
{'': [nan, 0.21694214876033097], 'false': [nan, 0.21694214876033097]}
{'': [nan, 0.2215608697174495], 'false': [nan, 0.2215608697174495]}
{'': [nan, 0.22222222222222418], 'false': [nan, 0.22222222222222418]}
{'': [nan, 0.22815553182231668], 'false': [nan, 0.22815553182231668]}
{'': [nan, 0.2208996539792406], 'false': [nan, 0.2208996539792406]}
{'': [nan, 0.22749999999999862], 'false': [nan, 0.22749999999999862]}
{'': [nan, 0.22815553182231638], 'false': [nan, 0.22815553182231638]}
{'': [nan, 0.22815553182231785]}
{'': [nan, 0.2228835741690284], 'false': [nan, 0.2228835741690284]}
{'': [nan, 0.22684310018903586], 'false': [nan, 0.22684310018903586]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.394
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048768;  // std dev = 6.66e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 9.06e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462837;  // std dev = 1.03e-07, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.11231637819360639;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783624;  // std dev = 4.71e-08, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926097;  // std dev = 4.83e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.09269127618926094;  // std dev = 2.63e-09, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.41e-08, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08518475138839687;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109155;  // std dev = 7.07e-08, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333716;  // std dev = 0.000, 122.000 (wgt'ed) examples reached here.  /* #neg=122 */
%   | else return 0.17709649774527736;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420265;  // std dev = 4.71e-08, 97.000 (wgt'ed) examples reached here.  /* #neg=97 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936708;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.08621393187196418;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06419184008202626;  // std dev = 0.000, 119.000 (wgt'ed) examples reached here.  /* #neg=119 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801079;  // std dev = 5.16e-08, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.07965977724867425;  // std dev = 2.63e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.328', 'seconds']
Refined model CLL: -0.065759


******************************************
Best model found
******************************************
Results 

CLL : -0.087238 

AUC ROC : 0.994647 

AUC PR : 0.735892 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.394 

Total Inference Time : 0.8790032863616943 

Total revision time: 3.7206371936798095
Best scored revision CLL: -0.065759


Results 

CLL : -0.087238 

AUC ROC : 0.994647 

AUC PR : 0.735892 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 29.95399033164978 

Total Inference Time : 0.8790032863616943 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.743
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20754652546095936;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15140299874398597;  // std dev = 6.278, 181.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16013242244008552;  // std dev = 6.133, 165.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11593934222561866;  // std dev = 6.218, 174.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0974963108271905;  // std dev = 6.209, 173.000 (wgt'ed) examples reached here.  /* #neg=115 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09142323244274703;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10790451702160511;  // std dev = 5.989, 152.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.04553804478704878;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06188009807514283;  // std dev = 6.059, 158.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.008325955913065236;  // std dev = 6.325, 187.000 (wgt'ed) examples reached here.  /* #neg=129 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.062', 'seconds']
Parameter learned model CLL:-0.393609 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.278, 123, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.133, 107, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.218, 116, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.209, 115, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.989, 94, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 112, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.059, 100, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.325, 129, 58]}]
{'': [nan, 0.22731891421106132], 'false': [nan, 0.22731891421106132]}
{'': [nan, 0.2177589206678684], 'false': [nan, 0.2177589206678684]}
{'': [nan, 0.22795224977043066], 'false': [nan, 0.22795224977043066]}
{'': [nan, 0.22222222222222118], 'false': [nan, 0.22222222222222118]}
{'': [nan, 0.22286077049015962], 'false': [nan, 0.22286077049015962]}
{'': [nan, 0.2266843558392199], 'false': [nan, 0.2266843558392199]}
{'': [nan, 0.23597645429362846], 'false': [nan, 0.23597645429362846]}
{'': [nan, 0.22477508650518893]}
{'': [nan, 0.23233456176894776], 'false': [nan, 0.23233456176894776]}
{'': [nan, 0.21396093682976267], 'false': [nan, 0.21396093682976267]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.553
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 8.43e-08, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.12544463852839133;  // std dev = 0.000, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360617;  // std dev = 1.01e-07, 133.000 (wgt'ed) examples reached here.  /* #neg=133 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1015963294878364;  // std dev = 0.000, 130.000 (wgt'ed) examples reached here.  /* #neg=130 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783628;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926087;  // std dev = 6.58e-08, 111.000 (wgt'ed) examples reached here.  /* #neg=111 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839682;  // std dev = 5.87e-08, 106.000 (wgt'ed) examples reached here.  /* #neg=106 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109161;  // std dev = 5.27e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109173;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( actor(A) )
%   | | | then return -0.06842697784420265;  // std dev = 4.47e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | | | else return -0.1082970938938704;  // std dev = 0.378, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06407701880330359;  // std dev = 0.006, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.548', 'seconds']
Refined model CLL: -0.063936


******************************************
Best model found
******************************************
Results 

CLL : -0.069951 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.553 

Total Inference Time : 0.9847261905670166 

Total revision time: 4.106437679290771
Best scored revision CLL: -0.063936


Results 

CLL : -0.069951 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 30.33979081726074 

Total Inference Time : 0.9847261905670166 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.906
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1946328670465778;  // std dev = 10.868, 529.000 (wgt'ed) examples reached here.  /* #neg=351 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16988839196872016;  // std dev = 10.862, 528.000 (wgt'ed) examples reached here.  /* #neg=350 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16375353199301781;  // std dev = 10.707, 500.000 (wgt'ed) examples reached here.  /* #neg=322 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13005754004233172;  // std dev = 10.765, 510.000 (wgt'ed) examples reached here.  /* #neg=332 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08822688082416097;  // std dev = 10.919, 539.000 (wgt'ed) examples reached here.  /* #neg=361 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0811297338537174;  // std dev = 10.841, 524.000 (wgt'ed) examples reached here.  /* #neg=346 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06016636635754347;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.036487833490596144;  // std dev = 0.468, 551.000 (wgt'ed) examples reached here.  /* #neg=373 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03677642546280716;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03218809322461159;  // std dev = 10.888, 533.000 (wgt'ed) examples reached here.  /* #neg=355 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.059', 'seconds']
Parameter learned model CLL:-0.40762 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.868, 351, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.862, 350, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.707, 322, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.765, 332, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.919, 361, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.841, 346, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.468, 373, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.914, 360, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.888, 355, 178]}]
{'': [nan, 0.22326249548851265], 'false': [nan, 0.22326249548851265]}
{'': [nan, 0.22347050045913303], 'false': [nan, 0.22347050045913303]}
{'': [nan, 0.2292639999999958], 'false': [nan, 0.2292639999999958]}
{'': [nan, 0.22720492118415492], 'false': [nan, 0.22720492118415492]}
{'': [nan, 0.2211819455392257], 'false': [nan, 0.2211819455392257]}
{'': [nan, 0.22430219684167366], 'false': [nan, 0.22430219684167366]}
{'': [nan, 0.22263836282435043], 'false': [nan, 0.22263836282435043]}
{'': [nan, 0.21868834424129055]}
{'': [nan, 0.22138997526292073], 'false': [nan, 0.22138997526292073]}
{'': [nan, 0.22243029473157627], 'false': [nan, 0.22243029473157627]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.271
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048768;  // std dev = 5.16e-08, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.14185106490048816;  // std dev = 0.000, 283.000 (wgt'ed) examples reached here.  /* #neg=283 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.12544463852839158;  // std dev = 0.000, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.12544463852839186;  // std dev = 0.000, 301.000 (wgt'ed) examples reached here.  /* #neg=301 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360628;  // std dev = 4.34e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.11231637819360682;  // std dev = 0.000, 278.000 (wgt'ed) examples reached here.  /* #neg=278 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1015963294878362;  // std dev = 4.21e-08, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.10159632948783644;  // std dev = 0.000, 306.000 (wgt'ed) examples reached here.  /* #neg=306 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( director(B), actor(A) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926083;  // std dev = 0.000, 66.000 (wgt'ed) examples reached here.  /* #neg=66 */
%   | | else return -0.09269127618926043;  // std dev = 1.49e-07, 284.000 (wgt'ed) examples reached here.  /* #neg=284 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839683;  // std dev = 4.08e-08, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.08518475138839679;  // std dev = 8.94e-08, 327.000 (wgt'ed) examples reached here.  /* #neg=327 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109176;  // std dev = 1.83e-08, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | else return -0.07877675473109148;  // std dev = 5.96e-08, 270.000 (wgt'ed) examples reached here.  /* #neg=270 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333707;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | else return -0.07324622576333696;  // std dev = 9.88e-08, 319.000 (wgt'ed) examples reached here.  /* #neg=319 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420268;  // std dev = 2.36e-08, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.06842697784420275;  // std dev = 0.000, 285.000 (wgt'ed) examples reached here.  /* #neg=285 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202626;  // std dev = 0.000, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.06419184008202626;  // std dev = 0.000, 265.000 (wgt'ed) examples reached here.  /* #neg=265 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.438', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.271 

Total Inference Time : 1.030846118927002 

Total revision time: 5.009863807678222
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.243216945648193 

Total Inference Time : 1.030846118927002 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.616
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.24276431971489715;  // std dev = 5.262, 117.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14064164786910402;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.14571300370114698;  // std dev = 5.446, 132.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12704737434923527;  // std dev = 5.424, 130.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0967286717321765;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03433623605829458;  // std dev = 5.636, 153.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09070450483777745;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0463448753527122;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.020619698650220123;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.05319831877689225;  // std dev = 5.402, 128.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.125', 'seconds']
Parameter learned model CLL:-0.389151 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.262, 72, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.446, 87, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.424, 85, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.636, 108, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.402, 83, 45]}]
{'': [nan, 0.23668639053254517], 'false': [nan, 0.23668639053254517]}
{'': [nan, 0.21565846740671787], 'false': [nan, 0.21565846740671787]}
{'': [nan, 0.22469008264462897], 'false': [nan, 0.22469008264462897]}
{'': [nan, 0.22633136094674564], 'false': [nan, 0.22633136094674564]}
{'': [nan, 0.22386794052801254], 'false': [nan, 0.22386794052801254]}
{'': [nan, 0.20761245674740406], 'false': [nan, 0.20761245674740406]}
{'': [nan, 0.22959183673469316], 'false': [nan, 0.22959183673469316]}
{'': [nan, 0.2213992214532864]}
{'': [nan, 0.21565846740671865], 'false': [nan, 0.21565846740671865]}
{'': [nan, 0.2279663085937512], 'false': [nan, 0.2279663085937512]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.31
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.88e-08, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | | else return 0.8155957436101503;  // std dev = 0.202, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839147;  // std dev = 0.000, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( female(A) )
%   | | | then return 0.6446479090948114;  // std dev = 0.957, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | | else return 0.6994098138567155;  // std dev = 0.986, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5740362934123472;  // std dev = 0.039, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.42421934268602224;  // std dev = 0.018, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.11591766650546885;  // std dev = 0.315, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.4416964458882916;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.3861267294357698;  // std dev = 1.042, 36.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=34 */
%   | | else return -0.10816062644747053;  // std dev = 0.419, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09183988703397998;  // std dev = 0.000, 99.000 (wgt'ed) examples reached here.  /* #neg=99 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3372963411228058;  // std dev = 0.000521, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.419951705736676;  // std dev = 0.000182, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2664591462855652;  // std dev = 0.000455, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.3224576621467467;  // std dev = 0.000144, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.09231907195009713;  // std dev = 0.460, 98.000 (wgt'ed) examples reached here.  /* #neg=98 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07759130987386881;  // std dev = 3.49e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2176998010257728;  // std dev = 0.000397, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.2563118135522254;  // std dev = 0.000178, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18290009495625137;  // std dev = 0.000348, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.210618324480013;  // std dev = 0.000116, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( actor(A) )
%   | | then return -0.07221687462307712;  // std dev = 0.000, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   | | else return -0.13167205879717728;  // std dev = 0.146, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06734277118852473;  // std dev = 0.007, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15713236530223185;  // std dev = 0.000308, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1776586013158968;  // std dev = 0.000108, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1374238190568125;  // std dev = 0.000276, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1531788700707568;  // std dev = 9.08e-05, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.06893783951898369;  // std dev = 0.441, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.655', 'seconds']
Refined model CLL: -0.069435


******************************************
Best model found
******************************************
Results 

CLL : -0.076519 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 1.31 

Total Inference Time : 0.8376762866973877 

Total revision time: 3.4727517375946046
Best scored revision CLL: -0.069435


Results 

CLL : -0.076519 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 29.706104875564577 

Total Inference Time : 0.8376762866973877 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.637
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17085357989350725;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11136818679625361;  // std dev = 5.596, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1252160526911675;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10617031842849918;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12026316374201253;  // std dev = 5.316, 121.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06855797040050171;  // std dev = 5.435, 131.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.042052908966765654;  // std dev = 0.471, 136.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.059599351817630965;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return -0.012135570445055026;  // std dev = 5.620, 151.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.115', 'seconds']
Parameter learned model CLL:-0.38479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.596, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.316, 76, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.435, 86, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.471, 91, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.62, 106, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.2238679405280111], 'false': [nan, 0.2238679405280111]}
{'': [nan, 0.2116051862673481], 'false': [nan, 0.2116051862673481]}
{'': [nan, 0.22304522165292923], 'false': [nan, 0.22304522165292923]}
{'': [nan, 0.22386794052801187], 'false': [nan, 0.22386794052801187]}
{'': [nan, 0.23359060173485532], 'false': [nan, 0.23359060173485532]}
{'': [nan, 0.22551133383835567], 'false': [nan, 0.22551133383835567]}
{'': [nan, 0.22139922145328736]}
{'': [nan, 0.2295918367346945], 'false': [nan, 0.2295918367346945]}
{'': [nan, 0.20920135081794733], 'false': [nan, 0.20920135081794733]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.459
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048763;  // std dev = 8.16e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( female(A) )
%   | | | then return 0.8164822684328453;  // std dev = 0.979, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.8146706742299468;  // std dev = 0.978, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7279810357883602;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.27212259933653193;  // std dev = 0.000321, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.1304926030536161;  // std dev = 0.249, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11181407310025082;  // std dev = 3.94e-08, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.563756614304969;  // std dev = 0.001, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.221516993260481;  // std dev = 0.000361, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10118217737205472;  // std dev = 5.05e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( female(A) )
%   | | | then return 0.3981573597309709;  // std dev = 0.597, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.3974884119001199;  // std dev = 0.596, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09234440227456543;  // std dev = 3.49e-08, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.330668230350124;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.25346062878593845;  // std dev = 0.000469, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.26195492883230753;  // std dev = 0.002, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.20865028864513252;  // std dev = 0.000355, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return -0.08627137722261097;  // std dev = 0.147, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( female(A) )
%   | | | then return 0.19805382588632048;  // std dev = 0.382, 24.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=23 */
%   | | | else return 0.21475129546227645;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.0800057551010466;  // std dev = 0.138, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( director(B), actor(A) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.18183137789297493;  // std dev = 0.007, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.20794518031609915;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else return -0.07560108327428652;  // std dev = 0.184, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06788997145141976;  // std dev = 0.000, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else return 0.15632650266792159;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06371782747952368;  // std dev = 3.16e-08, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.136797887432555;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1990411802887845;  // std dev = 0.002, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.512', 'seconds']
Refined model CLL: -0.069742


******************************************
Best model found
******************************************
Results 

CLL : -0.083368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.459 

Total Inference Time : 0.8237111568450928 

Total revision time: 3.6325581512451173
Best scored revision CLL: -0.069742


Results 

CLL : -0.083368 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.865911289215088 

Total Inference Time : 0.8237111568450928 

Run: 5
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 5 folds 

Start transfer learning experiment

Target train facts examples: 215
Target train pos examples: 56
Target train neg examples: 3308

Target test facts examples: 863
Target test pos examples: 326
Target test neg examples: 10928

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.639
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20814893509951354;  // std dev = 6.033, 160.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=56 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.16420970890030714;  // std dev = 6.110, 168.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=56 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15221255801098366;  // std dev = 6.053, 162.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=56 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12949673906709186;  // std dev = 6.043, 161.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=56 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10232538891016534;  // std dev = 6.063, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10318167940201474;  // std dev = 5.970, 154.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=56 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.04102457600481823;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.054384554267877805;  // std dev = 0.475, 163.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=56 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0123697233929454;  // std dev = 6.203, 179.000 (wgt'ed) examples reached here.  /* #neg=123 #pos=56 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.01875323113843553;  // std dev = 6.163, 174.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=56 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.060', 'seconds']
Parameter learned model CLL:-0.380363 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.033, 104, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.11, 112, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.053, 106, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.043, 105, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.063, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.97, 98, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.475, 107, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.203, 123, 56]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.163, 118, 56]}]
{'': [nan, 0.22750000000000026], 'false': [nan, 0.22750000000000026]}
{'': [nan, 0.2222222222222211], 'false': [nan, 0.2222222222222211]}
{'': [nan, 0.22618503276939705], 'false': [nan, 0.22618503276939705]}
{'': [nan, 0.22684310018903572], 'false': [nan, 0.22684310018903572]}
{'': [nan, 0.2255259889344742], 'false': [nan, 0.2255259889344742]}
{'': [nan, 0.2314049586776878], 'false': [nan, 0.2314049586776878]}
{'': [nan, 0.2182586867485791], 'false': [nan, 0.2182586867485791]}
{'': [nan, 0.22552598893447157]}
{'': [nan, 0.21497456384008007], 'false': [nan, 0.21497456384008007]}
{'': [nan, 0.21825868674857996], 'false': [nan, 0.21825868674857996]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.478
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 123.000 (wgt'ed) examples reached here.  /* #neg=123 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995124;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.12692160947373068;  // std dev = 0.154, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11216920640568176;  // std dev = 6.50e-08, 92.000 (wgt'ed) examples reached here.  /* #neg=92 */
%   | | else if ( female(A) )
%   | | | then return 0.5093193460607749;  // std dev = 0.911, 29.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=27 */
%   | | | else return 0.5553664367462845;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10147501700311824;  // std dev = 0.000, 118.000 (wgt'ed) examples reached here.  /* #neg=118 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4229324703304599;  // std dev = 0.042, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.17561617674889973;  // std dev = 0.006, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09258969295363413;  // std dev = 0.000, 120.000 (wgt'ed) examples reached here.  /* #neg=120 */
%   | | else if ( female(A) )
%   | | | then return 0.3124925289426552;  // std dev = 0.471, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | | | else return 0.3195324603141927;  // std dev = 0.000, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0850985318721378;  // std dev = 2.11e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2592848573886722;  // std dev = 0.038, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.20082810030498902;  // std dev = 0.007, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07870271454004822;  // std dev = 0.000, 102.000 (wgt'ed) examples reached here.  /* #neg=102 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.21266413087372874;  // std dev = 0.033, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.16990082231427026;  // std dev = 0.006, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07318199238971436;  // std dev = 4.94e-08, 108.000 (wgt'ed) examples reached here.  /* #neg=108 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17922876268131252;  // std dev = 0.029, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | else return -0.14726475024209015;  // std dev = 0.008, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( female(A) )
%   | | | then return 0.15795218444255849;  // std dev = 2.36e-08, 27.000 (wgt'ed) examples reached here.  /* #pos=27 */
%   | | | else return 0.1327789970647059;  // std dev = 0.387, 31.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=29 */
%   | | else return -0.06897806660731023;  // std dev = 0.063, 104.000 (wgt'ed) examples reached here.  /* #neg=104 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13635721083001898;  // std dev = 0.012, 56.000 (wgt'ed) examples reached here.  /* #pos=56 */
%   | | | else return -0.14546660931410904;  // std dev = 0.005, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( actor(A) )
%   | | | then return -0.06410578177927896;  // std dev = 1.67e-08, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   | | | else return -0.11646176596794915;  // std dev = 0.602, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.308', 'seconds']
Refined model CLL: -0.0667


******************************************
Best model found
******************************************
Results 

CLL : -0.082307 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 1.478 

Total Inference Time : 0.9908044338226318 

Total revision time: 3.932046787261963
Best scored revision CLL: -0.0667


Results 

CLL : -0.082307 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.735892 

Recall : 1.0 

F1 : 0.847854 

Total Learning Time : 30.165437118530274 

Total Inference Time : 0.9908044338226318 


 Starting fold 2 of 5 folds 

Start transfer learning experiment

Target train facts examples: 208
Target train pos examples: 58
Target train neg examples: 3423

Target test facts examples: 870
Target test pos examples: 324
Target test neg examples: 10813

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.685
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18957750652808503;  // std dev = 6.227, 175.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=58 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18286762618520433;  // std dev = 6.143, 166.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=58 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15382543907365906;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08034956821917909;  // std dev = 6.377, 194.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=58 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.11054027071679137;  // std dev = 6.172, 169.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=58 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.09433636224538257;  // std dev = 6.153, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.08245071689555934;  // std dev = 6.123, 164.000 (wgt'ed) examples reached here.  /* #neg=106 #pos=58 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05336817610193356;  // std dev = 0.474, 170.000 (wgt'ed) examples reached here.  /* #neg=112 #pos=58 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.008008246334344398;  // std dev = 6.340, 189.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=58 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.018130457886156214;  // std dev = 6.286, 182.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=58 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.062', 'seconds']
Parameter learned model CLL:-0.376718 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.227, 117, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.143, 108, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.377, 136, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.172, 111, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.153, 109, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.123, 106, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.474, 112, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.34, 131, 58]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [6.286, 124, 58]}]
{'': [nan, 0.22158367346938804], 'false': [nan, 0.22158367346938804]}
{'': [nan, 0.2273189142110609], 'false': [nan, 0.2273189142110609]}
{'': [nan, 0.22668435583921714], 'false': [nan, 0.22668435583921714]}
{'': [nan, 0.2095865660537758], 'false': [nan, 0.2095865660537758]}
{'': [nan, 0.22541227548054907], 'false': [nan, 0.22541227548054907]}
{'': [nan, 0.22668435583921956], 'false': [nan, 0.22668435583921956]}
{'': [nan, 0.2285841760856642], 'false': [nan, 0.2285841760856642]}
{'': [nan, 0.2247750865051897]}
{'': [nan, 0.21270401164580988], 'false': [nan, 0.21270401164580988]}
{'': [nan, 0.21712353580485597], 'false': [nan, 0.21712353580485597]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.553
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995125;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.14185106490048766;  // std dev = 7.88e-08, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.12544463852839133;  // std dev = 0.000, 109.000 (wgt'ed) examples reached here.  /* #neg=109 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360618;  // std dev = 8.43e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462838;  // std dev = 1.19e-07, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10159632948783635;  // std dev = 0.000, 115.000 (wgt'ed) examples reached here.  /* #neg=115 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.4175135841583103;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.09269127618926098;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else return -0.09269127618926097;  // std dev = 4.59e-08, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.0851847513883968;  // std dev = 6.05e-08, 112.000 (wgt'ed) examples reached here.  /* #neg=112 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.25517224256948967;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.08518475138839687;  // std dev = 2.63e-09, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253562;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.07877675473109179;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else return -0.07877675473109166;  // std dev = 4.59e-08, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07324622576333707;  // std dev = 0.000, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   | else if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527733;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | else return -0.07324622576333704;  // std dev = 2.63e-09, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06842697784420264;  // std dev = 5.48e-08, 117.000 (wgt'ed) examples reached here.  /* #neg=117 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15274385809367078;  // std dev = 0.000, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.06842697784420272;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 3.94e-08, 58.000 (wgt'ed) examples reached here.  /* #pos=58 */
%   | | | else return -0.0641918400820262;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( actor(A) )
%   | | | then return -0.06419184008202626;  // std dev = 0.000, 107.000 (wgt'ed) examples reached here.  /* #neg=107 */
%   | | | else return -0.10391918734012444;  // std dev = 0.456, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.461', 'seconds']
Refined model CLL: -0.064025


******************************************
Best model found
******************************************
Results 

CLL : -0.070802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 1.553 

Total Inference Time : 0.951087474822998 

Total revision time: 3.9704774265289307
Best scored revision CLL: -0.064025


Results 

CLL : -0.070802 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.736364 

Recall : 1.0 

F1 : 0.848168 

Total Learning Time : 30.20386775779724 

Total Inference Time : 0.951087474822998 


 Starting fold 3 of 5 folds 

Start transfer learning experiment

Target train facts examples: 341
Target train pos examples: 178
Target train neg examples: 3543

Target test facts examples: 737
Target test pos examples: 204
Target test neg examples: 10693

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.881
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.18535481745244903;  // std dev = 10.943, 544.000 (wgt'ed) examples reached here.  /* #neg=366 #pos=178 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15477603120616104;  // std dev = 10.996, 555.000 (wgt'ed) examples reached here.  /* #neg=377 #pos=178 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.15316333279425035;  // std dev = 10.825, 521.000 (wgt'ed) examples reached here.  /* #neg=343 #pos=178 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12154786420299256;  // std dev = 10.883, 532.000 (wgt'ed) examples reached here.  /* #neg=354 #pos=178 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.10621811822742529;  // std dev = 10.836, 523.000 (wgt'ed) examples reached here.  /* #neg=345 #pos=178 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06759294373095308;  // std dev = 10.991, 554.000 (wgt'ed) examples reached here.  /* #neg=376 #pos=178 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06913271210900576;  // std dev = 10.873, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.05539575106625368;  // std dev = 0.472, 530.000 (wgt'ed) examples reached here.  /* #neg=352 #pos=178 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03908819054134972;  // std dev = 10.914, 538.000 (wgt'ed) examples reached here.  /* #neg=360 #pos=178 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.032801071960364504;  // std dev = 10.899, 535.000 (wgt'ed) examples reached here.  /* #neg=357 #pos=178 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.123', 'seconds']
Parameter learned model CLL:-0.405479 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.943, 366, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.996, 377, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.825, 343, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.883, 354, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.836, 345, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.991, 376, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.873, 352, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.472, 352, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.914, 360, 178]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [10.899, 357, 178]}]
{'': [nan, 0.2201421929065774], 'false': [nan, 0.2201421929065774]}
{'': [nan, 0.21785894002110098], 'false': [nan, 0.21785894002110098]}
{'': [nan, 0.22492549025386946], 'false': [nan, 0.22492549025386946]}
{'': [nan, 0.22263836282435495], 'false': [nan, 0.22263836282435495]}
{'': [nan, 0.2245100153914226], 'false': [nan, 0.2245100153914226]}
{'': [nan, 0.21806618097459535], 'false': [nan, 0.21806618097459535]}
{'': [nan, 0.2230544677821302], 'false': [nan, 0.2230544677821302]}
{'': [nan, 0.2230544677821342]}
{'': [nan, 0.22138997526291349], 'false': [nan, 0.22138997526291349]}
{'': [nan, 0.22201414970739436], 'false': [nan, 0.22201414970739436]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 2.175
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.8581489350995095;  // std dev = 1.09e-06, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.14185106490048766;  // std dev = 5.77e-08, 55.000 (wgt'ed) examples reached here.  /* #neg=55 */
%   | | else return -0.14185106490048813;  // std dev = 0.000, 310.000 (wgt'ed) examples reached here.  /* #neg=310 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.7194734122109567;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.1254446385283916;  // std dev = 0.000, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.12544463852839183;  // std dev = 0.000, 282.000 (wgt'ed) examples reached here.  /* #neg=282 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462833;  // std dev = 5.90e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.11231637819360625;  // std dev = 5.27e-08, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   | | else return -0.1123163781936068;  // std dev = 0.000, 311.000 (wgt'ed) examples reached here.  /* #neg=311 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( movie(F, A), movie(F, B) )
%   | | then if ( actor(A), director(B) )
%   | | | then return 0.4175135841583096;  // std dev = 3.77e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.10159632948783623;  // std dev = 0.000, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else return -0.10159632948783662;  // std dev = 0.000, 302.000 (wgt'ed) examples reached here.  /* #neg=302 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014917;  // std dev = 3.58e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.09269127618926104;  // std dev = 0.000, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   | | else return -0.09269127618926064;  // std dev = 7.60e-08, 298.000 (wgt'ed) examples reached here.  /* #neg=298 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2551722425694888;  // std dev = 3.63e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.08518475138839679;  // std dev = 7.45e-09, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else return -0.08518475138839678;  // std dev = 8.16e-08, 287.000 (wgt'ed) examples reached here.  /* #neg=287 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.20975771563253506;  // std dev = 3.00e-07, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.07877675473109172;  // std dev = 2.11e-08, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else return -0.07877675473109147;  // std dev = 5.96e-08, 269.000 (wgt'ed) examples reached here.  /* #neg=269 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17709649774527825;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | else return -0.07324622576333704;  // std dev = 0.000, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | else return -0.07324622576333682;  // std dev = 1.04e-07, 293.000 (wgt'ed) examples reached here.  /* #neg=293 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.1527438580936715;  // std dev = 0.000, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06842697784420264;  // std dev = 2.47e-08, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   | | else return -0.06842697784420285;  // std dev = 0.000, 300.000 (wgt'ed) examples reached here.  /* #neg=300 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13400703000801098;  // std dev = 7.60e-08, 178.000 (wgt'ed) examples reached here.  /* #pos=178 */
%   | | | else return -0.06419184008202623;  // std dev = 0.000, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   | | else return -0.06419184008202625;  // std dev = 0.000, 297.000 (wgt'ed) examples reached here.  /* #neg=297 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.420', 'seconds']
Refined model CLL: -0.065435


******************************************
Best model found
******************************************
Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 2.175 

Total Inference Time : 1.0292384624481201 

Total revision time: 4.9186790046691895
Best scored revision CLL: -0.065435


Results 

CLL : -0.063555 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 1.0 

Recall : 1.0 

F1 : 1.0 

Total Learning Time : 31.1520693359375 

Total Inference Time : 1.0292384624481201 


 Starting fold 4 of 5 folds 

Start transfer learning experiment

Target train facts examples: 151
Target train pos examples: 45
Target train neg examples: 1891

Target test facts examples: 927
Target test pos examples: 337
Target test neg examples: 12345

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.615
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.20698614440183793;  // std dev = 5.413, 129.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1524682804433201;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.1714423484654179;  // std dev = 5.354, 124.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.13773205360423774;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.0752407916242146;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06337893340373892;  // std dev = 5.526, 140.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.029631042174427916;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.09874612718962847;  // std dev = 0.484, 120.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.009696204591646777;  // std dev = 5.588, 147.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.058690410743323;  // std dev = 5.379, 126.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.226', 'seconds']
Parameter learned model CLL:-0.390848 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.413, 84, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.354, 79, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.526, 95, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.484, 75, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.588, 102, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.379, 81, 45]}]
{'': [nan, 0.227149810708492], 'false': [nan, 0.227149810708492]}
{'': [nan, 0.21811224489795988], 'false': [nan, 0.21811224489795988]}
{'': [nan, 0.2312044745057229], 'false': [nan, 0.2312044745057229]}
{'': [nan, 0.2295918367346931], 'false': [nan, 0.2295918367346931]}
{'': [nan, 0.2172928927116341], 'false': [nan, 0.2172928927116341]}
{'': [nan, 0.21811224489796002], 'false': [nan, 0.21811224489796002]}
{'': [nan, 0.20999999999999924], 'false': [nan, 0.20999999999999924]}
{'': [nan, 0.2343750000000006]}
{'': [nan, 0.21241149521033023], 'false': [nan, 0.21241149521033023]}
{'': [nan, 0.22959183673469444], 'false': [nan, 0.22959183673469444]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.257
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.12544463852839155;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.11231637819360622;  // std dev = 6.32e-08, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1015963294878362;  // std dev = 5.27e-08, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10159632948783627;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09269127618926107;  // std dev = 1.05e-08, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   | | else if ( female(A) )
%   | | | then return 0.3207118471601497;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.30890032935016637;  // std dev = 0.407, 35.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=34 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.08518475138839678;  // std dev = 3.49e-08, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2568732806609658;  // std dev = 0.006, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12250465664677823;  // std dev = 0.002, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.07877675473109162;  // std dev = 4.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else return 0.19731789706657782;  // std dev = 0.065, 47.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(A), director(B) )
%   | then if ( movie(D, A), movie(D, B) )
%   | | then return 0.17998149125710713;  // std dev = 0.005, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.13039227169826653;  // std dev = 3.73e-09, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return -0.07380104174328782;  // std dev = 0.057, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15492899467377977;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1166543309188357;  // std dev = 0.001, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( actor(A) )
%   | | | then return -0.06839161971846092;  // std dev = 0.000, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   | | | else return -0.12565974596880958;  // std dev = 0.547, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06394285178327287;  // std dev = 0.007, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13571068759777602;  // std dev = 0.004, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10484240731863119;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.596', 'seconds']
Refined model CLL: -0.068142


******************************************
Best model found
******************************************
Results 

CLL : -0.076382 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 1.257 

Total Inference Time : 0.7879185676574707 

Total revision time: 3.3438742370605468
Best scored revision CLL: -0.068142


Results 

CLL : -0.076382 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.743929 

Recall : 1.0 

F1 : 0.853165 

Total Learning Time : 29.577264568328857 

Total Inference Time : 0.7879185676574707 


 Starting fold 5 of 5 folds 

Start transfer learning experiment

Target train facts examples: 163
Target train pos examples: 45
Target train neg examples: 2071

Target test facts examples: 915
Target test pos examples: 337
Target test neg examples: 12165

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
0;true;haswordtitle(D, C).;true;true
0;true,true;title(E, D), venue(E, A).;false;true
0;true,true,false;title(F, D), venue(F, B).;false;false
0;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
0;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
0;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
0;false;haswordvenue(A, M), haswordtitle(N, M).;false;false
1;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
1;true;haswordtitle(D, C).;true;true
1;true,true;title(E, D), venue(E, B).;false;true
1;true,true,false;title(F, D), venue(F, A).;false;false
1;true,false;haswordvenue(B, G), haswordtitle(H, G).;true;true
1;true,false,true;haswordtitle(H, I), haswordauthor(J, I).;false;false
1;true,false,false;haswordvenue(A, K), haswordauthor(L, K).;false;false
1;false;haswordvenue(B, M), haswordtitle(N, M).;false;false
2;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
2;true;haswordtitle(D, C).;true;true
2;true,true;title(E, D), venue(E, A).;false;true
2;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
2;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
2;true,false,true;haswordtitle(I, J), haswordauthor(K, J).;false;false
2;true,false,false;haswordvenue(B, L), haswordtitle(M, L).;false;false
2;false;haswordvenue(A, N), haswordtitle(P, N).;false;false
3;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
3;true;haswordtitle(D, C).;true;true
3;true,true;haswordauthor(E, C).;false;true
3;true,true,false;title(F, D), venue(F, B).;false;false
3;true,false;haswordvenue(B, G), haswordauthor(H, G).;false;true
3;true,false,false;haswordvenue(B, I), haswordtitle(J, I).;false;false
3;false;haswordvenue(B, K), haswordtitle(L, K).;true;false
3;false,true;haswordtitle(L, M), haswordauthor(N, M).;false;false
4;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
4;true;haswordtitle(D, C).;true;true
4;true,true;title(E, D), venue(E, B).;false;true
4;true,true,false;title(F, D), venue(F, A).;false;false
4;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
4;true,false,true;title(I, H), venue(I, A).;false;false
4;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
4;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
5;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
5;true;haswordtitle(D, C).;true;true
5;true,true;title(E, D), venue(E, A).;false;true
5;true,true,false;title(F, D), venue(F, B).;false;false
5;true,false;haswordvenue(A, G), haswordauthor(H, G).;false;true
5;true,false,false;haswordvenue(A, I), haswordtitle(J, I).;false;false
5;false;haswordvenue(A, K), haswordtitle(L, K).;true;false
5;false,true;haswordauthor(M, K).;false;false
6;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
6;true;haswordtitle(D, C).;true;true
6;true,true;haswordauthor(E, C).;true;true
6;true,true,true;author(F, E), title(F, D).;false;false
6;true,true,false;title(G, D), venue(G, B).;false;false
6;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
6;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
6;false;haswordvenue(A, L), haswordtitle(M, L).;false;false
7;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
7;true;haswordtitle(D, C).;true;true
7;true,true;title(E, D), venue(E, B).;false;true
7;true,true,false;haswordtitle(D, F), haswordauthor(G, F).;false;false
7;true,false;haswordvenue(A, H), haswordtitle(I, H).;true;true
7;true,false,true;title(J, I), venue(J, A).;false;false
7;true,false,false;haswordvenue(B, K), haswordtitle(L, K).;false;false
7;false;haswordvenue(B, M), haswordauthor(N, M).;false;false
8;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
8;true;haswordtitle(D, C).;true;true
8;true,true;haswordauthor(E, C).;true;true
8;true,true,true;author(F, E), title(F, D).;false;false
8;true,true,false;title(G, D), venue(G, A).;false;false
8;true,false;haswordvenue(B, H), haswordauthor(I, H).;false;true
8;true,false,false;haswordvenue(A, J), haswordauthor(K, J).;false;false
8;false;haswordvenue(B, L), haswordtitle(M, L).;false;false
9;;samevenue(A, B) :- haswordvenue(A, C), haswordvenue(B, C).;true;true
9;true;haswordtitle(D, C).;true;true
9;true,true;title(E, D), venue(E, A).;false;true
9;true,true,false;title(F, D), venue(F, B).;false;false
9;true,false;haswordvenue(A, G), haswordtitle(H, G).;true;true
9;true,false,true;title(I, H), venue(I, A).;false;false
9;true,false,false;haswordvenue(B, J), haswordtitle(K, J).;false;false
9;false;haswordvenue(A, L), haswordtitle(M, L).;false;false


Model training time 0.618
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.19649479976116643;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.17085357989350725;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12199944742751426;  // std dev = 5.553, 143.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=45 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12596813220406142;  // std dev = 5.457, 133.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=45 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.12011966997448799;  // std dev = 5.390, 127.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=45 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.06271077198431843;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.03142286214142143;  // std dev = 5.612, 150.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=45 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else return 0.0292593984619794;  // std dev = 0.460, 148.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=45 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.055157097053412284;  // std dev = 5.467, 134.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=45 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else return 0.027215903716784666;  // std dev = 5.535, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.107', 'seconds']
Parameter learned model CLL:-0.371502 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.553, 98, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.457, 88, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.39, 82, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.612, 105, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)'}, {'true': [0.0, 0, 0], 'false': [0.46, 103, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(B, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.467, 89, 45]}]
['workedunder(A, B)', {'': 'movie(A, C), movie(B, C)', 'false': 'movie(A, D), genre(E, D)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false': [5.535, 96, 45]}]
{'': [nan, 0.2238679405280127], 'false': [nan, 0.2238679405280127]}
{'': [nan, 0.2238679405280111], 'false': [nan, 0.2238679405280111]}
{'': [nan, 0.21565846740671876], 'false': [nan, 0.21565846740671876]}
{'': [nan, 0.22386794052801118], 'false': [nan, 0.22386794052801118]}
{'': [nan, 0.22878045756091436], 'false': [nan, 0.22878045756091436]}
{'': [nan, 0.2172928927116333], 'false': [nan, 0.2172928927116333]}
{'': [nan, 0.21000000000000077], 'false': [nan, 0.21000000000000077]}
{'': [nan, 0.21160518626734912]}
{'': [nan, 0.22304522165292998], 'false': [nan, 0.22304522165292998]}
{'': [nan, 0.21729289271163307], 'false': [nan, 0.21729289271163307]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Pruning resulted in null theory

Candidate for revision
0;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
0;false;movie(A, D), genre(E, D).;true;true
1;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
1;false;movie(B, D), genre(E, D).;true;true
2;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
2;false;movie(A, D), genre(E, D).;true;true
3;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
3;false;movie(B, D), genre(E, D).;true;true
4;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
4;false;movie(B, D), genre(E, D).;true;true
5;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
5;false;movie(A, D), genre(E, D).;true;true
6;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
6;false;movie(A, D), genre(E, D).;true;true
7;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
8;false;movie(B, D), genre(E, D).;true;true
9;;workedunder(A, B) :- movie(A, C), movie(B, C).;true;true
9;false;movie(A, D), genre(E, D).;true;true


Refining candidate
***************************
Model training time 1.363
WILL Produced-Tree #1
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.14185106490048766;  // std dev = 7.30e-08, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.858148935099512;  // std dev = 2.23e-07, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
WILL Produced-Tree #2
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.1254446385283915;  // std dev = 0.000, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.719473412210955;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.12544463852839138;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #3
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.5553664367462839;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11231637819360639;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | else return -0.11605027914933781;  // std dev = 0.330, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #4
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.10125602611845606;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.41751358415831025;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1015963294878363;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
WILL Produced-Tree #5
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.09240627019852972;  // std dev = 0.000, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.32071184716014944;  // std dev = 2.98e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.09269127618926096;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
WILL Produced-Tree #6
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(A), director(B) )
%   | | then return 0.2551722425694896;  // std dev = 0.000, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | else return -0.08494227030051117;  // std dev = 4.83e-05, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
WILL Produced-Tree #7
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.2097577156325355;  // std dev = 5.58e-08, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.1072898933709188;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else return -0.07856845731127943;  // std dev = 4.50e-05, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
WILL Produced-Tree #8
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( actor(B) )
%   | then return -0.07306601468577627;  // std dev = 1.49e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | else if ( female(A) )
%   | | then return 0.1551337114052156;  // std dev = 0.074, 25.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=23 */
%   | | else return 0.17709649774527747;  // std dev = 0.000, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
WILL Produced-Tree #9
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(B, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( director(B), actor(A) )
%   | | then if ( movie(F, A), movie(F, B) )
%   | | | then return 0.15420768115299893;  // std dev = 0.010, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.11269325956794601;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else return -0.06847019462902298;  // std dev = 0.018, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
WILL Produced-Tree #10
% FOR workedunder(A, B):
%   if ( movie(A, C), movie(B, C) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( movie(A, D), genre(E, D) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( actor(B) )
%   | | then return -0.06404057760770689;  // std dev = 1.83e-08, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   | | else if ( movie(F, A), movie(F, B) )
%   | | | then return 0.13514904777314857;  // std dev = 0.009, 45.000 (wgt'ed) examples reached here.  /* #pos=45 */
%   | | | else return -0.10257894232861973;  // std dev = 0.002, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1.415', 'seconds']
Refined model CLL: -0.066333


******************************************
Best model found
******************************************
Results 

CLL : -0.075476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 1.363 

Total Inference Time : 0.8167223930358887 

Total revision time: 3.486814790725708
Best scored revision CLL: -0.066333


Results 

CLL : -0.075476 

AUC ROC : 1.0 

AUC PR : 1.0 

Precision : 0.742291 

Recall : 1.0 

F1 : 0.852086 

Total Learning Time : 29.72020512199402 

Total Inference Time : 0.8167223930358887 

