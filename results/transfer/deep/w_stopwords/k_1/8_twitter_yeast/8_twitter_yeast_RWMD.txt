Starting experiment 8_twitter_yeast 

Loading pre-trained trees.
Run: 1
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1914822684328456;  // std dev = 7.616, 261.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15204607094169323;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.2171340626601197;  // std dev = 5.147, 112.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.137051737264299;  // std dev = 4.840, 106.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=35 */
%   | | | else return 0.19022079105591155;  // std dev = 5.659, 135.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.1339127669036237;  // std dev = 3.620, 58.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=20 */
%   | | | else return 0.10508145373877423;  // std dev = 6.699, 203.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07214753413987136;  // std dev = 7.728, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05997599194466271;  // std dev = 7.720, 276.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.738419176960204;  // std dev = 0.021, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26153849990469275;  // std dev = 0.029, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07006421318524723;  // std dev = 4.000, 72.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=24 */
%   | | | else return 0.049494937386137604;  // std dev = 4.346, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05593040044498503;  // std dev = 3.784, 102.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=35 */
%   | | | else return 0.05584364684577243;  // std dev = 5.868, 154.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03798369808630829;  // std dev = 6.989, 265.000 (wgt'ed) examples reached here.  /* #neg=178 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.011042097181085056;  // std dev = 7.110, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.608', 'seconds']
Parameter learned model CLL:-0.328201 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.616, 174, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.475, 94, 44], 'false,false,false,false': [5.147, 69, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.84, 71, 35], 'false,false,false,false': [5.659, 83, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.62, 38, 20], 'false,false,false,false': [6.699, 136, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.728, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.72, 189, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.021, 0, 35], 'true,false': [0.029, 71, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.0, 48, 24], 'false,false,false,false': [4.346, 58, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.784, 67, 35], 'false,false,false,false': [5.868, 102, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.989, 178, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.11, 193, 87]}]
{'': [nan, 0.2222222222222231], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222231], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.22689599999999877], 'false': [nan, 0.2268959999999998], 'false,false': [nan, 0.22689599999999877], 'false,false,false': [0.21718126444024355, 0.23652742346938863]}
{'': [nan, 0.23079172887395213], 'false': [nan, 0.23079172887395213], 'false,false': [nan, 0.23079172887395222], 'false,false,false': [0.221035084620349, 0.23720911335835587]}
{'': [nan, 0.22227729553317305], 'false': [nan, 0.22227729553317305], 'false,false': [nan, 0.2222772955331735], 'false,false,false': [0.22592152199762167, 0.22105136694550065]}
{'': [nan, 0.21562882862612925], 'false': [nan, 0.21562882862612925], 'false,false': [nan, 0.21562882862612942], 'false,false,false': [nan, 0.21562882862612942]}
{'': [nan, 0.2159554635656436], 'false': [nan, 0.2159554635656436], 'false,false': [nan, 0.21595546356564294], 'false,false,false': [nan, 0.21595546356564344]}
{'': [0.2211574050005235, 0.2208879871766809], 'true': [1.2039573311588876e-05, 1.1995389199283298e-05], 'false': [nan, 0.2208879871766809], 'false,false': [nan, 0.2208879871766809], 'false,false,false': [0.22222222222222238, 0.219578150351541], 'true,true': [nan, 1.2039573311588876e-05], 'true,true,false': [nan, 1.2039573311588876e-05]}
{'': [nan, 0.1904365153780589], 'false': [nan, 0.1904365153780589], 'false,false': [nan, 0.19043651537805853], 'false,false,false': [0.1403801028604043, 0.2235907596312962]}
{'': [nan, 0.18432348300693252], 'false': [nan, 0.18432348300693208], 'false,false': [nan, 0.18432348300693208], 'false,false,false': [nan, 0.18432348300693208]}
{'': [nan, 0.18053137610305509], 'false': [nan, 0.18053137610305509], 'false,false': [nan, 0.18053137610305525], 'false,false,false': [nan, 0.18053137610305525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 9.262
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(D, D), enzyme(D, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( enzyme(A, F), phenotype(D, G) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.09624417319475045;  // std dev = 2.760, 42.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=10 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7066337835843601;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return -0.14185106490048766;  // std dev = 7.30e-08, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | | else if ( enzyme(A, J), interaction(A, K) )
%   | | | then return 0.41370449065506787;  // std dev = 1.491, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.18793616914206515;  // std dev = 4.558, 94.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=31 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7541589302447042;  // std dev = 0.180, 34.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=33 */
%   | else return -0.15824750293726791;  // std dev = 0.279, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( enzyme(F, H), location(A, I) )
%   | | then if ( phenotype(A, J) )
%   | | | then return 0.12055412320210367;  // std dev = 1.697, 17.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=5 */
%   | | | else return 0.03369772506182782;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(A, K), complex(A, L) )
%   | | | then return 0.2355697132242029;  // std dev = 2.153, 22.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | else return 0.1423097891397285;  // std dev = 3.479, 61.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=19 */
%   | else if ( interaction(A, M), phenotype(A, N) )
%   | | then return 0.399231187765015;  // std dev = 0.958, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(A, P), interaction(Q, A) )
%   | | | then return 0.1298046272867979;  // std dev = 1.559, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.228695387966267;  // std dev = 2.745, 33.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return 0.546785765511362;  // std dev = 1.05e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.6866280732780082;  // std dev = 0.028, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1557583380205539;  // std dev = 0.093, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.5234644639644143;  // std dev = 1.149, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | else return 0.06181720300057931;  // std dev = 2.710, 51.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(G, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7624454012097972;  // std dev = 0.189, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.019160999993297505;  // std dev = 2.742, 61.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=13 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.08556235710558384;  // std dev = 1.668, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.1476706021778264;  // std dev = 4.159, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.493875872579784;  // std dev = 0.053, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return -0.12095813663517975;  // std dev = 0.246, 25.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=2 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 0.13109017195575123;  // std dev = 1.991, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | | else return 0.02966495177652476;  // std dev = 2.216, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.5895775819933815;  // std dev = 0.199, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, H), complex(A, I) )
%   | | then if ( complex(J, I), interaction(J, A) )
%   | | | then return -0.04594030562859439;  // std dev = 0.812, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.11536706663152503;  // std dev = 2.235, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | | else if ( location(A, K) )
%   | | | then return 0.13860788262027582;  // std dev = 4.602, 113.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=42 */
%   | | | else return 0.46506778011008415;  // std dev = 0.825, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.4017920437787701;  // std dev = 0.082, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( interaction(D, F), interaction(F, F) )
%   | | | then return -0.1350165024006253;  // std dev = 0.240, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.016912214317995677;  // std dev = 1.049, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.16408171737437846;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return 0.07193310991938427;  // std dev = 2.297, 29.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | else if ( phenotype(A, G), interaction(H, A) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.4851839978928593;  // std dev = 0.084, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.023227239438451303;  // std dev = 3.256, 91.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=23 */
%   | | else if ( interaction(A, I), phenotype(I, J) )
%   | | | then return 0.2612959206818283;  // std dev = 1.825, 17.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=9 */
%   | | | else return 0.07719410832152163;  // std dev = 4.168, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), interaction(E, A) )
%   | then return 0.053058650146863895;  // std dev = 0.698, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( complex(A, F), interaction(G, A) )
%   | | then return 0.2860857169004536;  // std dev = 0.045, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3829850758697708;  // std dev = 0.144, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( enzyme(A, H), interaction(A, I) )
%   | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | then return 0.5139649773717561;  // std dev = 0.123, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, K), interaction(I, I) )
%   | | | then return 0.1950768107455808;  // std dev = 0.642, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return -0.06669592825198137;  // std dev = 1.936, 47.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=8 */
%   | else if ( interaction(L, A), location(L, M) )
%   | | then if ( interaction(N, L), recursion_proteinclass(N, B) )
%   | | | then return 0.48669377950683135;  // std dev = 1.369, 15.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | else return 0.025136953803682777;  // std dev = 5.148, 173.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=47 */
%   | | else return 0.3492412163007085;  // std dev = 0.975, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.5305671626592472;  // std dev = 0.157, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.19310891857169346;  // std dev = 0.056, 64.000 (wgt'ed) examples reached here.  /* #neg=64 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then return -0.09041828577760684;  // std dev = 0.256, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | else if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | | then return 0.27206094609427806;  // std dev = 0.649, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return -0.11396243535754713;  // std dev = 0.099, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( interaction(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.5590623562348401;  // std dev = 0.029, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.16290932076132167;  // std dev = 0.086, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.0850335018823866;  // std dev = 1.850, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | | else return 0.020683484525647115;  // std dev = 4.029, 87.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(A, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.19656469479085947;  // std dev = 0.298, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | else return -0.05182115161525431;  // std dev = 0.253, 52.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.2943544614676308;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( interaction(F, F), complex(F, I) )
%   | | | then return 0.1707822773908547;  // std dev = 1.829, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return -0.005686745761877619;  // std dev = 3.105, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | else if ( enzyme(A, J), location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.486900421926793;  // std dev = 0.324, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2123048376337752;  // std dev = 0.008, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else if ( interaction(M, A), location(M, N) )
%   | | | then return 0.0649784373471943;  // std dev = 2.997, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | else return 0.31524748412075837;  // std dev = 0.822, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.18575951720993705;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(C, C) )
%   | | then return -0.09054750188069287;  // std dev = 0.250, 33.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=5 */
%   | | else if ( complex(A, D) )
%   | | | then return -0.05903880450387872;  // std dev = 0.699, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.13211381210853795;  // std dev = 1.028, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( location(A, E) )
%   | then if ( location(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, G), interaction(G, H) )
%   | | | then return 0.20823232070838976;  // std dev = 1.353, 27.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=20 */
%   | | | else return 0.3729436164773854;  // std dev = 2.929, 62.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=46 */
%   | | else return -0.20827404145984105;  // std dev = 0.076, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then return -0.2055755494212617;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | else return -0.002587057161188011;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then return 0.2837540205208848;  // std dev = 0.218, 47.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=42 */
%   | else return -0.1562976477565114;  // std dev = 0.067, 95.000 (wgt'ed) examples reached here.  /* #neg=95 */
%   else if ( interaction(E, A), location(A, F) )
%   | then if ( complex(E, G), location(E, F) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2830151107274644;  // std dev = 1.731, 19.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | else return -0.222152948554345;  // std dev = 0.355, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(A, I), location(E, F) )
%   | | | then return 0.0376945390138087;  // std dev = 1.272, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | | else return 0.15703210033297563;  // std dev = 2.382, 33.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=17 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return 0.18632209487213205;  // std dev = 0.635, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( interaction(L, A), interaction(A, L) )
%   | | | then return -0.06832974373944563;  // std dev = 0.787, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return -0.16495546956941531;  // std dev = 1.199, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '27.502', 'seconds']
Refined model CLL: -0.221487


******************************************
Best model found
******************************************
Results 

CLL : -0.230622 

AUC ROC : 0.979364 

AUC PR : 0.357373 

Precision : 0.220413 

Recall : 0.719858 

F1 : 0.33749 

Total Learning Time : 9.262 

Total Inference Time : 6.049050807952881 

Total revision time: 18.12492833518982
Best scored revision CLL: -0.221487


Results 

CLL : -0.230622 

AUC ROC : 0.979364 

AUC PR : 0.357373 

Precision : 0.220413 

Recall : 0.719858 

F1 : 0.33749 

Total Learning Time : 28.845083812713625 

Total Inference Time : 6.049050807952881 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.159
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284616;  // std dev = 8.327, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.18694698783018665;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.175310754389442;  // std dev = 5.849, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14776573197996815;  // std dev = 5.195, 120.000 (wgt'ed) examples reached here.  /* #neg=79 #pos=41 */
%   | | | else return 0.1472342940912395;  // std dev = 6.446, 185.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15318827913463862;  // std dev = 4.268, 78.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=29 */
%   | | | else return 0.12370107039312599;  // std dev = 7.031, 220.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10820702263284823;  // std dev = 8.227, 298.000 (wgt'ed) examples reached here.  /* #neg=194 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.054823392084984504;  // std dev = 8.435, 329.000 (wgt'ed) examples reached here.  /* #neg=225 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7250284926748772;  // std dev = 0.024, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.274748421330946;  // std dev = 0.038, 100.000 (wgt'ed) examples reached here.  /* #neg=100 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08798959852660133;  // std dev = 3.839, 64.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else return 0.058778215401553306;  // std dev = 5.185, 122.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.03557773031965447;  // std dev = 4.111, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   | | | else return 0.03268120408680829;  // std dev = 6.562, 199.000 (wgt'ed) examples reached here.  /* #neg=136 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03976725710031225;  // std dev = 7.651, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03224843298714094;  // std dev = 7.644, 309.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.243', 'seconds']
Parameter learned model CLL:-0.335439 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.327, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [5.849, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.195, 79, 41], 'false,false,false,false': [6.446, 122, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.268, 49, 29], 'false,false,false,false': [7.031, 145, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.227, 194, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.435, 225, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.024, 0, 41], 'true,false': [0.038, 100, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.839, 41, 23], 'false,false,false,false': [5.185, 82, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.111, 83, 41], 'false,false,false,false': [6.562, 136, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 207, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.644, 205, 104]}]
{'': [nan, 0.22222222222222426], 'false': [nan, 0.2222222222222228], 'false,false': [nan, 0.22222222222222426], 'false,false,false': [nan, 0.2222222222222228]}
{'': [nan, 0.2268431001890342], 'false': [nan, 0.22684310018903567], 'false,false': [nan, 0.2268431001890342], 'false,false,false': [0.22860845018279327, 0.2250692520775613]}
{'': [nan, 0.22473694231939273], 'false': [nan, 0.22473694231939273], 'false,false': [nan, 0.2247369423193951], 'false,false,false': [0.22494282718939432, 0.22460328425817636]}
{'': [nan, 0.22720693698640984], 'false': [nan, 0.22720693698640984], 'false,false': [nan, 0.22720693698640732], 'false,false,false': [0.23356344510190688, 0.22472567986220737]}
{'': [nan, 0.22715175643918123], 'false': [nan, 0.22715175643918123], 'false,false': [nan, 0.2271517564391803], 'false,false,false': [nan, 0.2271517564391803]}
{'': [nan, 0.21625056684210847], 'false': [nan, 0.21625056684210847], 'false,false': [nan, 0.21625056684210944], 'false,false,false': [nan, 0.2162505668421097]}
{'': [0.20614935556393188, 0.2239539857901482], 'false': [nan, 0.2239539857901482], 'false,false': [nan, 0.2239539857901482], 'false,false,false': [0.23022460937499958, 0.22037086804622488], 'true': [1.3806633894830611e-05, 1.4512263974699736e-05], 'true,true': [nan, 1.3806633894830611e-05], 'true,true,false': [nan, 1.3806633894830611e-05]}
{'': [nan, 0.1856584255477361], 'false': [nan, 0.1856584255477361], 'false,false': [nan, 0.1856584255477357], 'false,false,false': [0.13630181076610834, 0.21641008021339067]}
{'': [nan, 0.18822512297347896], 'false': [nan, 0.18822512297347826], 'false,false': [nan, 0.18822512297347826], 'false,false,false': [nan, 0.18822512297347826]}
{'': [nan, 0.18912095120460376], 'false': [nan, 0.18912095120460376], 'false,false': [nan, 0.18912095120460387], 'false,false,false': [nan, 0.18912095120460387]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.912
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(A, E) )
%   | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( complex(H, G), location(H, I) )
%   | | | then return -0.030739953789376617;  // std dev = 2.108, 45.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=5 */
%   | | | else return 0.16172036367094095;  // std dev = 3.441, 56.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=17 */
%   | | else if ( interaction(J, A), location(A, K) )
%   | | | then return 0.17025084592753817;  // std dev = 5.806, 157.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=49 */
%   | | | else return 0.3318331456258281;  // std dev = 2.176, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7332857516252523;  // std dev = 0.078, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.497251189988732;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   else if ( complex(A, E), interaction(A, F) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13815014721646232;  // std dev = 7.45e-09, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.07373845498763794;  // std dev = 3.396, 65.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=15 */
%   | else if ( interaction(A, H), location(A, I) )
%   | | then if ( interaction(J, A), interaction(J, H) )
%   | | | then return 0.07434688907292204;  // std dev = 2.775, 41.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=10 */
%   | | | else return 0.3277936026851675;  // std dev = 1.878, 14.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=7 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5528067455442878;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.18781417310795018;  // std dev = 5.566, 136.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=48 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D) )
%   | then return 0.5805402869148534;  // std dev = 0.114, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return 0.4293859508174645;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   else if ( interaction(E, A), interaction(E, E) )
%   | then if ( complex(A, F), interaction(A, G) )
%   | | then if ( enzyme(G, H) )
%   | | | then return 0.016112500484458347;  // std dev = 1.733, 20.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else return 0.346229848322922;  // std dev = 1.397, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( phenotype(A, I) )
%   | | | then return 0.03166884446951227;  // std dev = 2.796, 46.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | else return -0.170227369600463;  // std dev = 0.014, 6.000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.5902207398584406;  // std dev = 0.066, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( phenotype(A, K) )
%   | | | then return 0.17437353872585293;  // std dev = 4.896, 105.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=38 */
%   | | | else return 0.0816046102404044;  // std dev = 4.246, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4526430335667637;  // std dev = 0.153, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( enzyme(A, D), interaction(E, A) )
%   | then if ( location(A, F) )
%   | | then if ( interaction(E, E), phenotype(E, G) )
%   | | | then return 0.27830746014784535;  // std dev = 1.337, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.12942720115263628;  // std dev = 3.589, 59.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=20 */
%   | | else return 0.42932757815987;  // std dev = 0.810, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( interaction(A, H), recursion_proteinclass(I, B) )
%   | | | then return 0.6959354683933583;  // std dev = 1.093, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return -0.0033880135521879347;  // std dev = 5.228, 177.000 (wgt'ed) examples reached here.  /* #neg=141 #pos=36 */
%   | | else if ( interaction(A, J), complex(J, K) )
%   | | | then return 0.03645007787044368;  // std dev = 1.547, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.4044930971921089;  // std dev = 1.361, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then return 0.1849637812083437;  // std dev = 0.296, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3667031066379879;  // std dev = 0.070, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( enzyme(A, H), complex(A, I) )
%   | | then return 0.17659005492093163;  // std dev = 0.984, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( enzyme(A, J), interaction(F, A) )
%   | | | then return -0.08294463234578187;  // std dev = 1.613, 22.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=3 */
%   | | | else return 0.020797194335969566;  // std dev = 4.017, 102.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=27 */
%   | else if ( phenotype(A, K), location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.4571258168366701;  // std dev = 3.066, 44.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=30 */
%   | | | else return -0.22254848485947704;  // std dev = 0.088, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | else if ( interaction(N, A), enzyme(N, P) )
%   | | | then return -0.032390582734120495;  // std dev = 2.265, 34.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | | else return 0.0809413693241128;  // std dev = 3.396, 54.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=17 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then if ( location(E, D), recursion_proteinclass(E, B) )
%   | then return 0.23200060205085068;  // std dev = 0.416, 65.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=40 */
%   | else return -0.20439119859465163;  // std dev = 0.307, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   else if ( phenotype(A, F), interaction(G, A) )
%   | then if ( location(A, H) )
%   | | then if ( location(G, H) )
%   | | | then return 0.0579674338333289;  // std dev = 4.216, 100.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=31 */
%   | | | else return 0.350073750584208;  // std dev = 1.016, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else return -0.23032574565641736;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | else if ( enzyme(A, I), location(A, J) )
%   | | then if ( enzyme(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.6059729976626217;  // std dev = 1.039, 10.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else return -0.22901683290303004;  // std dev = 0.026, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.28435012602273196;  // std dev = 0.016, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.1235950950383778;  // std dev = 3.184, 47.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2303403595565661;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else return 0.5844114719937556;  // std dev = 0.151, 30.000 (wgt'ed) examples reached here.  /* #pos=30 */
%   | else return -0.20751849381617185;  // std dev = 0.082, 83.000 (wgt'ed) examples reached here.  /* #neg=83 */
%   else if ( location(A, F) )
%   | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, H), interaction(I, A) )
%   | | | then return -0.18125495557280322;  // std dev = 1.014, 14.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=2 */
%   | | | else return 0.4560113826041041;  // std dev = 3.319, 70.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=55 */
%   | | else return -0.21722118714018715;  // std dev = 0.065, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( phenotype(A, J) )
%   | | then return 0.028849431849290563;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(K, A), interaction(L, K) )
%   | | | then return -0.09537606517440975;  // std dev = 1.320, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return -0.045421962862545726;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.3825207411578642;  // std dev = 0.169, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.16383930400649788;  // std dev = 0.080, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), complex(E, G) )
%   | | then if ( enzyme(F, H), phenotype(E, I) )
%   | | | then return 0.2809041946388428;  // std dev = 0.730, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return 0.5563453269484796;  // std dev = 0.188, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.23871925787204767;  // std dev = 0.854, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.12255784929549189;  // std dev = 4.121, 105.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=44 */
%   | else if ( location(A, J), interaction(K, A) )
%   | | then return 0.16289553632278397;  // std dev = 0.774, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( location(A, L) )
%   | | | then return -0.004583758583147561;  // std dev = 0.816, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.07115424296670472;  // std dev = 1.225, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(D, F), interaction(D, G) )
%   | | | then return 0.1692374035574582;  // std dev = 1.588, 34.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=29 */
%   | | | else return 0.42327090963688113;  // std dev = 2.304, 69.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=63 */
%   | | else if ( interaction(H, A) )
%   | | | then return -0.32010083354618746;  // std dev = 0.788, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | | else return 0.2836569764436501;  // std dev = 0.602, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else if ( complex(A, I) )
%   | | then return -0.12241289303466875;  // std dev = 0.168, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   | | else return -0.19482741145085364;  // std dev = 0.442, 101.000 (wgt'ed) examples reached here.  /* #neg=101 */
%   else if ( interaction(J, A), interaction(K, J) )
%   | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | then return 0.5720285214945899;  // std dev = 0.390, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.3158487107953871;  // std dev = 0.106, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else return 0.0941570862042782;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), complex(C, D) )
%   | then return -0.044177530571669246;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.13226611682920067;  // std dev = 0.041, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(E, A), enzyme(E, F) )
%   | then if ( complex(E, G) )
%   | | then if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.3357714431110047;  // std dev = 0.306, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.03576096184355176;  // std dev = 2.240, 70.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=18 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.3511397400255665;  // std dev = 0.081, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.029743150316598514;  // std dev = 1.629, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return -0.1936015826024858;  // std dev = 0.873, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.047865143945758415;  // std dev = 1.642, 81.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=14 */
%   | | | else return 0.003879773261484927;  // std dev = 3.469, 115.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=37 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '11.514', 'seconds']
Refined model CLL: -0.208042


******************************************
Best model found
******************************************
Results 

CLL : -0.217114 

AUC ROC : 0.981771 

AUC PR : 0.325076 

Precision : 0.250335 

Recall : 0.70566 

F1 : 0.369565 

Total Learning Time : 16.912 

Total Inference Time : 14.519584894180298 

Total revision time: 34.619252820968626
Best scored revision CLL: -0.208042


Results 

CLL : -0.217114 

AUC ROC : 0.981771 

AUC PR : 0.325076 

Precision : 0.250335 

Recall : 0.70566 

F1 : 0.369565 

Total Learning Time : 45.33940829849243 

Total Inference Time : 14.519584894180298 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17548737042617824;  // std dev = 5.792, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
%   | | | else return 0.1928546140385662;  // std dev = 5.124, 114.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1472584799697388;  // std dev = 5.385, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.12412091633557325;  // std dev = 5.721, 151.000 (wgt'ed) examples reached here.  /* #neg=103 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09295448596652552;  // std dev = 4.237, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   | | | else return 0.07391367287141448;  // std dev = 6.848, 228.000 (wgt'ed) examples reached here.  /* #neg=162 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09340569114698855;  // std dev = 7.891, 285.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05516643412706674;  // std dev = 8.015, 305.000 (wgt'ed) examples reached here.  /* #neg=213 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7398000839873529;  // std dev = 0.001, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26022546224493703;  // std dev = 0.001, 94.000 (wgt'ed) examples reached here.  /* #neg=94 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09982034897076315;  // std dev = 4.025, 71.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=25 */
%   | | | else return 0.028368045650137654;  // std dev = 4.058, 81.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05171019991636463;  // std dev = 4.265, 131.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=44 */
%   | | | else return 0.07378795483735262;  // std dev = 5.628, 141.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.028588517495171144;  // std dev = 7.187, 292.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0497441966378047;  // std dev = 7.020, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.468', 'seconds']
Parameter learned model CLL:-0.318229 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.792, 98, 51], 'false,false,false,false': [5.124, 73, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.385, 85, 44], 'false,false,false,false': [5.721, 103, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.237, 58, 26], 'false,false,false,false': [6.848, 162, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.891, 193, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.015, 213, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.001, 0, 44], 'true,false': [0.001, 94, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.025, 46, 25], 'false,false,false,false': [4.058, 58, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.265, 87, 44], 'false,false,false,false': [5.628, 93, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.187, 200, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.02, 175, 92]}]
{'': [nan, 0.2222222222222235], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222235], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.22744292963610718], 'false': [nan, 0.22744292963610813], 'false,false': [nan, 0.22744292963610718], 'false,false,false': [0.2251249943696219, 0.2303016312711611]}
{'': [nan, 0.2205835715252208], 'false': [nan, 0.2205835715252208], 'false,false': [nan, 0.22058357152522015], 'false,false,false': [0.22480862893612102, 0.21672744345069536]}
{'': [nan, 0.2079202441849605], 'false': [nan, 0.2079202441849605], 'false,false': [nan, 0.20792024418495964], 'false,false,false': [0.21371882086167776, 0.2056863161564476]}
{'': [nan, 0.2185022158279458], 'false': [nan, 0.2185022158279458], 'false,false': [nan, 0.21850221582794577], 'false,false,false': [nan, 0.21850221582794577]}
{'': [nan, 0.21064246235178297], 'false': [nan, 0.21064246235178297], 'false,false': [nan, 0.21064246235178208], 'false,false,false': [nan, 0.21064246235178277]}
{'': [0.21719238452896222, 0.21618082628026958], 'true': [2.5084623832650654e-08, 2.2935785488336837e-08], 'false': [nan, 0.21618082628026958], 'false,false': [nan, 0.21618082628026958], 'false,false,false': [0.2281293394167825, 0.20332266422801346], 'true,true': [nan, 2.5084623832650654e-08], 'true,true,false': [nan, 2.5084623832650654e-08]}
{'': [nan, 0.18344965127534513], 'false': [nan, 0.18344965127534513], 'false,false': [nan, 0.18344965127534582], 'false,false,false': [0.13885855070038544, 0.22464350887662082]}
{'': [nan, 0.1769045340835005], 'false': [nan, 0.17690453408350118], 'false,false': [nan, 0.17690453408350118], 'false,false,false': [nan, 0.17690453408350118]}
{'': [nan, 0.1845725577163277], 'false': [nan, 0.1845725577163277], 'false,false': [nan, 0.18457255771632664], 'false,false,false': [nan, 0.18457255771632664]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.403
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), phenotype(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.14185106490048774;  // std dev = 1.49e-08, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( interaction(F, F), location(F, G) )
%   | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else return 0.8581489350995122;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | | then return 0.6914822684328455;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(A, I), interaction(J, A) )
%   | | | then return 0.07383520960931629;  // std dev = 2.937, 51.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=11 */
%   | | | else return 0.1845378239884004;  // std dev = 5.627, 144.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=47 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7399167930170202;  // std dev = 0.084, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D), enzyme(E, F) )
%   | | then if ( interaction(E, E) )
%   | | | then return 0.11173827935479343;  // std dev = 0.851, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | | else return -0.15266181029687487;  // std dev = 0.139, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | else if ( interaction(E, E), complex(E, D) )
%   | | | then return -0.051078802762021744;  // std dev = 0.949, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.1415723428376527;  // std dev = 2.933, 45.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=14 */
%   | else if ( interaction(A, G), interaction(G, H) )
%   | | then if ( interaction(I, A), interaction(H, J) )
%   | | | then return -0.042957816994522;  // std dev = 0.809, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.16778705524970378;  // std dev = 3.514, 57.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=19 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.17484005533588184;  // std dev = 3.032, 46.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | else return 0.25287688547327913;  // std dev = 3.800, 61.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.5704122507773213;  // std dev = 0.098, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.6726438026823249;  // std dev = 0.024, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.5843195131063229;  // std dev = 0.037, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, F), interaction(A, G) )
%   | | then if ( phenotype(G, F), interaction(H, A) )
%   | | | then return -0.04008596728983934;  // std dev = 1.307, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.10573219244349422;  // std dev = 2.862, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | else if ( interaction(I, A), interaction(A, I) )
%   | | | then return -0.04784084715415341;  // std dev = 0.932, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.14480431992374845;  // std dev = 5.932, 162.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=55 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.4226264960220047;  // std dev = 0.075, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(C, F) )
%   | | then return 0.04657821210201308;  // std dev = 0.385, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else return -0.12554833538342017;  // std dev = 0.239, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   else if ( interaction(A, G) )
%   | then if ( recursion_proteinclass(G, B) )
%   | | then return 0.44753961169528206;  // std dev = 0.058, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.7367037052141515;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.14061929609832882;  // std dev = 3.963, 76.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=26 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then return 0.23480888263915153;  // std dev = 1.131, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.5040825034593792;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07268104949513021;  // std dev = 4.743, 115.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then if ( enzyme(A, E) )
%   | | then return 0.3119315664478717;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.3585809499412318;  // std dev = 0.064, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.41389902268045625;  // std dev = 0.118, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, A) )
%   | then return -0.1395958156563338;  // std dev = 0.045, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( location(A, F) )
%   | | then if ( location(G, F), recursion_proteinclass(G, B) )
%   | | | then return 0.40988528254362755;  // std dev = 4.727, 112.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=76 */
%   | | | else return -0.21342365889515497;  // std dev = 0.372, 135.000 (wgt'ed) examples reached here.  /* #neg=135 */
%   | | else return -0.05644023394063853;  // std dev = 0.386, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( complex(C, D), location(A, E) )
%   | then return 0.0958505699649826;  // std dev = 0.361, 37.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=15 */
%   | else if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.5879600554802282;  // std dev = 0.409, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.19548636355956636;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.5545093721299325;  // std dev = 0.159, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | | else return -0.1784765593106125;  // std dev = 0.059, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.626940419543605;  // std dev = 0.374, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return -0.22234601367970025;  // std dev = 0.140, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.08607755148488823;  // std dev = 2.146, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return 0.018323400928133067;  // std dev = 3.809, 92.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=27 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.014513676090330614;  // std dev = 0.315, 146.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=44 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( phenotype(E, F), phenotype(D, F) )
%   | | then if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.041128535864282195;  // std dev = 0.381, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return 0.161104928380155;  // std dev = 1.819, 18.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=8 */
%   | | else if ( phenotype(D, H) )
%   | | | then return -0.11853350874568869;  // std dev = 0.997, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.01366387330263113;  // std dev = 2.038, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.5879320363063252;  // std dev = 0.402, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20202142087993266;  // std dev = 0.156, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.10846527334195086;  // std dev = 1.189, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.04439212081327319;  // std dev = 2.360, 35.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), location(A, D) )
%   | then return 0.26945150125746903;  // std dev = 0.104, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.18200919201408788;  // std dev = 0.038, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(E, A), interaction(A, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1245610467010542;  // std dev = 0.037, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( phenotype(A, F) )
%   | | | then return 7.798977531385254E-4;  // std dev = 0.591, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return -0.05534658588283576;  // std dev = 0.699, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | else if ( complex(A, G), interaction(H, A) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.13021569003974967;  // std dev = 2.132, 35.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=16 */
%   | | | else return 0.018005025741200418;  // std dev = 2.120, 36.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return -0.03286770524412152;  // std dev = 2.584, 52.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=13 */
%   | | | else return 0.027478236844130963;  // std dev = 3.917, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.17179279391453006;  // std dev = 0.041, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2506400842343912;  // std dev = 0.114, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.369606249920911;  // std dev = 0.298, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( complex(A, G), interaction(H, F) )
%   | | | then return -0.05597620078617126;  // std dev = 2.772, 89.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=17 */
%   | | | else return -0.0017426826608043886;  // std dev = 3.257, 83.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=22 */
%   | else if ( interaction(A, I), interaction(I, J) )
%   | | then if ( enzyme(A, K), complex(A, L) )
%   | | | then return 0.1658636542982018;  // std dev = 1.043, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.021443006198657945;  // std dev = 3.010, 64.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | else if ( interaction(M, A) )
%   | | | then return 0.1144949215159721;  // std dev = 1.501, 21.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=10 */
%   | | | else return -0.023528301404955904;  // std dev = 0.663, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, C), complex(A, D) )
%   | then return 0.20989138140775943;  // std dev = 0.095, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return 0.14097991376370908;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( recursion_proteinclass(F, B), interaction(G, F) )
%   | | then return 0.27140079400113626;  // std dev = 0.297, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, H), interaction(E, F) )
%   | | | then return -0.09136012575304034;  // std dev = 0.977, 28.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=2 */
%   | | | else return 0.008948364928789688;  // std dev = 4.104, 137.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=39 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.5135485605218947;  // std dev = 0.407, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.22073335714583017;  // std dev = 0.283, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(K, A) )
%   | | | then return 0.131022768867494;  // std dev = 1.456, 19.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=9 */
%   | | | else return 0.06100244039103006;  // std dev = 2.299, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '22.518', 'seconds']
Refined model CLL: -0.232426


******************************************
Best model found
******************************************
Results 

CLL : -0.23877 

AUC ROC : 0.96476 

AUC PR : 0.21703 

Precision : 0.207736 

Recall : 0.523466 

F1 : 0.297436 

Total Learning Time : 6.403 

Total Inference Time : 3.7868661880493164 

Total revision time: 13.103008134841918
Best scored revision CLL: -0.232426


Results 

CLL : -0.23877 

AUC ROC : 0.96476 

AUC PR : 0.21703 

Precision : 0.207736 

Recall : 0.523466 

F1 : 0.297436 

Total Learning Time : 23.82316361236572 

Total Inference Time : 3.7868661880493164 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.037
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1506659419022338;  // std dev = 7.800, 294.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1925425227585674;  // std dev = 5.797, 147.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=52 */
%   | | | else return 0.17213435949326136;  // std dev = 4.761, 102.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.15352816634623717;  // std dev = 4.294, 82.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=28 */
%   | | | else return 0.1381586940100851;  // std dev = 6.254, 178.000 (wgt'ed) examples reached here.  /* #neg=120 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.0617460092278354;  // std dev = 3.711, 69.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=19 */
%   | | | else return 0.10625757133794496;  // std dev = 6.771, 212.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11831833833593072;  // std dev = 7.504, 249.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07852900773780858;  // std dev = 7.608, 263.000 (wgt'ed) examples reached here.  /* #neg=177 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7038189050199651;  // std dev = 0.981, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.26204496657725584;  // std dev = 0.016, 52.000 (wgt'ed) examples reached here.  /* #neg=52 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.06410057837856714;  // std dev = 4.702, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
%   | | | else return 0.028762784992438253;  // std dev = 4.211, 86.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.054556495752041356;  // std dev = 3.432, 83.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=28 */
%   | | | else return 0.07125042401190325;  // std dev = 6.164, 168.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04896030712229731;  // std dev = 7.078, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03301039846888613;  // std dev = 7.106, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.593', 'seconds']
Parameter learned model CLL:-0.34033 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.8, 208, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.797, 95, 52], 'false,false,false,false': [4.761, 68, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.294, 54, 28], 'false,false,false,false': [6.254, 120, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.711, 50, 19], 'false,false,false,false': [6.771, 145, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.504, 163, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.608, 177, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.981, 1, 28], 'true,false': [0.016, 52, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.702, 67, 33], 'false,false,false,false': [4.211, 61, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 55, 28], 'false,false,false,false': [6.164, 110, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.078, 167, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.106, 171, 86]}]
{'': [nan, 0.20695080753389863], 'false': [nan, 0.2069508075338986], 'false,false': [nan, 0.20695080753389863], 'false,false,false': [nan, 0.2069508075338986]}
{'': [nan, 0.22609312753020402], 'false': [nan, 0.2260931275302033], 'false,false': [nan, 0.22609312753020402], 'false,false,false': [0.2286084501827971, 0.22222222222222268]}
{'': [nan, 0.22138529981986507], 'false': [nan, 0.22138529981986507], 'false,false': [nan, 0.22138529981986507], 'false,false,false': [0.2248516452199591, 0.21971394370548078]}
{'': [nan, 0.21249680302175183], 'false': [nan, 0.21249680302175183], 'false,false': [nan, 0.212496803021752], 'false,false,false': [0.19953791220331907, 0.21622804895112147]}
{'': [nan, 0.22612982273302934], 'false': [nan, 0.22612982273302934], 'false,false': [nan, 0.22612982273302928], 'false,false,false': [nan, 0.22612982273302928]}
{'': [nan, 0.22008879295380954], 'false': [nan, 0.22008879295380954], 'false,false': [nan, 0.22008879295381026], 'false,false,false': [nan, 0.22008879295381006]}
{'': [0.22630812234152614, 0.21451772305669764], 'true': [0.03319846904438379, 5.155523428740799e-06], 'false': [nan, 0.21451772305669764], 'false,false': [nan, 0.21451772305669764], 'false,false,false': [0.22110000000000027, 0.20619253650622008], 'true,true': [nan, 0.03319846904438379], 'true,true,false': [nan, 0.03319846904438379]}
{'': [nan, 0.19838011055237756], 'false': [nan, 0.19838011055237756], 'false,false': [nan, 0.19838011055237714], 'false,false,false': [0.1419071743552813, 0.22618827467942]}
{'': [nan, 0.19801411819786852], 'false': [nan, 0.19801411819786893], 'false,false': [nan, 0.19801411819786893], 'false,false,false': [nan, 0.19801411819786893]}
{'': [nan, 0.196458547946068], 'false': [nan, 0.196458547946068], 'false,false': [nan, 0.19645854794606815], 'false,false,false': [nan, 0.19645854794606815]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.622
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995117;  // std dev = 1.69e-07, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.14185106490048768;  // std dev = 4.47e-08, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( interaction(F, A), interaction(G, F) )
%   | | then if ( recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.0803711573217342;  // std dev = 4.137, 99.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=22 */
%   | | else if ( interaction(A, H), phenotype(A, I) )
%   | | | then return 0.1273797043302816;  // std dev = 2.262, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | | else return 0.27481560176617903;  // std dev = 2.958, 36.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=15 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7478930071193669;  // std dev = 0.198, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, A) )
%   | then if ( interaction(A, A) )
%   | | then return -0.13988518691675964;  // std dev = 0.044, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.7194734122109544;  // std dev = 2.11e-08, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.14530039256239777;  // std dev = 0.040, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( phenotype(A, H), phenotype(F, H) )
%   | | | then return 0.22008847507980983;  // std dev = 1.377, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | else return 0.06763715042495864;  // std dev = 2.421, 38.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=9 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.1263891454332559;  // std dev = 2.565, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | | else return 0.20293423357096346;  // std dev = 4.905, 106.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=39 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(D, C) )
%   | then return 0.5483380706179268;  // std dev = 2.11e-08, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.6719999744038098;  // std dev = 0.143, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, A) )
%   | then return -0.12793826850782933;  // std dev = 0.040, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( interaction(A, E), enzyme(E, F) )
%   | | then if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | | | then return 0.6446610795848561;  // std dev = 0.112, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.006831422422282805;  // std dev = 2.843, 72.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=12 */
%   | | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | | then return 0.6822633622379847;  // std dev = 0.013, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.08426320594833608;  // std dev = 5.773, 190.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3924066200172322;  // std dev = 0.216, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(D, E) )
%   | then if ( interaction(E, A), location(A, F) )
%   | | then if ( enzyme(A, G), complex(A, H) )
%   | | | then return 0.1247332120506528;  // std dev = 0.674, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.06875663350830691;  // std dev = 1.039, 27.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=2 */
%   | | else if ( recursion_proteinclass(E, B) )
%   | | | then return 0.6051223397132174;  // std dev = 0.251, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.021784606430784677;  // std dev = 3.802, 103.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=22 */
%   | else if ( phenotype(A, I), interaction(J, A) )
%   | | then if ( location(A, K), location(J, K) )
%   | | | then return 0.17584656514863653;  // std dev = 2.933, 42.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=17 */
%   | | | else return 0.06281482010614636;  // std dev = 1.844, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.10356647917286227;  // std dev = 1.374, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | else return 0.34195688988067796;  // std dev = 2.437, 24.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=13 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( interaction(E, C), complex(E, F) )
%   | then if ( interaction(C, C), enzyme(A, G) )
%   | | then return 0.41513773168630647;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( complex(A, F), phenotype(A, H) )
%   | | | then return 0.036156007811447934;  // std dev = 1.233, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return 0.12282100186517617;  // std dev = 3.161, 54.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=20 */
%   | else if ( phenotype(A, D), enzyme(A, I) )
%   | | then return -0.04660762455305577;  // std dev = 0.356, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.044245018437455284;  // std dev = 0.388, 84.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=26 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.35735092828785814;  // std dev = 0.057, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.10112566611101088;  // std dev = 0.022, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.09232456221173692;  // std dev = 2.295, 31.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | else return 0.207774231774046;  // std dev = 2.549, 30.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=13 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), phenotype(A, D) )
%   | then return 0.39450554045414393;  // std dev = 0.222, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( phenotype(A, E), phenotype(C, F) )
%   | | then return -0.24714018186657769;  // std dev = 0.874, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else if ( interaction(A, A) )
%   | | | then return 0.2741581445834692;  // std dev = 0.069, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.40497237368202965;  // std dev = 0.138, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, A) )
%   | then return -0.10051245978461658;  // std dev = 0.063, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( interaction(I, H), complex(I, J) )
%   | | | then return 0.003593936822056765;  // std dev = 4.024, 116.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=29 */
%   | | | else return 0.12502205841176697;  // std dev = 2.447, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( enzyme(A, K), interaction(A, L) )
%   | | | then return 0.14970279428840402;  // std dev = 1.723, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.053248036797131;  // std dev = 3.739, 79.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then if ( phenotype(A, F), complex(E, G) )
%   | | | then return 0.019832474268939915;  // std dev = 0.751, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.22942836695688423;  // std dev = 0.071, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.6015349788122502;  // std dev = 0.094, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.15545369234226128;  // std dev = 0.039, 61.000 (wgt'ed) examples reached here.  /* #neg=61 */
%   else if ( interaction(A, H), interaction(H, A) )
%   | then return 0.0023650849698949273;  // std dev = 0.205, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
%   | else if ( interaction(I, A), phenotype(I, J) )
%   | | then if ( interaction(A, K), phenotype(K, L) )
%   | | | then return 0.021088718020022254;  // std dev = 2.159, 32.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | else return 0.10286172531610617;  // std dev = 3.723, 62.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=24 */
%   | | else if ( interaction(A, M) )
%   | | | then return 0.05192308102921781;  // std dev = 2.789, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return -0.033620191986488454;  // std dev = 1.716, 15.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( enzyme(E, D), recursion_proteinclass(E, B) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.32758189858988807;  // std dev = 0.106, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.5109491112218898;  // std dev = 0.025, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.7130626828787902;  // std dev = 0.372, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else return -0.20700790424094093;  // std dev = 0.063, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.258415242157614;  // std dev = 0.081, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else if ( interaction(I, A), interaction(A, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.32383445205034267;  // std dev = 0.143, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.11262615631696393;  // std dev = 0.181, 26.000 (wgt'ed) examples reached here.  /* #neg=26 */
%   | | else if ( location(A, K) )
%   | | | then return 0.02889345684976044;  // std dev = 4.873, 145.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=45 */
%   | | | else return -0.04661092741296293;  // std dev = 1.338, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D) )
%   | then return 0.0313276551150542;  // std dev = 0.332, 147.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=50 */
%   | else return 0.14206547598278044;  // std dev = 0.477, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
%   else if ( interaction(A, F), interaction(F, G) )
%   | then if ( recursion_proteinclass(G, B), phenotype(F, H) )
%   | | then return 0.37090764169442153;  // std dev = 0.350, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(G, I), enzyme(G, J) )
%   | | | then return -0.16269771216590512;  // std dev = 0.791, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return 0.06899786872593532;  // std dev = 2.222, 35.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=12 */
%   | else if ( phenotype(A, K), interaction(L, A) )
%   | | then if ( interaction(L, M), recursion_proteinclass(M, B) )
%   | | | then return 0.61408623210696;  // std dev = 0.292, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else return -0.26426206255303986;  // std dev = 0.155, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else if ( complex(A, N) )
%   | | | then return -0.05263251868119638;  // std dev = 0.794, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.11298237605431333;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), interaction(E, C) )
%   | then if ( phenotype(E, D) )
%   | | then return 0.20096674499960687;  // std dev = 0.116, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.2198077003197058;  // std dev = 1.065, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.2165419273469134;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( phenotype(A, F), interaction(A, G) )
%   | then if ( interaction(G, H), interaction(H, G) )
%   | | then return 0.008367717251032785;  // std dev = 0.288, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.39297622549809075;  // std dev = 0.726, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.09889782147010408;  // std dev = 1.100, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | else if ( complex(A, K) )
%   | | then return 0.024204694114036914;  // std dev = 0.271, 43.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=13 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.0920917178242231;  // std dev = 1.690, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | else return -0.01847278676721243;  // std dev = 4.039, 95.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '11.539', 'seconds']
Refined model CLL: -0.2508


******************************************
Best model found
******************************************
Results 

CLL : -0.25301 

AUC ROC : 0.905579 

AUC PR : 0.28764 

Precision : 0.34292 

Recall : 0.547703 

F1 : 0.421769 

Total Learning Time : 6.622 

Total Inference Time : 2.718611717224121 

Total revision time: 11.979931434631347
Best scored revision CLL: -0.2508


Results 

CLL : -0.25301 

AUC ROC : 0.905579 

AUC PR : 0.28764 

Precision : 0.34292 

Recall : 0.547703 

F1 : 0.421769 

Total Learning Time : 22.70008691215515 

Total Inference Time : 2.718611717224121 

Run: 2
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.078
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18037115732173445;  // std dev = 7.679, 270.000 (wgt'ed) examples reached here.  /* #neg=183 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15358451602812917;  // std dev = 5.475, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   | | | else return 0.14861254945667035;  // std dev = 5.432, 137.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1171320984694903;  // std dev = 4.934, 115.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=35 */
%   | | | else return 0.14405583929477228;  // std dev = 5.897, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07966601963421839;  // std dev = 3.780, 70.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=20 */
%   | | | else return 0.13827920903224789;  // std dev = 6.613, 193.000 (wgt'ed) examples reached here.  /* #neg=126 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11162665225063233;  // std dev = 7.570, 255.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08235467953050385;  // std dev = 7.620, 262.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7411790971216006;  // std dev = 0.030, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2588849284244291;  // std dev = 0.042, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.057801306636227845;  // std dev = 4.014, 73.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=24 */
%   | | | else return 0.04462198461565119;  // std dev = 4.381, 89.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.06100926967910913;  // std dev = 3.778, 101.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=35 */
%   | | | else return 0.05077705844873711;  // std dev = 5.896, 157.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05694129439326318;  // std dev = 6.911, 248.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.043278154778410634;  // std dev = 6.902, 251.000 (wgt'ed) examples reached here.  /* #neg=164 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.497', 'seconds']
Parameter learned model CLL:-0.339401 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.679, 183, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.475, 94, 44], 'false,false,false,false': [5.432, 94, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.934, 80, 35], 'false,false,false,false': [5.897, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.78, 50, 20], 'false,false,false,false': [6.613, 126, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.57, 168, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.62, 175, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.03, 0, 35], 'true,false': [0.042, 69, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.014, 49, 24], 'false,false,false,false': [4.381, 61, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.778, 66, 35], 'false,false,false,false': [5.896, 105, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.911, 161, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.902, 164, 87]}]
{'': [nan, 0.2183950617283959], 'false': [nan, 0.21839506172839596], 'false,false': [nan, 0.2183950617283959], 'false,false,false': [nan, 0.21839506172839596]}
{'': [nan, 0.21627768595041208], 'false': [nan, 0.21627768595041286], 'false,false': [nan, 0.21627768595041208], 'false,false,false': [0.21718126444024316, 0.2153551068250835]}
{'': [nan, 0.21755329397510115], 'false': [nan, 0.21755329397510115], 'false,false': [nan, 0.21755329397510162], 'false,false,false': [0.21171750767552425, 0.2215214362067472]}
{'': [nan, 0.22125892271086506], 'false': [nan, 0.22125892271086506], 'false,false': [nan, 0.22125892271086553], 'false,false,false': [0.2040816326530616, 0.22657463468884848]}
{'': [nan, 0.2247269904070076], 'false': [nan, 0.2247269904070076], 'false,false': [nan, 0.2247269904070081], 'false,false,false': [nan, 0.2247269904070081]}
{'': [nan, 0.22163603080061928], 'false': [nan, 0.22163603080061928], 'false,false': [nan, 0.22163603080061914], 'false,false,false': [nan, 0.22163603080061858]}
{'': [0.22333499965158043, 0.21794794003340434], 'true': [2.602216941614951e-05, 2.6112353367979036e-05], 'false': [nan, 0.21794794003340434], 'false,false': [nan, 0.21794794003340434], 'false,false,false': [0.22067930193282023, 0.21562933972983184], 'true,true': [nan, 2.602216941614951e-05], 'true,true,false': [nan, 2.602216941614951e-05]}
{'': [nan, 0.19008375041252568], 'false': [nan, 0.19008375041252568], 'false,false': [nan, 0.19008375041252623], 'false,false,false': [0.14129550140457664, 0.221428834946608]}
{'': [nan, 0.1926036660074922], 'false': [nan, 0.1926036660074924], 'false,false': [nan, 0.1926036660074924], 'false,false,false': [nan, 0.1926036660074924]}
{'': [nan, 0.18979953725340118], 'false': [nan, 0.18979953725340118], 'false,false': [nan, 0.18979953725340043], 'false,false,false': [nan, 0.18979953725340043]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.577
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then if ( interaction(F, E) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(D, G), interaction(E, G) )
%   | | | then return -0.11746082099804868;  // std dev = 0.988, 41.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=1 */
%   | | | else return 0.15444523139580862;  // std dev = 3.355, 54.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=16 */
%   | else if ( enzyme(A, H), complex(A, I) )
%   | | then if ( enzyme(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( complex(A, K) )
%   | | | then return 0.10814893509951237;  // std dev = 2.291, 28.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | | | else return 0.20382794744519003;  // std dev = 4.280, 81.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=28 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109543;  // std dev = 2.98e-08, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(A, D) )
%   | | | then return -0.14103442469768315;  // std dev = 0.118, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | | else return 0.15151016929718567;  // std dev = 3.417, 59.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=19 */
%   | else if ( phenotype(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.6861911846635165;  // std dev = 0.307, 17.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | else return -0.15180451490892288;  // std dev = 0.121, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then return 0.07431052328465275;  // std dev = 0.389, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | else if ( interaction(K, A), location(K, L) )
%   | | | then return 0.17522094306263097;  // std dev = 4.591, 99.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=34 */
%   | | | else return 0.33148269650490325;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), location(C, D) )
%   then if ( location(A, D), recursion_proteinclass(C, B) )
%   | then return 0.6279361846937708;  // std dev = 0.095, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, A) )
%   | | then return -0.08478761816351313;  // std dev = 0.172, 15.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | else return 0.09045418113253097;  // std dev = 0.398, 109.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( complex(E, G), interaction(H, E) )
%   | | then if ( complex(A, I), location(A, F) )
%   | | | then return 0.22152626929389338;  // std dev = 1.726, 16.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=7 */
%   | | | else return 0.11665792244417211;  // std dev = 2.839, 39.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=12 */
%   | | else if ( complex(A, J), location(A, F) )
%   | | | then return 0.0967619721343966;  // std dev = 1.719, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else return 0.3102289894244768;  // std dev = 2.861, 37.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=19 */
%   | else if ( phenotype(A, K) )
%   | | then return 0.1387970200361263;  // std dev = 0.703, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return -0.020167702029521416;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.2961904548768244;  // std dev = 0.315, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5531213318402699;  // std dev = 0.141, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( complex(A, E), interaction(F, A) )
%   | then if ( complex(F, E), phenotype(A, G) )
%   | | then return -0.0786262908713934;  // std dev = 0.237, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | else if ( interaction(A, H), enzyme(H, I) )
%   | | | then return 0.2692718946258165;  // std dev = 1.546, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | | else return 0.11095191762869419;  // std dev = 3.229, 58.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=19 */
%   | else if ( interaction(A, J), location(A, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.6320301651627616;  // std dev = 0.166, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.019730797618843793;  // std dev = 2.830, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.004868604765764555;  // std dev = 3.076, 58.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=13 */
%   | | | else return 0.045042928065586636;  // std dev = 3.412, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), complex(E, C) )
%   | | then if ( interaction(A, F), interaction(F, G) )
%   | | | then return 0.5491982088618853;  // std dev = 0.434, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return 0.35240358190813187;  // std dev = 0.663, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else return 0.6718081003798055;  // std dev = 0.104, 23.000 (wgt'ed) examples reached here.  /* #pos=23 */
%   | else return -0.18641047769478836;  // std dev = 0.417, 87.000 (wgt'ed) examples reached here.  /* #neg=87 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.3753803979735742;  // std dev = 0.137, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( complex(J, K), complex(I, K) )
%   | | | then return 0.23433189596513226;  // std dev = 2.240, 22.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=10 */
%   | | | else return 0.057106829187604825;  // std dev = 4.377, 108.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=32 */
%   | | else if ( interaction(L, A) )
%   | | | then return 0.4514671830547088;  // std dev = 0.949, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.010332697860501866;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( phenotype(A, D), interaction(A, E) )
%   | then return 0.027391770157171796;  // std dev = 0.275, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | else return 0.10345734170633215;  // std dev = 0.347, 49.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=19 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( interaction(F, F), interaction(A, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.36067830981814347;  // std dev = 0.142, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.09764498674315238;  // std dev = 1.143, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( location(A, J), location(F, K) )
%   | | | then return -0.03232473751633563;  // std dev = 3.736, 89.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=21 */
%   | | | else return 0.16096259761448956;  // std dev = 0.910, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( phenotype(A, L), interaction(A, M) )
%   | | then return 0.2215525600958313;  // std dev = 0.835, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else if ( interaction(N, A), complex(N, P) )
%   | | | then return 0.13006388430721996;  // std dev = 1.190, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.027750447898502107;  // std dev = 3.380, 61.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), interaction(E, A) )
%   | | then return 0.32745406786193343;  // std dev = 0.085, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.333555318529732;  // std dev = 0.108, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5205614889551826;  // std dev = 0.540, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.17854850488626445;  // std dev = 0.052, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( interaction(G, A), location(G, H) )
%   | then if ( enzyme(A, I), interaction(A, G) )
%   | | then if ( location(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.052672749480087905;  // std dev = 1.178, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return -0.1469412935495349;  // std dev = 0.029, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( interaction(K, G), recursion_proteinclass(K, B) )
%   | | | then return 0.29106560685368305;  // std dev = 0.702, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.0694054571942109;  // std dev = 4.776, 115.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=38 */
%   | else return 0.4868648714277196;  // std dev = 0.799, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.16499582620517092;  // std dev = 0.146, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.3303487145438884;  // std dev = 0.359, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), enzyme(A, F) )
%   | then if ( location(A, G), location(E, G) )
%   | | then if ( complex(A, H), interaction(I, E) )
%   | | | then return -0.042243414028351176;  // std dev = 0.888, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.05304154694828097;  // std dev = 2.750, 43.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else if ( complex(E, J) )
%   | | | then return 0.07671892739267168;  // std dev = 1.430, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | | else return 0.22767803619173332;  // std dev = 1.086, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.26763201571933587;  // std dev = 3.212, 70.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=46 */
%   | | | else return -0.20544146075756528;  // std dev = 0.809, 105.000 (wgt'ed) examples reached here.  /* #neg=105 */
%   | | else return 0.23070249144018282;  // std dev = 1.090, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.18661766497022694;  // std dev = 0.176, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F), phenotype(E, G) )
%   | | then if ( phenotype(A, H) )
%   | | | then return -0.009526928332730519;  // std dev = 1.406, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | else return 0.10838096876614625;  // std dev = 1.423, 13.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=5 */
%   | | else if ( interaction(I, E), recursion_proteinclass(I, B) )
%   | | | then return 0.18992648885375382;  // std dev = 0.774, 11.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | else return -0.09471554658585611;  // std dev = 2.355, 73.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=10 */
%   | else if ( interaction(J, A), interaction(K, J) )
%   | | then if ( location(J, L), location(K, L) )
%   | | | then return 0.05524967462560321;  // std dev = 3.841, 102.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=36 */
%   | | | else return -0.04652838098300661;  // std dev = 1.289, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | else if ( interaction(A, M), complex(M, N) )
%   | | | then return 0.08149280907657445;  // std dev = 0.656, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return -0.09735130391927858;  // std dev = 1.256, 19.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), interaction(E, D) )
%   | | then if ( interaction(E, A) )
%   | | | then return 0.15903709734165128;  // std dev = 1.291, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else return -0.21716976226083734;  // std dev = 0.722, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( interaction(F, A), interaction(F, D) )
%   | | | then return 0.49135920238002634;  // std dev = 1.898, 62.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=59 */
%   | | | else return -0.12000124741687311;  // std dev = 1.086, 26.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | else return -0.18906127005896686;  // std dev = 0.074, 116.000 (wgt'ed) examples reached here.  /* #neg=116 */
%   else if ( interaction(G, A), interaction(H, G) )
%   | then if ( recursion_proteinclass(H, B) )
%   | | then return 0.10519986261395364;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.2738727036338956;  // std dev = 0.317, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return -0.0413124516020123;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | else return -0.17627178990511075;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '16.422', 'seconds']
Refined model CLL: -0.210911


******************************************
Best model found
******************************************
Results 

CLL : -0.21943 

AUC ROC : 0.978756 

AUC PR : 0.358838 

Precision : 0.271132 

Recall : 0.602837 

F1 : 0.374037 

Total Learning Time : 16.577 

Total Inference Time : 15.443997859954834 

Total revision time: 34.846227197647096
Best scored revision CLL: -0.210911


Results 

CLL : -0.21943 

AUC ROC : 0.978756 

AUC PR : 0.358838 

Precision : 0.271132 

Recall : 0.602837 

F1 : 0.374037 

Total Learning Time : 45.56509616851807 

Total Inference Time : 15.443997859954834 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.167
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20950028645086413;  // std dev = 8.213, 296.000 (wgt'ed) examples reached here.  /* #neg=192 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.13126443232756538;  // std dev = 6.031, 173.000 (wgt'ed) examples reached here.  /* #neg=121 #pos=52 */
%   | | | else return 0.19179750875659587;  // std dev = 5.764, 144.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1586970963098412;  // std dev = 5.164, 117.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=41 */
%   | | | else return 0.14271195370549053;  // std dev = 6.460, 187.000 (wgt'ed) examples reached here.  /* #neg=124 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10460686342974537;  // std dev = 4.445, 91.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=29 */
%   | | | else return 0.14529895088610797;  // std dev = 6.905, 206.000 (wgt'ed) examples reached here.  /* #neg=131 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08973321005382828;  // std dev = 8.343, 314.000 (wgt'ed) examples reached here.  /* #neg=210 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08906264650088146;  // std dev = 8.245, 299.000 (wgt'ed) examples reached here.  /* #neg=195 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7285002439139058;  // std dev = 0.059, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.271512898315889;  // std dev = 0.080, 75.000 (wgt'ed) examples reached here.  /* #neg=75 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.02826863228319753;  // std dev = 4.016, 77.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=23 */
%   | | | else return 0.05644272249155413;  // std dev = 5.142, 118.000 (wgt'ed) examples reached here.  /* #neg=78 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.02285421098070732;  // std dev = 4.177, 132.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=41 */
%   | | | else return 0.024471187174354276;  // std dev = 6.584, 202.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.042414600573453656;  // std dev = 7.651, 308.000 (wgt'ed) examples reached here.  /* #neg=204 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.05490727388875892;  // std dev = 7.509, 288.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.276', 'seconds']
Parameter learned model CLL:-0.341782 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.213, 192, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.031, 121, 52], 'false,false,false,false': [5.764, 92, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.164, 76, 41], 'false,false,false,false': [6.46, 124, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.445, 62, 29], 'false,false,false,false': [6.905, 131, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.343, 210, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.245, 195, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.059, 0, 41], 'true,false': [0.08, 75, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.016, 54, 23], 'false,false,false,false': [5.142, 78, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.177, 91, 41], 'false,false,false,false': [6.584, 139, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.651, 204, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.509, 184, 104]}]
{'': [nan, 0.22790357925493288], 'false': [nan, 0.22790357925493115], 'false,false': [nan, 0.22790357925493288], 'false,false,false': [nan, 0.22790357925493115]}
{'': [nan, 0.2204420384320699], 'false': [nan, 0.22044203843206583], 'false,false': [nan, 0.2204420384320699], 'false,false,false': [0.21023087974873647, 0.23070987654320754]}
{'': [nan, 0.22504903307163732], 'false': [nan, 0.22504903307163732], 'false,false': [nan, 0.22504903307163734], 'false,false,false': [0.22791670006836018, 0.22315648088879267]}
{'': [nan, 0.22739157613362487], 'false': [nan, 0.22739157613362487], 'false,false': [nan, 0.2273915761336223], 'false,false,false': [0.2171235358048543, 0.2314201112778701]}
{'': [nan, 0.2216837930360745], 'false': [nan, 0.2216837930360745], 'false,false': [nan, 0.22168379303607633], 'false,false,false': [nan, 0.22168379303607633]}
{'': [nan, 0.22736554456087016], 'false': [nan, 0.22736554456087016], 'false,false': [nan, 0.22736554456087035], 'false,false,false': [nan, 0.2273655445608706]}
{'': [0.22861319383433865, 0.2185001750945689], 'true': [8.452397107890459e-05, 8.463390621494445e-05], 'false': [nan, 0.2185001750945689], 'false,false': [nan, 0.2185001750945689], 'false,false,false': [0.2094788328554558, 0.2240735420856076], 'true,true': [nan, 8.452397107890459e-05], 'true,true,false': [nan, 8.452397107890459e-05]}
{'': [nan, 0.1820452271623879], 'false': [nan, 0.1820452271623879], 'false,false': [nan, 0.18204522716238797], 'false,false,false': [0.132198065684001, 0.21461758649191406]}
{'': [nan, 0.19003771570571018], 'false': [nan, 0.19003771570570993], 'false,false': [nan, 0.19003771570570993], 'false,false,false': [nan, 0.19003771570570993]}
{'': [nan, 0.19577412734580837], 'false': [nan, 0.19577412734580837], 'false,false': [nan, 0.19577412734580854], 'false,false,false': [nan, 0.19577412734580854]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 21.522
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7331489350995123;  // std dev = 0.331, 16.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then if ( interaction(F, A), recursion_proteinclass(G, B) )
%   | | | then return 0.762910839861417;  // std dev = 1.345, 21.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=19 */
%   | | | else return -0.024204006076958252;  // std dev = 2.970, 85.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=10 */
%   | | else if ( enzyme(C, H), enzyme(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.2139181658687425;  // std dev = 4.882, 104.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=37 */
%   else if ( phenotype(A, I) )
%   | then return 0.11396288858788445;  // std dev = 0.436, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( enzyme(A, J) )
%   | | then return 0.6081489350995122;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else if ( interaction(A, K), location(A, L) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.13087620782678505;  // std dev = 2.089, 22.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=6 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), interaction(D, D) )
%   | then return 0.5086316388249216;  // std dev = 0.409, 8.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | else return 0.8161102662822198;  // std dev = 0.131, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( location(A, E), complex(A, F) )
%   | then if ( location(G, E), recursion_proteinclass(G, B) )
%   | | then if ( complex(G, F) )
%   | | | then return 0.7814435600184765;  // std dev = 0.259, 29.000 (wgt'ed) examples reached here.  /* #pos=29 */
%   | | | else return -0.15216689098045563;  // std dev = 0.108, 18.000 (wgt'ed) examples reached here.  /* #neg=18 */
%   | | else return -0.1537347958925453;  // std dev = 0.192, 74.000 (wgt'ed) examples reached here.  /* #neg=74 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.7976877622760252;  // std dev = 0.131, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.16444812647243207;  // std dev = 0.131, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( interaction(J, A), enzyme(J, K) )
%   | | | then return 0.09750714240349395;  // std dev = 3.258, 57.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=15 */
%   | | | else return 0.16437137538006677;  // std dev = 4.649, 100.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=33 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(A, D) )
%   then if ( interaction(C, A) )
%   | then if ( complex(C, E), phenotype(C, F) )
%   | | then if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.6053683775637438;  // std dev = 0.129, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.15144856199614892;  // std dev = 0.147, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else return 0.17320290951138145;  // std dev = 0.849, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then return 0.14088173503794948;  // std dev = 1.005, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else return 0.01107564089149566;  // std dev = 0.357, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.6039015112003099;  // std dev = 0.229, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | else if ( interaction(A, A) )
%   | | then return -0.12132764414042585;  // std dev = 0.001, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | else if ( complex(A, K), location(A, L) )
%   | | | then return 0.06925456054167062;  // std dev = 3.242, 88.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=24 */
%   | | | else return 0.14934997650284237;  // std dev = 5.552, 149.000 (wgt'ed) examples reached here.  /* #neg=98 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(D, F), interaction(F, D) )
%   | | | then return 0.3904075055287079;  // std dev = 1.914, 39.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=31 */
%   | | | else return 0.6396526710427732;  // std dev = 2.253, 66.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=61 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.5965028100245928;  // std dev = 0.812, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.17673098124099787;  // std dev = 0.190, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | else return -0.1714601709684696;  // std dev = 0.554, 155.000 (wgt'ed) examples reached here.  /* #neg=155 */
%   else if ( interaction(A, H) )
%   | then return 0.31310240828965596;  // std dev = 0.988, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( interaction(J, A) )
%   | | | then return 0.05778165069484423;  // std dev = 0.617, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return 0.1811465557612772;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.30569351335095796;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( recursion_proteinclass(D, B) )
%   | then if ( phenotype(C, E), interaction(C, C) )
%   | | then return 0.25262985022767537;  // std dev = 0.308, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | else return 0.4241292435017395;  // std dev = 0.195, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else if ( interaction(A, C) )
%   | | then return -0.1169224097908479;  // std dev = 0.205, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   | | else if ( interaction(C, D), phenotype(C, F) )
%   | | | then return 0.10384620484833365;  // std dev = 4.396, 134.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=47 */
%   | | | else return 0.007226343661503528;  // std dev = 2.127, 45.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=11 */
%   else if ( interaction(A, G), enzyme(G, H) )
%   | then return 0.07739443013709713;  // std dev = 0.360, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( enzyme(A, I) )
%   | | then return 0.3721166514940079;  // std dev = 0.657, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.32758737340793004;  // std dev = 0.555, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.14638228214936305;  // std dev = 1.383, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.31508047538793144;  // std dev = 0.091, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, D), enzyme(D, E) )
%   | | then return 0.3360603740685588;  // std dev = 0.086, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return 0.45186279747565816;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then if ( enzyme(F, G) )
%   | | then return 0.2969480891101536;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4059834934264779;  // std dev = 0.170, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, H) )
%   | | then if ( phenotype(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.39690346585375935;  // std dev = 2.378, 65.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=53 */
%   | | | else return -0.15754928304232865;  // std dev = 0.557, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | | else if ( interaction(A, J), phenotype(J, K) )
%   | | | then return 0.09677053390029093;  // std dev = 1.722, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return -0.017562660427180694;  // std dev = 3.113, 82.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=18 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.008511154778364418;  // std dev = 0.249, 124.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=41 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( complex(E, F), location(A, G) )
%   | | then if ( enzyme(E, H), phenotype(E, D) )
%   | | | then return 0.034085702536107404;  // std dev = 1.294, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | | | else return -0.013420239132226558;  // std dev = 2.708, 92.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=24 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.4467162687401131;  // std dev = 0.757, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | else return -0.1574221236584782;  // std dev = 0.016, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(A, J) )
%   | | then if ( enzyme(J, K) )
%   | | | then return 0.3563507949842181;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.15804777803147213;  // std dev = 1.276, 15.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return 0.06127595800004094;  // std dev = 2.645, 45.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=15 */
%   | | | else return 0.19724978704304788;  // std dev = 0.972, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(A, E), recursion_proteinclass(D, B) )
%   | then return 0.2490395461481989;  // std dev = 0.145, 33.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=31 */
%   | else if ( interaction(A, C) )
%   | | then return -0.10835116427073635;  // std dev = 0.046, 46.000 (wgt'ed) examples reached here.  /* #neg=46 */
%   | | else if ( complex(C, F), enzyme(A, G) )
%   | | | then return -0.03218622075536933;  // std dev = 2.557, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | | else return 0.051095844259312614;  // std dev = 3.825, 133.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=46 */
%   else if ( complex(A, H) )
%   | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | then return 0.39402738747627963;  // std dev = 0.069, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.1474904824448476;  // std dev = 0.065, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | else if ( interaction(A, J), enzyme(J, K) )
%   | | then return -0.1712152521380036;  // std dev = 0.819, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | else if ( enzyme(A, L) )
%   | | | then return -0.10517689473157835;  // std dev = 0.945, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | | else return -0.06323690831902086;  // std dev = 1.471, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.22348962675325046;  // std dev = 0.083, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return -0.03861482848084731;  // std dev = 0.193, 83.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   else if ( enzyme(A, E), interaction(F, A) )
%   | then if ( interaction(G, F), interaction(F, G) )
%   | | then if ( complex(F, H), complex(G, H) )
%   | | | then return 0.0785821489144459;  // std dev = 1.862, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | | | else return -0.05067753938165926;  // std dev = 1.545, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | | else if ( enzyme(F, I) )
%   | | | then return -0.10133247749722586;  // std dev = 0.537, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | else return -0.05166671627916046;  // std dev = 0.999, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | then return 0.26551981781929124;  // std dev = 0.075, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( complex(A, K), interaction(L, A) )
%   | | | then return -0.01838866472892498;  // std dev = 1.392, 43.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=10 */
%   | | | else return 0.03224308817164629;  // std dev = 3.812, 122.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=39 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(C, E) )
%   | then return -0.18366261401831363;  // std dev = 0.856, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0.21852329267847373;  // std dev = 0.056, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, F), interaction(A, G) )
%   | then if ( complex(G, F), interaction(G, H) )
%   | | then if ( interaction(H, I), phenotype(I, J) )
%   | | | then return -0.04311688050879636;  // std dev = 1.384, 37.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=7 */
%   | | | else return -0.13035989848651866;  // std dev = 0.076, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.25439789340019553;  // std dev = 0.125, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.023389144429930106;  // std dev = 0.961, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | else if ( interaction(L, A), interaction(L, L) )
%   | | then return -0.03496847283332077;  // std dev = 0.178, 58.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=11 */
%   | | else if ( interaction(A, M), phenotype(A, N) )
%   | | | then return 0.11728131674484227;  // std dev = 1.570, 24.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=10 */
%   | | | else return 0.007283357011430562;  // std dev = 4.330, 156.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=49 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.832', 'seconds']
Refined model CLL: -0.203641


******************************************
Best model found
******************************************
Results 

CLL : -0.200596 

AUC ROC : 0.992884 

AUC PR : 0.447487 

Precision : 0.461538 

Recall : 0.679245 

F1 : 0.549618 

Total Learning Time : 21.522 

Total Inference Time : 16.831894397735596 

Total revision time: 41.73828135871887
Best scored revision CLL: -0.203641


Results 

CLL : -0.200596 

AUC ROC : 0.992884 

AUC PR : 0.447487 

Precision : 0.461538 

Recall : 0.679245 

F1 : 0.549618 

Total Learning Time : 52.457150329589844 

Total Inference Time : 16.831894397735596 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.23
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.19148226843284577;  // std dev = 7.832, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16653882456488073;  // std dev = 5.831, 153.000 (wgt'ed) examples reached here.  /* #neg=102 #pos=51 */
%   | | | else return 0.14147616792327805;  // std dev = 5.325, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.16524364166545147;  // std dev = 5.327, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.1586774270244718;  // std dev = 5.593, 138.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10288118824583264;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.12220640508673808;  // std dev = 6.615, 196.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09734295446861871;  // std dev = 7.831, 276.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.07694695183144688;  // std dev = 7.845, 278.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7314338362381783;  // std dev = 0.004, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.26850031298180366;  // std dev = 0.005, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.012547330760951436;  // std dev = 4.231, 88.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=25 */
%   | | | else return 0.12321603498537922;  // std dev = 3.746, 59.000 (wgt'ed) examples reached here.  /* #neg=36 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.05987496795719086;  // std dev = 4.190, 124.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=44 */
%   | | | else return 0.044115389778960776;  // std dev = 5.687, 147.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039621581948753475;  // std dev = 7.054, 273.000 (wgt'ed) examples reached here.  /* #neg=181 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.006850902090016835;  // std dev = 7.191, 297.000 (wgt'ed) examples reached here.  /* #neg=205 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.525', 'seconds']
Parameter learned model CLL:-0.322221 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.832, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.831, 102, 51], 'false,false,false,false': [5.325, 92, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.327, 80, 44], 'false,false,false,false': [5.593, 90, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.615, 130, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.831, 184, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.845, 186, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.004, 0, 44], 'true,false': [0.005, 77, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.231, 63, 25], 'false,false,false,false': [3.746, 36, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.19, 80, 44], 'false,false,false,false': [5.687, 99, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.054, 181, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.191, 205, 92]}]
{'': [nan, 0.2222222222222235], 'false': [nan, 0.2222222222222231], 'false,false': [nan, 0.2222222222222235], 'false,false,false': [nan, 0.2222222222222231]}
{'': [nan, 0.21820137904053843], 'false': [nan, 0.21820137904053918], 'false,false': [nan, 0.21820137904053843], 'false,false,false': [0.2222222222222211, 0.21323986658375346]}
{'': [nan, 0.22773001893886657], 'false': [nan, 0.22773001893886657], 'false,false': [nan, 0.22773001893886716], 'false,false,false': [0.22888178942031814, 0.22667468908293617]}
{'': [nan, 0.2217838072974215], 'false': [nan, 0.2217838072974215], 'false,false': [nan, 0.22178380729742186], 'false,false,false': [0.21795458009449795, 0.22325708616343531]}
{'': [nan, 0.22219756918057226], 'false': [nan, 0.22219756918057226], 'false,false': [nan, 0.22219756918057373], 'false,false,false': [nan, 0.22219756918057373]}
{'': [nan, 0.22139100425789673], 'false': [nan, 0.22139100425789673], 'false,false': [nan, 0.2213910042578964], 'false,false,false': [nan, 0.22139100425789673]}
{'': [0.23137479602810587, 0.2201646676076693], 'true': [3.069154624991587e-07, 3.1606992788691846e-07], 'false': [nan, 0.2201646676076693], 'false,false': [nan, 0.2201646676076693], 'false,false,false': [0.20338326446281024, 0.23786268313703002], 'true,true': [nan, 3.069154624991587e-07], 'true,true,false': [nan, 3.069154624991587e-07]}
{'': [nan, 0.1841868121583817], 'false': [nan, 0.1841868121583817], 'false,false': [nan, 0.18418681215838112], 'false,false,false': [0.14156417537114177, 0.22002695830539507]}
{'': [nan, 0.1822733811655592], 'false': [nan, 0.18227338116555838], 'false,false': [nan, 0.18227338116555838], 'false,false,false': [nan, 0.18227338116555838]}
{'': [nan, 0.17411605044588388], 'false': [nan, 0.17411605044588388], 'false,false': [nan, 0.1741160504458839], 'false,false,false': [nan, 0.1741160504458839]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.081
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( enzyme(A, E) )
%   | | then return -0.1418510649004878;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #neg=15 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.09344305274657114;  // std dev = 1.749, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | | else return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( interaction(G, A), interaction(H, G) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.11769091983233536;  // std dev = 5.018, 131.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=34 */
%   | | else if ( complex(A, I) )
%   | | | then return 0.3581489350995123;  // std dev = 2.236, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.17393840878372205;  // std dev = 4.052, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.7194734122109543;  // std dev = 2.11e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.7969255137688293;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.7194734122109545;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(G, E), interaction(E, G) )
%   | | | then return -0.10760095407841766;  // std dev = 1.382, 45.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=2 */
%   | | | else return 0.12010069186280149;  // std dev = 2.899, 43.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | else if ( complex(A, H), phenotype(A, I) )
%   | | then if ( complex(J, H), recursion_proteinclass(J, B) )
%   | | | then return 0.8226140081750745;  // std dev = 0.118, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return -0.1695625628979401;  // std dev = 0.093, 41.000 (wgt'ed) examples reached here.  /* #neg=41 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.3958790086620782;  // std dev = 1.271, 7.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | else return 0.1533835154636657;  // std dev = 5.492, 141.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=45 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.5988341957512677;  // std dev = 0.066, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( complex(A, D), interaction(A, E) )
%   | then if ( complex(E, D) )
%   | | then if ( interaction(E, F), phenotype(A, G) )
%   | | | then return -0.1641062316639377;  // std dev = 0.304, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return -3.891990327160172E-4;  // std dev = 2.111, 32.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=6 */
%   | | else if ( complex(E, H), enzyme(A, I) )
%   | | | then return 0.1893395890267651;  // std dev = 1.571, 12.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=5 */
%   | | | else return 0.07047075589107718;  // std dev = 1.868, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | else if ( interaction(J, A), interaction(J, J) )
%   | | then if ( interaction(A, K), interaction(K, K) )
%   | | | then return -0.1285957586613105;  // std dev = 0.029, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.08770130362669627;  // std dev = 2.188, 27.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=7 */
%   | | else if ( interaction(L, A), recursion_proteinclass(L, B) )
%   | | | then return 0.44509622742646443;  // std dev = 0.857, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.12865103001122716;  // std dev = 5.701, 162.000 (wgt'ed) examples reached here.  /* #neg=111 #pos=51 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.4282037603782643;  // std dev = 0.213, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(D, E), phenotype(D, F) )
%   | | then if ( complex(E, G), phenotype(E, F) )
%   | | | then return 0.05640974896084858;  // std dev = 1.229, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return -0.13636765192544165;  // std dev = 0.057, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( phenotype(D, H) )
%   | | | then return 0.36853480804509403;  // std dev = 1.824, 14.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | else return 0.1280602150594646;  // std dev = 2.069, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6963273257544679;  // std dev = 0.412, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | | else return -0.18639535755863149;  // std dev = 0.272, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   | | else if ( enzyme(A, K), interaction(L, A) )
%   | | | then return 0.143364760575297;  // std dev = 2.134, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.06013089738189748;  // std dev = 4.612, 109.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=29 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3785842280111358;  // std dev = 0.101, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( interaction(D, A) )
%   | | then if ( enzyme(A, E) )
%   | | | then return -0.07149517400803879;  // std dev = 0.596, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return -0.12536001389263515;  // std dev = 0.020, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | else if ( phenotype(D, F) )
%   | | | then return 0.11016325254603337;  // std dev = 2.155, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   | | | else return 0.013843402188367509;  // std dev = 2.009, 25.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=6 */
%   | else if ( interaction(G, A), interaction(G, G) )
%   | | then if ( location(G, H) )
%   | | | then return 0.07525268871431971;  // std dev = 1.914, 21.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | else return -0.1641567105990195;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(I, A), enzyme(I, J) )
%   | | | then return 0.016749750236590474;  // std dev = 1.165, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | else return 0.12995691134668078;  // std dev = 5.251, 142.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=53 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A) )
%   | then return 0.23446932241472457;  // std dev = 1.29e-08, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.3795275489635647;  // std dev = 0.100, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(D, A), interaction(A, E) )
%   | then if ( interaction(E, F), recursion_proteinclass(F, B) )
%   | | then return 0.4814421266485798;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G), complex(D, H) )
%   | | | then return 0.08470662921165587;  // std dev = 1.886, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | else return -0.08363394132404534;  // std dev = 2.596, 63.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=8 */
%   | else if ( complex(A, I) )
%   | | then if ( complex(J, I), interaction(A, J) )
%   | | | then return -0.11541979986893562;  // std dev = 0.769, 10.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=1 */
%   | | | else return 0.01583492884699804;  // std dev = 2.753, 81.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=22 */
%   | | else if ( location(A, K) )
%   | | | then return 0.05075275122584671;  // std dev = 4.958, 121.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.26022969895492043;  // std dev = 1.000, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.45992328251856385;  // std dev = 0.251, 45.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=44 */
%   | else return -0.17763853230140858;  // std dev = 0.046, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( phenotype(F, G), phenotype(A, G) )
%   | | then if ( recursion_proteinclass(F, B) )
%   | | | then return 0.24466409378789508;  // std dev = 0.122, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.2105935931392027;  // std dev = 0.683, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | else if ( interaction(H, F) )
%   | | | then return 0.015641169256804137;  // std dev = 3.209, 56.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=15 */
%   | | | else return 0.24327485363566742;  // std dev = 1.411, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.45620376562332365;  // std dev = 2.533, 32.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=23 */
%   | | | else return -0.2482273476764513;  // std dev = 0.105, 24.000 (wgt'ed) examples reached here.  /* #neg=24 */
%   | | else return -0.04034490260580981;  // std dev = 0.433, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), complex(C, D) )
%   then if ( enzyme(A, E) )
%   | then return -0.017004299117934992;  // std dev = 0.309, 68.000 (wgt'ed) examples reached here.  /* #neg=49 #pos=19 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.20654232408504067;  // std dev = 0.165, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( complex(A, D), interaction(C, C) )
%   | | | then return -0.1201213946939409;  // std dev = 0.055, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.04131305851070698;  // std dev = 2.541, 42.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=13 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.31634163238430324;  // std dev = 0.180, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(H, A) )
%   | | then if ( interaction(H, I), recursion_proteinclass(I, B) )
%   | | | then return 0.5418933583720821;  // std dev = 1.559, 45.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=43 */
%   | | | else return -0.2003636208885575;  // std dev = 0.644, 89.000 (wgt'ed) examples reached here.  /* #neg=89 */
%   | | else if ( phenotype(A, J) )
%   | | | then return 0.2200174708419612;  // std dev = 1.275, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | | else return 0.07029733033864309;  // std dev = 1.043, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then return -0.029977836455041852;  // std dev = 0.135, 39.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=11 */
%   else if ( interaction(A, D), phenotype(A, E) )
%   | then if ( interaction(F, A), interaction(G, F) )
%   | | then if ( enzyme(G, H), interaction(I, G) )
%   | | | then return 0.19750257657091588;  // std dev = 0.807, 4.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0.3025324857686315;  // std dev = 0.909, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | else if ( enzyme(A, J), interaction(D, D) )
%   | | | then return 0.2698732154444629;  // std dev = 0.583, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.005633910259217253;  // std dev = 2.006, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | else if ( interaction(K, A) )
%   | | then if ( phenotype(A, L), location(K, M) )
%   | | | then return -0.024325773981724134;  // std dev = 1.531, 51.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else return 0.02672790887814358;  // std dev = 3.834, 117.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=37 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.022336744974675922;  // std dev = 1.127, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.16930724208938497;  // std dev = 1.837, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(A, D) )
%   | then return 5.328146647614468E-4;  // std dev = 0.129, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( complex(A, F) )
%   | | | then return 0.2683322153585785;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7175728753307673;  // std dev = 0.131, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return -0.17059557893585411;  // std dev = 0.053, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then return 0.17019239711716802;  // std dev = 0.048, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, H), interaction(H, H) )
%   | | then if ( phenotype(H, I) )
%   | | | then return 0.14913288235127373;  // std dev = 1.611, 17.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=8 */
%   | | | else return -0.027826751284743222;  // std dev = 1.693, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.024572030952888624;  // std dev = 2.928, 79.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=28 */
%   | | | else return -0.03327512169385146;  // std dev = 3.481, 123.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=29 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '17.864', 'seconds']
Refined model CLL: -0.221519


******************************************
Best model found
******************************************
Results 

CLL : -0.225434 

AUC ROC : 0.969019 

AUC PR : 0.282702 

Precision : 0.211949 

Recall : 0.537906 

F1 : 0.304082 

Total Learning Time : 6.081 

Total Inference Time : 3.0328760147094727 

Total revision time: 12.086344371795654
Best scored revision CLL: -0.221519


Results 

CLL : -0.225434 

AUC ROC : 0.969019 

AUC PR : 0.282702 

Precision : 0.211949 

Recall : 0.537906 

F1 : 0.304082 

Total Learning Time : 22.805213342666626 

Total Inference Time : 3.0328760147094727 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.116
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17666745361803127;  // std dev = 7.656, 270.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.14294652373828967;  // std dev = 6.000, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
%   | | | else return 0.12585250664427258;  // std dev = 4.911, 117.000 (wgt'ed) examples reached here.  /* #neg=83 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.14497900968321953;  // std dev = 4.332, 85.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=28 */
%   | | | else return 0.145357946124288;  // std dev = 6.235, 176.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09332091326362286;  // std dev = 3.643, 63.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=19 */
%   | | | else return 0.11049118790218967;  // std dev = 6.764, 211.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08741530750766649;  // std dev = 7.688, 275.000 (wgt'ed) examples reached here.  /* #neg=189 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11024368547455962;  // std dev = 7.469, 245.000 (wgt'ed) examples reached here.  /* #neg=159 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7396985960566331;  // std dev = 3.63e-05, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.2602998513215054;  // std dev = 4.31e-05, 51.000 (wgt'ed) examples reached here.  /* #neg=51 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08737399301376908;  // std dev = 4.628, 94.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=33 */
%   | | | else return 0.03373330900585429;  // std dev = 4.201, 85.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.08117189954040377;  // std dev = 3.305, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | | else return 0.07228557924556886;  // std dev = 6.154, 167.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06217035722537061;  // std dev = 6.949, 242.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03244718341269092;  // std dev = 7.044, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.586', 'seconds']
Parameter learned model CLL:-0.346779 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.656, 184, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.0, 117, 52], 'false,false,false,false': [4.911, 83, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.332, 57, 28], 'false,false,false,false': [6.235, 118, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.643, 44, 19], 'false,false,false,false': [6.764, 144, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.688, 189, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.469, 159, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [3.63e-05, 0, 28], 'true,false': [4.31e-05, 51, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.628, 61, 33], 'false,false,false,false': [4.201, 60, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.305, 47, 28], 'false,false,false,false': [6.154, 109, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.949, 156, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.044, 168, 86]}]
{'': [nan, 0.21706447187928746], 'false': [nan, 0.21706447187928732], 'false,false': [nan, 0.21706447187928746], 'false,false,false': [nan, 0.21706447187928732]}
{'': [nan, 0.21027923125825337], 'false': [nan, 0.2102792312582538], 'false,false': [nan, 0.21027923125825337], 'false,false,false': [0.2130177514792923, 0.20615092409964178]}
{'': [nan, 0.2208748806776], 'false': [nan, 0.2208748806776], 'false,false': [nan, 0.22087488067760014], 'false,false,false': [0.2208279777914138, 0.22089748587573146]}
{'': [nan, 0.21543585041634075], 'false': [nan, 0.21543585041634075], 'false,false': [nan, 0.21543585041634036], 'false,false,false': [0.21063240110859113, 0.21680226896330645]}
{'': [nan, 0.2149548986782837], 'false': [nan, 0.2149548986782837], 'false,false': [nan, 0.21495489867828335], 'false,false,false': [nan, 0.21495489867828335]}
{'': [nan, 0.22772421916673583], 'false': [nan, 0.22772421916673583], 'false,false': [nan, 0.22772421916673566], 'false,false,false': [nan, 0.22772421916673588]}
{'': [0.22880877519089335, 0.21894071026108722], 'true': [4.702321072207789e-11, 3.6471000511567704e-11], 'false': [nan, 0.21894071026108722], 'false,false': [nan, 0.21894071026108722], 'false,false,false': [0.22781801720235356, 0.2076124567474047], 'true,true': [nan, 4.702321072207789e-11], 'true,true,false': [nan, 4.702321072207789e-11]}
{'': [nan, 0.20165431971162467], 'false': [nan, 0.20165431971162467], 'false,false': [nan, 0.201654319711625], 'false,false,false': [0.14563054930895825, 0.2267902224937404]}
{'': [nan, 0.19953386299881604], 'false': [nan, 0.1995338629988161], 'false,false': [nan, 0.1995338629988161], 'false,false,false': [nan, 0.1995338629988161]}
{'': [nan, 0.1953634409547266], 'false': [nan, 0.1953634409547266], 'false,false': [nan, 0.19536344095472616], 'false,false,false': [nan, 0.19536344095472616]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.64
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(A, D) )
%   then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | then return 0.8081489350995122;  // std dev = 0.218, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else if ( interaction(D, A) )
%   | | then return -0.14185106490048768;  // std dev = 4.08e-08, 39.000 (wgt'ed) examples reached here.  /* #neg=39 */
%   | | else return 0.11648226843284444;  // std dev = 0.438, 120.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=31 */
%   else if ( interaction(F, A), enzyme(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7331489350995123;  // std dev = 0.331, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.14185106490048777;  // std dev = 0.000, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(I, A), interaction(J, I) )
%   | | then if ( phenotype(J, K), phenotype(I, K) )
%   | | | then return 0.4735335504841277;  // std dev = 1.754, 13.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=8 */
%   | | | else return 0.23745927992709853;  // std dev = 2.613, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
%   | | else if ( complex(A, L) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.221785298735876;  // std dev = 2.256, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.7579324842021993;  // std dev = 0.197, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, A) )
%   | then return -0.1254446385283914;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | else if ( interaction(A, D), phenotype(D, E) )
%   | | then if ( complex(D, F), interaction(G, A) )
%   | | | then return 0.04703124590696699;  // std dev = 2.384, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | | else return 0.15635473928839572;  // std dev = 3.695, 66.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=21 */
%   | | else if ( enzyme(A, H), interaction(I, A) )
%   | | | then return 0.11258738350449643;  // std dev = 3.135, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
%   | | | else return 0.2147411200616431;  // std dev = 3.967, 69.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=27 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D) )
%   | then return 0.7140787006750214;  // std dev = 0.114, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(A, E), complex(E, F) )
%   | | then return 0.5977055220007153;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.3126732418020752;  // std dev = 0.601, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(G, H), phenotype(H, I) )
%   | | then return 0.34770552200071525;  // std dev = 0.729, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.6766876874592673;  // std dev = 0.137, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6625391023659363;  // std dev = 2.185, 46.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=40 */
%   | | | else return -0.1728553509410108;  // std dev = 0.229, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return -0.04637685145446237;  // std dev = 1.545, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.07388520570893432;  // std dev = 3.850, 77.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=21 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), location(C, E) )
%   | then if ( interaction(A, F), complex(F, G) )
%   | | then return 0.42601841134030716;  // std dev = 0.152, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.6711452623265981;  // std dev = 0.035, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( interaction(C, H), enzyme(H, I) )
%   | | then return 0.4879823914420084;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.15898680536816814;  // std dev = 0.615, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, A) )
%   | then return -0.10670128800490347;  // std dev = 0.041, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then if ( interaction(K, A), phenotype(K, L) )
%   | | | then return 0.5317980620716664;  // std dev = 0.074, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.47403857861134446;  // std dev = 0.121, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, M), interaction(M, N) )
%   | | | then return 0.049014589771206166;  // std dev = 4.059, 115.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=28 */
%   | | | else return 0.11187295918078094;  // std dev = 4.335, 107.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=36 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3617061733009026;  // std dev = 0.194, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( interaction(D, A), interaction(E, D) )
%   | then if ( complex(E, F), location(D, G) )
%   | | then if ( interaction(A, H), interaction(H, D) )
%   | | | then return -0.059034537335630355;  // std dev = 0.981, 20.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=2 */
%   | | | else return 0.09584542381889163;  // std dev = 3.854, 87.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=29 */
%   | | else if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | | then return 0.5399818789257885;  // std dev = 0.022, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06699094518579422;  // std dev = 2.043, 49.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( location(A, K) )
%   | | | then return -0.010762473366105096;  // std dev = 0.593, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.032917306498246264;  // std dev = 0.725, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(A, L), recursion_proteinclass(L, B) )
%   | | | then return 0.37471415804349234;  // std dev = 0.128, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.13218965483781275;  // std dev = 3.507, 69.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=24 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), complex(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( phenotype(A, F) )
%   | | then return 0.5951430299392084;  // std dev = 0.279, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.7729670264593209;  // std dev = 0.030, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return -0.19447557360826834;  // std dev = 0.113, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, A) )
%   | | then return 0.26701922213588347;  // std dev = 0.046, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.4129922289793479;  // std dev = 0.059, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.09102674921181313;  // std dev = 0.041, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.007689560592711744;  // std dev = 2.398, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | else if ( interaction(A, J) )
%   | | | then return 0.08270301974681508;  // std dev = 3.257, 63.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=22 */
%   | | | else return 0.020191742773695544;  // std dev = 3.870, 102.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=28 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4288440422257376;  // std dev = 0.301, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.18642921352229413;  // std dev = 0.069, 48.000 (wgt'ed) examples reached here.  /* #neg=48 */
%   else if ( enzyme(A, E), interaction(A, F) )
%   | then if ( phenotype(F, G), phenotype(A, G) )
%   | | then return 0.019323961066642713;  // std dev = 0.318, 10.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | else if ( interaction(H, A), phenotype(A, I) )
%   | | | then return 0.4622120240497228;  // std dev = 0.742, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return 0.17675564722426643;  // std dev = 0.886, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | else if ( interaction(A, J), complex(J, K) )
%   | | then if ( interaction(J, L), recursion_proteinclass(L, B) )
%   | | | then return 0.4013963184154348;  // std dev = 0.374, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.08974386192195943;  // std dev = 1.607, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.05011921640446744;  // std dev = 3.085, 70.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=24 */
%   | | | else return 0.16445478137407496;  // std dev = 2.880, 38.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=16 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.21658184024797827;  // std dev = 0.070, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( enzyme(D, E) )
%   | | then if ( phenotype(A, F), complex(A, G) )
%   | | | then return 0.0739430304194058;  // std dev = 0.579, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | else return -0.10517569261848925;  // std dev = 1.611, 29.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | else if ( complex(D, H), interaction(I, A) )
%   | | | then return -0.061337117508655406;  // std dev = 0.815, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | | | else return 0.0746856813930436;  // std dev = 1.534, 19.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | else if ( interaction(J, A), phenotype(J, K) )
%   | | then if ( interaction(L, J), interaction(J, L) )
%   | | | then return -0.021557080384646318;  // std dev = 2.326, 53.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=15 */
%   | | | else return 0.03114275261040109;  // std dev = 3.582, 89.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=26 */
%   | | else if ( interaction(A, M), complex(A, N) )
%   | | | then return 0.21929675194600043;  // std dev = 0.661, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | else return 0.052520132653075195;  // std dev = 2.483, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.13723383461608316;  // std dev = 0.079, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.06356304697046186;  // std dev = 0.168, 50.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=6 */
%   else if ( interaction(D, A), location(A, E) )
%   | then if ( interaction(F, D), phenotype(D, G) )
%   | | then if ( phenotype(F, H) )
%   | | | then return 0.022790903190556346;  // std dev = 3.415, 88.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=28 */
%   | | | else return 0.17854491483174045;  // std dev = 1.143, 8.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=4 */
%   | | else if ( enzyme(A, I), phenotype(A, J) )
%   | | | then return 0.2813628072457664;  // std dev = 1.173, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.09584901798659742;  // std dev = 2.463, 39.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=17 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.25064549920377205;  // std dev = 0.189, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.03882247146950412;  // std dev = 1.735, 31.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | | else return 0.054751940357537957;  // std dev = 1.926, 23.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=7 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.11199925885344177;  // std dev = 0.233, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   else if ( phenotype(A, D), interaction(E, A) )
%   | then if ( enzyme(A, F) )
%   | | then if ( interaction(A, G), enzyme(G, F) )
%   | | | then return -0.10308282675989378;  // std dev = 0.646, 10.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else return 0.06746523200583482;  // std dev = 2.085, 29.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | else if ( interaction(H, E), recursion_proteinclass(H, B) )
%   | | | then return 0.4007194479702867;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.06298954855991316;  // std dev = 2.913, 101.000 (wgt'ed) examples reached here.  /* #neg=82 #pos=19 */
%   | else if ( interaction(I, A), interaction(I, I) )
%   | | then if ( interaction(I, J), recursion_proteinclass(J, B) )
%   | | | then return 0.4913305566783545;  // std dev = 0.898, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.18538463616432316;  // std dev = 0.576, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | | then return 0.24729080580520268;  // std dev = 0.213, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.030775159619007383;  // std dev = 3.566, 84.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=25 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '10.727', 'seconds']
Refined model CLL: -0.243721


******************************************
Best model found
******************************************
Results 

CLL : -0.25513 

AUC ROC : 0.949944 

AUC PR : 0.248968 

Precision : 0.285714 

Recall : 0.4947 

F1 : 0.362225 

Total Learning Time : 6.64 

Total Inference Time : 2.722560405731201 

Total revision time: 12.17007060623169
Best scored revision CLL: -0.243721


Results 

CLL : -0.25513 

AUC ROC : 0.949944 

AUC PR : 0.248968 

Precision : 0.285714 

Recall : 0.4947 

F1 : 0.362225 

Total Learning Time : 22.88893957710266 

Total Inference Time : 2.722560405731201 

Run: 3
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.149
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1953582374250937;  // std dev = 7.594, 258.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.17375140734581807;  // std dev = 5.384, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.13980899317084575;  // std dev = 5.458, 140.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.22138930054815617;  // std dev = 4.535, 85.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=35 */
%   | | | else return 0.15213916540966704;  // std dev = 5.847, 152.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.10354398784854559;  // std dev = 3.651, 60.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=20 */
%   | | | else return 0.1005586974332437;  // std dev = 6.765, 211.000 (wgt'ed) examples reached here.  /* #neg=144 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1101273281008878;  // std dev = 7.536, 250.000 (wgt'ed) examples reached here.  /* #neg=163 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10601598035986487;  // std dev = 7.438, 239.000 (wgt'ed) examples reached here.  /* #neg=152 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7120925920245256;  // std dev = 0.022, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.2882494981925208;  // std dev = 0.028, 60.000 (wgt'ed) examples reached here.  /* #neg=60 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.009246183954808933;  // std dev = 4.140, 84.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=24 */
%   | | | else return 0.0413808605562424;  // std dev = 4.392, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.013647506315599342;  // std dev = 3.822, 111.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=35 */
%   | | | else return 0.06625370729071206;  // std dev = 5.839, 151.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04541063826642635;  // std dev = 6.936, 252.000 (wgt'ed) examples reached here.  /* #neg=165 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.045900737994962616;  // std dev = 6.863, 245.000 (wgt'ed) examples reached here.  /* #neg=158 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.457', 'seconds']
Parameter learned model CLL:-0.344285 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.594, 171, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.384, 85, 44], 'false,false,false,false': [5.458, 97, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.535, 50, 35], 'false,false,false,false': [5.847, 100, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.651, 40, 20], 'false,false,false,false': [6.765, 144, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.536, 163, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.438, 152, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.022, 0, 35], 'true,false': [0.028, 60, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.14, 60, 24], 'false,false,false,false': [4.392, 62, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.822, 76, 35], 'false,false,false,false': [5.839, 99, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.936, 165, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.863, 158, 87]}]
{'': [nan, 0.22349918875067695], 'false': [nan, 0.2234991887506769], 'false,false': [nan, 0.22349918875067695], 'false,false,false': [nan, 0.2234991887506769]}
{'': [nan, 0.21881952985724237], 'false': [nan, 0.2188195298572442], 'false,false': [nan, 0.21881952985724237], 'false,false,false': [0.22474610900787273, 0.2128061224489802]}
{'': [nan, 0.2321491389711766], 'false': [nan, 0.2321491389711766], 'false,false': [nan, 0.2321491389711772], 'false,false,false': [0.24193902194804962, 0.22495459916746727]}
{'': [nan, 0.21806787681738332], 'false': [nan, 0.21806787681738332], 'false,false': [nan, 0.21806787681738413], 'false,false,false': [0.22222222222222196, 0.21688457324308677]}
{'': [nan, 0.2271542804438439], 'false': [nan, 0.2271542804438439], 'false,false': [nan, 0.2271542804438442], 'false,false,false': [nan, 0.2271542804438442]}
{'': [nan, 0.23150030890407072], 'false': [nan, 0.23150030890407072], 'false,false': [nan, 0.23150030890407183], 'false,false,false': [nan, 0.23150030890407028]}
{'': [0.23285990459058764, 0.20963570315009541], 'true': [1.4004185476730007e-05, 1.3517604865601976e-05], 'false': [nan, 0.20963570315009541], 'false,false': [nan, 0.20963570315009541], 'false,false,false': [0.2040816326530616, 0.21432098765432012], 'true,true': [nan, 1.4004185476730007e-05], 'true,true,false': [nan, 1.4004185476730007e-05]}
{'': [nan, 0.18656119266916768], 'false': [nan, 0.18656119266916768], 'false,false': [nan, 0.18656119266916804], 'false,false,false': [0.13162337755462028, 0.2257734908402102]}
{'': [nan, 0.1908912115178144], 'false': [nan, 0.19089121151781402], 'false,false': [nan, 0.19089121151781402], 'false,false,false': [nan, 0.19089121151781402]}
{'': [nan, 0.19226318101047588], 'false': [nan, 0.19226318101047588], 'false,false': [nan, 0.19226318101047632], 'false,false,false': [nan, 0.19226318101047632]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 14.098
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(C, D) )
%   then if ( location(A, D), enzyme(C, E) )
%   | then if ( interaction(F, C), recursion_proteinclass(F, B) )
%   | | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(A, G), interaction(C, G) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.13401100406502955;  // std dev = 2.407, 29.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | else if ( interaction(H, C), recursion_proteinclass(H, B) )
%   | | then if ( location(A, D) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.23314893509951226;  // std dev = 1.369, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | else if ( phenotype(C, I), interaction(A, J) )
%   | | | then return 0.06153876560798695;  // std dev = 3.092, 59.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=12 */
%   | | | else return 0.22263491640792307;  // std dev = 4.978, 107.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=39 */
%   else if ( interaction(A, K), enzyme(K, L) )
%   | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else return 0.036720363670940774;  // std dev = 0.383, 28.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), enzyme(C, D) )
%   then if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | then return 0.7692214888594753;  // std dev = 0.058, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else return 0.0346937568950466;  // std dev = 0.373, 56.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=11 */
%   else if ( interaction(A, F), complex(F, G) )
%   | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | then return 0.7413449349287721;  // std dev = 0.098, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(I, A), complex(I, G) )
%   | | | then return -0.034409725063796234;  // std dev = 1.333, 17.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=2 */
%   | | | else return 0.31610218402346124;  // std dev = 1.934, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.7464386189627429;  // std dev = 0.093, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.045538971597207725;  // std dev = 2.518, 39.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.09240941548183047;  // std dev = 2.433, 31.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | else return 0.17897089066614857;  // std dev = 4.744, 100.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=35 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, A), location(A, D) )
%   | then return 0.4503779048576639;  // std dev = 0.307, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.7834181216956994;  // std dev = 0.163, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(E, A), location(E, F) )
%   | then if ( interaction(A, G), interaction(E, G) )
%   | | then if ( interaction(G, H), recursion_proteinclass(H, B) )
%   | | | then return 0.4811815060192571;  // std dev = 1.211, 13.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=11 */
%   | | | else return -0.0745072535531905;  // std dev = 1.817, 48.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=4 */
%   | | else if ( location(A, I), interaction(A, J) )
%   | | | then return 0.20829446601570542;  // std dev = 2.700, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
%   | | | else return 0.10508528497925183;  // std dev = 5.458, 144.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=43 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.02832806298583928;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.2095636610226966;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else return 0.43702336198285135;  // std dev = 1.092, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.46941505362955926;  // std dev = 0.064, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.14650115916425085;  // std dev = 0.073, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else return 0.027846746112760157;  // std dev = 0.353, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   else if ( enzyme(A, D), complex(A, E) )
%   | then if ( enzyme(F, D), recursion_proteinclass(F, B) )
%   | | then return 0.7749141550974977;  // std dev = 0.147, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else return -0.19717144088460478;  // std dev = 0.070, 16.000 (wgt'ed) examples reached here.  /* #neg=16 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.7088845920292349;  // std dev = 0.291, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.20027426220399155;  // std dev = 0.172, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 0.16724609641907948;  // std dev = 3.804, 67.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=26 */
%   | | | else return 0.08812217494028704;  // std dev = 3.932, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( enzyme(A, C) )
%   then if ( enzyme(D, C), recursion_proteinclass(D, B) )
%   | then return 0.6569460554616439;  // std dev = 0.138, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.19906534253293223;  // std dev = 0.345, 79.000 (wgt'ed) examples reached here.  /* #neg=79 */
%   else if ( interaction(A, E), interaction(E, F) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then if ( complex(A, G), interaction(F, F) )
%   | | | then return 0.07141541499381894;  // std dev = 0.843, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.4421378674171639;  // std dev = 0.375, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.14509546201140838;  // std dev = 0.054, 25.000 (wgt'ed) examples reached here.  /* #neg=25 */
%   | | | else return 0.06917503156581783;  // std dev = 1.225, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | | then return 0.6040091521389724;  // std dev = 0.194, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( complex(A, I), phenotype(A, J) )
%   | | | then return 0.08375948472201077;  // std dev = 1.607, 18.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
%   | | | else return 0.17886953446037127;  // std dev = 4.052, 68.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=28 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D) )
%   | then if ( interaction(A, C) )
%   | | then return 0.30539156120508937;  // std dev = 0.217, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.46310223364135455;  // std dev = 0.209, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else return 0.078008241634867;  // std dev = 0.779, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   else if ( interaction(A, A) )
%   | then return -0.11481860213826599;  // std dev = 0.058, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | else if ( complex(A, E) )
%   | | then if ( complex(F, E), interaction(F, A) )
%   | | | then return -0.09006067136555906;  // std dev = 0.693, 18.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else return 0.0798435411795577;  // std dev = 3.219, 75.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=28 */
%   | | else if ( interaction(G, A), complex(G, H) )
%   | | | then return 0.14266950635231343;  // std dev = 2.943, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.08158437027541375;  // std dev = 3.763, 74.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=26 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(A, E) )
%   | | then return 0.3306225632831429;  // std dev = 0.072, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | | | then return 0.3424387223076564;  // std dev = 0.161, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.5448083740272183;  // std dev = 0.728, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | else return -0.15900662391155823;  // std dev = 0.051, 69.000 (wgt'ed) examples reached here.  /* #neg=69 */
%   else if ( location(A, G) )
%   | then if ( location(H, G), recursion_proteinclass(H, B) )
%   | | then if ( complex(H, I), interaction(J, A) )
%   | | | then return -0.056351273914394616;  // std dev = 1.321, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | else return 0.34432722116500464;  // std dev = 3.142, 65.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=45 */
%   | | else return -0.23635750984924864;  // std dev = 0.066, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   | else if ( interaction(A, A) )
%   | | then return 0.004174268662341792;  // std dev = 0.283, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | else return 0.4440360548759068;  // std dev = 0.824, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), enzyme(C, E) )
%   | then return -0.04160540838697189;  // std dev = 0.516, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24371472788850573;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( location(A, F), enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then if ( interaction(H, I), enzyme(I, J) )
%   | | | then return 0.3300924168214978;  // std dev = 0.293, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else return 0.4808901118058359;  // std dev = 0.373, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | else return -0.15907331229393704;  // std dev = 0.258, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | else if ( location(A, K) )
%   | | then if ( location(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.2251903023978295;  // std dev = 3.436, 70.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=43 */
%   | | | else return -0.20014487909768347;  // std dev = 0.555, 76.000 (wgt'ed) examples reached here.  /* #neg=76 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.11171026030747563;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | else return -0.0645615726107033;  // std dev = 1.327, 11.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( complex(A, E), interaction(C, C) )
%   | then if ( recursion_proteinclass(D, B) )
%   | | then return 0.23416354344770962;  // std dev = 0.142, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(D, A) )
%   | | | then return -0.08490860688275602;  // std dev = 0.053, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | | else return 0.04819388046418179;  // std dev = 1.219, 13.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | else return -0.0384674412512925;  // std dev = 0.195, 71.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=20 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.3961067453769713;  // std dev = 0.339, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return -0.22985905559170522;  // std dev = 0.112, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | else if ( interaction(I, A), location(A, J) )
%   | | then if ( phenotype(I, K), phenotype(A, K) )
%   | | | then return -0.015707531081365547;  // std dev = 1.615, 29.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
%   | | | else return 0.0433728761468039;  // std dev = 3.666, 120.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=43 */
%   | | else return 0.15340913211937793;  // std dev = 0.891, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return -0.11691169953252711;  // std dev = 0.639, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.19843188528219358;  // std dev = 0.100, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   else if ( interaction(F, A), complex(A, G) )
%   | then if ( interaction(H, F), recursion_proteinclass(H, B) )
%   | | then return 0.20975659772612953;  // std dev = 0.139, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(I, F), complex(I, G) )
%   | | | then return -0.09730786426856687;  // std dev = 0.653, 27.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else return 0.042271313253403546;  // std dev = 1.930, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(A, L), interaction(M, J) )
%   | | | then return 0.008192135367969542;  // std dev = 1.158, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | else return -0.0775031887280234;  // std dev = 2.390, 58.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=12 */
%   | | else if ( interaction(N, A), interaction(P, N) )
%   | | | then return 0.009568854087378969;  // std dev = 2.812, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return -0.029355319577370274;  // std dev = 1.637, 25.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '31.608', 'seconds']
Refined model CLL: -0.207209


******************************************
Best model found
******************************************
Results 

CLL : -0.215716 

AUC ROC : 0.977942 

AUC PR : 0.374894 

Precision : 0.321138 

Recall : 0.560284 

F1 : 0.408269 

Total Learning Time : 14.098 

Total Inference Time : 8.4488046169281 

Total revision time: 25.36240389060974
Best scored revision CLL: -0.207209


Results 

CLL : -0.215716 

AUC ROC : 0.977942 

AUC PR : 0.374894 

Precision : 0.321138 

Recall : 0.560284 

F1 : 0.408269 

Total Learning Time : 36.081590911865234 

Total Inference Time : 8.4488046169281 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.204
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18830766525824297;  // std dev = 8.346, 315.000 (wgt'ed) examples reached here.  /* #neg=211 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.16697954562311354;  // std dev = 5.888, 156.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=52 */
%   | | | else return 0.17351549333553182;  // std dev = 5.859, 153.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1172183702831697;  // std dev = 5.325, 133.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=41 */
%   | | | else return 0.12047887054337882;  // std dev = 6.584, 202.000 (wgt'ed) examples reached here.  /* #neg=139 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.07473960574925462;  // std dev = 4.556, 102.000 (wgt'ed) examples reached here.  /* #neg=73 #pos=29 */
%   | | | else return 0.13324882059468504;  // std dev = 7.014, 218.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1031370038058395;  // std dev = 8.323, 312.000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08954755685935414;  // std dev = 8.291, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7390089532036732;  // std dev = 0.037, 41.000 (wgt'ed) examples reached here.  /* #pos=41 */
%   | else return -0.2610834222263029;  // std dev = 0.052, 80.000 (wgt'ed) examples reached here.  /* #neg=80 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.08457046665474043;  // std dev = 3.855, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   | | | else return 0.0998066912769609;  // std dev = 5.018, 108.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04474155578854293;  // std dev = 4.142, 125.000 (wgt'ed) examples reached here.  /* #neg=84 #pos=41 */
%   | | | else return 0.01848583591346988;  // std dev = 6.604, 205.000 (wgt'ed) examples reached here.  /* #neg=142 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04727022789533313;  // std dev = 7.618, 307.000 (wgt'ed) examples reached here.  /* #neg=203 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03831933593199753;  // std dev = 7.618, 304.000 (wgt'ed) examples reached here.  /* #neg=200 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.143', 'seconds']
Parameter learned model CLL:-0.336761 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.346, 211, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.888, 104, 52], 'false,false,false,false': [5.859, 101, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.325, 92, 41], 'false,false,false,false': [6.584, 139, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.556, 73, 29], 'false,false,false,false': [7.014, 143, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.323, 208, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.291, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.037, 0, 41], 'true,false': [0.052, 80, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.855, 42, 23], 'false,false,false,false': [5.018, 68, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.142, 84, 41], 'false,false,false,false': [6.604, 142, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 203, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.618, 200, 104]}]
{'': [nan, 0.22115394305870698], 'false': [nan, 0.2211539430587056], 'false,false': [nan, 0.22115394305870698], 'false,false,false': [nan, 0.2211539430587056]}
{'': [nan, 0.22329049758590874], 'false': [nan, 0.22329049758590847], 'false,false': [nan, 0.22329049758590874], 'false,false,false': [0.22222222222222351, 0.22435815284719687]}
{'': [nan, 0.2140336535010429], 'false': [nan, 0.2140336535010429], 'false,false': [nan, 0.21403365350104442], 'false,false,false': [0.21320289082699342, 0.21457642019537396]}
{'': [nan, 0.2193470173904509], 'false': [nan, 0.2193470173904509], 'false,false': [nan, 0.21934701739045023], 'false,false,false': [0.20347943098808166, 0.2256801150658042]}
{'': [nan, 0.22200029407945132], 'false': [nan, 0.22200029407945132], 'false,false': [nan, 0.22200029407944888], 'false,false,false': [nan, 0.22200029407944888]}
{'': [nan, 0.22392608572409198], 'false': [nan, 0.22392608572409198], 'false,false': [nan, 0.22392608572409095], 'false,false,false': [nan, 0.22392608572409156]}
{'': [0.22410311389113716, 0.23153840193522035], 'false': [nan, 0.23153840193522035], 'false,false': [nan, 0.23153840193522035], 'false,false,false': [0.22863905325443748, 0.2331961591220845], 'true': [3.299511757798707e-05, 3.34701334947618e-05], 'true,true': [nan, 3.299511757798707e-05], 'true,true,false': [nan, 3.299511757798707e-05]}
{'': [nan, 0.18429430850241316], 'false': [nan, 0.18429430850241316], 'false,false': [nan, 0.18429430850241355], 'false,false,false': [0.13723375835069798, 0.21272864362936048]}
{'': [nan, 0.18903742996263503], 'false': [nan, 0.18903742996263545], 'false,false': [nan, 0.18903742996263545], 'false,false,false': [nan, 0.18903742996263545]}
{'': [nan, 0.19088974921694143], 'false': [nan, 0.19088974921694143], 'false,false': [nan, 0.19088974921694218], 'false,false,false': [nan, 0.19088974921694218]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 23.875
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( interaction(A, F), interaction(F, A) )
%   | | | then return 0.7066337835843601;  // std dev = 2.060, 33.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=28 */
%   | | | else return 0.8278459047964819;  // std dev = 1.393, 66.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=64 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.1418510649004877;  // std dev = 3.65e-08, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | | | else return 0.5724346493852266;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.141851064900488;  // std dev = 0.000, 142.000 (wgt'ed) examples reached here.  /* #neg=142 */
%   else if ( phenotype(A, H) )
%   | then return 0.0010060779566550668;  // std dev = 0.350, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | else if ( interaction(A, I) )
%   | | then return 0.19148226843284552;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.0803711573217344;  // std dev = 1.247, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | else return 0.1438632208137979;  // std dev = 1.195, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D), complex(A, E) )
%   | then return 0.7444128540545674;  // std dev = 0.045, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.743148465566332;  // std dev = 0.020, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.21959985566163343;  // std dev = 0.109, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | else return 0.44188421807951617;  // std dev = 0.695, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   else if ( interaction(A, H) )
%   | then return 0.07977671653637801;  // std dev = 0.379, 149.000 (wgt'ed) examples reached here.  /* #neg=113 #pos=36 */
%   | else if ( location(A, I) )
%   | | then if ( location(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.4737926985260486;  // std dev = 3.226, 66.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=47 */
%   | | | else return -0.1254446385283912;  // std dev = 5.77e-08, 56.000 (wgt'ed) examples reached here.  /* #neg=56 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.2520591823594377;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05758828388834164;  // std dev = 1.534, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), interaction(E, A) )
%   | | then if ( complex(D, F), complex(A, F) )
%   | | | then return 0.6538149905423948;  // std dev = 0.388, 37.000 (wgt'ed) examples reached here.  /* #pos=37 */
%   | | | else return 0.48640256262074794;  // std dev = 2.935, 66.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=55 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.16043386571706278;  // std dev = 0.169, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | | else return 0.7309838189512223;  // std dev = 0.126, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else return -0.12379400838953328;  // std dev = 0.142, 164.000 (wgt'ed) examples reached here.  /* #neg=164 */
%   else if ( interaction(H, A), interaction(I, H) )
%   | then if ( interaction(I, A) )
%   | | then return 0.09051173365436282;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | | then return 0.8202005868260804;  // std dev = 0.009, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.18033989590051624;  // std dev = 0.009, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | else return 0.4984820862206063;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.43144040506892717;  // std dev = 0.081, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | else return 0.29264898181261595;  // std dev = 0.580, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   else if ( interaction(A, E), enzyme(E, F) )
%   | then if ( interaction(E, G), recursion_proteinclass(G, B) )
%   | | then return 0.6155464634162917;  // std dev = 0.046, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(E, A) )
%   | | | then return -0.1497115743031068;  // std dev = 0.333, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.011801057287478682;  // std dev = 2.229, 56.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=10 */
%   | else if ( interaction(H, A), interaction(H, H) )
%   | | then if ( complex(A, I) )
%   | | | then return 0.12418397876444257;  // std dev = 1.230, 14.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | else return 0.004005928024923398;  // std dev = 1.743, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.47682982655856826;  // std dev = 0.705, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.08538167838643518;  // std dev = 4.050, 159.000 (wgt'ed) examples reached here.  /* #neg=107 #pos=52 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.3423317594045646;  // std dev = 0.241, 18.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=17 */
%   else if ( interaction(D, A), enzyme(D, E) )
%   | then if ( phenotype(A, F), phenotype(D, G) )
%   | | then if ( enzyme(A, E), phenotype(A, G) )
%   | | | then return -0.10500375572145397;  // std dev = 0.003, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.0719196413745342;  // std dev = 2.416, 69.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=21 */
%   | | else if ( interaction(H, D), interaction(H, A) )
%   | | | then return -0.06900112057374926;  // std dev = 0.848, 22.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=2 */
%   | | | else return -0.005204583770093828;  // std dev = 1.790, 37.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=8 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( location(I, K), location(A, K) )
%   | | | then return 0.02033616574083023;  // std dev = 2.218, 60.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=15 */
%   | | | else return 0.09883668226481253;  // std dev = 1.415, 16.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=5 */
%   | | else if ( complex(A, L), interaction(M, A) )
%   | | | then return 0.07418391467008731;  // std dev = 1.404, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | | else return 0.17930298161484126;  // std dev = 2.402, 56.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=27 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return 0.09753498733031848;  // std dev = 0.768, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.29299268273597756;  // std dev = 0.127, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   else if ( interaction(A, A) )
%   | then return -0.12674935791821543;  // std dev = 0.042, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(A, F), enzyme(F, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3130758948406925;  // std dev = 0.922, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return -0.03703997568274084;  // std dev = 2.315, 58.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=10 */
%   | | else if ( location(A, I) )
%   | | | then return 0.0705113273796009;  // std dev = 4.203, 183.000 (wgt'ed) examples reached here.  /* #neg=116 #pos=67 */
%   | | | else return -0.06514211669616382;  // std dev = 1.853, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.029045473290583695;  // std dev = 0.283, 122.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=41 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( interaction(A, F), phenotype(F, G) )
%   | | then if ( phenotype(A, H), interaction(A, D) )
%   | | | then return 0.04054887635988952;  // std dev = 1.302, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return 0.1206172235030754;  // std dev = 1.751, 24.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=9 */
%   | | else if ( interaction(D, I), recursion_proteinclass(I, B) )
%   | | | then return 0.32246923571356323;  // std dev = 1.833, 38.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=33 */
%   | | | else return -0.14603965118067522;  // std dev = 0.282, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   | else if ( interaction(A, J) )
%   | | then if ( interaction(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4998666307676693;  // std dev = 0.245, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.13481814262733002;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( interaction(L, A), interaction(M, L) )
%   | | | then return 0.1302429173455955;  // std dev = 1.174, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.04574740934932262;  // std dev = 1.365, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, A) )
%   | then return 0.07282254885422795;  // std dev = 0.663, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | else return 0.3051538410904288;  // std dev = 0.119, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   else if ( interaction(A, D), phenotype(D, E) )
%   | then if ( complex(A, F), location(A, G) )
%   | | then if ( complex(D, F), recursion_proteinclass(D, B) )
%   | | | then return 0.2463360761203045;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.0017895228644621475;  // std dev = 2.292, 69.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=15 */
%   | | else if ( interaction(D, H), recursion_proteinclass(H, B) )
%   | | | then return 0.2597231436441282;  // std dev = 1.110, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | else return 0.08894870459370358;  // std dev = 1.834, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( interaction(A, I) )
%   | | then return -0.0853049295969675;  // std dev = 0.166, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.031361651029113924;  // std dev = 2.026, 50.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | else return -0.004019907787516101;  // std dev = 2.697, 106.000 (wgt'ed) examples reached here.  /* #neg=76 #pos=30 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( enzyme(C, D), phenotype(C, E) )
%   | then return 0.010420697402587664;  // std dev = 0.648, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.17511043657080094;  // std dev = 0.036, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(C, G), phenotype(G, H) )
%   | | | then return 0.252131124486012;  // std dev = 0.059, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.3557797663338957;  // std dev = 0.296, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( interaction(A, I), recursion_proteinclass(I, B) )
%   | then return 0.2456628381618282;  // std dev = 0.051, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, J), phenotype(J, K) )
%   | | then if ( complex(A, L), location(A, M) )
%   | | | then return -0.006447020445963389;  // std dev = 2.347, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.13391633835015523;  // std dev = 1.989, 40.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=18 */
%   | | else if ( phenotype(A, N), location(A, P) )
%   | | | then return 0.02402278683771546;  // std dev = 2.405, 88.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=29 */
%   | | | else return -0.05047498163816678;  // std dev = 2.421, 110.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=19 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.12949153526640267;  // std dev = 0.154, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   else if ( location(A, D), interaction(E, A) )
%   | then if ( interaction(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, E), interaction(E, F) )
%   | | | then return 0.3980137690440313;  // std dev = 1.263, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | | | else return -0.04177914290331487;  // std dev = 1.191, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | else if ( interaction(A, E) )
%   | | | then return -0.13701001243702438;  // std dev = 0.305, 43.000 (wgt'ed) examples reached here.  /* #neg=43 */
%   | | | else return -0.014185102924345352;  // std dev = 3.512, 195.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=52 */
%   | else if ( interaction(A, G), phenotype(A, H) )
%   | | then if ( interaction(I, G), recursion_proteinclass(I, B) )
%   | | | then return 0.47879981555731066;  // std dev = 0.170, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.14765083153738204;  // std dev = 0.018, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | else if ( location(A, J) )
%   | | | then return -0.18542017454121756;  // std dev = 0.256, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | else return 0.061915218265818986;  // std dev = 1.780, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '42.687', 'seconds']
Refined model CLL: -0.189082


******************************************
Best model found
******************************************
Results 

CLL : -0.180121 

AUC ROC : 0.992329 

AUC PR : 0.446053 

Precision : 0.327143 

Recall : 0.864151 

F1 : 0.474611 

Total Learning Time : 23.875 

Total Inference Time : 21.3894145488739 

Total revision time: 48.480994943618775
Best scored revision CLL: -0.189082


Results 

CLL : -0.180121 

AUC ROC : 0.992329 

AUC PR : 0.446053 

Precision : 0.327143 

Recall : 0.864151 

F1 : 0.474611 

Total Learning Time : 59.20018196487427 

Total Inference Time : 21.3894145488739 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.162
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.18672036367094097;  // std dev = 7.859, 280.000 (wgt'ed) examples reached here.  /* #neg=188 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.22022985939972015;  // std dev = 5.594, 132.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=51 */
%   | | | else return 0.13533681127137953;  // std dev = 5.352, 136.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1471714358704328;  // std dev = 5.388, 129.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=44 */
%   | | | else return 0.16327454732537822;  // std dev = 5.560, 135.000 (wgt'ed) examples reached here.  /* #neg=87 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.09757322122158295;  // std dev = 4.202, 81.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=26 */
%   | | | else return 0.14146970048663424;  // std dev = 6.514, 184.000 (wgt'ed) examples reached here.  /* #neg=118 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09662816188127643;  // std dev = 7.808, 272.000 (wgt'ed) examples reached here.  /* #neg=180 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08523973248110163;  // std dev = 7.766, 267.000 (wgt'ed) examples reached here.  /* #neg=175 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7277260473546335;  // std dev = 0.026, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2721605422053649;  // std dev = 0.035, 78.000 (wgt'ed) examples reached here.  /* #neg=78 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07458948043744162;  // std dev = 3.993, 69.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else return 0.06758597111410243;  // std dev = 3.901, 68.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.024855249492287176;  // std dev = 4.315, 140.000 (wgt'ed) examples reached here.  /* #neg=96 #pos=44 */
%   | | | else return 0.08053054658457069;  // std dev = 5.481, 128.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04799730608896783;  // std dev = 6.956, 259.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.02422383383512967;  // std dev = 7.027, 271.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.386', 'seconds']
Parameter learned model CLL:-0.342014 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.859, 188, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.594, 81, 51], 'false,false,false,false': [5.352, 95, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.388, 85, 44], 'false,false,false,false': [5.56, 87, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.202, 55, 26], 'false,false,false,false': [6.514, 118, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.808, 180, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.766, 175, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.026, 0, 44], 'true,false': [0.035, 78, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.993, 44, 25], 'false,false,false,false': [3.901, 45, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.315, 96, 44], 'false,false,false,false': [5.481, 80, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.956, 167, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.027, 179, 92]}]
{'': [nan, 0.22061224489796044], 'false': [nan, 0.2206122448979601], 'false,false': [nan, 0.22061224489796044], 'false,false,false': [nan, 0.2206122448979601]}
{'': [nan, 0.2254399643573201], 'false': [nan, 0.22543996435731897], 'false,false': [nan, 0.2254399643573201], 'false,false,false': [0.2370867768595061, 0.2105860726643591]}
{'': [nan, 0.22710874351257315], 'false': [nan, 0.22710874351257315], 'false,false': [nan, 0.22710874351257193], 'false,false,false': [0.22505005766191474, 0.22894922382184724]}
{'': [nan, 0.22716717238429046], 'false': [nan, 0.22716717238429046], 'false,false': [nan, 0.22716717238428968], 'false,false,false': [0.21795458009449725, 0.23063373847551216]}
{'': [nan, 0.22412931104228345], 'false': [nan, 0.22412931104228345], 'false,false': [nan, 0.2241293110422828], 'false,false,false': [nan, 0.2241293110422828]}
{'': [nan, 0.2258696120963397], 'false': [nan, 0.2258696120963397], 'false,false': [nan, 0.22586961209634066], 'false,false,false': [nan, 0.22586961209633977]}
{'': [0.2305468720618337, 0.22747662090830614], 'true': [1.5894931274296198e-05, 1.604927440930955e-05], 'false': [nan, 0.22747662090830614], 'false,false': [nan, 0.22747662090830614], 'false,false,false': [0.23104389834068526, 0.22383217993079593], 'true,true': [nan, 1.5894931274296198e-05], 'true,true,false': [nan, 1.5894931274296198e-05]}
{'': [nan, 0.18236153344163067], 'false': [nan, 0.18236153344163067], 'false,false': [nan, 0.18236153344163214], 'false,false,false': [0.1330051349750625, 0.23472582777606976]}
{'': [nan, 0.18682777624681146], 'false': [nan, 0.18682777624681174], 'false,false': [nan, 0.18682777624681174], 'false,false,false': [nan, 0.18682777624681174]}
{'': [nan, 0.1821876295144556], 'false': [nan, 0.1821876295144556], 'false,false': [nan, 0.18218762951445525], 'false,false,false': [nan, 0.18218762951445525]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 12.595
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, D), recursion_proteinclass(D, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(E, A), interaction(A, E) )
%   | | then if ( enzyme(E, F) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | | else return 0.00814893509951222;  // std dev = 1.597, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( complex(A, G) )
%   | | | then return 0.09148226843284475;  // std dev = 4.633, 120.000 (wgt'ed) examples reached here.  /* #neg=92 #pos=28 */
%   | | | else return 0.16185263880321524;  // std dev = 5.343, 135.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=41 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( complex(A, F), complex(E, F) )
%   | | | then return 0.7211130753511416;  // std dev = 0.937, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   | | | else return 0.8232526827905152;  // std dev = 0.321, 53.000 (wgt'ed) examples reached here.  /* #pos=53 */
%   | | else if ( interaction(A, G), interaction(D, G) )
%   | | | then return 0.7341304646085276;  // std dev = 1.404, 22.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=20 */
%   | | | else return -0.15832555702232493;  // std dev = 0.132, 44.000 (wgt'ed) examples reached here.  /* #neg=44 */
%   | else return -0.15553504157535564;  // std dev = 0.109, 136.000 (wgt'ed) examples reached here.  /* #neg=136 */
%   else if ( interaction(A, A) )
%   | then return 0.1445938524520423;  // std dev = 0.704, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.05950491310673635;  // std dev = 0.416, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(A, D) )
%   then if ( recursion_proteinclass(D, B) )
%   | then return 0.5556025821567049;  // std dev = 0.146, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( enzyme(A, E), phenotype(D, F) )
%   | | then if ( interaction(C, D), interaction(G, C) )
%   | | | then return 0.04833629221378104;  // std dev = 0.761, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | else return 0.26855520225449764;  // std dev = 1.479, 12.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=6 */
%   | | else return 0.029451677115361456;  // std dev = 0.335, 51.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=10 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.5397535389057792;  // std dev = 0.028, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( complex(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, K), interaction(J, J) )
%   | | | then return 0.1883933068582671;  // std dev = 1.178, 8.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=3 */
%   | | | else return 0.04773169384281491;  // std dev = 1.363, 17.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=4 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.1733215887014103;  // std dev = 3.935, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.32011144501171623;  // std dev = 2.383, 30.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=16 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D), interaction(A, D) )
%   | then return 0.4595035125466873;  // std dev = 0.068, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.4047562526075128;  // std dev = 0.030, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( phenotype(E, F) )
%   | | then return -0.13654780235236308;  // std dev = 0.075, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | | else if ( interaction(A, G), enzyme(G, H) )
%   | | | then return -0.12468897623617448;  // std dev = 0.030, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.022425367956495287;  // std dev = 1.299, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), complex(K, L) )
%   | | | then return 0.025942327076899127;  // std dev = 2.499, 52.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=12 */
%   | | | else return 0.1505496029986064;  // std dev = 1.873, 22.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | else if ( interaction(M, A), recursion_proteinclass(M, B) )
%   | | | then return 0.406110492491479;  // std dev = 0.027, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return 0.12386276135484858;  // std dev = 4.773, 144.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=50 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.32890649281184997;  // std dev = 0.129, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return -0.032453474363297104;  // std dev = 0.284, 47.000 (wgt'ed) examples reached here.  /* #neg=40 #pos=7 */
%   else if ( interaction(D, A), phenotype(D, E) )
%   | then if ( interaction(F, D), interaction(G, F) )
%   | | then if ( phenotype(G, H), phenotype(A, I) )
%   | | | then return 0.23652914056270777;  // std dev = 1.009, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.09898954303954209;  // std dev = 1.976, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
%   | | else if ( interaction(D, J), recursion_proteinclass(J, B) )
%   | | | then return 0.561054832380548;  // std dev = 0.889, 19.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=18 */
%   | | | else return -0.17447042405520363;  // std dev = 0.059, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.3390888059885211;  // std dev = 0.051, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.07209689512448514;  // std dev = 2.666, 49.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=16 */
%   | | | else return 0.006856736822481556;  // std dev = 3.595, 110.000 (wgt'ed) examples reached here.  /* #neg=85 #pos=25 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.2741190057740566;  // std dev = 0.049, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.21975144487187917;  // std dev = 0.028, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( phenotype(A, E) )
%   | then if ( phenotype(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(A, G), complex(G, H) )
%   | | | then return 0.6370212379528534;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.5396500463957048;  // std dev = 0.497, 22.000 (wgt'ed) examples reached here.  /* #pos=22 */
%   | | else return -0.1778436205029073;  // std dev = 0.039, 85.000 (wgt'ed) examples reached here.  /* #neg=85 */
%   | else if ( interaction(I, A) )
%   | | then if ( interaction(A, I) )
%   | | | then return -0.05204913135433689;  // std dev = 0.821, 12.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=1 */
%   | | | else return 0.09311934115733962;  // std dev = 3.513, 95.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=34 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.09620985376497553;  // std dev = 1.346, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else return 0.2725771281382115;  // std dev = 1.590, 13.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.21540202340935655;  // std dev = 0.036, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | else return 0.5000533812114627;  // std dev = 0.131, 34.000 (wgt'ed) examples reached here.  /* #pos=34 */
%   | else return -0.15744145480407937;  // std dev = 0.030, 103.000 (wgt'ed) examples reached here.  /* #neg=103 */
%   else if ( interaction(A, A) )
%   | then if ( location(A, F) )
%   | | then return -0.014874719994698488;  // std dev = 0.237, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else return -0.01582896239215504;  // std dev = 0.371, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | else if ( interaction(G, A), complex(G, H) )
%   | | then if ( enzyme(A, I), interaction(G, G) )
%   | | | then return -0.0772005509664715;  // std dev = 0.745, 7.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=1 */
%   | | | else return 0.054293895612960684;  // std dev = 2.045, 39.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=13 */
%   | | else if ( enzyme(A, J), interaction(K, A) )
%   | | | then return 0.14404050911382205;  // std dev = 1.080, 9.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | else return 0.054063341128161094;  // std dev = 3.059, 76.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), enzyme(A, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.24221145085817392;  // std dev = 0.108, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return -0.008730108086040826;  // std dev = 0.250, 90.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=22 */
%   else if ( interaction(F, A), phenotype(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.18609504298490123;  // std dev = 0.145, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, F), interaction(H, H) )
%   | | | then return -0.04804813968926545;  // std dev = 1.343, 22.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=4 */
%   | | | else return 0.039706513404585676;  // std dev = 1.774, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( complex(A, J), interaction(I, K) )
%   | | | then return -0.01923898065276708;  // std dev = 1.052, 21.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | else return 0.07843458230350145;  // std dev = 2.109, 33.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=14 */
%   | | else if ( phenotype(A, L) )
%   | | | then return 0.11119165607539555;  // std dev = 1.186, 16.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | else return 0.06585223299535058;  // std dev = 2.088, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(A, D), interaction(E, A) )
%   | then return 0.14521180605737644;  // std dev = 0.022, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else return 0.2094383960561559;  // std dev = 0.116, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   else if ( complex(A, F), interaction(G, A) )
%   | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.3198066987415621;  // std dev = 0.404, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, G) )
%   | | | then return -0.09665067566760376;  // std dev = 0.076, 17.000 (wgt'ed) examples reached here.  /* #neg=17 */
%   | | | else return -0.012530299988826982;  // std dev = 2.322, 92.000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | else if ( interaction(A, I), interaction(I, I) )
%   | | then if ( phenotype(I, J), location(A, K) )
%   | | | then return 0.05056292005502002;  // std dev = 1.119, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return -0.07438692626884721;  // std dev = 1.276, 21.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=4 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.1122096841223307;  // std dev = 1.912, 25.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=11 */
%   | | | else return 0.05207697106794954;  // std dev = 3.004, 80.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( phenotype(A, C) )
%   then if ( phenotype(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, D), phenotype(E, F) )
%   | | then if ( complex(D, G), complex(A, G) )
%   | | | then return 0.26938794874776156;  // std dev = 0.345, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | | | else return 0.02289610958085163;  // std dev = 0.620, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | else return 0.37422815309221524;  // std dev = 0.073, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.15213924124283643;  // std dev = 0.044, 86.000 (wgt'ed) examples reached here.  /* #neg=86 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.1437703441739491;  // std dev = 0.029, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( phenotype(J, K), interaction(J, L) )
%   | | | then return 0.003973605739952553;  // std dev = 1.844, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.09553681364298983;  // std dev = 0.618, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.009992718352185967;  // std dev = 1.910, 41.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=13 */
%   | | | else return 0.04982987552662413;  // std dev = 2.922, 65.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=24 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '7.156', 'seconds']
Refined model CLL: -0.196757


******************************************
Best model found
******************************************
Results 

CLL : -0.207273 

AUC ROC : 0.984251 

AUC PR : 0.355051 

Precision : 0.282769 

Recall : 0.693141 

F1 : 0.401674 

Total Learning Time : 12.595 

Total Inference Time : 9.217055797576904 

Total revision time: 24.80897858810425
Best scored revision CLL: -0.196757


Results 

CLL : -0.207273 

AUC ROC : 0.984251 

AUC PR : 0.355051 

Precision : 0.282769 

Recall : 0.693141 

F1 : 0.401674 

Total Learning Time : 35.528165609359746 

Total Inference Time : 9.217055797576904 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.105
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17432540568774807;  // std dev = 7.669, 272.000 (wgt'ed) examples reached here.  /* #neg=186 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1432685473376475;  // std dev = 6.000, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
%   | | | else return 0.14750284514992534;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13658370547503978;  // std dev = 4.357, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
%   | | | else return 0.10038856078822625;  // std dev = 6.436, 203.000 (wgt'ed) examples reached here.  /* #neg=145 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14529764472913406;  // std dev = 3.509, 54.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=19 */
%   | | | else return 0.13853006800553092;  // std dev = 6.647, 197.000 (wgt'ed) examples reached here.  /* #neg=130 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.12748399172851801;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.055431262502414695;  // std dev = 7.731, 282.000 (wgt'ed) examples reached here.  /* #neg=196 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7001941734601064;  // std dev = 0.982, 29.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   | else return -0.2653761614986743;  // std dev = 0.002, 59.000 (wgt'ed) examples reached here.  /* #neg=59 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.11779987139301097;  // std dev = 4.541, 88.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=33 */
%   | | | else return 0.08921230722394163;  // std dev = 4.040, 72.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.030706100459722725;  // std dev = 3.495, 90.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=28 */
%   | | | else return 0.05891428150407397;  // std dev = 6.201, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.056513092175348965;  // std dev = 7.024, 247.000 (wgt'ed) examples reached here.  /* #neg=161 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.032067963590427254;  // std dev = 7.090, 257.000 (wgt'ed) examples reached here.  /* #neg=171 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.546', 'seconds']
Parameter learned model CLL:-0.343444 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.669, 186, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.0, 117, 52], 'false,false,false,false': [4.837, 75, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.357, 59, 28], 'false,false,false,false': [6.436, 145, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.509, 35, 19], 'false,false,false,false': [6.647, 130, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.731, 196, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.982, 1, 28], 'true,false': [0.002, 59, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.541, 55, 33], 'false,false,false,false': [4.04, 47, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.495, 62, 28], 'false,false,false,false': [6.201, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.024, 161, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.09, 171, 86]}]
{'': [nan, 0.21620891003460282], 'false': [nan, 0.2162089100346027], 'false,false': [nan, 0.21620891003460282], 'false,false,false': [nan, 0.2162089100346027]}
{'': [nan, 0.21365353760157169], 'false': [nan, 0.21365353760157224], 'false,false': [nan, 0.21365353760157169], 'false,false,false': [0.21301775147928806, 0.21462839828297375]}
{'': [nan, 0.2086015044259241], 'false': [nan, 0.2086015044259241], 'false,false': [nan, 0.2086015044259235], 'false,false,false': [0.2182494793324235, 0.20407363148775373]}
{'': [nan, 0.22508852794138173], 'false': [nan, 0.22508852794138173], 'false,false': [nan, 0.22508852794138126], 'false,false,false': [0.22805212620027393, 0.2242663176514022]}
{'': [nan, 0.22864728272441723], 'false': [nan, 0.22864728272441723], 'false,false': [nan, 0.22864728272441742], 'false,false,false': [nan, 0.22864728272441742]}
{'': [nan, 0.211957461040004], 'false': [nan, 0.211957461040004], 'false,false': [nan, 0.21195746104000396], 'false,false,false': [nan, 0.21195746104000399]}
{'': [0.21695749811752651, 0.2311050468619956], 'false': [nan, 0.2311050468619956], 'false,false': [nan, 0.2311050468619956], 'false,false,false': [0.23437499999999972, 0.22665895061728372], 'true': [0.0332714449880049, 4.411486037486927e-08], 'true,true': [nan, 0.0332714449880049], 'true,true,false': [nan, 0.0332714449880049]}
{'': [nan, 0.19355397944519323], 'false': [nan, 0.19355397944519323], 'false,false': [nan, 0.19355397944519334], 'false,false,false': [0.1357135894299, 0.22354596723331235]}
{'': [nan, 0.1997287917702423], 'false': [nan, 0.19972879177024278], 'false,false': [nan, 0.19972879177024278], 'false,false,false': [nan, 0.19972879177024278]}
{'': [nan, 0.19557929799022764], 'false': [nan, 0.19557929799022764], 'false,false': [nan, 0.1955792979902278], 'false,false,false': [nan, 0.1955792979902278]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.984
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( interaction(A, E), interaction(D, E) )
%   | | then if ( interaction(E, E) )
%   | | | then return -0.14185106490048774;  // std dev = 1.49e-08, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.0581489350995122;  // std dev = 0.894, 5.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | | then return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.1418510649004878;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | | then if ( complex(A, H) )
%   | | | then return 0.5248156017661788;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.8581489350995122;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(A, I), complex(I, J) )
%   | | | then return 0.08765713182082385;  // std dev = 3.284, 61.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=14 */
%   | | | else return 0.18672036367093994;  // std dev = 5.557, 140.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=46 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), enzyme(A, D) )
%   then if ( phenotype(E, C), recursion_proteinclass(E, B) )
%   | then return 0.7749040268442478;  // std dev = 0.211, 20.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=19 */
%   | else return -0.15819229475383978;  // std dev = 0.049, 29.000 (wgt'ed) examples reached here.  /* #neg=29 */
%   else if ( interaction(F, A) )
%   | then if ( interaction(G, F), complex(G, H) )
%   | | then if ( location(A, I), location(G, I) )
%   | | | then return 0.18890866715136032;  // std dev = 4.213, 82.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.06644839268347917;  // std dev = 1.791, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | | then return 0.7350122940520397;  // std dev = 0.054, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.07025420079314847;  // std dev = 3.405, 68.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=16 */
%   | else if ( interaction(A, K), recursion_proteinclass(K, B) )
%   | | then return 0.7401919213324014;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, L), complex(L, M) )
%   | | | then return 0.06936214034901446;  // std dev = 1.764, 18.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | else return 0.3338662230360846;  // std dev = 1.581, 10.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=5 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( phenotype(A, C), interaction(A, D) )
%   then if ( interaction(E, A), enzyme(D, F) )
%   | then return 0.1386506379237584;  // std dev = 0.413, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
%   | else if ( interaction(D, G), recursion_proteinclass(G, B) )
%   | | then return 0.6396170935458125;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else if ( interaction(H, A), complex(H, I) )
%   | | | then return 0.14080499880699576;  // std dev = 0.983, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | else return 0.32131074449906855;  // std dev = 2.197, 22.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=12 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.6588065921676292;  // std dev = 0.061, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( enzyme(A, K), location(A, L) )
%   | | then if ( enzyme(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.7589738315997416;  // std dev = 0.204, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return -0.1682716306828781;  // std dev = 0.089, 20.000 (wgt'ed) examples reached here.  /* #neg=20 */
%   | | else if ( interaction(A, N), interaction(N, N) )
%   | | | then return -0.019241145045107138;  // std dev = 1.598, 24.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=4 */
%   | | | else return 0.10043352907426163;  // std dev = 4.526, 100.000 (wgt'ed) examples reached here.  /* #neg=71 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), enzyme(D, E) )
%   | then return 0.22229659686013956;  // std dev = 0.775, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.5397762231420894;  // std dev = 0.083, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(F, H), enzyme(H, I) )
%   | | then if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | | | then return 0.6104814280808092;  // std dev = 0.128, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.08964272977212533;  // std dev = 1.930, 50.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=5 */
%   | | else if ( interaction(F, K), complex(K, L) )
%   | | | then return 0.4092793386391589;  // std dev = 0.766, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | else return 0.09002311541055291;  // std dev = 1.831, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | else if ( location(A, M) )
%   | | then if ( location(N, M), recursion_proteinclass(N, B) )
%   | | | then return 0.4683593206080543;  // std dev = 3.345, 70.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | | | else return -0.18409994504226548;  // std dev = 0.329, 88.000 (wgt'ed) examples reached here.  /* #neg=88 */
%   | | else return 0.39429945158774393;  // std dev = 1.110, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(C, D), complex(A, E) )
%   | then return 0.43972611040905774;  // std dev = 0.092, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else return 0.3867297444218338;  // std dev = 0.083, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( interaction(F, A), interaction(F, F) )
%   | then if ( interaction(F, G), recursion_proteinclass(G, B) )
%   | | then if ( enzyme(A, H), location(A, I) )
%   | | | then return 0.4596312869105759;  // std dev = 0.219, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.7133333766652938;  // std dev = 0.052, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return -0.17906951879016775;  // std dev = 0.286, 36.000 (wgt'ed) examples reached here.  /* #neg=36 */
%   | else if ( interaction(J, A), complex(J, K) )
%   | | then if ( enzyme(J, L), interaction(A, M) )
%   | | | then return -0.04734413542812862;  // std dev = 1.183, 13.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | else return 0.12233152554904435;  // std dev = 3.006, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
%   | | else if ( location(A, N) )
%   | | | then return 0.032644781320347614;  // std dev = 4.254, 137.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=38 */
%   | | | else return -0.09993047042540645;  // std dev = 1.340, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then if ( complex(A, F) )
%   | | then return 0.5791555761777311;  // std dev = 0.104, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else if ( interaction(E, G), interaction(G, G) )
%   | | | then return 0.5462414280804377;  // std dev = 0.212, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.4101281496907869;  // std dev = 0.423, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | else return -0.17260869032393975;  // std dev = 0.093, 70.000 (wgt'ed) examples reached here.  /* #neg=70 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.3482691942824137;  // std dev = 0.090, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else if ( interaction(I, A), interaction(A, J) )
%   | | then if ( interaction(J, K), recursion_proteinclass(K, B) )
%   | | | then return 0.4854476950616876;  // std dev = 0.248, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.04595617039675641;  // std dev = 2.508, 60.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=10 */
%   | | else if ( interaction(A, L), interaction(L, M) )
%   | | | then return 0.24649675243650718;  // std dev = 1.745, 13.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=6 */
%   | | | else return 0.05929472900720829;  // std dev = 3.487, 76.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=24 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.4773394774374284;  // std dev = 0.173, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.17623559130477892;  // std dev = 0.078, 62.000 (wgt'ed) examples reached here.  /* #neg=62 */
%   else if ( interaction(E, A), interaction(F, E) )
%   | then if ( interaction(G, F), recursion_proteinclass(G, B) )
%   | | then return 0.2655867893510193;  // std dev = 0.229, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else if ( interaction(E, F) )
%   | | | then return -0.06612135656568664;  // std dev = 1.925, 48.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=10 */
%   | | | else return 0.001599261358527985;  // std dev = 2.815, 67.000 (wgt'ed) examples reached here.  /* #neg=48 #pos=19 */
%   | else if ( interaction(A, H), phenotype(H, I) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.2999898844160961;  // std dev = 0.051, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.009682697362239343;  // std dev = 1.924, 26.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=7 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.0015378992893848385;  // std dev = 0.867, 11.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | else return 0.18947597161570187;  // std dev = 1.959, 19.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=8 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(A, C), phenotype(A, D) )
%   then if ( complex(E, C), recursion_proteinclass(E, B) )
%   | then if ( interaction(E, A) )
%   | | then return -0.04908395471303978;  // std dev = 0.759, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | else return 0.4348212670638591;  // std dev = 0.135, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | else return -0.16721938549351772;  // std dev = 0.065, 42.000 (wgt'ed) examples reached here.  /* #neg=42 */
%   else if ( interaction(A, F), interaction(F, A) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.16717342507657115;  // std dev = 0.101, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.061591813008532934;  // std dev = 0.173, 25.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( phenotype(A, I), interaction(G, J) )
%   | | | then return 0.0033894226248603354;  // std dev = 1.489, 27.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=8 */
%   | | | else return 0.143028592013165;  // std dev = 2.402, 37.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=17 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.29919046524465837;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.0241313124828893;  // std dev = 3.464, 99.000 (wgt'ed) examples reached here.  /* #neg=68 #pos=31 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( recursion_proteinclass(E, B) )
%   | | | then return 0.12543589723375784;  // std dev = 0.822, 16.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=15 */
%   | | | else return 0.4529173869683795;  // std dev = 1.418, 55.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=54 */
%   | | else if ( interaction(F, A) )
%   | | | then return -0.24293867690812085;  // std dev = 0.495, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   | | | else return 0.23514460900631592;  // std dev = 1.649, 20.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | else if ( enzyme(A, G) )
%   | | then return -0.11471544037306604;  // std dev = 0.177, 45.000 (wgt'ed) examples reached here.  /* #neg=45 */
%   | | else if ( interaction(H, A), complex(A, I) )
%   | | | then return -0.12569639308661124;  // std dev = 0.172, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return -0.2087063643384217;  // std dev = 0.604, 67.000 (wgt'ed) examples reached here.  /* #neg=67 */
%   else if ( interaction(J, A) )
%   | then return 0.057862737134556086;  // std dev = 0.979, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else return -0.166928251537886;  // std dev = 0.913, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( interaction(D, C), recursion_proteinclass(D, B) )
%   | then return 0.19704186547491048;  // std dev = 0.119, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else if ( interaction(A, E), phenotype(C, F) )
%   | | then return -0.036764666323171574;  // std dev = 0.231, 66.000 (wgt'ed) examples reached here.  /* #neg=52 #pos=14 */
%   | | else if ( enzyme(A, G) )
%   | | | then return -0.02444324159078719;  // std dev = 1.282, 49.000 (wgt'ed) examples reached here.  /* #neg=35 #pos=14 */
%   | | | else return 0.06904172094598306;  // std dev = 2.557, 68.000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.19377529443169372;  // std dev = 0.042, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( location(A, K), location(I, K) )
%   | | | then return -0.13693458162106317;  // std dev = 1.299, 27.000 (wgt'ed) examples reached here.  /* #neg=23 #pos=4 */
%   | | | else return -0.01071854323395667;  // std dev = 1.056, 8.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=2 */
%   | | else if ( phenotype(A, L) )
%   | | | then return -0.03565396375747536;  // std dev = 1.064, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.01708330928187615;  // std dev = 1.059, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '12.602', 'seconds']
Refined model CLL: -0.188716


******************************************
Best model found
******************************************
Results 

CLL : -0.190067 

AUC ROC : 0.986956 

AUC PR : 0.438791 

Precision : 0.26971 

Recall : 0.689046 

F1 : 0.387674 

Total Learning Time : 10.984 

Total Inference Time : 7.62149715423584 

Total revision time: 21.398467554092406
Best scored revision CLL: -0.188716


Results 

CLL : -0.190067 

AUC ROC : 0.986956 

AUC PR : 0.438791 

Precision : 0.26971 

Recall : 0.689046 

F1 : 0.387674 

Total Learning Time : 32.1176545753479 

Total Inference Time : 7.62149715423584 

Run: 4
Starting experiments for fasttext using relax-wmd 


 Starting fold 1 of 4 folds 

Start transfer learning experiment

Target train facts examples: 4517
Target train pos examples: 87
Target train neg examples: 11565

Target test facts examples: 10498
Target test pos examples: 282
Target test neg examples: 39912

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.133
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.17222835748218365;  // std dev = 7.725, 277.000 (wgt'ed) examples reached here.  /* #neg=190 #pos=87 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1878641474241395;  // std dev = 5.340, 125.000 (wgt'ed) examples reached here.  /* #neg=81 #pos=44 */
%   | | | else return 0.15917241810083124;  // std dev = 5.394, 133.000 (wgt'ed) examples reached here.  /* #neg=90 #pos=43 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.18260796618678066;  // std dev = 4.688, 94.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=35 */
%   | | | else return 0.11871252434098968;  // std dev = 5.998, 169.000 (wgt'ed) examples reached here.  /* #neg=117 #pos=52 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.08625319414943966;  // std dev = 3.721, 65.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | else return 0.09025864603082961;  // std dev = 6.849, 223.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08255697835536545;  // std dev = 7.747, 280.000 (wgt'ed) examples reached here.  /* #neg=193 #pos=87 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.08790484008016564;  // std dev = 7.632, 263.000 (wgt'ed) examples reached here.  /* #neg=176 #pos=87 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7332411407902315;  // std dev = 0.014, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.26691089265083745;  // std dev = 0.019, 68.000 (wgt'ed) examples reached here.  /* #neg=68 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.09572239009817791;  // std dev = 3.941, 68.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=24 */
%   | | | else return 0.07006376628394333;  // std dev = 4.358, 87.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=28 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04462146526825435;  // std dev = 3.800, 105.000 (wgt'ed) examples reached here.  /* #neg=70 #pos=35 */
%   | | | else return 0.05238304895489853;  // std dev = 5.938, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03439303810519514;  // std dev = 7.068, 271.000 (wgt'ed) examples reached here.  /* #neg=184 #pos=87 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04657213486875475;  // std dev = 6.941, 256.000 (wgt'ed) examples reached here.  /* #neg=169 #pos=87 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.478', 'seconds']
Parameter learned model CLL:-0.326755 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.725, 190, 87]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.34, 81, 44], 'false,false,false,false': [5.394, 90, 43]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.688, 59, 35], 'false,false,false,false': [5.998, 117, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.721, 45, 20], 'false,false,false,false': [6.849, 156, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.747, 193, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.632, 176, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.014, 0, 35], 'true,false': [0.019, 68, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.941, 44, 24], 'false,false,false,false': [4.358, 59, 28]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.8, 70, 35], 'false,false,false,false': [5.938, 109, 52]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.068, 184, 87]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.941, 169, 87]}]
{'': [nan, 0.2154335388184397], 'false': [nan, 0.21543353881843982], 'false,false': [nan, 0.2154335388184397], 'false,false,false': [nan, 0.21543353881843982]}
{'': [nan, 0.22349918875067795], 'false': [nan, 0.22349918875067717], 'false,false': [nan, 0.22349918875067795], 'false,false,false': [0.22809600000000113, 0.2187800327887399]}
{'': [nan, 0.2212869251033061], 'false': [nan, 0.2212869251033061], 'false,false': [nan, 0.2212869251033056], 'false,false,false': [0.2337525994554227, 0.2128941647006231]}
{'': [nan, 0.21094007343188242], 'false': [nan, 0.21094007343188242], 'false,false': [nan, 0.21094007343188165], 'false,false,false': [0.2130177514792893, 0.21033085124580722]}
{'': [nan, 0.21434534450313042], 'false': [nan, 0.21434534450313042], 'false,false': [nan, 0.2143453445031313], 'false,false,false': [nan, 0.2143453445031313]}
{'': [nan, 0.22148187005661052], 'false': [nan, 0.22148187005661052], 'false,false': [nan, 0.22148187005661038], 'false,false,false': [nan, 0.22148187005661057]}
{'': [0.22441166108667546, 0.22285836010540241], 'true': [5.7002618211145415e-06, 5.572363429351412e-06], 'false': [nan, 0.22285836010540241], 'false,false': [nan, 0.22285836010540241], 'false,false,false': [0.2283737024221455, 0.21825868674858087], 'true,true': [nan, 5.7002618211145415e-06], 'true,true,false': [nan, 5.7002618211145415e-06]}
{'': [nan, 0.18683604740411536], 'false': [nan, 0.18683604740411536], 'false,false': [nan, 0.18683604740411539], 'false,false,false': [0.13751042873569866, 0.2189811493359695]}
{'': [nan, 0.18433607648299893], 'false': [nan, 0.18433607648300027], 'false,false': [nan, 0.18433607648300027], 'false,false,false': [nan, 0.18433607648300027]}
{'': [nan, 0.1882064207765614], 'false': [nan, 0.1882064207765614], 'false,false': [nan, 0.1882064207765614], 'false,false,false': [nan, 0.1882064207765614]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 16.216
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), phenotype(C, D) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.7470378239884012;  // std dev = 0.314, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then if ( interaction(E, C) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | else return 0.03592671287729013;  // std dev = 0.382, 90.000 (wgt'ed) examples reached here.  /* #neg=74 #pos=16 */
%   else if ( interaction(F, A), recursion_proteinclass(F, B) )
%   | then return 0.8581489350995122;  // std dev = 0.000, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | else if ( phenotype(A, G), complex(A, H) )
%   | | then if ( complex(I, H), recursion_proteinclass(I, B) )
%   | | | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.14185106490048774;  // std dev = 1.05e-08, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( enzyme(A, J) )
%   | | | then return 0.2905813675319448;  // std dev = 3.013, 37.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=16 */
%   | | | else return 0.18314893509951125;  // std dev = 4.189, 80.000 (wgt'ed) examples reached here.  /* #neg=54 #pos=26 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), location(A, E) )
%   | then return 0.5191788496526211;  // std dev = 0.745, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else return 0.7526565455020985;  // std dev = 0.110, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, F), enzyme(F, G) )
%   | then if ( interaction(A, A) )
%   | | then return -0.15014137239942837;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( complex(F, H) )
%   | | | then return 0.08397733026618463;  // std dev = 2.455, 36.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=9 */
%   | | | else return 0.5365962446165118;  // std dev = 0.796, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.8096297715576267;  // std dev = 0.209, 24.000 (wgt'ed) examples reached here.  /* #pos=24 */
%   | | | else return -0.16824943419271624;  // std dev = 0.115, 31.000 (wgt'ed) examples reached here.  /* #neg=31 */
%   | | else if ( phenotype(A, K), complex(A, L) )
%   | | | then return 0.08791640214650055;  // std dev = 2.313, 35.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else return 0.21196786902230197;  // std dev = 4.358, 82.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( location(A, C) )
%   then if ( location(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), interaction(E, D) )
%   | | then if ( interaction(A, D), complex(A, F) )
%   | | | then return 0.3690453925991657;  // std dev = 0.919, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return 0.6671302522909595;  // std dev = 2.112, 79.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=74 */
%   | | else if ( interaction(G, A) )
%   | | | then return -0.15792260132816036;  // std dev = 0.147, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | | else return 0.467230534403857;  // std dev = 1.053, 7.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | else return -0.16899136694830294;  // std dev = 0.358, 144.000 (wgt'ed) examples reached here.  /* #neg=144 */
%   else if ( interaction(H, A), phenotype(H, I) )
%   | then return 0.13629096803406432;  // std dev = 0.816, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else return 0.3909000478579478;  // std dev = 1.041, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( enzyme(A, D), phenotype(A, E) )
%   | then return -0.11595089728323654;  // std dev = 0.722, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.5353853815358731;  // std dev = 0.151, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4475205766814439;  // std dev = 0.110, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, A) )
%   | then return -0.1441478107345027;  // std dev = 0.086, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(G, A), location(G, H) )
%   | | then if ( complex(A, I), enzyme(A, J) )
%   | | | then return 0.2332249994705025;  // std dev = 1.475, 18.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=10 */
%   | | | else return 0.07808535272543014;  // std dev = 5.026, 192.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=60 */
%   | | else if ( interaction(A, K), interaction(K, L) )
%   | | | then return 0.08642269268917695;  // std dev = 1.033, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return 0.3654119893935562;  // std dev = 0.949, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, A) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.3813631009272837;  // std dev = 0.086, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13708826590968273;  // std dev = 0.078, 13.000 (wgt'ed) examples reached here.  /* #neg=13 */
%   | | else return 3.1540463478613563E-4;  // std dev = 0.309, 49.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   else if ( complex(A, D), enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then return 0.48721482105435954;  // std dev = 0.149, 14.000 (wgt'ed) examples reached here.  /* #pos=14 */
%   | | else return -0.15920737761099282;  // std dev = 0.188, 34.000 (wgt'ed) examples reached here.  /* #neg=34 */
%   | else if ( interaction(A, G), phenotype(G, H) )
%   | | then if ( interaction(I, A), interaction(I, I) )
%   | | | then return 0.3363976584610847;  // std dev = 0.878, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.026506636286286273;  // std dev = 2.159, 41.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=11 */
%   | | else if ( interaction(J, A), complex(J, K) )
%   | | | then return 0.08183662128107497;  // std dev = 2.535, 51.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=17 */
%   | | | else return 0.13660877050920922;  // std dev = 2.943, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A) )
%   then if ( phenotype(C, D), interaction(E, C) )
%   | then if ( recursion_proteinclass(E, B) )
%   | | then return 0.4480210112221096;  // std dev = 0.099, 15.000 (wgt'ed) examples reached here.  /* #pos=15 */
%   | | else if ( interaction(A, C) )
%   | | | then return -0.18238505626748502;  // std dev = 0.345, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   | | | else return 0.09857329809838067;  // std dev = 3.542, 100.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=39 */
%   | else if ( interaction(F, C), interaction(F, A) )
%   | | then if ( recursion_proteinclass(C, B) )
%   | | | then return 0.2926488643605491;  // std dev = 0.165, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.028075998968802817;  // std dev = 1.554, 31.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( interaction(C, G), recursion_proteinclass(G, B) )
%   | | | then return 0.5681273294434008;  // std dev = 0.455, 19.000 (wgt'ed) examples reached here.  /* #pos=19 */
%   | | | else return -0.21152462163292907;  // std dev = 0.275, 32.000 (wgt'ed) examples reached here.  /* #neg=32 */
%   else if ( enzyme(A, H) )
%   | then return 0.3065156743820042;  // std dev = 0.576, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | else return 0.04131771212881863;  // std dev = 0.771, 3.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then return 0.41686059952934107;  // std dev = 0.158, 35.000 (wgt'ed) examples reached here.  /* #pos=35 */
%   | else return -0.15282388469450994;  // std dev = 0.043, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( interaction(A, E), phenotype(A, F) )
%   | then if ( interaction(E, E), complex(E, G) )
%   | | then return -0.2076837351671651;  // std dev = 0.581, 4.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=1 */
%   | | else if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3588755895319939;  // std dev = 0.129, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.03362361403941474;  // std dev = 1.187, 22.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | else if ( interaction(A, I), location(A, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.35672522162552617;  // std dev = 0.389, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | else return 0.029294471626851854;  // std dev = 1.339, 20.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | else if ( interaction(L, A), location(L, M) )
%   | | | then return 0.04474698353070419;  // std dev = 3.213, 87.000 (wgt'ed) examples reached here.  /* #neg=57 #pos=30 */
%   | | | else return -0.08232206002102829;  // std dev = 0.902, 9.000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, C), location(A, D) )
%   | then return 0.16333839932715272;  // std dev = 0.089, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else return 0.29569189877656876;  // std dev = 0.209, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   else if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.24254719374202718;  // std dev = 0.105, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( phenotype(A, F), interaction(G, A) )
%   | | then if ( interaction(H, G), recursion_proteinclass(H, B) )
%   | | | then return 0.14692811692009025;  // std dev = 0.956, 9.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | else return -0.034448568816737864;  // std dev = 2.673, 108.000 (wgt'ed) examples reached here.  /* #neg=86 #pos=22 */
%   | | else if ( interaction(I, A), phenotype(I, J) )
%   | | | then return 0.08398690394568184;  // std dev = 2.481, 57.000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | else return -0.004414186493010398;  // std dev = 2.454, 76.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=21 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(D, E), recursion_proteinclass(E, B) )
%   | | then return 0.20072968918575151;  // std dev = 0.110, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( enzyme(A, F) )
%   | | | then return 0.2598330666738516;  // std dev = 0.378, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return 0.415519622388929;  // std dev = 0.483, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else return -0.15347006441985075;  // std dev = 0.074, 71.000 (wgt'ed) examples reached here.  /* #neg=71 */
%   else if ( enzyme(A, G) )
%   | then if ( enzyme(H, G), recursion_proteinclass(H, B) )
%   | | then return 0.36785638445938657;  // std dev = 0.101, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | else return -0.1482389125295459;  // std dev = 0.039, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.21056557934008813;  // std dev = 0.184, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( interaction(A, A) )
%   | | | then return -0.1357652356183644;  // std dev = 0.001, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.02091532494249066;  // std dev = 3.297, 92.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=29 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.14678371307894542;  // std dev = 0.051, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   else if ( complex(A, D) )
%   | then if ( complex(E, D), recursion_proteinclass(E, B) )
%   | | then if ( interaction(A, F), interaction(G, E) )
%   | | | then return 0.3410234031274136;  // std dev = 0.413, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.22223185449467112;  // std dev = 0.434, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   | | else if ( phenotype(A, H) )
%   | | | then return -0.12123853076156611;  // std dev = 0.517, 57.000 (wgt'ed) examples reached here.  /* #neg=57 */
%   | | | else return -0.17185334409965577;  // std dev = 0.274, 21.000 (wgt'ed) examples reached here.  /* #neg=21 */
%   | else if ( interaction(A, I), enzyme(I, J) )
%   | | then if ( complex(I, K) )
%   | | | then return 0.030508052014243975;  // std dev = 0.451, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return -0.105362878283056;  // std dev = 0.861, 18.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=3 */
%   | | else if ( interaction(L, A), interaction(L, L) )
%   | | | then return 0.12237316631693006;  // std dev = 1.620, 23.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=11 */
%   | | | else return 0.031780424698690406;  // std dev = 2.998, 86.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=30 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '1', 'minutes', 'and', '137', 'milliseconds']
Refined model CLL: -0.184784


******************************************
Best model found
******************************************
Results 

CLL : -0.187385 

AUC ROC : 0.993033 

AUC PR : 0.543263 

Precision : 0.393064 

Recall : 0.723404 

F1 : 0.509363 

Total Learning Time : 16.216 

Total Inference Time : 9.616668224334717 

Total revision time: 28.663709424972534
Best scored revision CLL: -0.184784


Results 

CLL : -0.187385 

AUC ROC : 0.993033 

AUC PR : 0.543263 

Precision : 0.393064 

Recall : 0.723404 

F1 : 0.509363 

Total Learning Time : 39.38278820419312 

Total Inference Time : 9.616668224334717 


 Starting fold 2 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3856
Target train pos examples: 104
Target train neg examples: 16320

Target test facts examples: 11159
Target test pos examples: 265
Target test neg examples: 35157

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.145
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21069130798086888;  // std dev = 8.206, 295.000 (wgt'ed) examples reached here.  /* #neg=191 #pos=104 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.15350018510590133;  // std dev = 5.933, 161.000 (wgt'ed) examples reached here.  /* #neg=109 #pos=52 */
%   | | | else return 0.155518818646274;  // std dev = 5.925, 160.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=52 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.08289043736790994;  // std dev = 5.451, 149.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=41 */
%   | | | else return 0.12104410642395223;  // std dev = 6.577, 201.000 (wgt'ed) examples reached here.  /* #neg=138 #pos=63 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.14826482399279928;  // std dev = 4.329, 82.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=29 */
%   | | | else return 0.11374784254404756;  // std dev = 7.117, 231.000 (wgt'ed) examples reached here.  /* #neg=156 #pos=75 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.10489370954605952;  // std dev = 8.314, 310.000 (wgt'ed) examples reached here.  /* #neg=206 #pos=104 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06951500733916642;  // std dev = 8.414, 326.000 (wgt'ed) examples reached here.  /* #neg=222 #pos=104 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7149397944005107;  // std dev = 0.990, 42.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=41 */
%   | else return -0.261416053840012;  // std dev = 0.025, 81.000 (wgt'ed) examples reached here.  /* #neg=81 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.047068537568381;  // std dev = 3.981, 74.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=23 */
%   | | | else return 0.06919889031476721;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.055204147279828704;  // std dev = 4.137, 121.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=41 */
%   | | | else return 0.059047300932879423;  // std dev = 6.472, 188.000 (wgt'ed) examples reached here.  /* #neg=125 #pos=63 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.035502259026704744;  // std dev = 7.746, 318.000 (wgt'ed) examples reached here.  /* #neg=214 #pos=104 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.03715910929217481;  // std dev = 7.671, 311.000 (wgt'ed) examples reached here.  /* #neg=207 #pos=104 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.178', 'seconds']
Parameter learned model CLL:-0.329946 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.206, 191, 104]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.933, 109, 52], 'false,false,false,false': [5.925, 108, 52]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.451, 108, 41], 'false,false,false,false': [6.577, 138, 63]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.329, 53, 29], 'false,false,false,false': [7.117, 156, 75]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.314, 206, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [8.414, 222, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.99, 1, 41], 'true,false': [0.025, 81, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.981, 51, 23], 'false,false,false,false': [5.164, 80, 40]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.137, 80, 41], 'false,false,false,false': [6.472, 125, 63]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.746, 214, 104]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.671, 207, 104]}]
{'': [nan, 0.2282562482045412], 'false': [nan, 0.22825624820453944], 'false,false': [nan, 0.2282562482045412], 'false,false,false': [nan, 0.22825624820453944]}
{'': [nan, 0.2190196135518918], 'false': [nan, 0.2190196135518865], 'false,false': [nan, 0.2190196135518918], 'false,false,false': [0.21866440337949863, 0.21937499999999935]}
{'': [nan, 0.20884261429821296], 'false': [nan, 0.20884261429821296], 'false,false': [nan, 0.2088426142982129], 'false,false,false': [0.199445154768742, 0.21518917693381126]}
{'': [nan, 0.2219435274661104], 'false': [nan, 0.2219435274661104], 'false,false': [nan, 0.22194352746610937], 'false,false,false': [0.2285841760856634, 0.21927411121572749]}
{'': [nan, 0.22298662827787472], 'false': [nan, 0.22298662827787472], 'false,false': [nan, 0.22298662827787402], 'false,false,false': [nan, 0.22298662827787402]}
{'': [nan, 0.21715950969171352], 'false': [nan, 0.21715950969171352], 'false,false': [nan, 0.21715950969171405], 'false,false,false': [nan, 0.21715950969171396]}
{'': [0.2223315365674835, 0.21928059564799943], 'true': [0.023335653520362768, 7.504267858616373e-06], 'false': [nan, 0.21928059564799943], 'false,false': [nan, 0.21928059564799943], 'false,false,false': [0.21420745069393726, 0.2222222222222213], 'true,true': [nan, 0.023335653520362768], 'true,true,false': [nan, 0.023335653520362768]}
{'': [nan, 0.19095302848770102], 'false': [nan, 0.19095302848770102], 'false,false': [nan, 0.19095302848770182], 'false,false,false': [0.14142183558000007, 0.2228263636721196]}
{'': [nan, 0.18869250471939986], 'false': [nan, 0.18869250471939997], 'false,false': [nan, 0.18869250471939997], 'false,false,false': [nan, 0.18869250471939997]}
{'': [nan, 0.18921586330507884], 'false': [nan, 0.18921586330507884], 'false,false': [nan, 0.1892158633050791], 'false,false,false': [nan, 0.1892158633050791]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 10.572
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(A, A) )
%   | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | else if ( location(A, D) )
%   | | then if ( location(E, D), recursion_proteinclass(E, B) )
%   | | | then return 0.5166855204653644;  // std dev = 5.259, 123.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=81 */
%   | | | else return -0.14185106490048796;  // std dev = 0.000, 138.000 (wgt'ed) examples reached here.  /* #neg=138 */
%   | | else if ( interaction(A, F) )
%   | | | then return 0.2581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.5248156017661789;  // std dev = 1.155, 6.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | then return 0.7512434290854717;  // std dev = 0.100, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else if ( interaction(A, F), interaction(F, G) )
%   | | then return 0.08526564831481119;  // std dev = 0.406, 59.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=15 */
%   | | else if ( recursion_proteinclass(D, B) )
%   | | | then return 0.7194734122109544;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.20160027188742594;  // std dev = 2.180, 25.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=9 */
%   else if ( interaction(A, H), recursion_proteinclass(H, B) )
%   | then return 0.5947705647106786;  // std dev = 0.358, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else if ( location(A, I), interaction(A, J) )
%   | | then if ( phenotype(J, K) )
%   | | | then return 0.11718611586514446;  // std dev = 3.341, 64.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=18 */
%   | | | else return -0.07614550921549111;  // std dev = 0.912, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | else if ( location(A, L) )
%   | | | then return 0.19605481433153632;  // std dev = 4.366, 95.000 (wgt'ed) examples reached here.  /* #neg=60 #pos=35 */
%   | | | else return 0.0848368704433999;  // std dev = 2.032, 20.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=6 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then return 0.5933433098911313;  // std dev = 0.059, 17.000 (wgt'ed) examples reached here.  /* #pos=17 */
%   else if ( interaction(D, A), complex(A, E) )
%   | then if ( interaction(F, D), recursion_proteinclass(F, B) )
%   | | then if ( interaction(D, F) )
%   | | | then return 0.7469141953225461;  // std dev = 0.180, 13.000 (wgt'ed) examples reached here.  /* #pos=13 */
%   | | | else return 0.11289290851785032;  // std dev = 1.081, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(A, G), complex(D, H) )
%   | | | then return -0.13890536740463427;  // std dev = 1.184, 63.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=2 */
%   | | | else return 0.067563263340806;  // std dev = 2.510, 40.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=10 */
%   | else if ( interaction(A, I), phenotype(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.6374444864352693;  // std dev = 0.935, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | | else return 0.10686337075462328;  // std dev = 2.712, 42.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=12 */
%   | | else if ( interaction(A, L), interaction(M, A) )
%   | | | then return -0.03307878498216851;  // std dev = 1.168, 16.000 (wgt'ed) examples reached here.  /* #neg=14 #pos=2 */
%   | | | else return 0.13596027171589495;  // std dev = 4.706, 116.000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.3570866325984688;  // std dev = 0.333, 19.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=16 */
%   else if ( interaction(D, A), complex(D, E) )
%   | then if ( enzyme(A, F), phenotype(D, G) )
%   | | then if ( phenotype(A, G), interaction(A, H) )
%   | | | then return -0.07421540181093936;  // std dev = 1.409, 23.000 (wgt'ed) examples reached here.  /* #neg=20 #pos=3 */
%   | | | else return 0.042444455226862216;  // std dev = 3.078, 61.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=16 */
%   | | else if ( phenotype(A, I), enzyme(D, J) )
%   | | | then return 0.26674981448514756;  // std dev = 2.004, 20.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=10 */
%   | | | else return 0.06443662677796304;  // std dev = 4.467, 134.000 (wgt'ed) examples reached here.  /* #neg=95 #pos=39 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( enzyme(K, M) )
%   | | | then return 0.19834075544364915;  // std dev = 1.048, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | | else return 0.05648310239337179;  // std dev = 1.377, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | else if ( complex(A, N) )
%   | | | then return 0.326390004070634;  // std dev = 1.376, 9.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=5 */
%   | | | else return 0.154342470109027;  // std dev = 2.251, 26.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( phenotype(A, D), enzyme(A, E) )
%   | then return 0.07820998546601117;  // std dev = 0.675, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | | then return 0.32865425286956007;  // std dev = 0.042, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else return 0.4656505237305806;  // std dev = 0.073, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(A, G), recursion_proteinclass(G, B) )
%   | then if ( interaction(A, H), interaction(H, G) )
%   | | then return 0.5819356332915278;  // std dev = 0.010, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else return 0.4464550982020509;  // std dev = 0.173, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | else if ( interaction(A, I), complex(A, J) )
%   | | then if ( interaction(K, A), enzyme(K, L) )
%   | | | then return 0.10654060763930295;  // std dev = 1.669, 20.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | | else return -0.04089735234098071;  // std dev = 2.129, 54.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=8 */
%   | | else if ( location(A, M) )
%   | | | then return 0.118227877527436;  // std dev = 5.600, 168.000 (wgt'ed) examples reached here.  /* #neg=108 #pos=60 */
%   | | | else return 0.008294007781399888;  // std dev = 1.914, 18.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.2759730220899967;  // std dev = 0.206, 17.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=16 */
%   else if ( interaction(A, D), interaction(E, A) )
%   | then if ( phenotype(D, F), complex(A, G) )
%   | | then if ( complex(D, G), phenotype(E, F) )
%   | | | then return -0.017836910376386458;  // std dev = 1.320, 26.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=4 */
%   | | | else return 0.1350283529157317;  // std dev = 1.994, 27.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | else if ( enzyme(D, H), phenotype(E, I) )
%   | | | then return 0.020891985729981355;  // std dev = 2.191, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return -0.07982880631030362;  // std dev = 2.332, 56.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=9 */
%   | else if ( enzyme(A, J) )
%   | | then if ( enzyme(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.6166918647553892;  // std dev = 0.967, 23.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=22 */
%   | | | else return -0.22279530224834496;  // std dev = 0.266, 27.000 (wgt'ed) examples reached here.  /* #neg=27 */
%   | | else if ( location(A, L) )
%   | | | then return 0.053469430267003105;  // std dev = 4.078, 96.000 (wgt'ed) examples reached here.  /* #neg=65 #pos=31 */
%   | | | else return -0.06553209123133845;  // std dev = 1.373, 12.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(E, A), recursion_proteinclass(E, B) )
%   | | then return 0.2600513959685251;  // std dev = 0.077, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | else if ( interaction(A, F), enzyme(F, G) )
%   | | | then return 0.4610984569940519;  // std dev = 0.535, 12.000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | | | else return 0.5754852422964503;  // std dev = 0.352, 18.000 (wgt'ed) examples reached here.  /* #pos=18 */
%   | else return -0.1743410376551038;  // std dev = 0.057, 82.000 (wgt'ed) examples reached here.  /* #neg=82 */
%   else if ( interaction(H, A), recursion_proteinclass(H, B) )
%   | then return 0.28618158805806565;  // std dev = 0.163, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | else if ( interaction(I, A), enzyme(I, J) )
%   | | then if ( interaction(K, I), recursion_proteinclass(K, B) )
%   | | | then return 0.625871632313873;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return -0.04087144352656571;  // std dev = 3.230, 81.000 (wgt'ed) examples reached here.  /* #neg=63 #pos=18 */
%   | | else if ( phenotype(A, L), location(A, M) )
%   | | | then return 0.1039080580117288;  // std dev = 2.960, 49.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=18 */
%   | | | else return 0.030875243327817856;  // std dev = 2.937, 61.000 (wgt'ed) examples reached here.  /* #neg=44 #pos=17 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(C, C) )
%   then if ( phenotype(C, D) )
%   | then return -0.060984648018972194;  // std dev = 0.274, 56.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=14 */
%   | else if ( interaction(C, E), recursion_proteinclass(E, B) )
%   | | then return 0.409279424113339;  // std dev = 0.273, 12.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=11 */
%   | | else return -0.1718683925133821;  // std dev = 0.062, 23.000 (wgt'ed) examples reached here.  /* #neg=23 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( phenotype(A, H), interaction(F, A) )
%   | | then return 0.008701098217748175;  // std dev = 0.285, 19.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | else if ( complex(F, I) )
%   | | | then return 0.06662256425649699;  // std dev = 2.311, 39.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=14 */
%   | | | else return 0.19582442782995207;  // std dev = 1.573, 15.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=7 */
%   | else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | | then return 0.24633646846138565;  // std dev = 0.176, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( location(A, K), interaction(L, A) )
%   | | | then return 0.02130986516021418;  // std dev = 4.165, 134.000 (wgt'ed) examples reached here.  /* #neg=93 #pos=41 */
%   | | | else return -0.08229340417275359;  // std dev = 1.731, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), location(A, D) )
%   then return -0.004164768840784562;  // std dev = 0.238, 131.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=40 */
%   else if ( interaction(A, E), enzyme(A, F) )
%   | then if ( enzyme(E, G) )
%   | | then if ( interaction(E, H), recursion_proteinclass(H, B) )
%   | | | then return 0.3105295886496735;  // std dev = 0.201, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.046341409872686444;  // std dev = 1.007, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | | else if ( interaction(E, I), recursion_proteinclass(I, B) )
%   | | | then return 0.35671168198274084;  // std dev = 0.722, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | else return -0.146260751136045;  // std dev = 0.883, 17.000 (wgt'ed) examples reached here.  /* #neg=16 #pos=1 */
%   | else if ( phenotype(A, J) )
%   | | then if ( phenotype(K, J), recursion_proteinclass(K, B) )
%   | | | then return 0.4980712303704751;  // std dev = 1.653, 32.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=29 */
%   | | | else return -0.24632955045762975;  // std dev = 0.588, 54.000 (wgt'ed) examples reached here.  /* #neg=54 */
%   | | else if ( interaction(A, L), phenotype(L, M) )
%   | | | then return 0.18804078027292792;  // std dev = 1.447, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0.057076932867217704;  // std dev = 2.902, 58.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=21 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), phenotype(C, D) )
%   then if ( phenotype(A, E), interaction(F, C) )
%   | then if ( interaction(C, F), recursion_proteinclass(F, B) )
%   | | then return 0.236239559473399;  // std dev = 0.257, 23.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=20 */
%   | | else return -0.010565062890276323;  // std dev = 0.286, 132.000 (wgt'ed) examples reached here.  /* #neg=99 #pos=33 */
%   | else if ( enzyme(C, G), location(A, H) )
%   | | then return -0.05219893164987361;  // std dev = 0.286, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | else if ( location(A, I), complex(C, J) )
%   | | | then return -0.009801255670276645;  // std dev = 2.395, 58.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=16 */
%   | | | else return 0.050752501006900014;  // std dev = 1.799, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | then return 0.14721434819139614;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | else if ( interaction(L, A), complex(L, M) )
%   | | then return -0.09502415436737066;  // std dev = 0.241, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | else if ( enzyme(A, N), interaction(A, P) )
%   | | | then return -0.08751787129019063;  // std dev = 1.062, 14.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.013802561431326962;  // std dev = 1.810, 27.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=9 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.689', 'seconds']
Refined model CLL: -0.227636


******************************************
Best model found
******************************************
Results 

CLL : -0.229986 

AUC ROC : 0.969078 

AUC PR : 0.328086 

Precision : 0.328358 

Recall : 0.498113 

F1 : 0.395802 

Total Learning Time : 10.572 

Total Inference Time : 9.655370235443115 

Total revision time: 23.403815738677977
Best scored revision CLL: -0.227636


Results 

CLL : -0.229986 

AUC ROC : 0.969078 

AUC PR : 0.328086 

Precision : 0.328358 

Recall : 0.498113 

F1 : 0.395802 

Total Learning Time : 34.12289451789856 

Total Inference Time : 9.655370235443115 


 Starting fold 3 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3421
Target train pos examples: 92
Target train neg examples: 12594

Target test facts examples: 11594
Target test pos examples: 277
Target test neg examples: 38883

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.116
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.20401359675364783;  // std dev = 7.758, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1583797587904762;  // std dev = 5.859, 156.000 (wgt'ed) examples reached here.  /* #neg=105 #pos=51 */
%   | | | else return 0.14684129725201342;  // std dev = 5.298, 130.000 (wgt'ed) examples reached here.  /* #neg=89 #pos=41 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.1062123497486389;  // std dev = 5.560, 148.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=44 */
%   | | | else return 0.13331166368554476;  // std dev = 5.695, 148.000 (wgt'ed) examples reached here.  /* #neg=100 #pos=48 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.15218228506591963;  // std dev = 4.076, 72.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | | else return 0.12223177379642307;  // std dev = 6.634, 198.000 (wgt'ed) examples reached here.  /* #neg=132 #pos=66 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.11806148565264249;  // std dev = 7.728, 262.000 (wgt'ed) examples reached here.  /* #neg=170 #pos=92 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.09116409800515168;  // std dev = 7.757, 266.000 (wgt'ed) examples reached here.  /* #neg=174 #pos=92 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7284680631521551;  // std dev = 0.027, 44.000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else return -0.2718882846560183;  // std dev = 0.038, 93.000 (wgt'ed) examples reached here.  /* #neg=93 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.03818473485241597;  // std dev = 4.146, 80.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=25 */
%   | | | else return 0.05654709230806121;  // std dev = 3.930, 70.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return 0.04046258907701222;  // std dev = 4.256, 132.000 (wgt'ed) examples reached here.  /* #neg=88 #pos=44 */
%   | | | else return 0.03309773203268449;  // std dev = 5.731, 152.000 (wgt'ed) examples reached here.  /* #neg=104 #pos=48 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.0536470847352974;  // std dev = 6.970, 264.000 (wgt'ed) examples reached here.  /* #neg=172 #pos=92 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.04835392201706175;  // std dev = 6.919, 260.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=92 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.450', 'seconds']
Parameter learned model CLL:-0.334775 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.758, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.859, 105, 51], 'false,false,false,false': [5.298, 89, 41]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.56, 104, 44], 'false,false,false,false': [5.695, 100, 48]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.076, 46, 26], 'false,false,false,false': [6.634, 132, 66]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.728, 170, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.757, 174, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.027, 0, 44], 'true,false': [0.038, 93, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.146, 55, 25], 'false,false,false,false': [3.93, 47, 23]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.256, 88, 44], 'false,false,false,false': [5.731, 104, 48]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.97, 172, 92]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [6.919, 168, 92]}]
{'': [nan, 0.22624229747300717], 'false': [nan, 0.2262422974730067], 'false,false': [nan, 0.22624229747300717], 'false,false,false': [nan, 0.2262422974730067]}
{'': [nan, 0.21820137904054265], 'false': [nan, 0.21820137904053863], 'false,false': [nan, 0.21820137904054265], 'false,false,false': [0.22004437869822277, 0.21591715976331427]}
{'': [nan, 0.2141629842314807], 'false': [nan, 0.2141629842314807], 'false,false': [nan, 0.21416298423148047], 'false,false,false': [0.20885184082098937, 0.21910694123404617]}
{'': [nan, 0.22470515878857028], 'false': [nan, 0.22470515878857028], 'false,false': [nan, 0.22470515878856892], 'false,false,false': [0.23070987654320982, 0.2222824162261937]}
{'': [nan, 0.2279322512726338], 'false': [nan, 0.2279322512726338], 'false,false': [nan, 0.2279322512726346], 'false,false,false': [nan, 0.2279322512726346]}
{'': [nan, 0.22623553941168623], 'false': [nan, 0.22623553941168623], 'false,false': [nan, 0.22623553941168617], 'false,false,false': [nan, 0.22623553941168623]}
{'': [0.2181902590083713, 0.21761963368835524], 'true': [1.6222580180524915e-05, 1.556483283636456e-05], 'false': [nan, 0.21761963368835524], 'false,false': [nan, 0.21761963368835524], 'false,false,false': [0.2148437499999995, 0.22061224489795986], 'true,true': [nan, 1.6222580180524915e-05], 'true,true,false': [nan, 1.6222580180524915e-05]}
{'': [nan, 0.17943871926749969], 'false': [nan, 0.17943871926749969], 'false,false': [nan, 0.1794387192674999], 'false,false,false': [0.13719750863169605, 0.2160966652112016]}
{'': [nan, 0.18403851895882256], 'false': [nan, 0.18403851895882262], 'false,false': [nan, 0.18403851895882262], 'false,false,false': [nan, 0.18403851895882262]}
{'': [nan, 0.18410612125952636], 'false': [nan, 0.18410612125952636], 'false,false': [nan, 0.18410612125952733], 'false,false,false': [nan, 0.18410612125952733]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 5.864
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, C) )
%   then if ( recursion_proteinclass(C, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | else if ( interaction(D, A), phenotype(D, E) )
%   | | then return -0.06492798797741087;  // std dev = 0.266, 13.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=1 */
%   | | else if ( complex(C, F) )
%   | | | then return 0.17814893509951235;  // std dev = 2.332, 25.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=8 */
%   | | | else return 0.3126943896449669;  // std dev = 1.651, 11.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   else if ( interaction(G, A), recursion_proteinclass(G, B) )
%   | then return 0.8581489350995123;  // std dev = 0.000, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else if ( interaction(H, A), enzyme(H, I) )
%   | | then if ( enzyme(A, I) )
%   | | | then return -0.1418510649004878;  // std dev = 0.000, 8.000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | else return 0.1914822684328457;  // std dev = 1.826, 15.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(A, K) )
%   | | | then return 0.13234248348660915;  // std dev = 3.513, 62.000 (wgt'ed) examples reached here.  /* #neg=45 #pos=17 */
%   | | | else return 0.1914822684328448;  // std dev = 5.164, 120.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=40 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.6912546229589565;  // std dev = 0.235, 15.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=14 */
%   else if ( interaction(D, A), interaction(A, D) )
%   | then if ( enzyme(A, E), phenotype(A, F) )
%   | | then if ( interaction(A, A) )
%   | | | then return -0.1341296881584762;  // std dev = 0.000, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.2375354565991445;  // std dev = 1.097, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | | else if ( interaction(D, G), interaction(G, G) )
%   | | | then return -0.14392913434146876;  // std dev = 0.047, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | | | else return 0.013655447978235221;  // std dev = 0.899, 6.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | else if ( interaction(A, H), complex(A, I) )
%   | | then if ( complex(H, I) )
%   | | | then return 0.021112023894643336;  // std dev = 2.010, 27.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=5 */
%   | | | else return 0.1848846796798697;  // std dev = 2.388, 26.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=9 */
%   | | else if ( interaction(J, A), interaction(K, J) )
%   | | | then return 0.14902055301932077;  // std dev = 4.805, 110.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=35 */
%   | | | else return 0.21466085061229223;  // std dev = 4.003, 68.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=26 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(A, D) )
%   then if ( complex(C, D), phenotype(A, E) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0.6234450286027687;  // std dev = 0.122, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( enzyme(A, F), enzyme(C, F) )
%   | | | then return -0.13788108907883764;  // std dev = 0.023, 3.000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | else return 0.22801912490936865;  // std dev = 1.528, 10.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | else if ( interaction(G, C), recursion_proteinclass(G, B) )
%   | | then return 0.6635152409227764;  // std dev = 0.101, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else return 0.08722997186861915;  // std dev = 0.431, 76.000 (wgt'ed) examples reached here.  /* #neg=56 #pos=20 */
%   else if ( phenotype(A, H), enzyme(A, I) )
%   | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | then return 0.6433537883399635;  // std dev = 0.318, 8.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=7 */
%   | | else return -0.16664810124242402;  // std dev = 0.101, 10.000 (wgt'ed) examples reached here.  /* #neg=10 */
%   | else if ( interaction(K, A), complex(K, L) )
%   | | then return 0.14070708395515458;  // std dev = 0.469, 42.000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | else return 0.072999124270014;  // std dev = 0.433, 125.000 (wgt'ed) examples reached here.  /* #neg=91 #pos=34 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(C, A), recursion_proteinclass(C, B) )
%   then if ( interaction(A, D), enzyme(D, E) )
%   | then return 0.29446360238098457;  // std dev = 0.260, 7.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | else return 0.5546774478872086;  // std dev = 0.080, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( enzyme(A, G), phenotype(A, H) )
%   | | then return 0.1280666786491517;  // std dev = 0.961, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | else if ( interaction(F, I), phenotype(I, J) )
%   | | | then return -0.1316790423035518;  // std dev = 0.022, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | else return -0.033265946217029434;  // std dev = 1.050, 12.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=2 */
%   | else if ( complex(A, K) )
%   | | then if ( complex(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.7734423861153278;  // std dev = 0.426, 31.000 (wgt'ed) examples reached here.  /* #pos=31 */
%   | | | else return -0.19224435815823623;  // std dev = 0.172, 77.000 (wgt'ed) examples reached here.  /* #neg=77 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.18936517126422253;  // std dev = 3.076, 40.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=16 */
%   | | | else return 0.10130020913900183;  // std dev = 4.219, 86.000 (wgt'ed) examples reached here.  /* #neg=59 #pos=27 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(C, D) )
%   | then return 0.3439528356771098;  // std dev = 0.098, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | else return 0.5588535877198854;  // std dev = 0.275, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   else if ( interaction(A, E), interaction(E, A) )
%   | then if ( enzyme(E, F) )
%   | | then return -0.14190798521033993;  // std dev = 0.122, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, G), interaction(G, G) )
%   | | | then return -0.06686756477446182;  // std dev = 0.762, 11.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else return 0.089084797579609;  // std dev = 1.055, 6.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | else if ( phenotype(A, H), interaction(I, A) )
%   | | then if ( interaction(A, J), interaction(J, K) )
%   | | | then return -0.021176104790946542;  // std dev = 1.114, 15.000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | else return 0.07252312262646707;  // std dev = 2.944, 59.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=18 */
%   | | else if ( interaction(A, L), enzyme(L, M) )
%   | | | then return 0.031278057021961875;  // std dev = 2.153, 32.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=8 */
%   | | | else return 0.12216291550925981;  // std dev = 5.128, 126.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.31935983265267154;  // std dev = 0.152, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( enzyme(C, F), enzyme(A, F) )
%   | | then return -0.08455543059325911;  // std dev = 0.136, 14.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | else if ( complex(A, G), enzyme(A, H) )
%   | | | then return 0.3056404202409775;  // std dev = 1.267, 10.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | else return 0.08864484495077682;  // std dev = 3.547, 65.000 (wgt'ed) examples reached here.  /* #neg=42 #pos=23 */
%   else if ( interaction(I, A), phenotype(I, J) )
%   | then return 0.008168924303332771;  // std dev = 0.372, 68.000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | else if ( interaction(A, K), complex(K, L) )
%   | | then if ( recursion_proteinclass(K, B) )
%   | | | then return 0.32306827668994775;  // std dev = 0.128, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.03344996351876679;  // std dev = 3.126, 64.000 (wgt'ed) examples reached here.  /* #neg=47 #pos=17 */
%   | | else if ( phenotype(A, M) )
%   | | | then return 0.3558310122908188;  // std dev = 1.347, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0984248161350493;  // std dev = 2.441, 28.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=10 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then return 0.036070739605020795;  // std dev = 0.333, 138.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=44 */
%   else if ( location(A, D), interaction(A, E) )
%   | then if ( location(E, D) )
%   | | then if ( enzyme(E, F), complex(E, G) )
%   | | | then return 0.1690980058235418;  // std dev = 1.229, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return -0.03488495110671855;  // std dev = 3.104, 61.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=15 */
%   | | else if ( location(H, D), recursion_proteinclass(H, B) )
%   | | | then return 0.5038547674533601;  // std dev = 0.861, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.3060424543402753;  // std dev = 0.087, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7107093440013852;  // std dev = 0.141, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | else return -0.2534590660014112;  // std dev = 0.033, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( interaction(K, A), recursion_proteinclass(K, B) )
%   | | | then return 0.44420597353903374;  // std dev = 0.148, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return 0.034924599510953155;  // std dev = 3.134, 47.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), location(A, D) )
%   then if ( complex(A, E), enzyme(A, F) )
%   | then return 0.06969229073749814;  // std dev = 0.358, 53.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | else if ( interaction(G, C), phenotype(G, H) )
%   | | then if ( location(C, D), complex(G, I) )
%   | | | then return 0.07520981137906624;  // std dev = 2.384, 35.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=13 */
%   | | | else return 0.008357691128420008;  // std dev = 2.417, 41.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=12 */
%   | | else return -0.005335852806209289;  // std dev = 0.383, 85.000 (wgt'ed) examples reached here.  /* #neg=61 #pos=24 */
%   else if ( complex(A, J) )
%   | then return 0.03626591171629983;  // std dev = 0.320, 22.000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | else if ( interaction(A, K), interaction(K, K) )
%   | | then if ( interaction(L, K), recursion_proteinclass(L, B) )
%   | | | then return 0.5707840381548467;  // std dev = 0.416, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.2583208741077375;  // std dev = 0.078, 5.000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | else if ( enzyme(A, M) )
%   | | | then return 0.1956115653272563;  // std dev = 0.994, 6.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | else return 0.07569036025932167;  // std dev = 1.929, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( complex(C, D) )
%   | then return 0.19990029793839642;  // std dev = 0.052, 11.000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | else return 0.44336339275568437;  // std dev = 0.218, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E) )
%   | then if ( enzyme(F, E), recursion_proteinclass(F, B) )
%   | | then if ( interaction(G, A), interaction(G, F) )
%   | | | then return 0.5558800446148706;  // std dev = 0.444, 25.000 (wgt'ed) examples reached here.  /* #pos=25 */
%   | | | else return 0.27705066874054146;  // std dev = 1.324, 10.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | else return -0.19759086081627705;  // std dev = 0.055, 91.000 (wgt'ed) examples reached here.  /* #neg=91 */
%   | else if ( interaction(H, A), interaction(I, H) )
%   | | then if ( recursion_proteinclass(H, B) )
%   | | | then return 0.37544349556031076;  // std dev = 0.043, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | else return 0.010979328714906793;  // std dev = 3.765, 90.000 (wgt'ed) examples reached here.  /* #neg=66 #pos=24 */
%   | | else if ( interaction(A, J), interaction(J, J) )
%   | | | then return 0.0388622154932803;  // std dev = 1.499, 16.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=6 */
%   | | | else return 0.11432803159084803;  // std dev = 2.616, 31.000 (wgt'ed) examples reached here.  /* #neg=19 #pos=12 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(C, A), complex(C, D) )
%   then if ( interaction(E, C), recursion_proteinclass(E, B) )
%   | then return 0.21250184933549535;  // std dev = 0.157, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | else if ( complex(A, F), enzyme(A, G) )
%   | | then return -0.07246716267860717;  // std dev = 0.251, 36.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( interaction(H, C), interaction(H, H) )
%   | | | then return 0.10182588924486163;  // std dev = 1.762, 18.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=7 */
%   | | | else return -0.0053693854267437445;  // std dev = 2.758, 53.000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   else if ( interaction(A, I), interaction(I, I) )
%   | then return 0.01742975257689848;  // std dev = 0.299, 47.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=16 */
%   | else if ( complex(A, J), enzyme(A, K) )
%   | | then if ( complex(L, J), recursion_proteinclass(L, B) )
%   | | | then return 0.43494419168966303;  // std dev = 0.268, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.18334067982676092;  // std dev = 0.150, 14.000 (wgt'ed) examples reached here.  /* #neg=14 */
%   | | else if ( enzyme(A, M), location(A, N) )
%   | | | then return 0.20497321191215773;  // std dev = 0.854, 8.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | else return 0.0845699158948066;  // std dev = 3.488, 65.000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '9.202', 'seconds']
Refined model CLL: -0.259677


******************************************
Best model found
******************************************
Results 

CLL : -0.267388 

AUC ROC : 0.903904 

AUC PR : 0.243377 

Precision : 0.281513 

Recall : 0.483755 

F1 : 0.35591 

Total Learning Time : 5.864 

Total Inference Time : 2.6199889183044434 

Total revision time: 11.330344181060791
Best scored revision CLL: -0.259677


Results 

CLL : -0.267388 

AUC ROC : 0.903904 

AUC PR : 0.243377 

Precision : 0.281513 

Recall : 0.483755 

F1 : 0.35591 

Total Learning Time : 22.049422960281372 

Total Inference Time : 2.6199889183044434 


 Starting fold 4 of 4 folds 

Start transfer learning experiment

Target train facts examples: 3221
Target train pos examples: 86
Target train neg examples: 10998

Target test facts examples: 11794
Target test pos examples: 283
Target test neg examples: 40479

Training using transfer 

******************************************
Performing Parameter Learning
******************************************
Refine
0;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
0;true;follows(A, D).;false;false
0;false;follows(A, E), recursion_accounttype(E, B).;true;true
0;false,true;follows(A, F), follows(F, A).;false;true
0;false,true,false;follows(A, G), follows(G, E).;false;false
0;false,false;follows(H, A).;true;true
0;false,false,true;follows(I, H), follows(I, A).;false;false
0;false,false,false;follows(A, J), follows(J, K).;false;false
1;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
1;true;follows(A, C), tweets(A, D).;false;false
1;false;follows(A, E), recursion_accounttype(E, B).;true;true
1;false,true;tweets(A, F), tweets(E, F).;false;true
1;false,true,false;follows(G, A), follows(E, H).;false;false
1;false,false;follows(I, A).;true;true
1;false,false,true;follows(I, J), recursion_accounttype(J, B).;false;false
1;false,false,false;tweets(A, K).;false;false
2;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
2;true;follows(C, D), follows(D, A).;false;false
2;false;follows(E, A).;true;true
2;false,true;follows(F, E), follows(F, A).;false;true
2;false,true,false;follows(E, G), recursion_accounttype(G, B).;false;false
2;false,false;follows(A, H), follows(H, I).;true;true
2;false,false,true;recursion_accounttype(I, B).;false;false
2;false,false,false;follows(A, J).;false;false
3;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
3;true;tweets(A, D), tweets(C, D).;false;false
3;false;follows(E, A).;true;true
3;false,true;follows(F, E), recursion_accounttype(F, B).;true;false
3;false,true,true;follows(A, G), recursion_accounttype(G, B).;false;false
3;false,false;follows(A, H), recursion_accounttype(H, B).;true;true
3;false,false,true;follows(A, I), follows(I, H).;false;false
3;false,false,false;tweets(A, J), follows(A, K).;false;false
4;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
4;true;follows(A, D), follows(D, C).;true;false
4;true,true;follows(D, A).;false;true
4;true,true,false;tweets(A, E).;false;false
4;false;follows(F, A).;false;true
4;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
4;false,false,true;follows(G, H), follows(H, G).;false;false
4;false,false,false;follows(A, I), follows(I, J).;false;false
5;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
5;true;follows(D, A), tweets(D, E).;true;true
5;true,true;recursion_accounttype(D, B).;false;false
5;true,false;follows(C, F), follows(F, C).;true;false
5;true,false,true;tweets(C, G), recursion_accounttype(F, B).;false;false
5;false;follows(A, H), follows(H, A).;false;true
5;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
5;false,false,false;tweets(A, J), follows(K, A).;false;false
6;;accounttype(A, B) :- follows(A, C).;true;true
6;true;follows(D, C), recursion_accounttype(D, B).;true;false
6;true,true;recursion_accounttype(C, B).;true;true
6;true,true,true;follows(E, A), follows(E, D).;false;false
6;true,true,false;follows(F, A), recursion_accounttype(F, B).;false;false
6;false;follows(G, A), recursion_accounttype(G, B).;false;true
6;false,false;follows(H, A).;false;true
6;false,false,false;tweets(A, I).;false;false
7;;accounttype(A, B) :- follows(C, A), recursion_accounttype(C, B).;true;true
7;true;tweets(C, D), follows(A, C).;false;false
7;false;follows(E, A).;true;true
7;false,true;follows(E, F), recursion_accounttype(F, B).;true;false
7;false,true,true;follows(F, E), follows(A, F).;false;false
7;false,false;follows(A, G), recursion_accounttype(G, B).;true;true
7;false,false,true;tweets(A, H).;false;false
7;false,false,false;follows(A, I).;false;false
8;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
8;true;follows(C, D), recursion_accounttype(D, B).;false;true
8;true,false;follows(A, E), follows(E, A).;false;false
8;false;follows(F, A), follows(A, G).;true;true
8;false,true;follows(G, A), follows(G, F).;false;true
8;false,true,false;follows(H, F), recursion_accounttype(H, B).;false;false
8;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
8;false,false,false;follows(J, A).;false;false
9;;accounttype(A, B) :- follows(A, C), recursion_accounttype(C, B).;true;true
9;true;follows(C, D).;true;false
9;true,true;follows(A, D).;true;true
9;true,true,true;follows(E, A), recursion_accounttype(E, B).;false;false
9;true,true,false;tweets(C, F), follows(D, C).;false;false
9;false;follows(A, G), follows(H, A).;false;true
9;false,false;follows(I, A), recursion_accounttype(I, B).;false;true
9;false,false,false;follows(J, A).;false;false


Model training time 1.046
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.21205840012008886;  // std dev = 7.454, 243.000 (wgt'ed) examples reached here.  /* #neg=157 #pos=86 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), recursion_proteinclass(D, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F) )
%   | | | then return 0.1793195920661913;  // std dev = 5.818, 149.000 (wgt'ed) examples reached here.  /* #neg=97 #pos=52 */
%   | | | else return 0.14225290898017445;  // std dev = 4.837, 109.000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), complex(E, F) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, G) )
%   | | | then return 0.13101356185101887;  // std dev = 4.345, 86.000 (wgt'ed) examples reached here.  /* #neg=58 #pos=28 */
%   | | | else return 0.14307874690086003;  // std dev = 6.202, 172.000 (wgt'ed) examples reached here.  /* #neg=114 #pos=58 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(A, G) )
%   | | | then return 0.16204240603365364;  // std dev = 3.432, 50.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=19 */
%   | | | else return 0.10258033514470265;  // std dev = 6.754, 210.000 (wgt'ed) examples reached here.  /* #neg=143 #pos=67 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F), complex(F, G) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.1314711396121119;  // std dev = 7.372, 233.000 (wgt'ed) examples reached here.  /* #neg=147 #pos=86 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, F), complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.06299865150141958;  // std dev = 7.619, 265.000 (wgt'ed) examples reached here.  /* #neg=179 #pos=86 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( recursion_proteinclass(C, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(E, A), recursion_proteinclass(E, B) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.7214510889567671;  // std dev = 0.048, 28.000 (wgt'ed) examples reached here.  /* #pos=28 */
%   | else return -0.27805798503766777;  // std dev = 0.064, 49.000 (wgt'ed) examples reached here.  /* #neg=49 */
%   else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(G, A) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( interaction(A, H) )
%   | | | then return 0.07218746675198358;  // std dev = 4.641, 95.000 (wgt'ed) examples reached here.  /* #neg=62 #pos=33 */
%   | | | else return 0.05266312037237564;  // std dev = 4.122, 78.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=25 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( complex(C, A), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(A, E), recursion_proteinclass(E, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(A, F) )
%   | | | then return -0.002501692578927724;  // std dev = 3.521, 97.000 (wgt'ed) examples reached here.  /* #neg=69 #pos=28 */
%   | | | else return 0.01945783753512604;  // std dev = 6.350, 191.000 (wgt'ed) examples reached here.  /* #neg=133 #pos=58 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(D, A), complex(A, E) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.047577239559588425;  // std dev = 7.041, 254.000 (wgt'ed) examples reached here.  /* #neg=168 #pos=86 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( complex(A, C), recursion_proteinclass(C, B) )
%   then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   else if ( complex(A, D), complex(E, A) )
%   | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | else if ( complex(F, A), recursion_proteinclass(F, B) )
%   | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | else if ( complex(G, A) )
%   | | | then return 0;  // std dev = 0.000, 0.000 (wgt'ed) examples reached here.
%   | | | else return 0.039593014457548016;  // std dev = 7.022, 253.000 (wgt'ed) examples reached here.  /* #neg=167 #pos=86 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '3.474', 'seconds']
Parameter learned model CLL:-0.343295 

Strucuture after Parameter Learning 

Structure after Parameter Learning
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.454, 157, 86]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(A, D), recursion_proteinclass(D, B)', 'false,false': 'complex(E, A)', 'false,false,false': 'interaction(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.818, 97, 52], 'false,false,false,false': [4.837, 75, 34]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), complex(E, F)', 'false,false,false': 'complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.345, 58, 28], 'false,false,false,false': [6.202, 114, 58]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(A, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.432, 31, 19], 'false,false,false,false': [6.754, 143, 67]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F), complex(F, G)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.372, 147, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(D, A)', 'false,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false,false,false': 'interaction(A, F), complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.619, 179, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C)', 'true': 'complex(D, C), recursion_proteinclass(D, B)', 'true,true': 'recursion_proteinclass(C, B)', 'true,true,false': 'complex(E, A), recursion_proteinclass(E, B)', 'false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false': 'complex(G, A)', 'false,false,false': 'interaction(A, H)'}, {'true,true,true': [0.0, 0, 0], 'true,true,false,true': [0.0, 0, 0], 'true,true,false,false': [0.048, 0, 28], 'true,false': [0.064, 49, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.641, 62, 33], 'false,false,false,false': [4.122, 53, 25]}]
['proteinclass(A, B)', {'': 'complex(C, A), recursion_proteinclass(C, B)', 'false': 'complex(D, A)', 'false,false': 'complex(A, E), recursion_proteinclass(E, B)', 'false,false,false': 'complex(A, F)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.521, 69, 28], 'false,false,false,false': [6.35, 133, 58]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(D, A), complex(A, E)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.041, 168, 86]}]
['proteinclass(A, B)', {'': 'complex(A, C), recursion_proteinclass(C, B)', 'false': 'complex(A, D), complex(E, A)', 'false,false': 'complex(F, A), recursion_proteinclass(F, B)', 'false,false,false': 'complex(G, A)'}, {'true': [0.0, 0, 0], 'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false': [7.022, 167, 86]}]
{'': [nan, 0.22865755558942658], 'false': [nan, 0.2286575555894263], 'false,false': [nan, 0.22865755558942658], 'false,false,false': [nan, 0.2286575555894263]}
{'': [nan, 0.22222222222222313], 'false': [nan, 0.22222222222222313], 'false,false': [nan, 0.22222222222222313], 'false,false,false': [0.22719697310932033, 0.21462839828297373]}
{'': [nan, 0.22230482375890454], 'false': [nan, 0.22230482375890454], 'false,false': [nan, 0.22230482375890437], 'false,false,false': [0.21956985512629745, 0.2236237851784455]}
{'': [nan, 0.22129794646069373], 'false': [nan, 0.22129794646069373], 'false,false': [nan, 0.22129794646069406], 'false,false,false': [0.2356000000000001, 0.21721274602677054]}
{'': [nan, 0.23322107418030016], 'false': [nan, 0.23322107418030016], 'false,false': [nan, 0.23322107418029983], 'false,false,false': [nan, 0.23322107418029983]}
{'': [nan, 0.21908198919135155], 'false': [nan, 0.21908198919135155], 'false,false': [nan, 0.21908198919135222], 'false,false,false': [nan, 0.21908198919135216]}
{'': [0.23126057917666007, 0.22277658552725027], 'true': [8.077635621958226e-05, 8.39094646779627e-05], 'false': [nan, 0.22277658552725027], 'false,false': [nan, 0.22277658552725027], 'false,false,false': [0.22670360110803223, 0.2177843523997368], 'true,true': [nan, 8.077635621958226e-05], 'true,true,false': [nan, 8.077635621958226e-05]}
{'': [nan, 0.18314590826256363], 'false': [nan, 0.18314590826256363], 'false,false': [nan, 0.18314590826256383], 'false,false,false': [0.1277921190423477, 0.2110951037955337]}
{'': [nan, 0.1952013328397475], 'false': [nan, 0.19520133283974747], 'false,false': [nan, 0.19520133283974747], 'false,false,false': [nan, 0.19520133283974747]}
{'': [nan, 0.19489868891923293], 'false': [nan, 0.19489868891923293], 'false,false': [nan, 0.19489868891923323], 'false,false,false': [nan, 0.19489868891923323]}


******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
6;;proteinclass(A, B) :- complex(A, C).;true;true
6;true;complex(D, C), recursion_proteinclass(D, B).;true;true


Refining candidate
***************************
Model training time 6.66
WILL Produced-Tree #1
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then return 0.8581489350995123;  // std dev = 0.000, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   else if ( interaction(A, D), interaction(D, D) )
%   | then if ( location(A, E), location(D, E) )
%   | | then if ( interaction(F, A), interaction(A, F) )
%   | | | then return -0.10185106490048777;  // std dev = 0.980, 25.000 (wgt'ed) examples reached here.  /* #neg=24 #pos=1 */
%   | | | else return 0.09952824544433986;  // std dev = 2.304, 29.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | else if ( interaction(G, D), recursion_proteinclass(G, B) )
%   | | | then return 0.8581489350995121;  // std dev = 2.11e-08, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.14185106490048777;  // std dev = 0.000, 4.000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | else if ( interaction(A, H), enzyme(A, I) )
%   | | then if ( complex(A, J), complex(H, J) )
%   | | | then return 0.4581489350995122;  // std dev = 1.095, 5.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | else return 0.21109011157010052;  // std dev = 1.970, 17.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=6 */
%   | | else if ( interaction(A, K), complex(K, L) )
%   | | | then return 0.01943925768015746;  // std dev = 2.048, 31.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=5 */
%   | | | else return 0.16636811318170303;  // std dev = 5.579, 146.000 (wgt'ed) examples reached here.  /* #neg=101 #pos=45 */
WILL Produced-Tree #2
% FOR proteinclass(A, B):
%   if ( location(A, C), interaction(D, A) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.6817879513317384;  // std dev = 0.287, 20.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | else if ( interaction(A, F), interaction(G, D) )
%   | | then return 0.021147918060533517;  // std dev = 0.373, 78.000 (wgt'ed) examples reached here.  /* #neg=64 #pos=14 */
%   | | else if ( enzyme(A, H), phenotype(A, I) )
%   | | | then return 0.07201873353854188;  // std dev = 2.474, 34.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=8 */
%   | | | else return 0.1800238470825492;  // std dev = 4.324, 84.000 (wgt'ed) examples reached here.  /* #neg=55 #pos=29 */
%   else if ( interaction(A, J), recursion_proteinclass(J, B) )
%   | then return 0.4694734122109544;  // std dev = 0.866, 4.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | else if ( phenotype(A, K), complex(A, L) )
%   | | then if ( phenotype(M, K), recursion_proteinclass(M, B) )
%   | | | then return 0.6314639976474858;  // std dev = 0.890, 5.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | else return -0.1632225084535026;  // std dev = 0.048, 7.000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | else if ( interaction(A, N), complex(N, P) )
%   | | | then return -0.0019438933002865913;  // std dev = 2.198, 37.000 (wgt'ed) examples reached here.  /* #neg=31 #pos=6 */
%   | | | else return 0.12212893804514832;  // std dev = 1.626, 14.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
WILL Produced-Tree #3
% FOR proteinclass(A, B):
%   if ( complex(A, C), interaction(D, A) )
%   then if ( interaction(E, D), enzyme(E, F) )
%   | then if ( interaction(G, E) )
%   | | then return 0.016975781182410415;  // std dev = 0.379, 38.000 (wgt'ed) examples reached here.  /* #neg=30 #pos=8 */
%   | | else return 0.1163968562033907;  // std dev = 0.451, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | else if ( recursion_proteinclass(D, B) )
%   | | then return 0.6138320639266704;  // std dev = 0.220, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else if ( interaction(H, D), location(A, I) )
%   | | | then return -0.021779965706786603;  // std dev = 1.578, 20.000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | else return 0.13238297326585782;  // std dev = 1.576, 12.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   else if ( interaction(J, A), recursion_proteinclass(J, B) )
%   | then return 0.5741168693789341;  // std dev = 0.281, 9.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | else if ( interaction(A, A) )
%   | | then return -0.13230812952216622;  // std dev = 7.45e-09, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( phenotype(A, K), interaction(L, A) )
%   | | | then return 0.09325828618794751;  // std dev = 4.352, 99.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=27 */
%   | | | else return 0.18995845198560757;  // std dev = 4.009, 75.000 (wgt'ed) examples reached here.  /* #neg=46 #pos=29 */
WILL Produced-Tree #4
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), interaction(A, D) )
%   | then return 0.4332057403297874;  // std dev = 0.136, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | else return 0.6083234424918148;  // std dev = 0.131, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   else if ( interaction(A, E), interaction(E, E) )
%   | then if ( interaction(A, A) )
%   | | then return -0.1261850455523429;  // std dev = 0.085, 22.000 (wgt'ed) examples reached here.  /* #neg=22 */
%   | | else if ( phenotype(E, F), complex(E, G) )
%   | | | then return 0.24530120188562612;  // std dev = 1.235, 7.000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | else return 0.07136961066381407;  // std dev = 2.210, 30.000 (wgt'ed) examples reached here.  /* #neg=22 #pos=8 */
%   | else if ( complex(A, H), enzyme(A, I) )
%   | | then if ( enzyme(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.7744841598910942;  // std dev = 0.166, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | | else return -0.20487108749762703;  // std dev = 0.057, 9.000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | else if ( location(A, K) )
%   | | | then return 0.10725177585821417;  // std dev = 5.737, 160.000 (wgt'ed) examples reached here.  /* #neg=110 #pos=50 */
%   | | | else return -0.028743262413020144;  // std dev = 1.279, 11.000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
WILL Produced-Tree #5
% FOR proteinclass(A, B):
%   if ( interaction(A, C), interaction(C, D) )
%   then if ( phenotype(C, E) )
%   | then return 0.044360483212913214;  // std dev = 0.374, 112.000 (wgt'ed) examples reached here.  /* #neg=80 #pos=32 */
%   | else if ( interaction(D, F), recursion_proteinclass(F, B) )
%   | | then return 0.3752002966841879;  // std dev = 0.260, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | else return 0.08146574360211314;  // std dev = 0.402, 35.000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   else if ( interaction(G, A), enzyme(G, H) )
%   | then if ( phenotype(A, I) )
%   | | then if ( complex(A, J) )
%   | | | then return 0.1275940995754595;  // std dev = 1.416, 9.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=3 */
%   | | | else return -0.027875607821519814;  // std dev = 1.560, 16.000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | else return 0.19186372377928698;  // std dev = 1.094, 5.000 (wgt'ed) examples reached here.  /* #neg=3 #pos=2 */
%   | else if ( enzyme(A, K), complex(A, L) )
%   | | then return 0.013119260662369452;  // std dev = 0.350, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | else if ( interaction(M, A), phenotype(M, N) )
%   | | | then return 0.19226899195451688;  // std dev = 3.355, 47.000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0.08274526526300784;  // std dev = 2.291, 26.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=8 */
WILL Produced-Tree #6
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.45955849447705405;  // std dev = 0.217, 16.000 (wgt'ed) examples reached here.  /* #pos=16 */
%   | else if ( interaction(A, F), interaction(C, D) )
%   | | then return -0.04610689846821208;  // std dev = 0.299, 44.000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else if ( interaction(C, D), complex(C, G) )
%   | | | then return 0.5451848961771146;  // std dev = 1.263, 10.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | else return 0.12706877505146894;  // std dev = 3.708, 66.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=25 */
%   else if ( interaction(A, H), complex(H, I) )
%   | then if ( interaction(H, J), recursion_proteinclass(J, B) )
%   | | then return 0.5299359217441229;  // std dev = 0.329, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else return 0.019149968247634964;  // std dev = 0.385, 43.000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | else if ( interaction(K, A), location(A, L) )
%   | | then if ( location(M, L), recursion_proteinclass(M, B) )
%   | | | then return 0.38123823038967786;  // std dev = 1.873, 16.000 (wgt'ed) examples reached here.  /* #neg=6 #pos=10 */
%   | | | else return -0.24667805701622933;  // std dev = 0.097, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.06878593572956238;  // std dev = 0.356, 35.000 (wgt'ed) examples reached here.  /* #neg=29 #pos=6 */
WILL Produced-Tree #7
% FOR proteinclass(A, B):
%   if ( complex(A, C) )
%   then if ( complex(D, C), recursion_proteinclass(D, B) )
%   | then if ( interaction(A, E), recursion_proteinclass(E, B) )
%   | | then return 0.25550474500870035;  // std dev = 0.071, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | else return 0.6352703624647553;  // std dev = 0.098, 20.000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | else return -0.2300967597649936;  // std dev = 0.086, 63.000 (wgt'ed) examples reached here.  /* #neg=63 */
%   else if ( interaction(F, A), interaction(G, F) )
%   | then if ( recursion_proteinclass(G, B), phenotype(F, H) )
%   | | then return 0.5525309490796775;  // std dev = 0.189, 9.000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | else if ( interaction(A, I), interaction(G, I) )
%   | | | then return -0.09575986342099674;  // std dev = 1.643, 38.000 (wgt'ed) examples reached here.  /* #neg=33 #pos=5 */
%   | | | else return 0.013578791966928797;  // std dev = 3.769, 73.000 (wgt'ed) examples reached here.  /* #neg=51 #pos=22 */
%   | else if ( interaction(J, A), enzyme(J, K) )
%   | | then return 0.43529581918613863;  // std dev = 0.753, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | else if ( interaction(L, A), phenotype(A, M) )
%   | | | then return 0.21022719963158662;  // std dev = 2.048, 20.000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | else return 0.08135866616467335;  // std dev = 2.312, 32.000 (wgt'ed) examples reached here.  /* #neg=21 #pos=11 */
WILL Produced-Tree #8
% FOR proteinclass(A, B):
%   if ( interaction(C, A), interaction(D, C) )
%   then if ( interaction(E, D), recursion_proteinclass(E, B) )
%   | then return 0.2489554045085849;  // std dev = 0.280, 18.000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | else return -0.018912618522156713;  // std dev = 0.369, 161.000 (wgt'ed) examples reached here.  /* #neg=122 #pos=39 */
%   else if ( interaction(A, F), phenotype(F, G) )
%   | then if ( recursion_proteinclass(F, B) )
%   | | then return 0.35269907624166885;  // std dev = 0.134, 4.000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | else if ( interaction(H, A), phenotype(A, G) )
%   | | | then return -0.13522825557840473;  // std dev = 0.928, 9.000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else return 0.02147629414884572;  // std dev = 2.390, 37.000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | else if ( phenotype(A, I) )
%   | | then if ( phenotype(J, I), recursion_proteinclass(J, B) )
%   | | | then return 0.6094500086891051;  // std dev = 0.155, 10.000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else return -0.21838461201207157;  // std dev = 0.191, 12.000 (wgt'ed) examples reached here.  /* #neg=12 */
%   | | else if ( interaction(A, K) )
%   | | | then return 0.058545771400768096;  // std dev = 1.081, 7.000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | else return -0.03512020754021391;  // std dev = 1.233, 13.000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
WILL Produced-Tree #9
% FOR proteinclass(A, B):
%   if ( enzyme(A, C), location(A, D) )
%   then if ( enzyme(E, C), recursion_proteinclass(E, B) )
%   | then return 0.5199932977811478;  // std dev = 0.225, 28.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=27 */
%   | else return -0.20729273074822416;  // std dev = 0.061, 50.000 (wgt'ed) examples reached here.  /* #neg=50 */
%   else if ( interaction(A, F), recursion_proteinclass(F, B) )
%   | then if ( interaction(G, A), phenotype(F, H) )
%   | | then return 0.24475737294206462;  // std dev = 0.134, 7.000 (wgt'ed) examples reached here.  /* #pos=7 */
%   | | else if ( interaction(F, F) )
%   | | | then return 0.14248367307715956;  // std dev = 0.110, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.06049667947401808;  // std dev = 0.780, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else if ( interaction(A, I), complex(I, J) )
%   | | then if ( interaction(I, K), recursion_proteinclass(K, B) )
%   | | | then return 0.5601179491110265;  // std dev = 0.211, 3.000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else return -0.10052887576933948;  // std dev = 1.688, 58.000 (wgt'ed) examples reached here.  /* #neg=53 #pos=5 */
%   | | else if ( interaction(L, A), phenotype(L, M) )
%   | | | then return -0.0264256630293566;  // std dev = 3.728, 98.000 (wgt'ed) examples reached here.  /* #neg=72 #pos=26 */
%   | | | else return 0.11906739204666089;  // std dev = 2.270, 29.000 (wgt'ed) examples reached here.  /* #neg=18 #pos=11 */
WILL Produced-Tree #10
% FOR proteinclass(A, B):
%   if ( interaction(A, C), recursion_proteinclass(C, B) )
%   then if ( interaction(D, A), complex(D, E) )
%   | then if ( complex(A, E) )
%   | | then return 0.12251782766628665;  // std dev = 0.067, 6.000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | else return -0.11652189266796498;  // std dev = 0.524, 3.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | else return 0.24089675749213696;  // std dev = 0.107, 8.000 (wgt'ed) examples reached here.  /* #pos=8 */
%   else if ( interaction(F, A), interaction(A, F) )
%   | then if ( phenotype(A, G) )
%   | | then if ( interaction(F, H), recursion_proteinclass(H, B) )
%   | | | then return 0.467138059623429;  // std dev = 0.277, 5.000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else return -0.1495388774223044;  // std dev = 0.166, 19.000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | else return -0.09028625334079045;  // std dev = 0.031, 11.000 (wgt'ed) examples reached here.  /* #neg=11 */
%   | else if ( interaction(I, A), recursion_proteinclass(I, B) )
%   | | then return 0.3208867082255135;  // std dev = 0.750, 6.000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | else if ( interaction(J, A), phenotype(J, K) )
%   | | | then return 1.858181521301081E-4;  // std dev = 4.255, 133.000 (wgt'ed) examples reached here.  /* #neg=94 #pos=39 */
%   | | | else return 0.05518058126719012;  // std dev = 2.994, 62.000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
Inference time using transfer learning ['%', 'Total', 'inference', 'time', '(10', 'trees):', '18.139', 'seconds']
Refined model CLL: -0.240401


******************************************
Best model found
******************************************
Results 

CLL : -0.261775 

AUC ROC : 0.913778 

AUC PR : 0.241693 

Precision : 0.198276 

Recall : 0.487633 

F1 : 0.28192 

Total Learning Time : 6.66 

Total Inference Time : 2.7827370166778564 

Total revision time: 12.220760732650756
Best scored revision CLL: -0.240401


Results 

CLL : -0.261775 

AUC ROC : 0.913778 

AUC PR : 0.241693 

Precision : 0.198276 

Recall : 0.487633 

F1 : 0.28192 

Total Learning Time : 22.939839511871337 

Total Inference Time : 2.7827370166778564 

